var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// lib.js
var lib_exports = {};
__export(lib_exports, {
  assets: () => assets_default335,
  chains: () => chains_default4
});
module.exports = __toCommonJS(lib_exports);

// node_modules/chain-registry/esm/mainnet/8ball/assets.js
var info = {
  $schema: "../assetlist.schema.json",
  chain_name: "8ball",
  assets: [{
    description: "The native staking token of 8ball.",
    denom_units: [{
      denom: "uebl",
      exponent: 0
    }, {
      denom: "ebl",
      exponent: 6
    }],
    base: "uebl",
    name: "8ball",
    display: "ebl",
    symbol: "EBL",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/8ball/images/8ball.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/8ball/images/8ball.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/8ball/images/8ball.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/8ball/images/8ball.svg"
    }]
  }]
};
var assets_default = info;

// node_modules/chain-registry/esm/mainnet/8ball/chain.js
var info2 = {
  $schema: "../chain.schema.json",
  chain_name: "8ball",
  status: "live",
  website: "https://8ball.info/",
  network_type: "mainnet",
  pretty_name: "8ball",
  chain_id: "eightball-1",
  bech32_prefix: "8ball",
  daemon_name: "8ball",
  node_home: "$HOME/.8ball",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uebl",
      fixed_min_gas_price: 0,
      low_gas_price: 0,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uebl"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.46.7",
    cosmwasm_enabled: true
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/8ball/images/8ball.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/8ball/images/8ball.svg"
  },
  apis: {
    rpc: [{
      address: "https://rpc.8ball.info/",
      provider: "8ball"
    }, {
      address: "https://rpc.8ball.nodestake.top",
      provider: "NodeStake"
    }],
    rest: [
      {
        address: "https://rest.8ball.info",
        provider: "8ball"
      },
      {
        address: "https://api.8ball.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://api-8ball.nodine.id/",
        provider: "Nodine.ID"
      }
    ],
    grpc: [{
      address: "grpc.8ball.nodestake.top:443",
      provider: "NodeStake"
    }, {
      address: "https://grpc.8ball.nodexcapital.com:443",
      provider: "NodeX Validator"
    }]
  },
  explorers: [
    {
      url: "https://explorer.8ball.info/",
      tx_page: "https://explorer.8ball.info/8ball/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/8ball",
      tx_page: "https://ping.pub/8ball/tx/${txHash}"
    },
    {
      kind: "NodeStake Explorer",
      url: "https://explorer.nodestake.top/8ball/",
      tx_page: "https://explorer.nodestake.top/8ball/tx/${txHash}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/8ball",
      tx_page: "https://explorer.tcnetwork.io/8ball/transaction/${txHash}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.co.id/8ball",
      tx_page: "https://explorer.co.id/8ball/tx/${txHash}"
    },
    {
      kind: "NODEXPLORER",
      url: "https://explorer.nodexcapital.com/8ball",
      tx_page: "https://explorer.nodexcapital.com/8ball/tx/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/8ball/images/8ball.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/8ball/images/8ball.svg"
  }]
};
var chain_default = info2;

// node_modules/chain-registry/esm/mainnet/8ball/ibc.js
var info3 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "8ball",
    client_id: "07-tendermint-2",
    connection_id: "connection-18"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2668",
    connection_id: "connection-2163"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-16",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-641",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default = info3;

// node_modules/chain-registry/esm/mainnet/8ball/index.js
var assets = assets_default;
var chain = chain_default;
var ibc = ibc_default;

// node_modules/chain-registry/esm/mainnet/acrechain/assets.js
var info4 = {
  $schema: "../assetlist.schema.json",
  chain_name: "acrechain",
  assets: [
    {
      description: "The native EVM, governance and staking token of the Acrechain",
      denom_units: [{
        denom: "aacre",
        exponent: 0
      }, {
        denom: "acre",
        exponent: 18
      }],
      base: "aacre",
      name: "Acre",
      display: "acre",
      symbol: "ACRE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/acre.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/acre.svg"
      },
      coingecko_id: "arable-protocol",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/acre.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/acre.svg"
      }],
      socials: {
        website: "https://arable.finance/",
        twitter: "https://twitter.com/ArableProtocol"
      }
    },
    {
      description: "Overcollateralized stable coin for Arable derivatives v1",
      denom_units: [{
        denom: "erc20/0x2Cbea61fdfDFA520Ee99700F104D5b75ADf50B0c",
        exponent: 0
      }, {
        denom: "arusd",
        exponent: 18
      }],
      base: "erc20/0x2Cbea61fdfDFA520Ee99700F104D5b75ADf50B0c",
      name: "Arable USD",
      display: "arusd",
      symbol: "arUSD",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/arusd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/arusd.svg"
      },
      coingecko_id: "arable-usd",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/arusd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/arusd.svg"
      }],
      socials: {
        website: "https://arable.finance/",
        twitter: "https://twitter.com/ArableProtocol"
      }
    },
    {
      description: "Ciento Exchange Token",
      denom_units: [{
        denom: "erc20/0xAE6D3334989a22A65228732446731438672418F2",
        exponent: 0
      }, {
        denom: "cnto",
        exponent: 18
      }],
      base: "erc20/0xAE6D3334989a22A65228732446731438672418F2",
      name: "Ciento Token",
      display: "cnto",
      symbol: "CNTO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/cnto.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/cnto.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/cnto.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/cnto.svg"
      }]
    }
  ]
};
var assets_default2 = info4;

// node_modules/chain-registry/esm/mainnet/acrechain/chain.js
var info5 = {
  $schema: "../chain.schema.json",
  chain_name: "acrechain",
  status: "live",
  network_type: "mainnet",
  website: "https://arable.finance/",
  pretty_name: "Acrechain",
  chain_id: "acre_9052-1",
  bech32_prefix: "acre",
  node_home: "$HOME/.acred",
  daemon_name: "acred",
  key_algos: ["ethsecp256k1"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "aacre",
      fixed_min_gas_price: 25e7,
      low_gas_price: 2e10,
      average_gas_price: 25e9,
      high_gas_price: 4e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "aacre"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/acre.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/acre.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.acre.nodestake.top",
        provider: "nodestake"
      },
      {
        address: "https://rpc-acre.synergynodes.com",
        provider: "Synergy Nodes"
      },
      {
        address: "https://acrechain-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rpc.acre.tcnetwork.io",
        provider: "TC Network"
      },
      {
        address: "https://mainnet-acre-rpc.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://acred-rpc.staketab.org:443",
        provider: "Staketab"
      }
    ],
    rest: [
      {
        address: "https://lcd-acre.synergynodes.com",
        provider: "Synergy Nodes"
      },
      {
        address: "https://acrechain-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rest.acre.tcnetwork.io",
        provider: "TC Network"
      },
      {
        address: "https://mainnet-acre-api.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://acred-rest.staketab.org",
        provider: "Staketab"
      }
    ],
    grpc: [
      {
        address: "grpc.acre.nodestake.top:443",
        provider: "Nodestake"
      },
      {
        address: "acrechain-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "acre-grpc.genznodes.dev:27090",
        provider: "genznodes"
      },
      {
        address: "services.staketab.com:9008",
        provider: "Staketab"
      }
    ],
    "evm-http-jsonrpc": [
      {
        address: "https://jsonrpc-acre.d-stake.xyz",
        provider: "D-stake"
      },
      {
        address: "https://rpc2-acre.synergynodes.com",
        provider: "Synergy Nodes"
      },
      {
        address: "https://jsonrpc.acre.nodestake.top",
        provider: "Nodestake"
      },
      {
        address: "https://acre-rpc-evm.genznodes.dev/",
        provider: "genznodes"
      },
      {
        address: "https://evm-acre.sr20de.xyz/",
        provider: "Sr20de"
      },
      {
        address: "https://evm.acrescan.com/",
        provider: "Anonstake"
      },
      {
        address: "https://json-rpc.acre.tcnetwork.io",
        provider: "TC Network"
      },
      {
        address: "https://mainnet-acre-evm.konsortech.xyz",
        provider: "KonsorTech"
      }
    ]
  },
  explorers: [
    {
      kind: "blockscout",
      url: "https://acrescout.mindheartsoul.org",
      tx_page: "https://acrescout.mindheartsoul.org/tx/${txHash}"
    },
    {
      kind: "blockscout",
      url: "https://acrescan.com",
      tx_page: "https://acrescan.com/tx/${txHash}"
    },
    {
      kind: "blockscout",
      url: "https://acreblockexplorer.jet-node.com",
      tx_page: "https://acreblockexplorer.jet-node.com/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://explorer.nodestake.top/acre",
      tx_page: "https://explorer.nodestake.top/acre/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://cosmosrun.info/acre-mainnet",
      tx_page: "https://cosmosrun.info/acre-mainnet/tx/${txHash}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/acre",
      tx_page: "https://explorer.tcnetwork.io/acre/transaction/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/acre.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/acre.svg"
  }]
};
var chain_default2 = info5;

// node_modules/chain-registry/esm/mainnet/acrechain/ibc.js
var info6 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-6",
      connection_id: "connection-6"
    },
    chain_2: {
      chain_name: "axelar",
      client_id: "07-tendermint-78",
      connection_id: "connection-65"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-9",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1002",
      connection_id: "connection-701"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-457",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-18",
      connection_id: "connection-16"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-97",
      connection_id: "connection-55"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-40",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-7",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-201",
      connection_id: "connection-175"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-106",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-8",
      connection_id: "connection-8"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-61",
      connection_id: "connection-41"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-47",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-12",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "oraichain",
      client_id: "07-tendermint-74",
      connection_id: "connection-42"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-33",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2316",
      connection_id: "connection-1814"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-490",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-3",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-222",
      connection_id: "connection-156"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-121",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-14",
      connection_id: "connection-15"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-70",
      connection_id: "connection-48"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-57",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-13",
      connection_id: "connection-14"
    },
    chain_2: {
      chain_name: "terra",
      client_id: "07-tendermint-172",
      connection_id: "connection-99"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-69",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-11",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-101",
      connection_id: "connection-89"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-77",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default2 = info6;

// node_modules/chain-registry/esm/mainnet/acrechain/index.js
var assets2 = assets_default2;
var chain2 = chain_default2;
var ibc2 = ibc_default2;

// node_modules/chain-registry/esm/mainnet/agoric/assets.js
var info7 = {
  $schema: "../assetlist.schema.json",
  chain_name: "agoric",
  assets: [{
    description: "BLD is the token used to secure the Agoric chain through staking and to backstop Inter Protocol.",
    denom_units: [{
      denom: "ubld",
      exponent: 0
    }, {
      denom: "bld",
      exponent: 6
    }],
    base: "ubld",
    name: "Agoric",
    display: "bld",
    symbol: "BLD",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/bld.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/bld.svg"
    },
    coingecko_id: "agoric",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/bld.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/bld.svg"
    }],
    socials: {
      website: "https://agoric.com/",
      twitter: "https://twitter.com/agoric"
    }
  }, {
    description: "IST is the stable token used by the Agoric chain for execution fees and commerce.",
    denom_units: [{
      denom: "uist",
      exponent: 0
    }, {
      denom: "ist",
      exponent: 6
    }],
    base: "uist",
    name: "Inter Stable Token",
    display: "ist",
    symbol: "IST",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/ist.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/ist.svg"
    },
    coingecko_id: "inter-stable-token",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/ist.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/ist.svg"
    }]
  }]
};
var assets_default3 = info7;

// node_modules/chain-registry/esm/mainnet/agoric/chain.js
var info8 = {
  $schema: "../chain.schema.json",
  chain_name: "agoric",
  status: "live",
  network_type: "mainnet",
  website: "https://agoric.com/",
  pretty_name: "Agoric",
  chain_id: "agoric-3",
  bech32_prefix: "agoric",
  daemon_name: "agd",
  node_home: "$HOME/.agoric",
  slip44: 564,
  alternative_slip44s: [118],
  fees: {
    fee_tokens: [{
      denom: "ubld",
      low_gas_price: 0.03,
      average_gas_price: 0.05,
      high_gas_price: 0.07
    }, {
      denom: "uist",
      low_gas_price: 34e-4,
      average_gas_price: 7e-3,
      high_gas_price: 0.02
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ubld"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/Agoric-logo-color.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/Agoric-logo-color.svg"
  },
  description: "The Agoric platform makes it safe and seamless to build decentralized apps using your existing JavaScript knowledge.",
  apis: {
    rpc: [
      {
        address: "https://main.rpc.agoric.net:443"
      },
      {
        address: "https://agoric-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://rpc.agoric.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://agoric.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://agoric-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rpc-agoric-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://agoric-rpc.0base.dev",
        provider: "0base.vc"
      },
      {
        address: "https://agoric-rpc.stakeangle.com",
        provider: "StakeAngle"
      },
      {
        address: "https://agoric-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://rpc.agoric.stakewith.us",
        provider: "StakeWithUs"
      },
      {
        address: "https://rpc-agoric-ia.cosmosia.notional.ventures",
        provider: "Notional"
      },
      {
        address: "https://agoric-rpc.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://rpc.agoric.bronbro.io:443",
        provider: "Bro_n_Bro"
      }
    ],
    rest: [
      {
        address: "https://main.api.agoric.net:443"
      },
      {
        address: "https://api.agoric.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://agoric-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://agoric.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://agoric-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://api-agoric-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://agoric-rest.0base.dev",
        provider: "0base.vc"
      },
      {
        address: "https://agoric-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://agoric.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api.agoric.stakewith.us",
        provider: "StakeWithUs"
      },
      {
        address: "https://api-agoric-ia.cosmosia.notional.ventures",
        provider: "Notional"
      },
      {
        address: "https://agoric-api.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://lcd.agoric.bronbro.io:443",
        provider: "Bro_n_Bro"
      }
    ],
    grpc: [
      {
        address: "grpc.agoric.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "agoric-grpc.polkachu.com:14490",
        provider: "Polkachu"
      },
      {
        address: "agoric-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "agoric.grpc.kjnodes.com:12790",
        provider: "kjnodes"
      },
      {
        address: "grpc-agoric-01.stakeflow.io:2202",
        provider: "Stakeflow"
      },
      {
        address: "agoric.mellifera.network:9090",
        provider: "MELLIFERA"
      },
      {
        address: "agoric-grpc.w3coins.io:14490",
        provider: "w3coins"
      },
      {
        address: "https://grpc.agoric.stakewith.us",
        provider: "StakeWithUs"
      },
      {
        address: "grpc-agoric-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "agoric-grpc.stakeandrelax.net:14490",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://grpc.agoric.bronbro.io:443",
        provider: "Bro_n_Bro"
      }
    ]
  },
  explorers: [
    {
      kind: "explorers.guru",
      url: "https://agoric.explorers.guru",
      tx_page: "https://agoric.explorers.guru/transaction/${txHash}",
      account_page: "https://agoric.explorers.guru/account/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/agoric/",
      tx_page: "https://atomscan.com/agoric/transactions/${txHash}",
      account_page: "https://atomscan.com/agoric/accounts/${accountAddress}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/agoric",
      account_page: "https://stakeflow.io/agoric/accounts/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Agoric",
      tx_page: "https://explorer.stavr.tech/Agoric/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Agoric/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/Agoric-logo-color.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/Agoric-logo-color.svg"
  }]
};
var chain_default3 = info8;

// node_modules/chain-registry/esm/mainnet/agoric/ibc.js
var info9 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-75",
      connection_id: "connection-69"
    },
    chain_2: {
      chain_name: "archway",
      client_id: "07-tendermint-23",
      connection_id: "connection-21"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-60",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-20",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-11",
      connection_id: "connection-14"
    },
    chain_2: {
      chain_name: "axelar",
      client_id: "07-tendermint-69",
      connection_id: "connection-51"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-41",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-70",
      connection_id: "connection-64"
    },
    chain_2: {
      chain_name: "composable",
      client_id: "07-tendermint-51",
      connection_id: "connection-20"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-55",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-6",
      connection_id: "connection-8"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-927",
      connection_id: "connection-649"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-405",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "crescent",
      client_id: "07-tendermint-19",
      connection_id: "connection-14"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-72",
      connection_id: "connection-66"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-116",
      connection_id: "connection-70"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-57",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-85",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-4",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-173",
      connection_id: "connection-154"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-91",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-20",
      connection_id: "connection-20"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-94",
      connection_id: "connection-64"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-61",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-77",
      connection_id: "connection-72"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-32",
      connection_id: "connection-40"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-62",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-21",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-73",
      connection_id: "connection-67"
    },
    chain_2: {
      chain_name: "omniflixhub",
      client_id: "07-tendermint-47",
      connection_id: "connection-40"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-58",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-30",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2109",
      connection_id: "connection-1649"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-320",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-93",
      connection_id: "connection-91"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-167",
      connection_id: "connection-210"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-72",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-202",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-17",
      connection_id: "connection-17"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-111",
      connection_id: "connection-80"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-74",
      connection_id: "connection-68"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-129",
      connection_id: "connection-118"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-59",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-148",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-18",
      connection_id: "connection-18"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-152",
      connection_id: "connection-101"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-42",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default3 = info9;

// node_modules/chain-registry/esm/mainnet/agoric/index.js
var assets3 = assets_default3;
var chain3 = chain_default3;
var ibc3 = ibc_default3;

// node_modules/chain-registry/esm/mainnet/aioz/assets.js
var info10 = {
  $schema: "../assetlist.schema.json",
  chain_name: "aioz",
  assets: [{
    description: "The native staking and governance token of the AIOZ Network.",
    denom_units: [
      {
        denom: "attoaioz",
        exponent: 0
      },
      {
        denom: "nanoaioz",
        exponent: 9
      },
      {
        denom: "aioz",
        exponent: 18
      }
    ],
    base: "attoaioz",
    name: "AIOZ",
    display: "aioz",
    symbol: "AIOZ",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aioz/images/aioz.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aioz/images/aioz.svg"
    },
    coingecko_id: "aioz-network",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aioz/images/aioz.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aioz/images/aioz.svg"
    }],
    socials: {
      website: "https://aioz.network/",
      twitter: "https://twitter.com/AIOZNetwork"
    }
  }]
};
var assets_default4 = info10;

// node_modules/chain-registry/esm/mainnet/aioz/chain.js
var info11 = {
  $schema: "../chain.schema.json",
  chain_name: "aioz",
  status: "live",
  network_type: "mainnet",
  website: "https://aioz.network/",
  pretty_name: "AIOZ Network",
  chain_id: "aioz_168-1",
  bech32_prefix: "aioz",
  daemon_name: "aiozd",
  node_home: "$HOME/.aioz",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "attoaioz",
      fixed_min_gas_price: 7e9,
      low_gas_price: 7e9,
      average_gas_price: 7e9,
      high_gas_price: 1e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "attoaioz"
    }],
    lock_duration: {
      time: "2419200s"
    }
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aioz/images/aioz.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aioz/images/aioz.svg"
  },
  description: "AIOZ Network is a DePIN for Web3 AI, Storage and Streaming.\n\nAIOZ empowers a faster, secure and decentralized future.\n\nPowered by a global network of DePINs, AIOZ rewards you for sharing your computational resources for storing, transcoding, and streaming digital media content and powering decentralized AI computation.",
  apis: {
    "evm-http-jsonrpc": [{
      address: "https://eth-dataseed.aioz.network",
      provider: "AIOZ Network"
    }],
    rpc: [{
      address: "https://rpc-dataseed.aioz.network:443",
      provider: "AIOZ Network"
    }],
    rest: [{
      address: "https://lcd-dataseed.aioz.network",
      provider: "AIOZ Network"
    }],
    grpc: [{
      address: "grpc-dataseed.aioz.network:443",
      provider: "AIOZ Network"
    }]
  },
  explorers: [{
    kind: "aioz",
    url: "https://explorer.aioz.network",
    tx_page: "https://explorer.aioz.network/tx/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aioz/images/aioz.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aioz/images/aioz.svg"
  }]
};
var chain_default4 = info11;

// node_modules/chain-registry/esm/mainnet/aioz/ibc.js
var info12 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "aioz",
    client_id: "07-tendermint-1",
    connection_id: "connection-0"
  },
  chain_2: {
    chain_name: "cosmoshub",
    client_id: "07-tendermint-1121",
    connection_id: "connection-808"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-567",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "aioz",
    client_id: "07-tendermint-2",
    connection_id: "connection-1"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2785",
    connection_id: "connection-2285"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-779",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default4 = info12;

// node_modules/chain-registry/esm/mainnet/aioz/index.js
var assets4 = assets_default4;
var chain4 = chain_default4;
var ibc4 = ibc_default4;

// node_modules/chain-registry/esm/mainnet/akash/assets.js
var info13 = {
  $schema: "../assetlist.schema.json",
  chain_name: "akash",
  assets: [{
    description: "Akash Token (AKT) is the Akash Network's native utility token, used as the primary means to govern, secure the blockchain, incentivize participants, and provide a default mechanism to store and exchange value.",
    denom_units: [{
      denom: "uakt",
      exponent: 0
    }, {
      denom: "akt",
      exponent: 6
    }],
    base: "uakt",
    name: "Akash Network",
    display: "akt",
    symbol: "AKT",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.svg"
    },
    coingecko_id: "akash-network",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.svg"
    }],
    socials: {
      website: "https://akash.network/",
      twitter: "https://twitter.com/akashnet_"
    }
  }, {
    description: "Tether USDt on Akash",
    denom_units: [{
      denom: "ibc/05DB6975261B805B6F6A157A4386C627F8A70BF8118D411655EFEDCA82BFABA5",
      exponent: 0
    }, {
      denom: "usdt",
      exponent: 6
    }],
    type_asset: "ics20",
    base: "ibc/05DB6975261B805B6F6A157A4386C627F8A70BF8118D411655EFEDCA82BFABA5",
    name: "Tether USDt",
    display: "usdt",
    symbol: "USDt",
    traces: [{
      type: "ibc",
      counterparty: {
        chain_name: "kava",
        base_denom: "erc20/tether/usdt",
        channel_id: "channel-130"
      },
      chain: {
        channel_id: "channel-2",
        path: "transfer/channel-2/erc20/tether/usdt"
      }
    }],
    images: [{
      image_sync: {
        chain_name: "kava",
        base_denom: "erc20/tether/usdt"
      },
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
      theme: {
        circle: true,
        primary_color_hex: "#009393",
        background_color_hex: "#009393"
      }
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
    }
  }]
};
var assets_default5 = info13;

// node_modules/chain-registry/esm/mainnet/akash/chain.js
var info14 = {
  $schema: "../chain.schema.json",
  chain_name: "akash",
  status: "live",
  network_type: "mainnet",
  website: "https://akash.network/",
  pretty_name: "Akash",
  chain_id: "akashnet-2",
  bech32_prefix: "akash",
  daemon_name: "akash",
  node_home: "$HOME/.akash",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uakt",
      fixed_min_gas_price: 25e-5,
      low_gas_price: 25e-5,
      average_gas_price: 25e-4,
      high_gas_price: 0.025
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uakt"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.45.16"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.svg"
  },
  description: "Akash is open-source Supercloud that lets users buy and sell computing resources securely and efficiently. Purpose-built for public utility.",
  apis: {
    rpc: [
      {
        address: "https://rpc.akash.forbole.com:443",
        provider: "forbole"
      },
      {
        address: "https://rpc-akash.ecostake.com:443",
        provider: "ecostake"
      },
      {
        address: "https://akash-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes"
      },
      {
        address: "https://akash-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://rpc-akash.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://rpc-akash-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "http://akash.c29r3.xyz:80/rpc",
        provider: "c29r3"
      },
      {
        address: "https://akash-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://akash-rpc.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://rpc-akash-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://akash-mainnet-rpc.cosmonautstakes.com:443",
        provider: "Cosmonaut Stakes"
      },
      {
        address: "https://akash-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://akash-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://akash-rpc.validatornode.com",
        provider: "ValidatorNode"
      },
      {
        address: "https://rpc-akash.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://public.stakewolle.com/cosmos/akash/rpc",
        provider: "Stakewolle"
      },
      {
        address: "https://akash.declab.pro:26601",
        provider: "Decloud Nodes Lab"
      }
    ],
    rest: [
      {
        address: "https://api.akash.forbole.com:443",
        provider: "forbole"
      },
      {
        address: "https://rest-akash.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://akash-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes"
      },
      {
        address: "https://akash-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://api-akash.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://api-akash-ia.cosmosia.notional.ventures",
        provider: "Notional"
      },
      {
        address: "https://akash.c29r3.xyz:443/api",
        provider: "c29r3"
      },
      {
        address: "https://akash-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://akash-api.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://api-akash-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://akash-mainnet-rest.cosmonautstakes.com:443",
        provider: "Cosmonaut Stakes"
      },
      {
        address: "https://akash-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://akash-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://akash-api.validatornode.com",
        provider: "ValidatorNode"
      },
      {
        address: "https://api-akash.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://public.stakewolle.com/cosmos/akash/rest",
        provider: "Stakewolle"
      },
      {
        address: "https://akash.declab.pro:443",
        provider: "Decloud Nodes Lab"
      }
    ],
    grpc: [
      {
        address: "grpc-akash-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "akash-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "akash-grpc.polkachu.com:12890",
        provider: "Polkachu"
      },
      {
        address: "akash-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "grpc-akash.cosmos-spaces.cloud:1110",
        provider: "Cosmos Spaces"
      },
      {
        address: "grpc-akash-01.stakeflow.io:1502",
        provider: "Stakeflow"
      },
      {
        address: "akash-grpc.w3coins.io:12890",
        provider: "w3coins"
      },
      {
        address: "akash-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://akash.declab.pro:9001",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "grpc-akash.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/akash",
      tx_page: "https://ezstaking.app/akash/txs/${txHash}",
      account_page: "https://ezstaking.app/akash/account/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/akash",
      tx_page: "https://www.mintscan.io/akash/transactions/${txHash}",
      account_page: "https://www.mintscan.io/akash/accounts/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/akash-network",
      tx_page: "https://ping.pub/akash-network/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/akash",
      tx_page: "https://atomscan.com/akash/transactions/${txHash}",
      account_page: "https://atomscan.com/akash/accounts/${accountAddress}"
    },
    {
      kind: "cloudmos",
      url: "https://cloudmos.io/blocks",
      tx_page: "https://cloudmos.io/transactions/${txHash}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/akash",
      account_page: "https://stakeflow.io/akash/accounts/${accountAddress}"
    },
    {
      kind: "ValidatorNode",
      url: "https://explorer.validatornode.com/akash-network",
      tx_page: "https://explorer.validatornode.com/akash-network/tx/${txHash}"
    },
    {
      kind: "Decloud Nodes Lab",
      url: "https://explorer.declab.pro/Akash",
      tx_page: "https://explorer.declab.pro/Akash/tx/${txHash}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/akash",
      tx_page: "https://mainnet.whispernode.com/akash/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/akash/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.svg"
  }]
};
var chain_default5 = info14;

// node_modules/chain-registry/esm/mainnet/akash/ibc.js
var info15 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-166",
      connection_id: "connection-146"
    },
    chain_2: {
      chain_name: "archway",
      client_id: "07-tendermint-26",
      connection_id: "connection-28"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-109",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-26",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-53",
      connection_id: "connection-29"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-385",
      connection_id: "connection-339"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-184",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-132",
      connection_id: "connection-107"
    },
    chain_2: {
      chain_name: "crescent",
      client_id: "07-tendermint-80",
      connection_id: "connection-71"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-70",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-44",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-48",
      connection_id: "connection-23"
    },
    chain_2: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-65",
      connection_id: "connection-38"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-21",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1"
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-183",
      connection_id: "connection-171"
    },
    chain_2: {
      chain_name: "doravota",
      client_id: "07-tendermint-17",
      connection_id: "connection-11"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-125",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-44",
      connection_id: "connection-19"
    },
    chain_2: {
      chain_name: "irisnet",
      client_id: "07-tendermint-23",
      connection_id: "connection-16"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-84",
      connection_id: "connection-58"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-80",
      connection_id: "connection-47"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-35",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-29",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-126",
      connection_id: "connection-103"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-103",
      connection_id: "connection-72"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-63",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-64",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-119",
      connection_id: "connection-93"
    },
    chain_2: {
      chain_name: "omniflixhub",
      client_id: "07-tendermint-42",
      connection_id: "connection-35"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-61",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-25",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-18",
      connection_id: "connection-11"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-0",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-188",
      connection_id: "connection-174"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-169",
      connection_id: "connection-214"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-127",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-213",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-47",
      connection_id: "connection-22"
    },
    chain_2: {
      chain_name: "regen",
      client_id: "07-tendermint-20",
      connection_id: "connection-9"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-102",
      connection_id: "connection-69"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-47",
      connection_id: "connection-28"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-43",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-21",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-45",
      connection_id: "connection-21"
    },
    chain_2: {
      chain_name: "sentinel",
      client_id: "07-tendermint-42",
      connection_id: "connection-27"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-61",
      connection_id: "connection-36"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-11",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-24",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-59",
      connection_id: "connection-35"
    },
    chain_2: {
      chain_name: "starname",
      client_id: "07-tendermint-29",
      connection_id: "connection-18"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-173",
      connection_id: "connection-159"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-387",
      connection_id: "connection-364"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-116",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-273",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default5 = info15;

// node_modules/chain-registry/esm/mainnet/akash/index.js
var assets5 = assets_default5;
var chain5 = chain_default5;
var ibc5 = ibc_default5;

// node_modules/chain-registry/esm/mainnet/akiro/assets.js
var info16 = {
  $schema: "../assetlist.schema.json",
  chain_name: "akiro",
  assets: [{
    description: "AKIRO meme token",
    denom_units: [{
      denom: "uakiro",
      exponent: 0
    }, {
      denom: "akiro",
      exponent: 6
    }],
    base: "uakiro",
    name: "AKIRO",
    display: "akiro",
    symbol: "AKIRO",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akiro/images/akiro.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akiro/images/akiro.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akiro/images/akiro.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akiro/images/akiro.svg"
    }]
  }]
};
var assets_default6 = info16;

// node_modules/chain-registry/esm/mainnet/akiro/chain.js
var info17 = {
  $schema: "../chain.schema.json",
  chain_name: "akiro",
  status: "killed",
  network_type: "mainnet",
  pretty_name: "Akiro",
  chain_id: "akiro-1",
  bech32_prefix: "akiro",
  daemon_name: "akirod",
  node_home: "$HOME/.akiro",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uakiro",
      fixed_min_gas_price: 0.025,
      low_gas_price: 0.025,
      average_gas_price: 0.035,
      high_gas_price: 0.045
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uakiro"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akiro/images/akiro.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akiro/images/akiro.svg"
  },
  apis: {
    rpc: [{
      address: "http://213.199.36.82:26657",
      provider: "AKIRO"
    }, {
      address: "https://rpc-akiro.d-stake.xyz",
      provider: "D-Stake"
    }],
    rest: [{
      address: "http://213.199.36.82:1317",
      provider: "AKIRO"
    }, {
      address: "https://api-akiro.d-stake.xyz",
      provider: "D-Stake"
    }],
    grpc: [{
      address: "http://213.199.36.82:9090",
      provider: "AKIRO"
    }, {
      address: "https://grpc-akiro.d-stake.xyz",
      provider: "D-Stake"
    }]
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://ping.pub/akiro",
    tx_page: "https://ping.pub/akiro/tx/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akiro/images/akiro.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akiro/images/akiro.svg"
  }]
};
var chain_default6 = info17;

// node_modules/chain-registry/esm/mainnet/akiro/index.js
var assets6 = assets_default6;
var chain6 = chain_default6;

// node_modules/chain-registry/esm/mainnet/althea/assets.js
var info18 = {
  chain_name: "althea",
  $schema: "../assetlist.schema.json",
  assets: [{
    description: "Althea native token",
    denom_units: [{
      denom: "aalthea",
      exponent: 0
    }, {
      denom: "althea",
      exponent: 18
    }],
    base: "aalthea",
    name: "Althea Token",
    display: "althea",
    symbol: "ALTHEA",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/althea/images/althea.png"
    }, {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/althea/images/althea.svg"
    }]
  }]
};
var assets_default7 = info18;

// node_modules/chain-registry/esm/mainnet/althea/chain.js
var info19 = {
  $schema: "../chain.schema.json",
  chain_name: "althea",
  status: "live",
  network_type: "mainnet",
  website: "https://althea.net/",
  pretty_name: "Althea",
  chain_id: "althea_258432-1",
  bech32_prefix: "althea",
  daemon_name: "althea",
  node_home: "$HOME/.althea",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "aalthea",
      fixed_min_gas_price: 1e11,
      low_gas_price: 1e11,
      average_gas_price: 1e11,
      high_gas_price: 3e11
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "aalthea"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/althea/images/althea.png"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/althea/images/althea.png"
  }, {
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/althea/images/althea.svg"
  }],
  codebase: {},
  apis: {
    rest: [
      {
        address: "https://nodes.chandrastation.com/api/althea/",
        provider: "Chandra Station"
      },
      {
        address: "https://althea.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://althea-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      }
    ],
    rpc: [
      {
        address: "https://nodes.chandrastation.com/rpc/althea/",
        provider: "Chandra Station"
      },
      {
        address: "https://althea.rpc.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://althea-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      }
    ],
    grpc: [{
      address: "https://althea-grpc.lavenderfive.com:443",
      provider: "Lavender.Five Nodes \u{1F41D}"
    }]
  }
};
var chain_default7 = info19;

// node_modules/chain-registry/esm/mainnet/althea/index.js
var assets7 = assets_default7;
var chain7 = chain_default7;

// node_modules/chain-registry/esm/mainnet/andromeda/assets.js
var info20 = {
  $schema: "../assetlist.schema.json",
  chain_name: "andromeda",
  assets: [{
    description: "The native staking and governance token of Andromeda",
    denom_units: [{
      denom: "uandr",
      exponent: 0
    }, {
      denom: "andr",
      exponent: 6
    }],
    coingecko_id: "andromeda-2",
    base: "uandr",
    name: "Andr",
    display: "andr",
    symbol: "ANDR",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/andromeda/images/andromeda-logo.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/andromeda/images/andromeda-logo.png"
    }]
  }]
};
var assets_default8 = info20;

// node_modules/chain-registry/esm/mainnet/andromeda/chain.js
var info21 = {
  $schema: "../chain.schema.json",
  chain_name: "andromeda",
  chain_id: "andromeda-1",
  pre_fork_chain_name: "andromeda1",
  pretty_name: "Andromeda",
  status: "live",
  network_type: "mainnet",
  bech32_prefix: "andr",
  daemon_name: "andromedad",
  node_home: "$HOME/.andromeda",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uandr",
      low_gas_price: 0.03,
      average_gas_price: 0.05,
      high_gas_price: 0.075
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uandr"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "v0.47.8",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.41.0"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.andromeda-1.andromeda.aviaone.com",
        provider: "AVIAONE"
      },
      {
        address: "https://andromeda.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://andromeda.rpc.nodex.one",
        provider: "nodex"
      },
      {
        address: "https://andro.rpc.m.stavr.tech/",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://andromeda-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://andromeda-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://andromeda-rpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "https://andromeda-rpc.stakerhouse.com:443",
        provider: "StakerHouse"
      },
      {
        address: "https://andromeda-rpc.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://andromeda-rpc.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://andromeda.rpc.kjnodes.com",
        provider: "kjnodes.com \u{1F984}"
      },
      {
        address: "andromeda-rpc.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "rpc-andromeda.blockval.io",
        provider: "Blockval"
      },
      {
        address: "https://andromeda.rpc.liveraven.net",
        provider: "LiveRaveN"
      }
    ],
    rest: [
      {
        address: "https://api.andromeda-1.andromeda.aviaone.com/",
        provider: "AVIAONE"
      },
      {
        address: "https://andromeda.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://andromeda.api.nodex.one",
        provider: "nodex"
      },
      {
        address: "https://andro.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://andromeda-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://andromeda-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://andromeda-api.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "https://andromeda-rest.stakerhouse.com:443",
        provider: "StakerHouse"
      },
      {
        address: "https://andromeda-api.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://andromeda-api.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://andromeda.api.kjnodes.com",
        provider: "kjnodes.com \u{1F984}"
      },
      {
        address: "andromeda-api.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "api-andromeda.blockval.io",
        provider: "Blockval"
      },
      {
        address: "https://andromeda.api.liveraven.net",
        provider: "LiveRaveN"
      }
    ],
    grpc: [
      {
        address: "andromeda-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://grpc.andromeda-1.andromeda.aviaone.com:9094",
        provider: "AVIAONE"
      },
      {
        address: "andromeda.grpc.kjnodes.com:443",
        provider: "kjnodes"
      },
      {
        address: "andromeda-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://andromeda.grpc.nodex.one:443",
        provider: "nodex"
      },
      {
        address: "http://andromedad.grpc.t.stavr.tech:132",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "andromeda-grpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "andromeda-grpc.stakerhouse.com:443",
        provider: "StakerHouse"
      },
      {
        address: "andromeda-grpc.genznodes.dev:27090",
        provider: "genznodes"
      },
      {
        address: "andromeda.grpc.kjnodes.com:443",
        provider: "kjnodes.com \u{1F984}"
      },
      {
        address: "andromeda-grpc.noders.services:34090",
        provider: "[NODERS]TEAM"
      },
      {
        address: "grpc-andromeda.blockval.io:443",
        provider: "Blockval"
      },
      {
        address: "andromeda.grpc.liveraven.net:443",
        provider: "LiveRaveN"
      }
    ]
  },
  explorers: [
    {
      kind: "\u{1F525}STAVR\u{1F525} Explorer",
      url: "https://explorer.stavr.tech/Andromeda-Mainnet",
      tx_page: "https://explorer.stavr.tech/Andromeda-Mainnet/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Andromeda-Mainnet/account/${accountAddress}"
    },
    {
      kind: "exploreme.pro",
      url: "https://andromeda.exploreme.pro",
      tx_page: "https://andromeda.exploreme.pro/transaction/${txHash}",
      account_page: "https://andromeda.exploreme.pro/account/${accountAddress}"
    },
    {
      kind: "Cosmotracker",
      url: "https://cosmotracker.com/andromeda",
      tx_page: "https://cosmotracker.com/andromeda/tx/${txHash}",
      account_page: "https://cosmotracker.com/andromeda/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/andromeda",
      tx_page: "https://ping.pub/andromeda/tx/${txHash}"
    }
  ],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/andromeda/images/andromeda-logo.png"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/andromeda/images/andromeda-logo.png"
  }]
};
var chain_default8 = info21;

// node_modules/chain-registry/esm/mainnet/andromeda/ibc.js
var info22 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "andromeda",
      client_id: "07-tendermint-9",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "archway",
      client_id: "07-tendermint-58",
      connection_id: "connection-68"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-97",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "andromeda",
      client_id: "07-tendermint-16",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "injective",
      client_id: "07-tendermint-250",
      connection_id: "connection-244"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-213",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "andromeda",
      client_id: "07-tendermint-6",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-164",
      connection_id: "connection-127"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-123",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "andromeda",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-176",
      connection_id: "connection-133"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-97",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "andromeda",
      client_id: "07-tendermint-15",
      connection_id: "connection-11"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-409",
      connection_id: "connection-413"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-351",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default6 = info22;

// node_modules/chain-registry/esm/mainnet/andromeda/index.js
var assets8 = assets_default8;
var chain8 = chain_default8;
var ibc6 = ibc_default6;

// node_modules/chain-registry/esm/mainnet/archway/assets.js
var info23 = {
  $schema: "../assetlist.schema.json",
  chain_name: "archway",
  assets: [
    {
      description: "The native token of Archway network",
      denom_units: [
        {
          denom: "aarch",
          exponent: 0
        },
        {
          denom: "uarch",
          exponent: 12
        },
        {
          denom: "arch",
          exponent: 18
        }
      ],
      base: "aarch",
      name: "Archway",
      display: "arch",
      symbol: "ARCH",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/archway/images/archway.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/archway/images/archway.svg"
      },
      coingecko_id: "archway",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/archway/images/archway.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/archway/images/archway.svg"
      }],
      socials: {
        website: "https://archway.io/",
        twitter: "https://twitter.com/archwayHQ"
      }
    },
    {
      description: "ERIS liquid staked ARCH",
      type_asset: "cw20",
      address: "archway1fwurjg7ah4v7hhs6xsc3wutqpvmahrfhns285s0lt34tgfdhplxq6m8xg5",
      denom_units: [{
        denom: "cw20:archway1fwurjg7ah4v7hhs6xsc3wutqpvmahrfhns285s0lt34tgfdhplxq6m8xg5",
        exponent: 0
      }, {
        denom: "ampARCH",
        exponent: 6
      }],
      base: "cw20:archway1fwurjg7ah4v7hhs6xsc3wutqpvmahrfhns285s0lt34tgfdhplxq6m8xg5",
      name: "ERIS Amplified ARCH",
      display: "ampARCH",
      symbol: "ampARCH",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/archway/images/amparch.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/archway/images/amparch.png"
      }]
    },
    {
      description: "The first memecoin on osmosis.",
      denom_units: [{
        denom: "ibc/7CB33A66F90533ED1E168CB3251253C719CF4B04FF1290AFD795F14CA1D67278",
        exponent: 0
      }, {
        denom: "WOSMO",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/7CB33A66F90533ED1E168CB3251253C719CF4B04FF1290AFD795F14CA1D67278",
      name: "Wosmo",
      display: "WOSMO",
      symbol: "WOSMO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3/WOSMO",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-1429",
          path: "transfer/channel-1429/factory/osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3/WOSMO"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3/WOSMO"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wosmo.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wosmo.png"
      }
    },
    {
      description: "The native token of Vidulum",
      denom_units: [{
        denom: "ibc/1BCF1FCAFE3568E234787EDFDA12460BD8931B17FE6A729DCD60FAD845558DA1",
        exponent: 0,
        aliases: ["uvdl"]
      }, {
        denom: "vdl",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/1BCF1FCAFE3568E234787EDFDA12460BD8931B17FE6A729DCD60FAD845558DA1",
      name: "Vidulum",
      display: "vdl",
      symbol: "VDL",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "vidulum",
          base_denom: "uvdl",
          channel_id: "channel-24"
        },
        chain: {
          channel_id: "channel-110",
          path: "transfer/channel-110/uvdl"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/vidulum/images/vdl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/vidulum/images/vdl.svg"
      },
      images: [{
        image_sync: {
          chain_name: "vidulum",
          base_denom: "uvdl"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/vidulum/images/vdl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/vidulum/images/vdl.svg"
      }]
    },
    {
      description: "Astrovault AXV",
      type_asset: "cw20",
      address: "archway1ecjefhcf8r60wtfnhwefrxhj9caeqa90fj58cqsaafqveawn6cjs5znd2n",
      denom_units: [{
        denom: "cw20:archway1ecjefhcf8r60wtfnhwefrxhj9caeqa90fj58cqsaafqveawn6cjs5znd2n",
        exponent: 0
      }, {
        denom: "AXV",
        exponent: 6
      }],
      base: "cw20:archway1ecjefhcf8r60wtfnhwefrxhj9caeqa90fj58cqsaafqveawn6cjs5znd2n",
      name: "Astrovault AXV",
      display: "AXV",
      symbol: "AXV",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/archway/images/axv.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/archway/images/axv.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/archway/images/axv.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/archway/images/axv.svg"
      }],
      coingecko_id: "astrovault"
    }
  ]
};
var assets_default9 = info23;

// node_modules/chain-registry/esm/mainnet/archway/chain.js
var info24 = {
  $schema: "../chain.schema.json",
  chain_name: "archway",
  status: "live",
  network_type: "mainnet",
  website: "https://archway.io/",
  pretty_name: "Archway",
  chain_id: "archway-1",
  bech32_prefix: "archway",
  daemon_name: "archwayd",
  node_home: "$HOME/.archway",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "aarch",
      fixed_min_gas_price: 14e10,
      low_gas_price: 196e9,
      average_gas_price: 2254e8,
      high_gas_price: 2548e8
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "aarch"
    }],
    lock_duration: {
      time: "1209600s"
    }
  },
  codebase: {
    cosmos_sdk_version: "v0.47.11",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.45.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/archway/images/archway.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/archway/images/archway.svg"
  },
  description: "An incentivized L1 blockchain that allows developers to capture the value their dapps create, enabling sustainable economic models.",
  apis: {
    rpc: [
      {
        address: "https://rpc.mainnet.archway.io",
        provider: "Archway Foundation"
      },
      {
        address: "https://archway-mainnet-archive.allthatnode.com:26657",
        provider: "All That Node"
      },
      {
        address: "https://m-archway.rpc.utsa.tech",
        provider: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}"
      },
      {
        address: "https://rpc-1.archway.nodes.guru",
        provider: "Nodes.Guru"
      },
      {
        address: "https://archway.rpc.silknodes.io/",
        provider: "Silk Nodes"
      },
      {
        address: "https://archway.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://rpc-archway.cryptech.com.ua",
        provider: "cryptech"
      },
      {
        address: "https://rpc.archway.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://rpc-archway.theamsolutions.info",
        provider: "AM Solutions"
      },
      {
        address: "https://rpc-archway.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://archway-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://m-archway.rpc.utsa.tech",
        provider: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}"
      },
      {
        address: "https://archway-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc-archway.mms.team",
        provider: "MMS"
      },
      {
        address: "https://rpc-archway.mzonder.com",
        provider: "MZONDER"
      },
      {
        address: "https://rpc.archway.lgns.net",
        provider: "Luganodes"
      },
      {
        address: "https://archway-rpc.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://archway-rpc.0base.dev",
        provider: "0base.vc"
      },
      {
        address: "https://archway-mainnet.rpc.l0vd.com",
        provider: "L0vd.com"
      },
      {
        address: "https://archway-rpc.openbitlab.com",
        provider: "openbitlab"
      },
      {
        address: "https://rpc-archway.mzonder.com",
        provider: "MZONDER"
      },
      {
        address: "https://rpc-archway.mainnet.validatrium.club",
        provider: "Validatrium"
      },
      {
        address: "https://rpc.archway.stakeup.tech",
        provider: "StakeUp"
      },
      {
        address: "https://archway.api.trivium.network:26657",
        provider: "TriviumX | Architech"
      },
      {
        address: "https://archway-rpc.tienthuattoan.ventures",
        provider: "TienThuatToan"
      },
      {
        address: "https://archway-rpc.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://rpc.archway.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://archway-rpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    rest: [
      {
        address: "https://api.mainnet.archway.io",
        provider: "Archway Foundation"
      },
      {
        address: "https://archway-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://m-archway.api.utsa.tech",
        provider: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}"
      },
      {
        address: "https://api-1.archway.nodes.guru",
        provider: "Nodes.Guru"
      },
      {
        address: "https://archway.api.silknodes.io/",
        provider: "Silk Nodes"
      },
      {
        address: "https://archway.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://api-archway.cryptech.com.ua",
        provider: "cryptech"
      },
      {
        address: "https://api.archway.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://rest-archway.theamsolutions.info",
        provider: "AM Solutions"
      },
      {
        address: "https://lcd-archway.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://archway-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://api-archway.mms.team",
        provider: "MMS"
      },
      {
        address: "https://api-archway.mzonder.com",
        provider: "MZONDER"
      },
      {
        address: "https://rest.archway.lgns.net",
        provider: "Luganodes"
      },
      {
        address: "https://archway-api.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://archway-rest.0base.dev",
        provider: "0base.vc"
      },
      {
        address: "https://archway-mainnet.api.l0vd.com",
        provider: "L0vd.com"
      },
      {
        address: "https://archway-api.openbitlab.com",
        provider: "openbitlab"
      },
      {
        address: "https://api-archway.mainnet.validatrium.club",
        provider: "Validatrium"
      },
      {
        address: "https://api.archway.stakeup.tech",
        provider: "StakeUp"
      },
      {
        address: "https://archway.api.trivium.network:1317",
        provider: "TriviumX | Architech"
      },
      {
        address: "https://archway-mainnet-archive.allthatnode.com:1317",
        provider: "All That Node"
      },
      {
        address: "https://archway-api.tienthuattoan.ventures",
        provider: "TienThuatToan"
      },
      {
        address: "https://archway-api.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://lcd.archway.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://archway-api.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    grpc: [
      {
        address: "grpc.mainnet.archway.io:443",
        provider: "Archway Foundation"
      },
      {
        address: "grpc-1.archway.nodes.guru:10690",
        provider: "Nodes.Guru"
      },
      {
        address: "archway.grpc.kjnodes.com:15690",
        provider: "kjnodes"
      },
      {
        address: "https://grpc-archway.cryptech.com.ua",
        provider: "cryptech"
      },
      {
        address: "https://grpc.archway.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "grpc-archway.theamsolutions.info:443",
        provider: "AM Solutions"
      },
      {
        address: "archway-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "archway.grpc.nodersteam.com:9090",
        provider: "[NODERS]TEAM"
      },
      {
        address: "grpc-archway.mms.team:443",
        provider: "MMS"
      },
      {
        address: "grpc-archway.mzonder.com:443",
        provider: "MZONDER"
      },
      {
        address: "grpc.archway.lgns.net:443",
        provider: "Luganodes"
      },
      {
        address: "archway-grpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "archway-grpc.huginn.tech:4090",
        provider: "Huginn"
      },
      {
        address: "archway-mainnet.grpc.l0vd.com:80",
        provider: "L0vd.com"
      },
      {
        address: "archway-grpc.openbitlab.com:443",
        provider: "openbitlab"
      },
      {
        address: "grpc-archway.mainnet.validatrium.club:27490",
        provider: "Validatrium"
      },
      {
        address: "grpc.archway.stakeup.tech:443",
        provider: "StakeUp"
      },
      {
        address: "grpc-archway-mainnet.testnet-pride.com:9096",
        provider: "TestnetPride"
      },
      {
        address: "archway.api.trivium.network:9090",
        provider: "TriviumX | Architech"
      },
      {
        address: "archway-grpc.tienthuattoan.ventures:9290",
        provider: "TienThuatToan"
      },
      {
        address: "archway-grpc.stakeandrelax.net:11590",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://grpc.archway.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "archway-grpc.noders.services:13090",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "Nodes Guru",
      url: "https://archway.explorers.guru/",
      tx_page: "https://archway.explorers.guru/transaction/${txHash}",
      account_page: "https://archway.explorers.guru/account/${accountAddress}"
    },
    {
      kind: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}",
      url: "https://exp.utsa.tech/archway",
      tx_page: "https://exp.utsa.tech/archway/tx/${txHash}",
      account_page: "https://exp.utsa.tech/archway/account/${accountAddress}"
    },
    {
      kind: "Mintscan",
      url: "https://mintscan.io/archway/",
      tx_page: "https://mintscan.io/archway/transactions/${txHash}",
      account_page: "https://mintscan.io/archway/accounts/${accountAddress}"
    },
    {
      kind: "Silk Nodes",
      url: "https://explorer.silknodes.io/archway",
      tx_page: "https://explorer.silknodes.io/archway/tx/${txHash}",
      account_page: "https://explorer.silknodes.io/archway/account/${accountAddress}"
    },
    {
      kind: "NodeStake Explorer",
      url: "https://explorer.nodestake.top/archway/",
      tx_page: "https://explorer.nodestake.top/archway/txs/${txHash}",
      account_page: "https://explorer.nodestake.top/archway/account/${accountAddress}"
    },
    {
      kind: "Exploreme",
      url: "https://archway.exploreme.pro/",
      tx_page: "https://archway.exploreme.pro/transaction/${txHash}",
      account_page: "https://archway.exploreme.pro/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/archway",
      tx_page: "https://ping.pub/archway/tx/${txHash}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/archway",
      tx_page: "https://ezstaking.app/archway/txs/${txHash}",
      account_page: "https://ezstaking.app/archway/account/${accountAddress}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/archway",
      tx_page: "https://mainnet.whispernode.com/archway/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/archway/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/archway/images/archway.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/archway/images/archway.svg"
  }]
};
var chain_default9 = info24;

// node_modules/chain-registry/esm/mainnet/archway/ibc.js
var info25 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-75",
      connection_id: "connection-69"
    },
    chain_2: {
      chain_name: "archway",
      client_id: "07-tendermint-23",
      connection_id: "connection-21"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-60",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-20",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-166",
      connection_id: "connection-146"
    },
    chain_2: {
      chain_name: "archway",
      client_id: "07-tendermint-26",
      connection_id: "connection-28"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-109",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-26",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "andromeda",
      client_id: "07-tendermint-9",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "archway",
      client_id: "07-tendermint-58",
      connection_id: "connection-68"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-97",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-16",
      connection_id: "connection-17"
    },
    chain_2: {
      chain_name: "axelar",
      client_id: "07-tendermint-160",
      connection_id: "connection-145"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-111",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-37",
      connection_id: "connection-40"
    },
    chain_2: {
      chain_name: "bitcanna",
      client_id: "07-tendermint-83",
      connection_id: "connection-74"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-35",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-50",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-92",
      connection_id: "connection-90"
    },
    chain_2: {
      chain_name: "bitsong",
      client_id: "07-tendermint-80",
      connection_id: "connection-55"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-124",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-29",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-75",
      connection_id: "connection-79"
    },
    chain_2: {
      chain_name: "composable",
      client_id: "07-tendermint-143",
      connection_id: "connection-63"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-108",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-50",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1152",
      connection_id: "connection-873"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-623",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-38",
      connection_id: "connection-41"
    },
    chain_2: {
      chain_name: "decentr",
      client_id: "07-tendermint-21",
      connection_id: "connection-8"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-113",
      connection_id: "connection-106"
    },
    chain_2: {
      chain_name: "doravota",
      client_id: "07-tendermint-22",
      connection_id: "connection-28"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-146",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-91",
      connection_id: "connection-89"
    },
    chain_2: {
      chain_name: "dymension",
      client_id: "07-tendermint-39",
      connection_id: "connection-30"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-123",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-45",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-40",
      connection_id: "connection-43"
    },
    chain_2: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-424",
      connection_id: "connection-406"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-38",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-145",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-17",
      connection_id: "connection-18"
    },
    chain_2: {
      chain_name: "jackal",
      client_id: "07-tendermint-61",
      connection_id: "connection-50"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-41",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }],
    operators: [{
      chain_1: {
        address: "archway16l5ls4ajah6hethh374tpgn42r5q4sqeuw8udj"
      },
      chain_2: {
        address: "jkl134a4es94hjqqej732cymf0w3988zh3c4yuqtf8"
      },
      memo: "by AM Solutions | https://www.theamsolutions.info",
      name: "AM Solutions",
      discord_handle: "AlexeyM#5409"
    }, {
      chain_1: {
        address: "archway1nms20r7jzaa4ms9exv90ckl2xfn0rd3rmqh7zm"
      },
      chain_2: {
        address: "jkl1nms20r7jzaa4ms9exv90ckl2xfn0rd3rh49t3n"
      },
      memo: "Relayed by NodeStake",
      name: "NodeStake",
      discord_handle: "nodestake"
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-18",
      connection_id: "connection-19"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-387",
      connection_id: "connection-379"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-290",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-12",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-144",
      connection_id: "connection-110"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-99",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-51",
      connection_id: "connection-58"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-62",
      connection_id: "connection-43"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-61",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-41",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-28",
      connection_id: "connection-31"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-17",
      connection_id: "connection-26"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-29",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-22",
      connection_id: "connection-20"
    },
    chain_2: {
      chain_name: "nois",
      client_id: "07-tendermint-15",
      connection_id: "connection-9"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-21",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-19",
        port_id: "wasm.archway10f3aasgsnpv84ymjyld50jayc4ecu267sdpjamauwm8nvxlzex9qj4dkwr"
      },
      chain_2: {
        channel_id: "channel-22",
        port_id: "wasm.nois1acyc05v6fgcdgj88nmz2t40aex9nlnptqpwp5hf8hwg7rhce9uuqgqz5wp"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-39",
      connection_id: "connection-42"
    },
    chain_2: {
      chain_name: "omniflixhub",
      client_id: "07-tendermint-49",
      connection_id: "connection-43"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-32",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-2",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2850",
      connection_id: "connection-2362"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1429",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-82",
      connection_id: "connection-83"
    },
    chain_2: {
      chain_name: "planq",
      client_id: "07-tendermint-561",
      connection_id: "connection-486"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-112",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-62",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-36",
      connection_id: "connection-39"
    },
    chain_2: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-83",
      connection_id: "connection-58"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-34",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-116",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-55",
      connection_id: "connection-65"
    },
    chain_2: {
      chain_name: "qwoyn",
      client_id: "07-tendermint-8",
      connection_id: "connection-5"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-88",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "astrovault"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-24",
      connection_id: "connection-22"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-169",
      connection_id: "connection-119"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-21",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-84",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-42",
      connection_id: "connection-47"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-384",
      connection_id: "connection-360"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-50",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-265",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-6",
      connection_id: "connection-5"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-228",
      connection_id: "connection-190"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-97",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-80",
      connection_id: "connection-81"
    },
    chain_2: {
      chain_name: "vidulum",
      client_id: "07-tendermint-49",
      connection_id: "connection-46"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-110",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-24",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  }
];
var ibc_default7 = info25;

// node_modules/chain-registry/esm/mainnet/archway/index.js
var assets9 = assets_default9;
var chain9 = chain_default9;
var ibc7 = ibc_default7;

// node_modules/chain-registry/esm/mainnet/arkh/assets.js
var info26 = {
  $schema: "../assetlist.schema.json",
  chain_name: "arkh",
  assets: [{
    description: "The native token of Arkhadian",
    denom_units: [{
      denom: "arkh",
      exponent: 0
    }, {
      denom: "ARKH",
      exponent: 6
    }],
    base: "arkh",
    name: "Arkh",
    display: "ARKH",
    symbol: "ARKH",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/arkh/images/arkh.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/arkh/images/arkh.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/arkh/images/arkh.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/arkh/images/arkh.svg"
    }],
    socials: {
      website: "https://arkhadian.io/",
      twitter: "https://twitter.com/ArkhadianSas"
    }
  }]
};
var assets_default10 = info26;

// node_modules/chain-registry/esm/mainnet/arkh/chain.js
var info27 = {
  $schema: "../chain.schema.json",
  chain_name: "arkh",
  status: "live",
  network_type: "mainnet",
  website: "https://arkhadian.com/",
  pretty_name: "Arkhadian",
  chain_id: "arkh",
  bech32_prefix: "arkh",
  daemon_name: "arkhd",
  node_home: "$HOME/.arkh",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "arkh",
      fixed_min_gas_price: 0.01,
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.03
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "arkh"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/arkh/images/arkh.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/arkh/images/arkh.svg"
  },
  apis: {
    rpc: [{
      address: "https://asc-dataseed.arkhadian.com/",
      provider: "arkhnetwork"
    }, {
      address: "https://arkh_mainnet_rpc.chain.whenmoonwhenlambo.money",
      provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
    }],
    rest: [{
      address: "https://asc-blockchain-api.arkhadian.com/",
      provider: "arkhnetwork"
    }, {
      address: "https://arkh_mainnet_api.chain.whenmoonwhenlambo.money",
      provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
    }],
    grpc: [{
      address: "grpc.arkh.nodestake.top:443",
      provider: "NodeStake"
    }, {
      address: "https://grpc.arkh.nodexcapital.com:443",
      provider: "NodeX Validator"
    }]
  },
  explorers: [
    {
      kind: "NodeStake Explorer",
      url: "https://explorer.nodestake.top/arkh",
      tx_page: "https://explorer.nodestake.top/arkh/tx/${txHash}"
    },
    {
      kind: "Kynraze Explorer",
      url: "https://explorer.kynraze.com/arkhadian",
      tx_page: "https://explorer.kynraze.com/arkhadian/tx/${txHash}"
    },
    {
      kind: "NODEXPLORER",
      url: "https://explorer.nodexcapital.com/arkhadian",
      tx_page: "https://explorer.nodexcapital.com/arkhadian/tx/${txHash}"
    },
    {
      kind: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}",
      url: "https://explorer.whenmoonwhenlambo.money/arkhadian",
      tx_page: "https://explorer.whenmoonwhenlambo.money/arkhadian/tx/${txHash}",
      account_page: "https://explorer.whenmoonwhenlambo.money/arkhadian/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/arkh/images/arkh.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/arkh/images/arkh.svg"
  }]
};
var chain_default10 = info27;

// node_modules/chain-registry/esm/mainnet/arkh/ibc.js
var info28 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "arkh",
    client_id: "07-tendermint-34",
    connection_id: "connection-27"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2697",
    connection_id: "connection-2235"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-12",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-648",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default8 = info28;

// node_modules/chain-registry/esm/mainnet/arkh/index.js
var assets10 = assets_default10;
var chain10 = chain_default10;
var ibc8 = ibc_default8;

// node_modules/chain-registry/esm/mainnet/assetmantle/assets.js
var info29 = {
  $schema: "../assetlist.schema.json",
  chain_name: "assetmantle",
  assets: [{
    description: "The native token of Asset Mantle",
    denom_units: [{
      denom: "umntl",
      exponent: 0
    }, {
      denom: "mntl",
      exponent: 6
    }],
    base: "umntl",
    name: "AssetMantle",
    display: "mntl",
    symbol: "MNTL",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/assetmantle/images/mntl.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/assetmantle/images/mntl.svg"
    },
    coingecko_id: "assetmantle",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/assetmantle/images/mntl.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/assetmantle/images/mntl.svg"
    }],
    socials: {
      website: "https://www.assetmantle.one/",
      twitter: "https://twitter.com/AssetMantle"
    }
  }]
};
var assets_default11 = info29;

// node_modules/chain-registry/esm/mainnet/assetmantle/chain.js
var info30 = {
  $schema: "../chain.schema.json",
  chain_name: "assetmantle",
  status: "live",
  network_type: "mainnet",
  website: "https://assetmantle.one/",
  pretty_name: "AssetMantle",
  chain_id: "mantle-1",
  bech32_prefix: "mantle",
  daemon_name: "mantleNode",
  node_home: "$HOME/.mantleNode",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "umntl",
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "umntl"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/assetmantle/images/AM_Logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/assetmantle/images/AM_Logo_Dark.svg"
  },
  description: "AssetMantle\u2019s suite of products is focused on the NFT ecosystem, helping you up your game with digital asset ownership.",
  apis: {
    rpc: [
      {
        address: "https://rpc.assetmantle.one",
        provider: "AssetMantle"
      },
      {
        address: "https://rpc-assetmantle.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://assetmantle-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://rpc.assetmantle.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://rpc-assetmantle-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://rpc-assetmantle.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://rpc.mantle.paranorm.pro:443",
        provider: "paranorm"
      },
      {
        address: "https://assetmantle-rpc.stakerhouse.com",
        provider: "StakerHouse"
      },
      {
        address: "https://assetmantle-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    rest: [
      {
        address: "https://rest.assetmantle.one",
        provider: "AssetMantle"
      },
      {
        address: "https://rest-assetmantle.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://api.assetmantle.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://api-assetmantle-ia.cosmosia.notional.ventures",
        provider: "Notional"
      },
      {
        address: "https://assetmantle-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://lcd-assetmantle.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://api.mantle.paranorm.pro:443",
        provider: "paranorm"
      },
      {
        address: "https://assetmantle-rest.stakerhouse.com",
        provider: "StakerHouse"
      },
      {
        address: "https://assetmantle-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    grpc: [
      {
        address: "grpc.assetmantle.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "grpc-assetmantle-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "assetmantle-grpc.polkachu.com:14690",
        provider: "Polkachu"
      },
      {
        address: "assetmantle-grpc.stakerhouse.com:443",
        provider: "StakerHouse"
      },
      {
        address: "assetmantle-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/assetmantle",
      tx_page: "https://ezstaking.app/assetmantle/txs/${txHash}",
      account_page: "https://ezstaking.app/assetmantle/account/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/asset-mantle",
      tx_page: "https://www.mintscan.io/asset-mantle/transactions/${txHash}",
      account_page: "https://www.mintscan.io/asset-mantle/accounts/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://explorer.postcapitalist.io/AssetMantle",
      tx_page: "https://explorer.postcapitalist.io/AssetMantle/tx/${txHash}"
    },
    {
      kind: "other",
      url: "https://explorer.assetmantle.one",
      tx_page: "https://explorer.assetmantle.one/transactions/${txHash}"
    },
    {
      kind: "explorers.guru",
      url: "https://assetmantle.explorers.guru",
      tx_page: "https://assetmantle.explorers.guru/transaction/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/assetmantle",
      tx_page: "https://atomscan.com/assetmantle/transactions/${txHash}",
      account_page: "https://atomscan.com/assetmantle/accounts/${accountAddress}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/assetmantle",
      tx_page: "https://mainnet.whispernode.com/assetmantle/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/assetmantle/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/assetmantle/images/AM_Logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/assetmantle/images/AM_Logo_Dark.svg"
  }]
};
var chain_default11 = info30;

// node_modules/chain-registry/esm/mainnet/assetmantle/ibc.js
var info31 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "assetmantle",
      client_id: "07-tendermint-22",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-167",
      connection_id: "connection-113"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-83",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "assetmantle",
      client_id: "07-tendermint-50",
      connection_id: "connection-31"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-104",
      connection_id: "connection-73"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-65",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-19",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "assetmantle",
      client_id: "07-tendermint-42",
      connection_id: "connection-22"
    },
    chain_2: {
      chain_name: "okexchain",
      client_id: "07-tendermint-92",
      connection_id: "connection-35"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-30",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "assetmantle",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1923",
      connection_id: "connection-1498"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-232",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  }
];
var ibc_default9 = info31;

// node_modules/chain-registry/esm/mainnet/assetmantle/index.js
var assets11 = assets_default11;
var chain11 = chain_default11;
var ibc9 = ibc_default9;

// node_modules/chain-registry/esm/mainnet/aura/assets.js
var info32 = {
  $schema: "../assetlist.schema.json",
  chain_name: "aura",
  assets: [{
    description: "The native token of Aura Network",
    denom_units: [{
      denom: "uaura",
      exponent: 0
    }, {
      denom: "aura",
      exponent: 6
    }],
    base: "uaura",
    name: "Aura",
    display: "aura",
    symbol: "AURA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.svg"
    },
    coingecko_id: "aura-network",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.svg"
    }]
  }]
};
var assets_default12 = info32;

// node_modules/chain-registry/esm/mainnet/aura/chain.js
var info33 = {
  $schema: "../chain.schema.json",
  chain_name: "aura",
  status: "live",
  network_type: "mainnet",
  website: "https://aura.network/",
  pretty_name: "Aura Network",
  chain_id: "aura_6322-2",
  bech32_prefix: "aura",
  daemon_name: "aurad",
  node_home: "$HOME/.aura",
  pre_fork_chain_name: "aura1",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uaura",
      fixed_min_gas_price: 1e-3,
      low_gas_price: 1e-3,
      average_gas_price: 2e-3,
      high_gas_price: 25e-4
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uaura"
    }],
    lock_duration: {
      time: "1209600s"
    }
  },
  codebase: {
    cosmos_sdk_version: "evmos/cosmos-sdk v0.47.8-evmos",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.42.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.aura.network/",
        provider: "Aura Network Foundation"
      },
      {
        address: "https://m-aura.rpc.utsa.tech",
        provider: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}"
      },
      {
        address: "http://aura.rpc.m.stavr.tech:11047",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://aura-rpc.ramuchi.tech",
        provider: "ramuchi.tech"
      },
      {
        address: "https://aura.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://mainnet-aura-rpc.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://aura-rpc.tienthuattoan.ventures",
        provider: "TienThuatToan"
      },
      {
        address: "https://aura-rpc.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://aura-rpc.staketab.org:443",
        provider: "Staketab"
      },
      {
        address: "https://rpc.aura.safeblock.space",
        provider: "Safe Block"
      },
      {
        address: "https://rpc.aura.silentvalidator.com",
        provider: "silent"
      },
      {
        address: "https://rpc-aura.mms.team",
        provider: "MMS"
      },
      {
        address: "https://aura-rpc.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://aura-rpc.palamar.io",
        provider: "Palamar"
      },
      {
        address: "https://aura.rpc.srv.stakr.space",
        provider: "STAKR.space"
      },
      {
        address: "https://aura-rpc.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://aura-rpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    rest: [
      {
        address: "https://lcd.aura.network/",
        provider: "Aura Network Foundation"
      },
      {
        address: "https://m-aura.api.utsa.tech",
        provider: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}"
      },
      {
        address: "https://aura.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://aura-api.ramuchi.tech",
        provider: "ramuchi.tech"
      },
      {
        address: "https://aura.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://mainnet-aura-api.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://aura-api.tienthuattoan.ventures",
        provider: "TienThuatToan"
      },
      {
        address: "https://aura-api.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://aura-rest.staketab.org",
        provider: "Staketab"
      },
      {
        address: "https://api.aura.safeblock.space",
        provider: "Safe Block"
      },
      {
        address: "https://api.aura.silentvalidator.com",
        provider: "silent"
      },
      {
        address: "https://api-aura.mms.team",
        provider: "MMS"
      },
      {
        address: "https://aura-api.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://aura-api.palamar.io",
        provider: "Palamar"
      },
      {
        address: "https://aura.api.srv.stakr.space",
        provider: "STAKR.space"
      },
      {
        address: "https://aura-api.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://aura-api.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    grpc: [
      {
        address: "https://grpc.aura.network",
        provider: "Aura Network Foundation"
      },
      {
        address: "auranetwork-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://grpc.aura.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "aura.mainnet.grpc.nodersteam.com:9100/",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://aura-grpc.ramuchi.tech:15000",
        provider: "ramuchi.tech"
      },
      {
        address: "http://aura.grpc.m.stavr.tech:9901",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "aura.grpc.kjnodes.com:11790",
        provider: "kjnodes"
      },
      {
        address: "aura-grpc.tienthuattoan.ventures:9090",
        provider: "TienThuatToan"
      },
      {
        address: "aura-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "services.staketab.com:9021",
        provider: "Staketab"
      },
      {
        address: "grpc.aura.silentvalidator.com:443",
        provider: "silent"
      },
      {
        address: "grpc-aura.mms.team:443",
        provider: "MMS"
      },
      {
        address: "aura-grpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "grpc.aura.safeblock.space:9090",
        provider: "Safe Block"
      },
      {
        address: "aura-grpc.palamar.io:443",
        provider: "Palamar"
      },
      {
        address: "aura.grpc.srv.stakr.space:19090",
        provider: "STAKR.space"
      },
      {
        address: "aura-grpc.noders.services:17090",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "aurascan",
      url: "https://aurascan.io",
      tx_page: "https://aurascan.io/tx/${txHash}",
      account_page: "https://aurascan.io/address/${accountAddress}"
    },
    {
      kind: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400} Explorer",
      url: "https://exp.utsa.tech/aura",
      tx_page: "https://exp.utsa.tech/aura/tx/${txHash}",
      account_page: "https://exp.utsa.tech/aura/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525} Explorer",
      url: "https://explorer.stavr.tech/Aura-Mainnet",
      tx_page: "https://explorer.stavr.tech/aura-mainnet/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/aura-mainnet/account/${accountAddress}"
    },
    {
      kind: "NodeStake Explorer",
      url: "https://explorer.nodestake.top/aura",
      tx_page: "https://explorer.nodestake.top/aura/tx/${txHash}",
      account_page: "https://explorer.nodestake.top/aura/account/${accountAddress}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/aura",
      tx_page: "https://explorer.tcnetwork.io/aura/transaction/${txHash}",
      account_page: "https://explorer.tcnetwork.io/aura/account/${accountAddress}"
    },
    {
      kind: "Stake-Take",
      url: "https://explorer.stake-take.com/aura",
      tx_page: "https://explorer.stake-take.com/aura/tx/${txHash}",
      account_page: "https://explorer.stake-take.com/aura/account/${accountAddress}"
    },
    {
      kind: "Safe Block",
      url: "https://explorer.safeblock.space/aura",
      tx_page: "https://explorer.safeblock.space/aura/tx/${txHash}",
      account_page: "https://explorer.safeblock.space/aura/account/${accountAddress}"
    },
    {
      kind: "STAKR.space explorer",
      url: "https://explorer.stakr.space/aura/",
      tx_page: "https://explorer.stakr.space/aura/tx/${txHash}",
      account_page: "https://explorer.stakr.space/aura/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.svg"
  }]
};
var chain_default12 = info33;

// node_modules/chain-registry/esm/mainnet/aura/ibc.js
var info34 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "aura",
      client_id: "07-tendermint-17",
      connection_id: "connection-11"
    },
    chain_2: {
      chain_name: "axelar",
      client_id: "07-tendermint-152",
      connection_id: "connection-137"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-104",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "aura",
      client_id: "07-tendermint-24",
      connection_id: "connection-14"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1158",
      connection_id: "connection-880"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-646",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "aura",
      client_id: "07-tendermint-26",
      connection_id: "connection-15"
    },
    chain_2: {
      chain_name: "kava",
      client_id: "07-tendermint-133",
      connection_id: "connection-168"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-124",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "aura",
      client_id: "07-tendermint-43",
      connection_id: "connection-27"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-66",
      connection_id: "connection-63"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-41",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "aura",
      client_id: "07-tendermint-13",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "nois",
      client_id: "07-tendermint-4",
      connection_id: "connection-4"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-16",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-8",
        port_id: "wasm.aura1r3zgdsn3dcze07a4r60rxxx7ppvkxfshn9np0pwtkgarrld0786s72jtjt"
      },
      chain_2: {
        channel_id: "channel-35",
        port_id: "wasm.nois1acyc05v6fgcdgj88nmz2t40aex9nlnptqpwp5hf8hwg7rhce9uuqgqz5wp"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "aura",
      client_id: "07-tendermint-47",
      connection_id: "connection-33"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3054",
      connection_id: "connection-2551"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-11304",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "aura",
      client_id: "07-tendermint-48",
      connection_id: "connection-47"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-339",
      connection_id: "connection-288"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-270",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-24",
        port_id: "wasm.aura1y3244guwexyvn6yx6kqkj5s0f56lzfdnuja3culygnuwxgrxyuqsaz4xvv"
      },
      chain_2: {
        channel_id: "channel-271",
        port_id: "wasm.stars1r0a8ygvnjfaegy4n5z9325e0ew9uy2s7rn4vt7qf4ltv49fj4tnsk6pvtv"
      },
      ordering: "unordered",
      version: "ics721-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default10 = info34;

// node_modules/chain-registry/esm/mainnet/aura/index.js
var assets12 = assets_default12;
var chain12 = chain_default12;
var ibc10 = ibc_default10;

// node_modules/chain-registry/esm/mainnet/aura1/assets.js
var info35 = {
  $schema: "../assetlist.schema.json",
  chain_name: "aura1",
  assets: [{
    description: "The native token of Aura Network",
    denom_units: [{
      denom: "uaura",
      exponent: 0
    }, {
      denom: "aura",
      exponent: 6
    }],
    base: "uaura",
    name: "Aura",
    display: "aura",
    symbol: "AURA",
    traces: [{
      type: "additional-mintage",
      counterparty: {
        chain_name: "aura",
        base_denom: "uaura"
      },
      provider: "Aura"
    }],
    coingecko_id: "aura-network",
    images: [{
      image_sync: {
        chain_name: "aura",
        base_denom: "uaura"
      },
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.svg"
    }]
  }]
};
var assets_default13 = info35;

// node_modules/chain-registry/esm/mainnet/aura1/chain.js
var info36 = {
  $schema: "../chain.schema.json",
  chain_name: "aura1",
  status: "killed",
  network_type: "mainnet",
  website: "https://aura.network/",
  pretty_name: "Aura Network",
  chain_id: "xstaxy-1",
  bech32_prefix: "aura",
  daemon_name: "aurad",
  node_home: "$HOME/.aura",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uaura",
      fixed_min_gas_price: 1e-3,
      low_gas_price: 1e-3,
      average_gas_price: 2e-3,
      high_gas_price: 25e-4
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uaura"
    }],
    lock_duration: {
      time: "1209600s"
    }
  },
  codebase: {
    cosmos_sdk_version: "0.47.5",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.42.0"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.aura.network/",
        provider: "Aura Network Foundation"
      },
      {
        address: "https://m-aura.rpc.utsa.tech",
        provider: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}"
      },
      {
        address: "http://aura.rpc.m.stavr.tech:11047",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://aura-rpc.ramuchi.tech",
        provider: "ramuchi.tech"
      },
      {
        address: "https://aura.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://mainnet-aura-rpc.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://aura-rpc.tienthuattoan.ventures",
        provider: "TienThuatToan"
      },
      {
        address: "https://aura-rpc.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://aura-rpc.staketab.org:443",
        provider: "Staketab"
      },
      {
        address: "https://rpc.aura.safeblock.space",
        provider: "Safe Block"
      },
      {
        address: "https://rpc.aura.silentvalidator.com",
        provider: "silent"
      },
      {
        address: "https://rpc-aura.mms.team",
        provider: "MMS"
      },
      {
        address: "https://aura-rpc.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://aura-rpc.palamar.io",
        provider: "Palamar"
      },
      {
        address: "https://aura.rpc.srv.stakr.space",
        provider: "STAKR.space"
      },
      {
        address: "https://aura-rpc.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://aura-rpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    rest: [
      {
        address: "https://lcd.aura.network/",
        provider: "Aura Network Foundation"
      },
      {
        address: "https://m-aura.api.utsa.tech",
        provider: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}"
      },
      {
        address: "https://aura.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://aura-api.ramuchi.tech",
        provider: "ramuchi.tech"
      },
      {
        address: "https://aura.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://mainnet-aura-api.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://aura-api.tienthuattoan.ventures",
        provider: "TienThuatToan"
      },
      {
        address: "https://aura-api.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://aura-rest.staketab.org",
        provider: "Staketab"
      },
      {
        address: "https://api.aura.safeblock.space",
        provider: "Safe Block"
      },
      {
        address: "https://api.aura.silentvalidator.com",
        provider: "silent"
      },
      {
        address: "https://api-aura.mms.team",
        provider: "MMS"
      },
      {
        address: "https://aura-api.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://aura-api.palamar.io",
        provider: "Palamar"
      },
      {
        address: "https://aura.api.srv.stakr.space",
        provider: "STAKR.space"
      },
      {
        address: "https://aura-api.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://aura-api.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    grpc: [
      {
        address: "https://grpc.aura.network",
        provider: "Aura Network Foundation"
      },
      {
        address: "auranetwork-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://grpc.aura.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "aura.mainnet.grpc.nodersteam.com:9100/",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://aura-grpc.ramuchi.tech:15000",
        provider: "ramuchi.tech"
      },
      {
        address: "http://aura.grpc.m.stavr.tech:9901",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "aura.grpc.kjnodes.com:11790",
        provider: "kjnodes"
      },
      {
        address: "aura-grpc.tienthuattoan.ventures:9090",
        provider: "TienThuatToan"
      },
      {
        address: "aura-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "services.staketab.com:9021",
        provider: "Staketab"
      },
      {
        address: "grpc.aura.silentvalidator.com:443",
        provider: "silent"
      },
      {
        address: "grpc-aura.mms.team:443",
        provider: "MMS"
      },
      {
        address: "aura-grpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "grpc.aura.safeblock.space:9090",
        provider: "Safe Block"
      },
      {
        address: "aura-grpc.palamar.io:443",
        provider: "Palamar"
      },
      {
        address: "aura.grpc.srv.stakr.space:19090",
        provider: "STAKR.space"
      },
      {
        address: "aura-grpc.noders.services:17090",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "aurascan",
      url: "https://aurascan.io",
      tx_page: "https://aurascan.io/transaction/${txHash}",
      account_page: "https://aurascan.io/account/${accountAddress}"
    },
    {
      kind: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400} Explorer",
      url: "https://exp.utsa.tech/aura",
      tx_page: "https://exp.utsa.tech/aura/tx/${txHash}",
      account_page: "https://exp.utsa.tech/aura/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525} Explorer",
      url: "https://explorer.stavr.tech/Aura-Mainnet",
      tx_page: "https://explorer.stavr.tech/aura-mainnet/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/aura-mainnet/account/${accountAddress}"
    },
    {
      kind: "NodeStake Explorer",
      url: "https://explorer.nodestake.top/aura",
      tx_page: "https://explorer.nodestake.top/aura/tx/${txHash}",
      account_page: "https://explorer.nodestake.top/aura/account/${accountAddress}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/aura",
      tx_page: "https://explorer.tcnetwork.io/aura/transaction/${txHash}",
      account_page: "https://explorer.tcnetwork.io/aura/account/${accountAddress}"
    },
    {
      kind: "Stake-Take",
      url: "https://explorer.stake-take.com/aura",
      tx_page: "https://explorer.stake-take.com/aura/tx/${txHash}",
      account_page: "https://explorer.stake-take.com/aura/account/${accountAddress}"
    },
    {
      kind: "Safe Block",
      url: "https://explorer.safeblock.space/aura",
      tx_page: "https://explorer.safeblock.space/aura/tx/${txHash}",
      account_page: "https://explorer.safeblock.space/aura/account/${accountAddress}"
    },
    {
      kind: "STAKR.space explorer",
      url: "https://explorer.stakr.space/aura/",
      tx_page: "https://explorer.stakr.space/aura/tx/${txHash}",
      account_page: "https://explorer.stakr.space/aura/account/${accountAddress}"
    }
  ],
  images: [{
    image_sync: {
      chain_name: "aura"
    },
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.svg"
  }]
};
var chain_default13 = info36;

// node_modules/chain-registry/esm/mainnet/aura1/index.js
var assets13 = assets_default13;
var chain13 = chain_default13;

// node_modules/chain-registry/esm/mainnet/axelar/assets.js
var info37 = {
  $schema: "../assetlist.schema.json",
  chain_name: "axelar",
  assets: [
    {
      description: "The native token of Axelar",
      denom_units: [{
        denom: "uaxl",
        exponent: 0
      }, {
        denom: "axl",
        exponent: 6
      }],
      base: "uaxl",
      name: "Axelar",
      display: "axl",
      symbol: "AXL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.svg"
      },
      coingecko_id: "axelar",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.svg"
      }],
      socials: {
        website: "https://axelar.network/",
        twitter: "https://twitter.com/axelarnetwork"
      }
    },
    {
      description: "Circle's stablecoin on Axelar",
      denom_units: [{
        denom: "uusdc",
        exponent: 0
      }, {
        denom: "usdc",
        exponent: 6
      }],
      base: "uusdc",
      name: "USD Coin",
      display: "usdc",
      symbol: "USDC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.svg"
      },
      coingecko_id: "axlusdc",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.svg"
      }]
    },
    {
      description: "Frax's fractional-algorithmic stablecoin on Axelar",
      denom_units: [{
        denom: "frax-wei",
        exponent: 0
      }, {
        denom: "frax",
        exponent: 18
      }],
      base: "frax-wei",
      name: "Frax",
      display: "frax",
      symbol: "FRAX",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x853d955acef822db058eb8505911ed77f175b99e"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frax.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x853d955acef822db058eb8505911ed77f175b99e"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frax.svg"
      }]
    },
    {
      description: "Dai stablecoin on Axelar",
      denom_units: [{
        denom: "dai-wei",
        exponent: 0
      }, {
        denom: "dai",
        exponent: 18
      }],
      base: "dai-wei",
      name: "Dai Stablecoin",
      display: "dai",
      symbol: "DAI",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x6b175474e89094c44da98b954eedeac495271d0f"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/dai.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/dai.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/dai.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/dai.svg"
      }]
    },
    {
      description: "Tether's USD stablecoin on Axelar",
      denom_units: [{
        denom: "uusdt",
        exponent: 0
      }, {
        denom: "usdt",
        exponent: 6
      }],
      base: "uusdt",
      name: "Tether USD",
      display: "usdt",
      symbol: "USDT",
      coingecko_id: "axelar-usdt",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdt.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdt.svg"
      }]
    },
    {
      description: "Wrapped Ether on Axelar",
      denom_units: [{
        denom: "weth-wei",
        exponent: 0
      }, {
        denom: "weth",
        exponent: 18
      }],
      base: "weth-wei",
      name: "Wrapped Ether",
      display: "weth",
      symbol: "WETH",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/weth.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/weth.png"
      }]
    },
    {
      description: "Wrapped Bitcoin on Axelar",
      denom_units: [{
        denom: "wbtc-satoshi",
        exponent: 0
      }, {
        denom: "wbtc",
        exponent: 8
      }],
      base: "wbtc-satoshi",
      name: "Wrapped Bitcoin",
      display: "wbtc",
      symbol: "WBTC",
      coingecko_id: "axlwbtc",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/wbtc.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/wbtc.png"
      }]
    },
    {
      description: "Aave on Axelar",
      denom_units: [{
        denom: "aave-wei",
        exponent: 0
      }, {
        denom: "aave",
        exponent: 18
      }],
      base: "aave-wei",
      name: "Aave",
      display: "aave",
      symbol: "AAVE",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/aave.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/aave.svg"
      }]
    },
    {
      description: "ApeCoin on Axelar",
      denom_units: [{
        denom: "ape-wei",
        exponent: 0
      }, {
        denom: "ape",
        exponent: 18
      }],
      base: "ape-wei",
      name: "ApeCoin",
      display: "ape",
      symbol: "APE",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x4d224452801aced8b2f0aebe155379bb5d594381"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ape.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x4d224452801aced8b2f0aebe155379bb5d594381"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ape.svg"
      }]
    },
    {
      description: "Axie Infinity Shard on Axelar",
      denom_units: [{
        denom: "axs-wei",
        exponent: 0
      }, {
        denom: "axs",
        exponent: 18
      }],
      base: "axs-wei",
      name: "Axie Infinity Shard",
      display: "axs",
      symbol: "AXS",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xbb0e17ef65f82ab018d8edd776e8dd940327b28b"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/axs.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xbb0e17ef65f82ab018d8edd776e8dd940327b28b"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/axs.svg"
      }]
    },
    {
      description: "Chainlink on Axelar",
      denom_units: [{
        denom: "link-wei",
        exponent: 0
      }, {
        denom: "link",
        exponent: 18
      }],
      base: "link-wei",
      name: "Chainlink",
      display: "link",
      symbol: "LINK",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x514910771af9ca656af840dff83e8264ecf986ca"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/link.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/link.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x514910771af9ca656af840dff83e8264ecf986ca"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/link.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/link.svg"
      }]
    },
    {
      description: "Maker on Axelar",
      denom_units: [{
        denom: "mkr-wei",
        exponent: 0
      }, {
        denom: "mkr",
        exponent: 18
      }],
      base: "mkr-wei",
      name: "Maker",
      display: "mkr",
      symbol: "MKR",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/mkr.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/mkr.svg"
      }]
    },
    {
      description: "Rai Reflex Index on Axelar",
      denom_units: [{
        denom: "rai-wei",
        exponent: 0
      }, {
        denom: "rai",
        exponent: 18
      }],
      base: "rai-wei",
      name: "Rai Reflex Index",
      display: "rai",
      symbol: "RAI",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x03ab458634910aad20ef5f1c8ee96f1d6ac54919"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/rai.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x03ab458634910aad20ef5f1c8ee96f1d6ac54919"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/rai.svg"
      }]
    },
    {
      description: "Shiba Inu on Axelar",
      denom_units: [{
        denom: "shib-wei",
        exponent: 0
      }, {
        denom: "shib",
        exponent: 18
      }],
      base: "shib-wei",
      name: "Shiba Inu",
      display: "shib",
      symbol: "SHIB",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/shib.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/shib.svg"
      }]
    },
    {
      description: "Lido Staked Ether on Axelar",
      denom_units: [{
        denom: "steth-wei",
        exponent: 0
      }, {
        denom: "steth",
        exponent: 18
      }],
      base: "steth-wei",
      name: "Lido Staked Ether",
      display: "steth",
      symbol: "stETH",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xae7ab96520de3a18e5e111b5eaab095312d7fe84"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/steth.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xae7ab96520de3a18e5e111b5eaab095312d7fe84"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/steth.svg"
      }]
    },
    {
      description: "Uniswap on Axelar",
      denom_units: [{
        denom: "uni-wei",
        exponent: 0
      }, {
        denom: "uni",
        exponent: 18
      }],
      base: "uni-wei",
      name: "Uniswap",
      display: "uni",
      symbol: "UNI",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x1f9840a85d5af5bf1d1762f925bdaddc4201f984"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/uni.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x1f9840a85d5af5bf1d1762f925bdaddc4201f984"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/uni.svg"
      }]
    },
    {
      description: "Chain on Axelar",
      denom_units: [{
        denom: "xcn-wei",
        exponent: 0
      }, {
        denom: "xcn",
        exponent: 18
      }],
      base: "xcn-wei",
      name: "Chain",
      display: "xcn",
      symbol: "XCN",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xa2cd3d43c775978a96bdbf12d733d5a1ed94fb18"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/xcn.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xa2cd3d43c775978a96bdbf12d733d5a1ed94fb18"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/xcn.svg"
      }]
    },
    {
      description: "Wrapped Polkadot on Axelar",
      denom_units: [{
        denom: "dot-planck",
        exponent: 0
      }, {
        denom: "dot",
        exponent: 10
      }],
      base: "dot-planck",
      name: "Wrapped Polkadot",
      display: "dot",
      symbol: "DOT",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "moonbeam",
          base_denom: "0xffffffff1fcacbd218edc0eba20fc2308c778080"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.svg"
      },
      images: [{
        image_sync: {
          chain_name: "moonbeam",
          base_denom: "0xffffffff1fcacbd218edc0eba20fc2308c778080"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.svg"
      }]
    },
    {
      description: "Wrapped Moonbeam on Axelar",
      denom_units: [{
        denom: "wglmr-wei",
        exponent: 0
      }, {
        denom: "wglmr",
        exponent: 18
      }],
      base: "wglmr-wei",
      name: "Wrapped Moonbeam",
      display: "wglmr",
      symbol: "WGLMR",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "moonbeam",
          base_denom: "0xacc15dc74880c9944775448304b263d191c6077f"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.svg"
      },
      images: [{
        image_sync: {
          chain_name: "moonbeam",
          base_denom: "0xacc15dc74880c9944775448304b263d191c6077f"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.svg"
      }]
    },
    {
      description: "Wrapped Matic on Axelar",
      denom_units: [{
        denom: "wmatic-wei",
        exponent: 0
      }, {
        denom: "wmatic",
        exponent: 18
      }],
      base: "wmatic-wei",
      name: "Wrapped Matic",
      display: "wmatic",
      symbol: "WMATIC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "polygon",
          base_denom: "0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/wmatic.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/wmatic.svg"
      },
      images: [{
        image_sync: {
          chain_name: "polygon",
          base_denom: "0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/wmatic.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/wmatic.svg"
      }]
    },
    {
      description: "Wrapped BNB on Axelar",
      denom_units: [{
        denom: "wbnb-wei",
        exponent: 0
      }, {
        denom: "wbnb",
        exponent: 18
      }],
      base: "wbnb-wei",
      name: "Wrapped BNB",
      display: "wbnb",
      symbol: "WBNB",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "binancesmartchain",
          base_denom: "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/wbnb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/wbnb.svg"
      },
      images: [{
        image_sync: {
          chain_name: "binancesmartchain",
          base_denom: "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/wbnb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/wbnb.svg"
      }]
    },
    {
      description: "Binance USD on Axelar.",
      denom_units: [{
        denom: "busd-wei",
        exponent: 0
      }, {
        denom: "busd",
        exponent: 18
      }],
      base: "busd-wei",
      name: "Binance USD",
      display: "busd",
      symbol: "BUSD",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x4fabb145d64652a948d72533023f6e7a623c7c53"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/busd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/busd.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x4fabb145d64652a948d72533023f6e7a623c7c53"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/busd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/busd.svg"
      }]
    },
    {
      description: "Wrapped AVAX on Axelar.",
      denom_units: [{
        denom: "wavax-wei",
        exponent: 0
      }, {
        denom: "avax",
        exponent: 18
      }],
      base: "wavax-wei",
      name: "Wrapped AVAX",
      display: "avax",
      symbol: "WAVAX",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "avalanche",
          base_denom: "0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/wavax.svg"
      },
      images: [{
        image_sync: {
          chain_name: "avalanche",
          base_denom: "0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/wavax.svg"
      }]
    },
    {
      description: "Wrapped FTM on Axelar.",
      denom_units: [{
        denom: "wftm-wei",
        exponent: 0
      }, {
        denom: "ftm",
        exponent: 18
      }],
      base: "wftm-wei",
      name: "Wrapped FTM",
      display: "ftm",
      symbol: "WFTM",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "fantom",
          base_denom: "0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.svg"
      },
      images: [{
        image_sync: {
          chain_name: "fantom",
          base_denom: "0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.svg"
      }]
    },
    {
      description: "Circle's stablecoin from Polygon on Axelar",
      denom_units: [{
        denom: "polygon-uusdc",
        exponent: 0
      }, {
        denom: "polygon-usdc",
        exponent: 6
      }],
      base: "polygon-uusdc",
      name: "USD Coin from Polygon",
      display: "polygon-usdc",
      symbol: "USDC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "polygon",
          base_denom: "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.svg"
      }]
    },
    {
      description: "Circle's stablecoin from Avalanche on Axelar",
      denom_units: [{
        denom: "avalanche-uusdc",
        exponent: 0
      }, {
        denom: "avalanche-usdc",
        exponent: 6
      }],
      base: "avalanche-uusdc",
      name: "USD Coin from Avalanche",
      display: "avalanche-usdc",
      symbol: "USDC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "avalanche",
          base_denom: "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.svg"
      }]
    },
    {
      description: "Wrapped FIL on Axelar",
      denom_units: [{
        denom: "wfil-wei",
        exponent: 0
      }, {
        denom: "fil",
        exponent: 18
      }],
      base: "wfil-wei",
      name: "Wrapped FIL from Filecoin",
      display: "fil",
      symbol: "axlFIL",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "filecoin",
          base_denom: "0x60E1773636CF5E4A227d9AC24F20fEca034ee25A"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/filecoin/images/wfil.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/filecoin/images/wfil.svg"
      },
      images: [{
        image_sync: {
          chain_name: "filecoin",
          base_denom: "0x60E1773636CF5E4A227d9AC24F20fEca034ee25A"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/filecoin/images/wfil.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/filecoin/images/wfil.svg"
      }]
    },
    {
      description: "Arbitrum on Axelar",
      denom_units: [{
        denom: "arb-wei",
        exponent: 0
      }, {
        denom: "arb",
        exponent: 18
      }],
      base: "arb-wei",
      name: "Arbitrum",
      display: "arb",
      symbol: "ARB",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "arbitrum",
          base_denom: "0x912CE59144191C1204E64559FE8253a0e49E6548"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/arbitrum/images/arb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/arbitrum/images/arb.svg"
      },
      images: [{
        image_sync: {
          chain_name: "arbitrum",
          base_denom: "0x912CE59144191C1204E64559FE8253a0e49E6548"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/arbitrum/images/arb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/arbitrum/images/arb.svg"
      }]
    },
    {
      denom_units: [{
        denom: "pepe-wei",
        exponent: 0,
        aliases: ["0x6982508145454Ce325dDbE47a25d4ec3d2311933"]
      }, {
        denom: "pepe",
        exponent: 18
      }],
      base: "pepe-wei",
      name: "Pepe",
      display: "pepe",
      symbol: "PEPE",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x6982508145454Ce325dDbE47a25d4ec3d2311933"
        },
        provider: "Axelar"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x6982508145454Ce325dDbE47a25d4ec3d2311933"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pepe.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pepe.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pepe.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pepe.svg"
      }
    },
    {
      denom_units: [{
        denom: "cbeth-wei",
        exponent: 0,
        aliases: ["0xbe9895146f7af43049ca1c1ae358b0541ea49704"]
      }, {
        denom: "cbeth",
        exponent: 18
      }],
      base: "cbeth-wei",
      name: "Coinbase Wrapped Staked ETH",
      display: "cbeth",
      symbol: "cbETH",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xbe9895146f7af43049ca1c1ae358b0541ea49704"
        },
        provider: "Axelar"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xbe9895146f7af43049ca1c1ae358b0541ea49704"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/cbeth.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/cbeth.png"
      }
    },
    {
      denom_units: [{
        denom: "reth-wei",
        exponent: 0,
        aliases: ["0xae78736cd615f374d3085123a210448e74fc6393"]
      }, {
        denom: "reth",
        exponent: 18
      }],
      base: "reth-wei",
      name: "Rocket Pool Ether",
      display: "reth",
      symbol: "rETH",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xae78736cd615f374d3085123a210448e74fc6393"
        },
        provider: "Axelar"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xae78736cd615f374d3085123a210448e74fc6393"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/reth.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/reth.png"
      }
    },
    {
      denom_units: [{
        denom: "sfrxeth-wei",
        exponent: 0,
        aliases: ["0xac3e018457b222d93114458476f3e3416abbe38f"]
      }, {
        denom: "sfrxeth",
        exponent: 18
      }],
      base: "sfrxeth-wei",
      name: "Staked Frax Ether",
      display: "sfrxeth",
      symbol: "sfrxETH",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xac3e018457b222d93114458476f3e3416abbe38f"
        },
        provider: "Axelar"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xac3e018457b222d93114458476f3e3416abbe38f"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sfrxeth.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sfrxeth.svg"
      }
    },
    {
      denom_units: [{
        denom: "wsteth-wei",
        exponent: 0,
        aliases: ["0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0"]
      }, {
        denom: "wsteth",
        exponent: 18
      }],
      base: "wsteth-wei",
      name: "Wrapped Lido Staked Ether",
      display: "wsteth",
      symbol: "wstETH",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0"
        },
        provider: "Axelar"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wsteth.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wsteth.svg"
      }
    },
    {
      denom_units: [{
        denom: "yieldeth-wei",
        exponent: 0,
        aliases: ["0xb5b29320d2Dde5BA5BAFA1EbcD270052070483ec"]
      }, {
        denom: "YieldETH",
        exponent: 18
      }],
      base: "yieldeth-wei",
      name: "Real Yield Eth",
      display: "YieldETH",
      symbol: "YieldETH",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xb5b29320d2Dde5BA5BAFA1EbcD270052070483ec"
        },
        provider: "Axelar"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xb5b29320d2Dde5BA5BAFA1EbcD270052070483ec"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/yieldeth.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/yieldeth.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/yieldeth.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/yieldeth.svg"
      }
    },
    {
      denom_units: [{
        denom: "ox-wei",
        exponent: 0,
        aliases: ["0x78a0A62Fba6Fb21A83FE8a3433d44C73a4017A6f"]
      }, {
        denom: "ox",
        exponent: 18
      }],
      base: "ox-wei",
      name: "Open Exchange Token",
      display: "ox",
      symbol: "OX",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x78a0A62Fba6Fb21A83FE8a3433d44C73a4017A6f"
        },
        provider: "Axelar"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x78a0A62Fba6Fb21A83FE8a3433d44C73a4017A6f"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ox.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ox.svg"
      }
    },
    {
      denom_units: [{
        denom: "yum-wei",
        exponent: 0,
        aliases: ["0xcE682c89C63d2850Cb2ca898E44D6c7c30d897a6"]
      }, {
        denom: "yum",
        exponent: 18
      }],
      base: "yum-wei",
      name: "Axelar Wrapped YUM",
      display: "yum",
      symbol: "YUM.axl",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xcE682c89C63d2850Cb2ca898E44D6c7c30d897a6"
        },
        provider: "Axelar"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xcE682c89C63d2850Cb2ca898E44D6c7c30d897a6"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/yum.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/yum.png"
      }
    }
  ]
};
var assets_default14 = info37;

// node_modules/chain-registry/esm/mainnet/axelar/chain.js
var info38 = {
  $schema: "../chain.schema.json",
  chain_name: "axelar",
  chain_id: "axelar-dojo-1",
  pretty_name: "Axelar",
  status: "live",
  network_type: "mainnet",
  website: "https://axelar.network/",
  bech32_prefix: "axelar",
  daemon_name: "axelard",
  node_home: "$HOME/.axelar",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uaxl",
      fixed_min_gas_price: 7e-3,
      low_gas_price: 7e-3,
      average_gas_price: 7e-3,
      high_gas_price: 0.01
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uaxl"
    }]
  },
  codebase: {
    cosmos_sdk_version: "axelarnetwork/cosmos-sdk v0.45.17-0.20230904150332-37fb903a6c62",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.33.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axelar-chain-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axelar-chain-logo.svg"
  },
  description: "Axelar delivers secure cross-chain communication for Web3. Our infrastructure enables dApp users to interact with any asset or application, on any chain, with one click.",
  apis: {
    "grpc-web": [{
      address: "axelar-grpcweb.chainode.tech",
      provider: "Chainode"
    }, {
      address: "axelar-grpcweb.quantnode.tech:9091",
      provider: "Quantnode"
    }],
    rpc: [
      {
        address: "https://rpc-axelar.imperator.co:443",
        provider: "Imperator.co"
      },
      {
        address: "https://axelar-rpc.quickapi.com:443",
        provider: "chainlayer"
      },
      {
        address: "https://rpc-axelar.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://axelar-rpc.pops.one:443",
        provider: "p-ops"
      },
      {
        address: "https://axelar-rpc.qubelabs.io:443",
        provider: "Qubelabs"
      },
      {
        address: "https://rpc-1.axelar.nodes.guru:443",
        provider: "nodes.guru"
      },
      {
        address: "https://rpc-axelar-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://axelar-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://axelar.rpc.stakin-nodes.com",
        provider: "Stakin"
      },
      {
        address: "https://rpc.axelar.bh.rocks",
        provider: "BlockHunters \u{1F3AF}"
      },
      {
        address: "https://axelar-rpc.validatrium.club",
        provider: "Validatrium"
      },
      {
        address: "https://rpc-axelar.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://axelar-rpc.quantnode.tech/",
        provider: "QuantNode"
      },
      {
        address: "https://axelar-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://axelar-rpc.rockrpc.net/",
        provider: "RockawayX Infra"
      },
      {
        address: "https://axelar-rpc.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://rpc-axelar-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://axelar-rpc.staketab.org:443",
        provider: "Staketab"
      },
      {
        address: "https://axelar-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://axelar-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    rest: [
      {
        address: "https://lcd-axelar.imperator.co:443",
        provider: "Imperator.co"
      },
      {
        address: "https://axelar-lcd.quickapi.com:443",
        provider: "chainlayer"
      },
      {
        address: "https://api-axelar.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://axelar-lcd.qubelabs.io:443",
        provider: "Qubelabs"
      },
      {
        address: "https://api-1.axelar.nodes.guru:443",
        provider: "nodes.guru"
      },
      {
        address: "https://api-axelar-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://axelar-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://axelar.rest.stakin-nodes.com",
        provider: "Stakin"
      },
      {
        address: "https://api.axelar.bh.rocks",
        provider: "BlockHunters \u{1F3AF}"
      },
      {
        address: "https://axelar-api.validatrium.club",
        provider: "Validatrium"
      },
      {
        address: "https://lcd-axelar.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://axelar-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://axelar-lcd.quantnode.tech/",
        provider: "QuantNode"
      },
      {
        address: "https://axelar-api.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://api-axelar-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://axelar-rest.staketab.org",
        provider: "Staketab"
      },
      {
        address: "https://axelar-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://axelar-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    grpc: [
      {
        address: "axelar-grpc.qubelabs.io:9092",
        provider: "Qubelabs"
      },
      {
        address: "axelar-grpc.quantnode.tech:9090",
        provider: "Quantnode"
      },
      {
        address: "services.staketab.com:9080",
        provider: "Staketab"
      },
      {
        address: "grpc-axelar.cosmos-spaces.cloud:1590",
        provider: "Cosmos Spaces"
      },
      {
        address: "grpc-axelar-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "axelar-grpc.polkachu.com:15190",
        provider: "Polkachu"
      },
      {
        address: "axelar.grpc.stakin-nodes.com:443",
        provider: "Stakin"
      },
      {
        address: "axelar-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "grpc-axelar-01.stakeflow.io:1602",
        provider: "Stakeflow"
      },
      {
        address: "axelar-grpc.w3coins.io:15190",
        provider: "w3coins"
      },
      {
        address: "grpc-axelar.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "axelar-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ]
  },
  explorers: [
    {
      kind: "axelarscan",
      url: "https://axelarscan.io",
      tx_page: "https://axelarscan.io/tx/${txHash}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/axelar",
      tx_page: "https://www.mintscan.io/axelar/transactions/${txHash}",
      account_page: "https://www.mintscan.io/axelar/accounts/${accountAddress}"
    },
    {
      kind: "explorers.guru",
      url: "https://axelar.explorers.guru",
      tx_page: "https://axelar.explorers.guru/transaction/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/axelar",
      tx_page: "https://atomscan.com/axelar/transactions/${txHash}",
      account_page: "https://atomscan.com/axelar/accounts/${accountAddress}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/axelar",
      account_page: "https://stakeflow.io/axelar/accounts/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/axelar",
      tx_page: "https://ezstaking.app/axelar/txs/${txHash}",
      account_page: "https://ezstaking.app/axelar/account/${accountAddress}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/axelar",
      tx_page: "https://mainnet.whispernode.com/axelar/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/axelar/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axelar-chain-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axelar-chain-logo.svg"
  }]
};
var chain_default14 = info38;

// node_modules/chain-registry/esm/mainnet/axelar/ibc.js
var info39 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-6",
      connection_id: "connection-6"
    },
    chain_2: {
      chain_name: "axelar",
      client_id: "07-tendermint-78",
      connection_id: "connection-65"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-11",
      connection_id: "connection-14"
    },
    chain_2: {
      chain_name: "axelar",
      client_id: "07-tendermint-69",
      connection_id: "connection-51"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-41",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-16",
      connection_id: "connection-17"
    },
    chain_2: {
      chain_name: "axelar",
      client_id: "07-tendermint-160",
      connection_id: "connection-145"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-111",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "aura",
      client_id: "07-tendermint-17",
      connection_id: "connection-11"
    },
    chain_2: {
      chain_name: "axelar",
      client_id: "07-tendermint-152",
      connection_id: "connection-137"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-104",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-207",
      connection_id: "connection-188"
    },
    chain_2: {
      chain_name: "bitsong",
      client_id: "07-tendermint-81",
      connection_id: "connection-56"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-145",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-30",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-185",
      connection_id: "connection-163"
    },
    chain_2: {
      chain_name: "celestia",
      client_id: "07-tendermint-9",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-125",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-203",
      connection_id: "connection-183"
    },
    chain_2: {
      chain_name: "chain4energy",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-141",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-187",
      connection_id: "connection-165"
    },
    chain_2: {
      chain_name: "composable",
      client_id: "07-tendermint-140",
      connection_id: "connection-58"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-127",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-46",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics-20",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-179",
      connection_id: "connection-157"
    },
    chain_2: {
      chain_name: "coreum",
      client_id: "07-tendermint-7",
      connection_id: "connection-7"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-120",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-622",
      connection_id: "connection-481"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-293",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-31",
      connection_id: "connection-17"
    },
    chain_2: {
      chain_name: "crescent",
      client_id: "07-tendermint-6",
      connection_id: "connection-4"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-197",
      connection_id: "connection-180"
    },
    chain_2: {
      chain_name: "dymension",
      client_id: "07-tendermint-7",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-138",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-158",
      connection_id: "connection-142"
    },
    chain_2: {
      chain_name: "empowerchain",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-109",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-50",
      connection_id: "connection-31"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-69",
      connection_id: "connection-27"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-22",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-21",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-188",
      connection_id: "connection-166"
    },
    chain_2: {
      chain_name: "fxcore",
      client_id: "07-tendermint-24",
      connection_id: "connection-23"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-128",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-20",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-162",
      connection_id: "connection-148"
    },
    chain_2: {
      chain_name: "haqq",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-113",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-168",
      connection_id: "connection-150"
    },
    chain_2: {
      chain_name: "impacthub",
      client_id: "07-tendermint-54",
      connection_id: "connection-40"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-114",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-37",
      connection_id: "connection-20"
    },
    chain_2: {
      chain_name: "injective",
      client_id: "07-tendermint-113",
      connection_id: "connection-93"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-84",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-69",
      connection_id: "connection-178"
    },
    chain_2: {
      chain_name: "jackal",
      client_id: "07-tendermint-69",
      connection_id: "connection-57"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-137",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-49",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-25",
      connection_id: "connection-14"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-150",
      connection_id: "connection-97"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-71",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-42",
      connection_id: "connection-23"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-11",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-118",
      connection_id: "connection-107"
    },
    chain_2: {
      chain_name: "kyve",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-75",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-180",
      connection_id: "connection-158"
    },
    chain_2: {
      chain_name: "migaloo",
      client_id: "07-tendermint-101",
      connection_id: "connection-80"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-121",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-53",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-123",
      connection_id: "connection-110"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-78",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-200",
      connection_id: "connection-181"
    },
    chain_2: {
      chain_name: "nibiru",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-139",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-150",
      connection_id: "connection-135"
    },
    chain_2: {
      chain_name: "odin",
      client_id: "07-tendermint-66",
      connection_id: "connection-151"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-102",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-122",
      connection_id: "connection-109"
    },
    chain_2: {
      chain_name: "omniflixhub",
      client_id: "07-tendermint-44",
      connection_id: "connection-37"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-77",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-27",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-23",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1862",
      connection_id: "connection-1453"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-208",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-175",
      connection_id: "connection-153"
    },
    chain_2: {
      chain_name: "provenance",
      client_id: "07-tendermint-35",
      connection_id: "connection-12"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-116",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-224",
      connection_id: "connection-209"
    },
    chain_2: {
      chain_name: "pryzm",
      client_id: "07-tendermint-7",
      connection_id: "connection-7"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-155",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-208",
      connection_id: "connection-189"
    },
    chain_2: {
      chain_name: "saga",
      client_id: "07-tendermint-11",
      connection_id: "connection-10"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-146",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-24",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-40",
      connection_id: "connection-22"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-44",
      connection_id: "connection-26"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-20",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }, {
      chain_1: {
        channel_id: "channel-69",
        port_id: "transfer",
        client_id: "07-tendermint-103",
        connection_id: "connection-89"
      },
      chain_2: {
        channel_id: "channel-61",
        port_id: "wasm.secret1yxjmepvyl2c25vnt53cr2dpn8amknwausxee83",
        client_id: "07-tendermint-120",
        connection_id: "connection-93"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-151",
      connection_id: "connection-136"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-8",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-103",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-226",
      connection_id: "connection-211"
    },
    chain_2: {
      chain_name: "self",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-157",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-210",
      connection_id: "connection-191"
    },
    chain_2: {
      chain_name: "shido",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-148",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-109",
      connection_id: "connection-96"
    },
    chain_2: {
      chain_name: "sommelier",
      client_id: "07-tendermint-13",
      connection_id: "connection-10"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-72",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics-20",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-93",
      connection_id: "connection-78"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-75",
      connection_id: "connection-60"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-64",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-69",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-39",
      connection_id: "connection-21"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-7",
      connection_id: "connection-10"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-64",
      connection_id: "connection-43"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-63",
      connection_id: "connection-44"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-33",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  }
];
var ibc_default11 = info39;

// node_modules/chain-registry/esm/mainnet/axelar/index.js
var assets14 = assets_default14;
var chain14 = chain_default14;
var ibc11 = ibc_default11;

// node_modules/chain-registry/esm/mainnet/bandchain/assets.js
var info40 = {
  $schema: "../assetlist.schema.json",
  chain_name: "bandchain",
  assets: [{
    description: "The native token of BandChain",
    denom_units: [{
      denom: "uband",
      exponent: 0
    }, {
      denom: "band",
      exponent: 6
    }],
    base: "uband",
    display: "band",
    name: "Band Protocol",
    symbol: "BAND",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bandchain/images/band.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bandchain/images/band.svg"
    },
    coingecko_id: "band-protocol",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bandchain/images/band.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bandchain/images/band.svg"
    }],
    socials: {
      website: "https://www.bandprotocol.com/",
      twitter: "https://twitter.com/BandProtocol"
    }
  }]
};
var assets_default15 = info40;

// node_modules/chain-registry/esm/mainnet/bandchain/chain.js
var info41 = {
  $schema: "../chain.schema.json",
  chain_name: "bandchain",
  status: "live",
  network_type: "mainnet",
  website: "https://bandprotocol.com/",
  pretty_name: "Band Protocol",
  chain_id: "laozi-mainnet",
  daemon_name: "bandd",
  node_home: "$HOME/.band",
  bech32_prefix: "band",
  slip44: 494,
  key_algos: ["secp256k1"],
  fees: {
    fee_tokens: [{
      denom: "uband",
      fixed_min_gas_price: 25e-4,
      low_gas_price: 25e-4,
      average_gas_price: 3e-3,
      high_gas_price: 5e-3
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uband"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "0.45.16"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bandchain/images/band.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bandchain/images/band.svg"
  },
  description: "Band Protocol is a cross-chain data oracle platform that aggregates and connects real-world data and APIs to smart contracts.",
  apis: {
    rpc: [
      {
        address: "http://rpc.laozi1.bandchain.org:80",
        provider: "bandprotocol"
      },
      {
        address: "https://rpc-bandchain-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://band-rpc.ibs.team/",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://bandchain-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://band.rpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc-band-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://rpc-band.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://band-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://bandprotocol-rpc.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://band-rpc.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://public.stakewolle.com/cosmos/bandchain/rpc",
        provider: "Stakewolle"
      },
      {
        address: "https://rpc.band.bronbro.io/",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://band-rpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    rest: [
      {
        address: "https://laozi1.bandchain.org/api",
        provider: "bandprotocol"
      },
      {
        address: "https://api-bandchain-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://band-api.ibs.team/",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://api-band.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://band.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://bandchain-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://api-band-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://band-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://bandprotocol-api.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://band-api.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://public.stakewolle.com/cosmos/bandchain/rest",
        provider: "Stakewolle"
      },
      {
        address: "https://lcd.band.bronbro.io/",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://band-api.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    grpc: [
      {
        address: "grpc-bandchain-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "bandchain-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "grpc-band.cosmos-spaces.cloud:2240",
        provider: "Cosmos Spaces"
      },
      {
        address: "grpc-band-01.stakeflow.io:2502",
        provider: "Stakeflow"
      },
      {
        address: "band-grpc.w3coins.io:22990",
        provider: "w3coins"
      },
      {
        address: "http://band.grpc.m.stavr.tech:7803",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://grpc-band.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "band.grpc.kjnodes.com:443",
        provider: "kjnodes"
      },
      {
        address: "band-grpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "grpc.band.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "band-grpc.noders.services:30090",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "cosmoscan",
      url: "https://cosmoscan.io",
      tx_page: "https://cosmoscan.io/tx/${txHash}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/band",
      tx_page: "https://www.mintscan.io/band/transactions/${txHash}",
      account_page: "https://www.mintscan.io/band/accounts/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/band-protocol",
      tx_page: "https://ping.pub/band-protocol/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Band-Mainnet",
      tx_page: "https://explorer.stavr.tech/Band-Mainnet/tx/${txHash}"
    },
    {
      kind: "Nodeist Explorer",
      url: "https://exp.nodeist.net/band",
      tx_page: "https://exp.nodeist.net/band/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/band-protocol",
      tx_page: "https://atomscan.com/band-protocol/transactions/${txHash}",
      account_page: "https://atomscan.com/band-protocol/accounts/${accountAddress}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/band-protocol",
      account_page: "https://stakeflow.io/band-protocol/accounts/${accountAddress}"
    },
    {
      kind: "kjnodes Explorer",
      url: "https://explorer.kjnodes.com/band",
      tx_page: "https://explorer.kjnodes.com/band/tx/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bandchain/images/band.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bandchain/images/band.svg"
  }]
};
var chain_default15 = info41;

// node_modules/chain-registry/esm/mainnet/bandchain/ibc.js
var info42 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bandchain",
      client_id: "07-tendermint-124",
      connection_id: "connection-107"
    },
    chain_2: {
      chain_name: "comdex",
      client_id: "07-tendermint-81",
      connection_id: "connection-48"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-96",
        port_id: "oracle"
      },
      chain_2: {
        channel_id: "channel-43",
        port_id: "bandoracleV1"
      },
      ordering: "unordered",
      version: "bandchain-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bandchain",
      client_id: "07-tendermint-162",
      connection_id: "connection-141"
    },
    chain_2: {
      chain_name: "coreum",
      client_id: "07-tendermint-33",
      connection_id: "connection-22"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-159",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-20",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bandchain",
      client_id: "07-tendermint-94",
      connection_id: "connection-91"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1743",
      connection_id: "connection-1345"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-83",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-148",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  }
];
var ibc_default12 = info42;

// node_modules/chain-registry/esm/mainnet/bandchain/index.js
var assets15 = assets_default15;
var chain15 = chain_default15;
var ibc12 = ibc_default12;

// node_modules/chain-registry/esm/mainnet/beezee/assets.js
var info43 = {
  $schema: "../assetlist.schema.json",
  chain_name: "beezee",
  assets: [{
    description: "BeeZee native blockchain",
    denom_units: [{
      denom: "ubze",
      exponent: 0
    }, {
      denom: "bze",
      exponent: 6
    }],
    base: "ubze",
    name: "BeeZee",
    display: "bze",
    symbol: "BZE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/beezee/images/bze.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/beezee/images/bze.svg"
    },
    coingecko_id: "bzedge",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/beezee/images/bze.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/beezee/images/bze.svg"
    }]
  }]
};
var assets_default16 = info43;

// node_modules/chain-registry/esm/mainnet/beezee/chain.js
var info44 = {
  $schema: "../chain.schema.json",
  chain_name: "beezee",
  status: "live",
  network_type: "mainnet",
  pretty_name: "BeeZee",
  chain_id: "beezee-1",
  bech32_prefix: "bze",
  daemon_name: "bzed",
  node_home: "$HOME/.bze",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ubze",
      fixed_min_gas_price: 0.01,
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ubze"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/beezee/images/bze.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/beezee/images/bze.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.getbze.com",
        provider: "AlphaTeam"
      },
      {
        address: "https://rpc-1.getbze.com",
        provider: "AlphaTeam"
      },
      {
        address: "https://rpc-2.getbze.com",
        provider: "AlphaTeam"
      },
      {
        address: "https://beezee_mainnet_rpc.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      }
    ],
    rest: [
      {
        address: "https://rest.getbze.com",
        provider: "AlphaTeam"
      },
      {
        address: "https://rest-1.getbze.com",
        provider: "AlphaTeam"
      },
      {
        address: "https://rest-2.getbze.com",
        provider: "AlphaTeam"
      },
      {
        address: "https://beezee_mainnet_api.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      }
    ],
    grpc: [
      {
        address: "grpc.getbze.com:9099",
        provider: "AlphaTeam"
      },
      {
        address: "grpc-1.getbze.com:9099",
        provider: "AlphaTeam"
      },
      {
        address: "grpc-2.getbze.com:9099",
        provider: "AlphaTeam"
      }
    ]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://ping.pub/beezee",
      tx_page: "https://ping.pub/beezee/tx/${txHash}",
      account_page: "https://ping.pub/beezee/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://explorer.getbze.com/beezee",
      tx_page: "https://explorer.getbze.com/beezee/tx/${txHash}",
      account_page: "https://explorer.getbze.com/beezee/account/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/beezee",
      tx_page: "https://atomscan.com/beezee/transactions/${txHash}",
      account_page: "https://atomscan.com/beezee/accounts/${accountAddress}"
    },
    {
      kind: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}",
      url: "https://explorer.whenmoonwhenlambo.money/beezee",
      tx_page: "https://explorer.whenmoonwhenlambo.money/beezee/tx/${txHash}",
      account_page: "https://explorer.whenmoonwhenlambo.money/beezee/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/beezee/images/bze.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/beezee/images/bze.svg"
  }]
};
var chain_default16 = info44;

// node_modules/chain-registry/esm/mainnet/beezee/ibc.js
var info45 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "beezee",
    client_id: "07-tendermint-2",
    connection_id: "connection-0"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2154",
    connection_id: "connection-1672"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-340",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default13 = info45;

// node_modules/chain-registry/esm/mainnet/beezee/index.js
var assets16 = assets_default16;
var chain16 = chain_default16;
var ibc13 = ibc_default13;

// node_modules/chain-registry/esm/mainnet/bitcanna/assets.js
var info46 = {
  $schema: "../assetlist.schema.json",
  chain_name: "bitcanna",
  assets: [{
    description: "The BCNA coin is the transactional token within the BitCanna network, serving the legal cannabis industry through its payment network, supply chain and trust network.",
    denom_units: [{
      denom: "ubcna",
      exponent: 0
    }, {
      denom: "bcna",
      exponent: 6
    }],
    base: "ubcna",
    display: "bcna",
    name: "BitCanna",
    symbol: "BCNA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitcanna/images/bcna.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitcanna/images/bcna.svg"
    },
    coingecko_id: "bitcanna",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitcanna/images/bcna.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitcanna/images/bcna.svg"
    }],
    socials: {
      website: "http://www.bitcanna.io/",
      twitter: "https://twitter.com/BitCannaGlobal"
    }
  }]
};
var assets_default17 = info46;

// node_modules/chain-registry/esm/mainnet/bitcanna/chain.js
var info47 = {
  $schema: "../chain.schema.json",
  chain_name: "bitcanna",
  status: "live",
  network_type: "mainnet",
  website: "https://www.bitcanna.io/",
  pretty_name: "BitCanna",
  chain_id: "bitcanna-1",
  bech32_prefix: "bcna",
  daemon_name: "bcnad",
  node_home: "$HOME/.bcna",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ubcna",
      fixed_min_gas_price: 1e-3,
      low_gas_price: 1e-3,
      average_gas_price: 25e-4,
      high_gas_price: 0.01
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ubcna"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.47.11"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitcanna/images/bcna.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitcanna/images/bcna.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.bitcanna.io/",
        provider: "bitcanna"
      },
      {
        address: "https://bcna-rpc.ibs.team/",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://bitcanna-rpc.panthea.eu/",
        provider: "Panthea EU"
      },
      {
        address: "https://rpc.bitcanna.sgtstake.com/",
        provider: "SGTstake"
      },
      {
        address: "https://bitcanna.rpc.m.anode.team/",
        provider: "AlxVoy \u26A1 ANODE.TEAM"
      },
      {
        address: "https://bitcanna.rpc.m.stavr.tech/",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc-bcna.kjinc.io/",
        provider: "KJINC.io"
      },
      {
        address: "https://mainnet-bitcanna-rpc.konsortech.xyz/",
        provider: "KonsorTech"
      },
      {
        address: "https://bitcanna.rpc.kjnodes.com/",
        provider: "kjnodes"
      },
      {
        address: "https://bitcanna-rpc.genznodes.dev/",
        provider: "genznodes"
      },
      {
        address: "https://rpc.bitcanna-1.bitcanna.aviaone.com/",
        provider: "AVIAONE \u{1F7E2}"
      },
      {
        address: "https://rpc.bitcanna-mainnet.hexnodes.one/",
        provider: "Hexnodes"
      },
      {
        address: "https://rpc.bitcanna.citizenweb3.com/",
        provider: "Citizen Web3"
      },
      {
        address: "https://bitcanna-mainnet.rpc.l0vd.com/",
        provider: "L0vd.com"
      },
      {
        address: "https://bitcanna-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://rpc.bitcanna.safeblock.space",
        provider: "Safe Block"
      },
      {
        address: "https://bitcanna.nodejumper.io:443",
        provider: "NODEJUMPER"
      },
      {
        address: "https://rpc.bitcanna.indonode.net/",
        provider: "Indonode"
      },
      {
        address: "https://rpc-bitcanna.mms.team:443",
        provider: "MMS"
      },
      {
        address: "https://bitcanna-rpc.validatornode.com",
        provider: "ValidatorNode"
      },
      {
        address: "https://bitcanna.rpc.nodex.one",
        provider: "NodeX Emperor \u26A1 Bitcanna"
      },
      {
        address: "https://bcna.rpc.arcturian.tech/",
        provider: "Arcturian Tech"
      },
      {
        address: "https://rpc.bitcanna.bh.rocks",
        provider: "BlockHunters \u{1F3AF}"
      },
      {
        address: "https://bitcanna-rpc.bluestake.net",
        provider: "BlueStake"
      },
      {
        address: "https://rpc-bitcanna.cryptech.com.ua",
        provider: "CrypTech"
      },
      {
        address: "https://bitcanna-rpc.kalia.network/",
        provider: "Kalia Network"
      },
      {
        address: "https://bitcanna.rpc.nodeshub.online:443",
        provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F"
      }
    ],
    grpc: [
      {
        address: "grpc.bitcanna.io:443",
        provider: "bitcanna"
      },
      {
        address: "bitcanna.grpc.m.stavr.tech:9081",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "grpc.bitcanna-mainnet.hexnodes.one:27090",
        provider: "HexNodes"
      },
      {
        address: "grpc.bitcanna-1.bitcanna.aviaone.com:9092",
        provider: "AVIAONE \u{1F7E2}"
      },
      {
        address: "bitcanna-mainnet.grpc.l0vd.com:80",
        provider: "L0vd.com"
      },
      {
        address: "bitcanna.grpc.kjnodes.com:14290",
        provider: "kjnodes"
      },
      {
        address: "bitcanna-grpc.polkachu.com:13090",
        provider: "Polkachu"
      },
      {
        address: "grpc-bitcanna.mms.team:443",
        provider: "MMS"
      },
      {
        address: "grpc.bitcanna.safeblock.space:9090",
        provider: "Safe Block"
      },
      {
        address: "mainnet-bitcanna-grpc.konsortech.xyz:27090",
        provider: "KonsorTech"
      },
      {
        address: "bitcanna.grpc.m.anode.team:443",
        provider: "AlxVoy \u26A1 ANODE.TEAM"
      },
      {
        address: "grpc-bcna.kjinc.io:443",
        provider: "KJINC.io"
      },
      {
        address: "bitcanna.grpc.nodex.one:443",
        provider: "NodeX Emperor \u26A1 Bitcanna"
      },
      {
        address: "grpc.bitcanna.bh.rocks:42090",
        provider: "BlockHunters \u{1F3AF}"
      },
      {
        address: "grpc.bitcanna.indonode.net:11090",
        provider: "Indonode"
      },
      {
        address: "bitcanna-grpc.panthea.eu:16710",
        provider: "Panthea EU"
      },
      {
        address: "bitcanna-grpc.validatornode.com:443",
        provider: "ValidatorNode"
      },
      {
        address: "grpc-bitcanna.cryptech.com.ua:443",
        provider: "CrypTech"
      },
      {
        address: "bitcanna-grpc.kalia.network:443",
        provider: "Kalia Network"
      },
      {
        address: "bitcanna.grpc.nodeshub.online:13090",
        provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F"
      }
    ],
    rest: [
      {
        address: "https://lcd.bitcanna.io",
        provider: "bitcanna"
      },
      {
        address: "https://bitcanna-api.panthea.eu",
        provider: "Panthea EU"
      },
      {
        address: "https://api.bitcanna.sgtstake.com/",
        provider: "SGTstake"
      },
      {
        address: "https://bitcanna.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://bcna-api.ibs.team/",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://bitcanna.api.m.anode.team",
        provider: "AlxVoy \u26A1 ANODE.TEAM"
      },
      {
        address: "https://api-bcna.kjinc.io/",
        provider: "KJINC.io"
      },
      {
        address: "https://mainnet-bitcanna-api.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://bitcanna.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://bitcanna-api.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://api.bitcanna-1.bitcanna.aviaone.com/",
        provider: "AVIAONE \u{1F7E2}"
      },
      {
        address: "https://lcd.bitcanna-mainnet.hexnodes.one",
        provider: "Hexnodes"
      },
      {
        address: "https://bitcanna-mainnet.api.l0vd.com",
        provider: "L0vd.com"
      },
      {
        address: "https://bitcanna-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://api.bitcanna.safeblock.space",
        provider: "Safe Block"
      },
      {
        address: "https://bitcanna.nodejumper.io:1317",
        provider: "NODEJUMPER"
      },
      {
        address: "https://api-bitcanna.mms.team:443",
        provider: "MMS"
      },
      {
        address: "https://bitcanna-api.validatornode.com",
        provider: "ValidatorNode"
      },
      {
        address: "https://bitcanna.api.nodex.one",
        provider: "NodeX Emperor \u26A1 Bitcanna"
      },
      {
        address: "https://bcna.api.arcturian.tech/",
        provider: "Arcturian Tech"
      },
      {
        address: "https://api.bitcanna.bh.rocks",
        provider: "BlockHunters \u{1F3AF}"
      },
      {
        address: "https://api.bitcanna.indonode.net",
        provider: "Indonode"
      },
      {
        address: "https://bitcanna-api.bluestake.net",
        provider: "BlueStake"
      },
      {
        address: "https://api-bitcanna.cryptech.com.ua",
        provider: "CrypTech"
      },
      {
        address: "https://bitcanna-api.kalia.network",
        provider: "Kalia Network"
      },
      {
        address: "https://api.bitcanna.citizenweb3.com",
        provider: "Citizen Web3"
      },
      {
        address: "https://bitcanna.api.nodeshub.online",
        provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F"
      }
    ]
  },
  explorers: [
    {
      kind: "EZStaking Tools",
      url: "https://app.ezstaking.io/bitcanna",
      tx_page: "https://ezstaking.tools/bitcanna/txs/${txHash}",
      account_page: "https://ezstaking.tools/bitcanna/account/${accountAddress}"
    },
    {
      kind: "forbole",
      url: "https://explorer.bitcanna.io",
      tx_page: "https://explorer.bitcanna.io/transactions/${txHash}",
      account_page: "https://explorer.bitcanna.io/accounts/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/bitcanna",
      tx_page: "https://ping.pub/bitcanna/tx/${txHash}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/bitcanna/",
      tx_page: "https://www.mintscan.io/bitcanna/txs/${txHash}",
      account_page: "https://www.mintscan.io/bitcanna/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525} Explorer",
      url: "https://explorer.stavr.tech/Bitcanna",
      tx_page: "https://explorer.stavr.tech/Bitcanna/txs/${txHash}",
      account_page: "https://explorer.stavr.tech/Bitcanna/account/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/bitcanna",
      tx_page: "https://atomscan.com/bitcanna/transactions/${txHash}"
    },
    {
      kind: "ValidatorNode Explorer",
      url: "https://explorer.validatornode.com/bitcanna",
      tx_page: "https://explorer.validatornode.com/bitcanna/tx/${txHash}"
    },
    {
      kind: "Safe Block Explorer Pruned",
      url: "https://explorer.safeblock.space/bitcanna",
      tx_page: "https://explorer.safeblock.space/bitcanna/tx/${txHash}"
    },
    {
      kind: "AlxVoy \u26A1 ANODE.TEAM",
      url: "https://main.anode.team/bitcanna",
      tx_page: "https://main.anode.team/bitcanna/tx/${txHash}"
    },
    {
      kind: "kjnodes",
      url: "https://explorer.kjnodes.com/bitcanna",
      tx_page: "https://explorer.kjnodes.com/bitcanna/tx/${txHash}"
    },
    {
      kind: "L0vd.com \u2764\uFE0F",
      url: "https://explorers.l0vd.com/bitcanna-mainnet",
      tx_page: "https://explorers.l0vd.com/bitcanna-mainnet/tx/${txHash}"
    },
    {
      kind: "NODEXPLORER",
      url: "https://explorer.nodex.one/bitcanna",
      tx_page: "https://explorer.nodex.one/bitcanna/tx/${txHash}"
    },
    {
      kind: "Moonbys Dashboard",
      url: "https://explorer.moonbys.com",
      tx_page: "https://explorer.moonbys.com/${txHash}"
    },
    {
      kind: "BlockHunters \u{1F3AF}",
      url: "https://scan.bh.rocks/bitcanna",
      tx_page: "https://scan.bh.rocks/bitcanna/tx/${txHash}"
    },
    {
      kind: "Indonode",
      url: "https://explorer.indonode.net/bitcanna",
      tx_page: "https://explorer.indonode.net/bitcanna/tx/${txHash}"
    },
    {
      kind: "CrypTech Explorer",
      url: "https://explorers.cryptech.com.ua/bitcanna",
      tx_page: "https://explorers.cryptech.com.ua/bitcanna/txs/${txHash}"
    },
    {
      kind: "Kalia Network",
      url: "https://explorer.kalia.network/bitcanna",
      tx_page: "https://explorer.kalia.network/bitcanna/tx/${txHash}",
      account_page: "https://explorer.kalia.network/bitcanna/account/${accountAddress}"
    },
    {
      kind: "AVIAONE",
      url: "https://mainnet.explorer.aviaone.com/bitcanna",
      tx_page: "https://mainnet.explorer.aviaone.com/bitcanna/tx/${txHash}",
      account_page: "https://mainnet.explorer.aviaone.com/bitcanna/account/${accountAddress}"
    },
    {
      kind: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F",
      url: "https://explorer.nodeshub.online/bitcanna/",
      tx_page: "https://explorer.nodeshub.online/bitcanna/tx/${txHash}",
      account_page: "https://explorer.nodeshub.online/bitcanna/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitcanna/images/bcna.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitcanna/images/bcna.svg"
  }]
};
var chain_default17 = info47;

// node_modules/chain-registry/esm/mainnet/bitcanna/ibc.js
var info48 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-37",
      connection_id: "connection-40"
    },
    chain_2: {
      chain_name: "bitcanna",
      client_id: "07-tendermint-83",
      connection_id: "connection-74"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-35",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-50",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bitcanna",
      client_id: "07-tendermint-0",
      connection_id: "connection-19"
    },
    chain_2: {
      chain_name: "bitsong",
      client_id: "07-tendermint-1237",
      connection_id: "connection-1132"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-42",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bitcanna",
      client_id: "07-tendermint-4",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-490",
      connection_id: "connection-399"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-232",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bitcanna",
      client_id: "07-tendermint-12",
      connection_id: "connection-11"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-110",
      connection_id: "connection-70"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-50",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bitcanna",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1499",
      connection_id: "connection-1167"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  }
];
var ibc_default14 = info48;

// node_modules/chain-registry/esm/mainnet/bitcanna/index.js
var assets17 = assets_default17;
var chain17 = chain_default17;
var ibc14 = ibc_default14;

// node_modules/chain-registry/esm/mainnet/bitsong/assets.js
var info49 = {
  $schema: "../assetlist.schema.json",
  chain_name: "bitsong",
  assets: [
    {
      description: "BitSong Native Token",
      denom_units: [{
        denom: "ubtsg",
        exponent: 0
      }, {
        denom: "btsg",
        exponent: 6
      }],
      base: "ubtsg",
      name: "BitSong",
      display: "btsg",
      symbol: "BTSG",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/btsg.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/btsg.svg"
      },
      type_asset: "sdk.coin",
      coingecko_id: "bitsong",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/btsg.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/btsg.svg"
      }],
      socials: {
        website: "https://bitsong.io/",
        twitter: "https://twitter.com/BitSongOfficial"
      }
    },
    {
      description: "Adam Clay a BitSong Music FanToken",
      denom_units: [{
        denom: "ft2D8E7041556CE93E1EFD66C07C45D551A6AAAE09",
        exponent: 0
      }, {
        denom: "clay",
        exponent: 6
      }],
      base: "ft2D8E7041556CE93E1EFD66C07C45D551A6AAAE09",
      name: "Adam Clay FanToken",
      display: "clay",
      symbol: "CLAY",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft2D8E7041556CE93E1EFD66C07C45D551A6AAAE09.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft2D8E7041556CE93E1EFD66C07C45D551A6AAAE09.png"
      }]
    },
    {
      description: "Nicola Fasano a BitSong Music FanToken",
      denom_units: [{
        denom: "ft25B30C386CDDEBD1413D5AE1180956AE9EB3B9F7",
        exponent: 0
      }, {
        denom: "fasano",
        exponent: 6
      }],
      base: "ft25B30C386CDDEBD1413D5AE1180956AE9EB3B9F7",
      name: "Nicola Fasano Fantoken",
      display: "fasano",
      symbol: "FASANO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft25B30C386CDDEBD1413D5AE1180956AE9EB3B9F7.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft25B30C386CDDEBD1413D5AE1180956AE9EB3B9F7.png"
      }]
    },
    {
      description: "Delta 9 a BitSong Music FanToken",
      denom_units: [{
        denom: "ft575B10B0CEE2C164D9ED6A96313496F164A9607C",
        exponent: 0
      }, {
        denom: "d9x",
        exponent: 6
      }],
      base: "ft575B10B0CEE2C164D9ED6A96313496F164A9607C",
      name: "Delta 9 Fantoken",
      display: "d9x",
      symbol: "D9X",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft575B10B0CEE2C164D9ED6A96313496F164A9607C.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft575B10B0CEE2C164D9ED6A96313496F164A9607C.png"
      }]
    },
    {
      description: "FONTI a BitSong Music FanToken",
      denom_units: [{
        denom: "ft56664FC98A2CF5F4FBAC3566D1A11D891AD88305",
        exponent: 0
      }, {
        denom: "fonti",
        exponent: 6
      }],
      base: "ft56664FC98A2CF5F4FBAC3566D1A11D891AD88305",
      name: "FONTI Fantoken",
      display: "fonti",
      symbol: "FONTI",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft56664FC98A2CF5F4FBAC3566D1A11D891AD88305.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft56664FC98A2CF5F4FBAC3566D1A11D891AD88305.png"
      }]
    },
    {
      description: "BlackJack a BitSong Music FanToken",
      denom_units: [{
        denom: "ft52EEB0EE509AC546ED92EAC8591F731F213DDD16",
        exponent: 0
      }, {
        denom: "bjks",
        exponent: 6
      }],
      base: "ft52EEB0EE509AC546ED92EAC8591F731F213DDD16",
      name: "BlackJack Fantoken",
      display: "bjks",
      symbol: "BJKS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft52EEB0EE509AC546ED92EAC8591F731F213DDD16.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft52EEB0EE509AC546ED92EAC8591F731F213DDD16.png"
      }]
    },
    {
      description: "Rawanne a BitSong Music FanToken",
      denom_units: [{
        denom: "ftE4903ECC861CA45F2C2BC7EAB8255D2E6E87A33A",
        exponent: 0
      }, {
        denom: "rwne",
        exponent: 6
      }],
      base: "ftE4903ECC861CA45F2C2BC7EAB8255D2E6E87A33A",
      name: "Rawanne Fantoken",
      display: "rwne",
      symbol: "RWNE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ftE4903ECC861CA45F2C2BC7EAB8255D2E6E87A33A.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ftE4903ECC861CA45F2C2BC7EAB8255D2E6E87A33A.png"
      }]
    },
    {
      description: "Enmoda a BitSong Music FanToken",
      denom_units: [{
        denom: "ft85AE1716C5E39EA6D64BBD7898C3899A7B500626",
        exponent: 0
      }, {
        denom: "enmoda",
        exponent: 6
      }],
      base: "ft85AE1716C5E39EA6D64BBD7898C3899A7B500626",
      name: "Enmoda Fantoken",
      display: "enmoda",
      symbol: "ENMODA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft85AE1716C5E39EA6D64BBD7898C3899A7B500626.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft85AE1716C5E39EA6D64BBD7898C3899A7B500626.png"
      }]
    },
    {
      description: "404Deep Records a BitSong Music FanToken",
      denom_units: [{
        denom: "ft99091610CCC66F4277C66D14AF2BC4C5EE52E27A",
        exponent: 0
      }, {
        denom: "404dr",
        exponent: 6
      }],
      base: "ft99091610CCC66F4277C66D14AF2BC4C5EE52E27A",
      name: "404Deep Records Fantoken",
      display: "404dr",
      symbol: "404DR",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft99091610CCC66F4277C66D14AF2BC4C5EE52E27A.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft99091610CCC66F4277C66D14AF2BC4C5EE52E27A.png"
      }]
    },
    {
      description: "N43 a BitSong Music FanToken",
      denom_units: [{
        denom: "ft387C1C279D962ED80C09C1D592A92C4275FD7C5D",
        exponent: 0
      }, {
        denom: "n43",
        exponent: 6
      }],
      base: "ft387C1C279D962ED80C09C1D592A92C4275FD7C5D",
      name: "N43 Fantoken",
      display: "n43",
      symbol: "N43",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft387C1C279D962ED80C09C1D592A92C4275FD7C5D.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft387C1C279D962ED80C09C1D592A92C4275FD7C5D.png"
      }]
    },
    {
      description: "Puro Lobo a BitSong Music FanToken",
      denom_units: [{
        denom: "ft24C9FA4F10B0F235F4A815B15FC774E046A2B2EB",
        exponent: 0
      }, {
        denom: "lobo",
        exponent: 6
      }],
      base: "ft24C9FA4F10B0F235F4A815B15FC774E046A2B2EB",
      name: "Puro Lobo Fantoken",
      display: "lobo",
      symbol: "LOBO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft24C9FA4F10B0F235F4A815B15FC774E046A2B2EB.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft24C9FA4F10B0F235F4A815B15FC774E046A2B2EB.png"
      }]
    },
    {
      description: "Vibranium a BitSong Music FanToken",
      denom_units: [{
        denom: "ft7020C2A8E984EEBCBB383E91CD6FBB067BB2272B",
        exponent: 0
      }, {
        denom: "vibra",
        exponent: 6
      }],
      base: "ft7020C2A8E984EEBCBB383E91CD6FBB067BB2272B",
      name: "Vibranium Fantoken",
      display: "vibra",
      symbol: "VIBRA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft7020C2A8E984EEBCBB383E91CD6FBB067BB2272B.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft7020C2A8E984EEBCBB383E91CD6FBB067BB2272B.png"
      }]
    },
    {
      description: "Karina a BitSong Music FanToken",
      denom_units: [{
        denom: "ft2DD67F5D99E9A141142B48474FA7B6B3FF00A3FE",
        exponent: 0
      }, {
        denom: "karina",
        exponent: 6
      }],
      base: "ft2DD67F5D99E9A141142B48474FA7B6B3FF00A3FE",
      name: "Karina Fantoken",
      display: "karina",
      symbol: "KARINA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft2DD67F5D99E9A141142B48474FA7B6B3FF00A3FE.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft2DD67F5D99E9A141142B48474FA7B6B3FF00A3FE.png"
      }]
    },
    {
      description: "Luca Testa a BitSong Music FanToken",
      denom_units: [{
        denom: "ft4B030260D99E3ABE2B604EA2B33BAF3C085CDA12",
        exponent: 0
      }, {
        denom: "testa",
        exponent: 6
      }],
      base: "ft4B030260D99E3ABE2B604EA2B33BAF3C085CDA12",
      name: "Luca Testa Fantoken",
      display: "testa",
      symbol: "TESTA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft4B030260D99E3ABE2B604EA2B33BAF3C085CDA12.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft4B030260D99E3ABE2B604EA2B33BAF3C085CDA12.png"
      }]
    },
    {
      description: "Carolina Marquez a BitSong Music FanToken",
      denom_units: [{
        denom: "ftD4B6290EDEE1EC7B97AB5A1DC6C177EFD08ADCC3",
        exponent: 0
      }, {
        denom: "cmqz",
        exponent: 6
      }],
      base: "ftD4B6290EDEE1EC7B97AB5A1DC6C177EFD08ADCC3",
      name: "Carolina Marquez Fantoken",
      display: "cmqz",
      symbol: "CMQZ",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ftD4B6290EDEE1EC7B97AB5A1DC6C177EFD08ADCC3.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ftD4B6290EDEE1EC7B97AB5A1DC6C177EFD08ADCC3.png"
      }]
    },
    {
      deprecated: true,
      description: "[Redacted] a BitSong Music FanToken",
      denom_units: [{
        denom: "ft347B1612A2B7659913679CF6CD45B8B130C50A00",
        exponent: 0
      }, {
        denom: "ft347B1612A2B7659913679CF6CD45B8B130C50A00/6",
        exponent: 6
      }],
      base: "ft347B1612A2B7659913679CF6CD45B8B130C50A00",
      name: "[Redacted] Fantoken (ft3...A00)",
      display: "ft347B1612A2B7659913679CF6CD45B8B130C50A00/6",
      symbol: "LDON"
    }
  ]
};
var assets_default18 = info49;

// node_modules/chain-registry/esm/mainnet/bitsong/chain.js
var info50 = {
  $schema: "../chain.schema.json",
  chain_name: "bitsong",
  status: "live",
  network_type: "mainnet",
  website: "https://bitsong.io/",
  pretty_name: "BitSong",
  chain_id: "bitsong-2b",
  bech32_prefix: "bitsong",
  slip44: 639,
  daemon_name: "bitsongd",
  node_home: "$HOME/.bitsongd",
  codebase: {
    cosmos_sdk_version: "v0.45.16",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.33.0"
  },
  fees: {
    fee_tokens: [{
      denom: "ubtsg",
      fixed_min_gas_price: 0,
      low_gas_price: 3,
      average_gas_price: 10,
      high_gas_price: 20
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ubtsg"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/btsg.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/btsg.svg"
  },
  description: "Artists, Fans, Managers and Labels in One Single Holistic Ecosystem: $BTSG. Earn real-time royalties, discover exclusive content, mint and trade Fantokens, buy & sell NFTs.",
  apis: {
    rpc: [
      {
        address: "https://rpc-bitsong-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://rpc.explorebitsong.com",
        provider: "stake.systems"
      },
      {
        address: "https://bitsong-rpc.validatrium.club",
        provider: "Validatrium"
      },
      {
        address: "https://rpc.bitsong.chaintools.tech/",
        provider: "ChainTools"
      },
      {
        address: "https://rpc.bitsong.quokkastake.io",
        provider: "\u{1F439} Quokka Stake"
      },
      {
        address: "https://rpc-bitsong.starsquid.io",
        provider: "Starsquid"
      },
      {
        address: "https://rpc-bitsong.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "http://bitsong.statesync.nodersteam.com:11657",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://rpc.bitsong.safeblock.space",
        provider: "Safe Block"
      },
      {
        address: "https://bitsong.tdrsys.com:2053",
        provider: "TdrSys"
      },
      {
        address: "https://bitsong-rpc.panthea.eu",
        provider: "Panthea EU"
      },
      {
        address: "https://rpc.bitsong.mathnodes.com",
        provider: "MathNodes"
      },
      {
        address: "https://bitsong-rpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    rest: [
      {
        address: "https://api-bitsong-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://lcd.explorebitsong.com/",
        provider: "stake.systems"
      },
      {
        address: "https://bitsong-api.validatrium.club",
        provider: "Validatrium"
      },
      {
        address: "https://api.bitsong.quokkastake.io",
        provider: "\u{1F439} Quokka Stake"
      },
      {
        address: "http://bitsong.api.nodersteam.com:11017",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://api-bitsong.starsquid.io",
        provider: "Starsquid"
      },
      {
        address: "https://rest-bitsong.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "https://api.bitsong.safeblock.space",
        provider: "Safe Block"
      },
      {
        address: "https://bitsong.tdrsys.com",
        provider: "TdrSys"
      },
      {
        address: "https://bitsong-api.panthea.eu",
        provider: "Panthea EU"
      },
      {
        address: "https://api.bitsong.mathnodes.com",
        provider: "MathNodes"
      },
      {
        address: "https://bitsong-api.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://bitsong.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      }
    ],
    grpc: [
      {
        address: "grpc-bitsong-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "bitsong.grpc.nodersteam.com:9111/",
        provider: "[NODERS]TEAM"
      },
      {
        address: "grpc.bitsong.safeblock.space:9090",
        provider: "Safe Block"
      },
      {
        address: "bitsong-grpc.panthea.eu:16750",
        provider: "Panthea EU"
      },
      {
        address: "grpc.bitsong.mathnodes.com:9092",
        provider: "MathNodes"
      },
      {
        address: "bitsong-grpc.noders.services:20090",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/bitsong",
      tx_page: "https://ezstaking.app/bitsong/txs/${txHash}",
      account_page: "https://ezstaking.app/bitsong/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/bitsong",
      tx_page: "https://ping.pub/bitsong/tx/${txHash}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/bitsong",
      tx_page: "https://www.mintscan.io/bitsong/transactions/${txHash}",
      account_page: "https://www.mintscan.io/bitsong/accounts/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/bitsong",
      tx_page: "https://atomscan.com/bitsong/transactions/${txHash}",
      account_page: "https://atomscan.com/bitsong/accounts/${accountAddress}"
    },
    {
      kind: "Safe Block",
      url: "https://explorer.safeblok.space/bitsong",
      tx_page: "https://explorer.safeblock.space/bitsong/tx/${txHash}",
      account_page: "https://explorer.safeblock.space/bitsong/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Bitsong",
      tx_page: "https://explorer.stavr.tech/Bitsong/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Bitsong/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/btsg.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/btsg.svg"
  }]
};
var chain_default18 = info50;

// node_modules/chain-registry/esm/mainnet/bitsong/ibc.js
var info51 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-92",
      connection_id: "connection-90"
    },
    chain_2: {
      chain_name: "bitsong",
      client_id: "07-tendermint-80",
      connection_id: "connection-55"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-124",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-29",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-207",
      connection_id: "connection-188"
    },
    chain_2: {
      chain_name: "bitsong",
      client_id: "07-tendermint-81",
      connection_id: "connection-56"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-145",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-30",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bitcanna",
      client_id: "07-tendermint-0",
      connection_id: "connection-19"
    },
    chain_2: {
      chain_name: "bitsong",
      client_id: "07-tendermint-1237",
      connection_id: "connection-1132"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-42",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bitsong",
      client_id: "07-tendermint-1",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-481",
      connection_id: "connection-395"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-229",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bitsong",
      client_id: "07-tendermint-9",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-33",
      connection_id: "connection-26"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bitsong",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1551",
      connection_id: "connection-1216"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-73",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  }
];
var ibc_default15 = info51;

// node_modules/chain-registry/esm/mainnet/bitsong/index.js
var assets18 = assets_default18;
var chain18 = chain_default18;
var ibc15 = ibc_default15;

// node_modules/chain-registry/esm/mainnet/bluechip/assets.js
var info52 = {
  $schema: "../assetlist.schema.json",
  chain_name: "bluechip",
  assets: [{
    description: "The native staking token of BlueChip.",
    denom_units: [{
      denom: "ubluechip",
      exponent: 0
    }, {
      denom: "bcp",
      exponent: 6
    }],
    base: "ubluechip",
    name: "blue chip",
    display: "bcp",
    symbol: "BCP",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bluechip/images/bluechip.png"
    }]
  }]
};
var assets_default19 = info52;

// node_modules/chain-registry/esm/mainnet/bluechip/chain.js
var info53 = {
  $schema: "../chain.schema.json",
  chain_name: "bluechip",
  status: "live",
  website: "https://www.bluechip.link",
  network_type: "mainnet",
  pretty_name: "BlueChip",
  chain_id: "bluechip-1",
  bech32_prefix: "bcp",
  daemon_name: "bluechipd",
  node_home: "$HOME/.bluechip",
  slip44: 118,
  key_algos: ["secp256k1"],
  fees: {
    fee_tokens: [{
      denom: "ubluechip",
      fixed_min_gas_price: 0,
      low_gas_price: 0,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ubluechip"
    }]
  },
  description: "Stake to the BlueChip chain, interact with the creator pools, and subscribe through the creator subscription contracts.",
  codebase: {
    cosmos_sdk_version: "0.46.7",
    cosmwasm_enabled: true
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bluechip/images/bluechip.png"
  }]
};
var chain_default19 = info53;

// node_modules/chain-registry/esm/mainnet/bluechip/index.js
var assets19 = assets_default19;
var chain19 = chain_default19;

// node_modules/chain-registry/esm/mainnet/bluzelle/assets.js
var info54 = {
  $schema: "../assetlist.schema.json",
  chain_name: "bluzelle",
  assets: [
    {
      description: "The native token of Bluzelle",
      denom_units: [{
        denom: "ubnt",
        exponent: 0
      }, {
        denom: "bnt",
        exponent: 6,
        aliases: ["blz"]
      }],
      base: "ubnt",
      name: "Bluzelle",
      display: "bnt",
      symbol: "BLZ",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bluzelle/images/bluzelle.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bluzelle/images/bluzelle.svg"
      },
      coingecko_id: "bluzelle",
      keywords: ["bluzelle", "game"],
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bluzelle/images/bluzelle.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bluzelle/images/bluzelle.svg"
      }],
      socials: {
        website: "http://bluzelle.com/",
        twitter: "https://twitter.com/BluzelleHQ"
      }
    },
    {
      description: "The ELT token of Bluzelle's Gamma 4 Gaming Ecosystem",
      denom_units: [{
        denom: "uelt",
        exponent: 0
      }, {
        denom: "elt",
        exponent: 6
      }],
      base: "uelt",
      name: "ELT",
      display: "elt",
      symbol: "ELT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bluzelle/images/elt.png"
      },
      keywords: ["elt"],
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bluzelle/images/elt.png"
      }]
    },
    {
      description: "The game token of Bluzelle's Gamma 4 Gaming Ecosystem",
      denom_units: [{
        denom: "ug4",
        exponent: 0
      }, {
        denom: "g4",
        exponent: 6
      }],
      base: "ug4",
      name: "G4",
      display: "g4",
      symbol: "G4",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bluzelle/images/g4.png"
      },
      keywords: ["g4"],
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bluzelle/images/g4.png"
      }]
    }
  ]
};
var assets_default20 = info54;

// node_modules/chain-registry/esm/mainnet/bluzelle/chain.js
var info55 = {
  $schema: "../chain.schema.json",
  chain_name: "bluzelle",
  status: "live",
  network_type: "mainnet",
  website: "https://bluzelle.com/",
  pretty_name: "Bluzelle",
  chain_id: "bluzelle-9",
  bech32_prefix: "bluzelle",
  daemon_name: "curiumd",
  node_home: "$HOME/.curium",
  key_algos: ["secp256k1"],
  slip44: 483,
  fees: {
    fee_tokens: [{
      denom: "ubnt",
      fixed_min_gas_price: 2e-3,
      low_gas_price: 2e-3,
      average_gas_price: 2e-3,
      high_gas_price: 0.025
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ubnt"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "v0.45.11"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bluzelle/images/bluzelle.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bluzelle/images/bluzelle.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://a.client.sentry.net.bluzelle.com:26657",
        provider: "Bluzelle"
      },
      {
        address: "https://b.client.sentry.net.bluzelle.com:26657",
        provider: "Bluzelle"
      },
      {
        address: "https://c.client.sentry.net.bluzelle.com:26657",
        provider: "Bluzelle"
      }
    ],
    rest: [
      {
        address: "https://a.client.sentry.net.bluzelle.com:1317",
        provider: "Bluzelle"
      },
      {
        address: "https://b.client.sentry.net.bluzelle.com:1317",
        provider: "Bluzelle"
      },
      {
        address: "https://c.client.sentry.net.bluzelle.com:1317",
        provider: "Bluzelle"
      },
      {
        address: "https://bluzelle-api.genznodes.dev/",
        provider: "genznodes"
      }
    ],
    grpc: [
      {
        address: "a.client.sentry.net.bluzelle.com:9090",
        provider: "Bluzelle"
      },
      {
        address: "b.client.sentry.net.bluzelle.com:9090",
        provider: "Bluzelle"
      },
      {
        address: "c.client.sentry.net.bluzelle.com:9090",
        provider: "Bluzelle"
      },
      {
        address: "bluzelle-grpc.genznodes.dev:34090",
        provider: "genznodes"
      },
      {
        address: "https://grpc-curium.nodine.id:443",
        provider: "Nodine.ID"
      }
    ]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://ping.explorer.net.bluzelle.com/bluzelle",
      tx_page: "https://ping.explorer.net.bluzelle.com/bluzelle/tx/${txHash}",
      account_page: "https://ping.explorer.net.bluzelle.com/bluzelle/account/${accountAddress}"
    },
    {
      kind: "big dipper",
      url: "https://bd.explorer.net.bluzelle.com",
      tx_page: "https://bd.explorer.net.bluzelle.com/transactions/${txHash}",
      account_page: "https://bd.explorer.net.bluzelle.com/accounts/${accountAddress}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/bluzelle",
      tx_page: "https://explorer.tcnetwork.io/bluzelle/transaction/${txHash}"
    },
    {
      kind: "Nodine.ID",
      url: "https://explorer.co.id/bluzelle",
      tx_page: "https://explorer.co.id/bluzelle/transaction/${txHash}"
    }
  ],
  keywords: [
    "bluzelle",
    "game",
    "gamma4",
    "nft"
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bluzelle/images/bluzelle.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bluzelle/images/bluzelle.svg"
  }]
};
var chain_default20 = info55;

// node_modules/chain-registry/esm/mainnet/bluzelle/ibc.js
var info56 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "bluzelle",
    client_id: "07-tendermint-0",
    connection_id: "connection-0"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2754",
    connection_id: "connection-2273"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-763",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default16 = info56;

// node_modules/chain-registry/esm/mainnet/bluzelle/index.js
var assets20 = assets_default20;
var chain20 = chain_default20;
var ibc16 = ibc_default16;

// node_modules/chain-registry/esm/mainnet/bostrom/assets.js
var info57 = {
  $schema: "../assetlist.schema.json",
  chain_name: "bostrom",
  assets: [
    {
      description: "The staking token of Bostrom",
      denom_units: [{
        denom: "boot",
        exponent: 0,
        aliases: ["boot"]
      }],
      base: "boot",
      name: "Bostrom",
      display: "boot",
      symbol: "BOOT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/boot.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/boot.svg"
      },
      coingecko_id: "bostrom",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/boot.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/boot.svg"
      }]
    },
    {
      description: "The liquid staking token of Bostrom",
      denom_units: [{
        denom: "hydrogen",
        exponent: 0,
        aliases: ["hydrogen"]
      }],
      base: "hydrogen",
      name: "Bostrom Hydrogen",
      display: "hydrogen",
      symbol: "HYDROGEN",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/hydrogen.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/hydrogen.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/hydrogen.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/hydrogen.svg"
      }]
    },
    {
      description: "The resource token of Bostrom",
      denom_units: [{
        denom: "milliampere",
        exponent: 0,
        aliases: ["milliampere"]
      }, {
        denom: "ampere",
        exponent: 3,
        aliases: ["ampere"]
      }],
      base: "milliampere",
      name: "Bostrom Ampere",
      display: "ampere",
      symbol: "A",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/ampere.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/ampere.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/ampere.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/ampere.svg"
      }]
    },
    {
      description: "The resource token of Bostrom",
      denom_units: [{
        denom: "millivolt",
        exponent: 0,
        aliases: ["millivolt"]
      }, {
        denom: "volt",
        exponent: 3,
        aliases: ["volt"]
      }],
      base: "millivolt",
      name: "Bostrom Volt",
      display: "volt",
      symbol: "V",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/volt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/volt.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/volt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/volt.svg"
      }]
    },
    {
      description: "The staking token of Cyber",
      denom_units: [{
        denom: "tocyb",
        exponent: 0,
        aliases: ["tocyb"]
      }],
      base: "tocyb",
      name: "Bostrom Tocyb",
      display: "tocyb",
      symbol: "TOCYB",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/tocyb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/tocyb.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/tocyb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/tocyb.svg"
      }]
    }
  ]
};
var assets_default21 = info57;

// node_modules/chain-registry/esm/mainnet/bostrom/chain.js
var info58 = {
  $schema: "../chain.schema.json",
  chain_name: "bostrom",
  status: "live",
  network_type: "mainnet",
  pretty_name: "bostrom",
  chain_id: "bostrom",
  bech32_prefix: "bostrom",
  daemon_name: "cyber",
  node_home: "$HOME/.cyber",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "boot",
      low_gas_price: 0,
      average_gas_price: 0,
      high_gas_price: 0.01
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "boot"
    }]
  },
  codebase: {
    cosmwasm_enabled: true
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/boot.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/boot.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.bostrom.cybernode.ai",
        provider: "cybercongress"
      },
      {
        address: "https://rpc-cyber-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://rpc.cyber.bronbro.io:443",
        provider: "Bro_n_Bro"
      }
    ],
    rest: [
      {
        address: "https://lcd.bostrom.cybernode.ai",
        provider: "cybercongress"
      },
      {
        address: "https://api-cyber-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://lcd.cyber.bronbro.io:443",
        provider: "Bro_n_Bro"
      }
    ],
    grpc: [{
      address: "grpc-cyber-ia.cosmosia.notional.ventures:443",
      provider: "Notional"
    }, {
      address: "https://grpc.cyber.bronbro.io:443",
      provider: "Bro_n_Bro"
    }]
  },
  explorers: [
    {
      kind: "cyb",
      url: "https://cyb.ai/",
      tx_page: "https://cyb.ai/network/bostrom/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/bostrom",
      tx_page: "https://ping.pub/bostrom/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/bostrom",
      tx_page: "https://atomscan.com/bostrom/transactions/${txHash}",
      account_page: "https://atomscan.com/bostrom/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/boot.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/boot.svg"
  }]
};
var chain_default21 = info58;

// node_modules/chain-registry/esm/mainnet/bostrom/ibc.js
var info59 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "bostrom",
    client_id: "07-tendermint-5",
    connection_id: "connection-2"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-1597",
    connection_id: "connection-1255"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-2",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-95",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default17 = info59;

// node_modules/chain-registry/esm/mainnet/bostrom/index.js
var assets21 = assets_default21;
var chain21 = chain_default21;
var ibc17 = ibc_default17;

// node_modules/chain-registry/esm/mainnet/canto/assets.js
var info60 = {
  $schema: "../assetlist.schema.json",
  chain_name: "canto",
  assets: [{
    description: "Canto is a Layer-1 blockchain built to deliver on the promise of DeFi",
    denom_units: [{
      denom: "acanto",
      exponent: 0
    }, {
      denom: "canto",
      exponent: 18
    }],
    base: "acanto",
    name: "Canto",
    display: "canto",
    symbol: "CANTO",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/canto/images/canto.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/canto/images/canto.svg"
    },
    coingecko_id: "canto",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/canto/images/canto.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/canto/images/canto.svg"
    }],
    socials: {
      website: "https://canto.io/",
      twitter: "https://twitter.com/CantoPublic"
    }
  }, {
    description: "Tether USDt on Canto",
    denom_units: [{
      denom: "ibc/FAFF3F7B2FE30447544A27910DF77069763CF25472BFCF63A9E7C81F0AD545AC",
      exponent: 0
    }, {
      denom: "usdt",
      exponent: 6
    }],
    type_asset: "ics20",
    base: "ibc/FAFF3F7B2FE30447544A27910DF77069763CF25472BFCF63A9E7C81F0AD545AC",
    name: "Tether USDt",
    display: "usdt",
    symbol: "USDt",
    traces: [{
      type: "ibc",
      counterparty: {
        chain_name: "kava",
        base_denom: "erc20/tether/usdt",
        channel_id: "channel-87"
      },
      chain: {
        channel_id: "channel-13",
        path: "transfer/channel-13/erc20/tether/usdt"
      }
    }],
    images: [{
      image_sync: {
        chain_name: "kava",
        base_denom: "erc20/tether/usdt"
      },
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
      theme: {
        circle: true,
        primary_color_hex: "#009393",
        background_color_hex: "#009393"
      }
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
    }
  }]
};
var assets_default22 = info60;

// node_modules/chain-registry/esm/mainnet/canto/chain.js
var info61 = {
  $schema: "../chain.schema.json",
  chain_name: "canto",
  status: "live",
  network_type: "mainnet",
  website: "https://canto.io/",
  pretty_name: "Canto",
  chain_id: "canto_7700-1",
  bech32_prefix: "canto",
  node_home: "$HOME/.cantod",
  daemon_name: "cantod",
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "acanto",
      fixed_min_gas_price: 1e12,
      low_gas_price: 1e12,
      average_gas_price: 2e12,
      high_gas_price: 3e12
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "acanto"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/canto/images/canto.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/canto/images/canto.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.canto.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://canto-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://rpc.canto.silentvalidator.com/",
        provider: "silent"
      },
      {
        address: "https://canto.gravitychain.io:26657",
        provider: "Althea"
      },
      {
        address: "https://canto-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rpc-canto.kewrnode.com",
        provider: "Kewr Node"
      }
    ],
    rest: [
      {
        address: "https://api.canto.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://canto-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://api.canto.silentvalidator.com/",
        provider: "silent"
      },
      {
        address: "https://canto-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rest-canto.kewrnode.com",
        provider: "Kewr Node"
      }
    ],
    grpc: [
      {
        address: "canto-grpc.polkachu.com:15590",
        provider: "Polkachu"
      },
      {
        address: "grpc.canto.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "https://grpc.canto.silentvalidator.com/",
        provider: "silent"
      },
      {
        address: "https://canto.gravitychain.io:9090",
        provider: "Althea"
      },
      {
        address: "canto-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      }
    ],
    "evm-http-jsonrpc": [
      {
        address: "https://canto.neobase.one/",
        provider: "NeoBase"
      },
      {
        address: "https://canto.evm.chandrastation.com",
        provider: "Chandra Station"
      },
      {
        address: "https://canto.slingshot.finance",
        provider: "Slingshot"
      },
      {
        address: "https://jsonrpc.canto.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://evm-rpc.canto.silentvalidator.com/",
        provider: "silent"
      },
      {
        address: "https://canto.gravitychain.io:8545",
        provider: "althea"
      }
    ]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://cosmos-explorers.neobase.one/canto",
      tx_page: "https://cosmos-explorers.neobase.one/canto/tx/${txHash}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/canto",
      tx_page: "https://explorer.tcnetwork.io/canto/transaction/${txHash}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/canto",
      tx_page: "https://ezstaking.app/canto/txs/${txHash}",
      account_page: "https://ezstaking.app/canto/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Canto-Mainnet",
      tx_page: "https://explorer.stavr.tech/Canto-Mainnet/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Canto-Mainnet/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/canto/images/canto.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/canto/images/canto.svg"
  }]
};
var chain_default22 = info61;

// node_modules/chain-registry/esm/mainnet/canto/ibc.js
var info62 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "canto",
      client_id: "07-tendermint-10",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "carbon",
      client_id: "07-tendermint-40",
      connection_id: "connection-23"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "demex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "canto",
      client_id: "07-tendermint-38",
      connection_id: "connection-32"
    },
    chain_2: {
      chain_name: "composable",
      client_id: "07-tendermint-50",
      connection_id: "connection-19"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "canto",
      client_id: "07-tendermint-9",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2481",
      connection_id: "connection-2017"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-550",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  }
];
var ibc_default18 = info62;

// node_modules/chain-registry/esm/mainnet/canto/index.js
var assets22 = assets_default22;
var chain22 = chain_default22;
var ibc18 = ibc_default18;

// node_modules/chain-registry/esm/mainnet/carbon/assets.js
var info63 = {
  $schema: "../assetlist.schema.json",
  chain_name: "carbon",
  assets: [
    {
      description: "The native governance token of Carbon",
      denom_units: [{
        denom: "swth",
        exponent: 0
      }, {
        denom: "dswth",
        exponent: 8,
        aliases: ["SWTH"]
      }],
      type_asset: "sdk.coin",
      base: "swth",
      name: "Carbon",
      display: "dswth",
      symbol: "SWTH",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/swth.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/swth.svg"
      },
      coingecko_id: "switcheo",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/swth.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/swth.svg"
      }]
    },
    {
      description: "The native stablecoin of Carbon",
      denom_units: [{
        denom: "usc",
        exponent: 0
      }, {
        denom: "dusc",
        exponent: 8,
        aliases: ["USC"]
      }],
      type_asset: "sdk.coin",
      base: "usc",
      name: "Carbon USD Coin",
      display: "dusc",
      symbol: "USC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/usc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/usc.svg"
      },
      coingecko_id: "carbon-usd",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/usc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/usc.svg"
      }]
    },
    {
      description: "BNB token on Carbon",
      denom_units: [{
        denom: "bnb.1.6.773edb",
        exponent: 0
      }, {
        denom: "bnb",
        exponent: 18,
        aliases: ["BNB"]
      }],
      base: "bnb.1.6.773edb",
      name: "Binance Coin",
      display: "bnb",
      symbol: "BNB",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "binancesmartchain",
          base_denom: "wei",
          contract: "0xb5D4f343412dC8efb6ff599d790074D0f1e8D430"
        },
        chain: {
          contract: "0xb5D4f343412dC8efb6ff599d790074D0f1e8D430"
        },
        provider: "PolyNetwork"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/bnb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/bnb.svg"
      },
      images: [{
        image_sync: {
          chain_name: "binancesmartchain",
          base_denom: "wei"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/bnb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/bnb.svg"
      }]
    },
    {
      description: "bNEO token on Carbon",
      denom_units: [{
        denom: "bneo.1.14.e2e5f6",
        exponent: 0
      }, {
        denom: "bneo",
        exponent: 8,
        aliases: ["bNEO"]
      }],
      base: "bneo.1.14.e2e5f6",
      name: "BurgerNEO",
      display: "bneo",
      symbol: "bNEO",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "neo",
          base_denom: "0x48c40d4666f93408be1bef038b6722404d9a4c2a",
          contract: "0x8eb3bdf5ed4ac1516d316c6b1b207a3cf5eb7567"
        },
        chain: {
          contract: "0x8eb3bdf5ed4ac1516d316c6b1b207a3cf5eb7567"
        },
        provider: "PolyNetwork"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/bneo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/bneo.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/bneo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/bneo.svg"
      }]
    },
    {
      description: "BUSD (BEP-20) token on Carbon",
      denom_units: [{
        denom: "busd.1.6.754a80",
        exponent: 0
      }, {
        denom: "busd",
        exponent: 18,
        aliases: ["BUSD"]
      }],
      base: "busd.1.6.754a80",
      name: "BUSD (BEP-20)",
      display: "busd",
      symbol: "BUSD",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "binancesmartchain",
          base_denom: "0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56",
          contract: "0xb5D4f343412dC8efb6ff599d790074D0f1e8D430"
        },
        chain: {
          contract: "0xb5D4f343412dC8efb6ff599d790074D0f1e8D430"
        },
        provider: "PolyNetwork"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/busd.png"
      },
      images: [{
        image_sync: {
          chain_name: "binancesmartchain",
          base_denom: "0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/busd.png"
      }]
    },
    {
      description: "Carbon Wrapped GLP on Carbon",
      denom_units: [{
        denom: "cglp.1.19.1698d3",
        exponent: 0
      }, {
        denom: "cglp",
        exponent: 18,
        aliases: ["CGLP"]
      }],
      base: "cglp.1.19.1698d3",
      name: "Carbon Wrapped GLP",
      display: "cglp",
      symbol: "CGLP",
      traces: [{
        type: "wrapped",
        counterparty: {
          chain_name: "arbitrum",
          base_denom: "0xab19bdaeb37242fa0f30486195f45b9cf5361b78",
          contract: "0xb1e6f8820826491fcc5519f84ff4e2bdbb6e3cad"
        },
        chain: {
          contract: "0xb1e6f8820826491fcc5519f84ff4e2bdbb6e3cad"
        },
        provider: "PolyNetwork"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/cglp.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/cglp.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/cglp.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/cglp.svg"
      }]
    },
    {
      description: "Grouped USD on Carbon",
      denom_units: [{
        denom: "cgt/1",
        exponent: 0
      }, {
        denom: "usd",
        exponent: 18,
        aliases: ["USD"]
      }],
      base: "cgt/1",
      name: "Carbon Grouped USD",
      display: "usd",
      symbol: "USD",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/carbon-grouped-usd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/carbon-grouped-usd.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/carbon-grouped-usd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/carbon-grouped-usd.svg"
      }]
    },
    {
      description: "ETH (Arbitrum) token on Carbon",
      denom_units: [{
        denom: "eth.1.19.c3b805",
        exponent: 0
      }, {
        denom: "eth",
        exponent: 18,
        aliases: ["ETH"]
      }],
      base: "eth.1.19.c3b805",
      name: "Ethereum (Arbitrum)",
      display: "eth",
      symbol: "ETH",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "arbitrum",
          base_denom: "wei",
          contract: "0xb1e6f8820826491fcc5519f84ff4e2bdbb6e3cad"
        },
        chain: {
          contract: "0xb1e6f8820826491fcc5519f84ff4e2bdbb6e3cad"
        },
        provider: "PolyNetwork"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth.svg"
      }]
    },
    {
      description: "ETH (ERC20) token on Carbon",
      denom_units: [{
        denom: "eth.1.2.942d87",
        exponent: 0
      }, {
        denom: "eth",
        exponent: 18,
        aliases: ["ETH"]
      }],
      base: "eth.1.2.942d87",
      name: "Ethereum (ERC20)",
      display: "eth",
      symbol: "ETH",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "wei",
          contract: "0x9a016ce184a22dbf6c17daa59eb7d3140dbd1c54"
        },
        chain: {
          contract: "0x9a016ce184a22dbf6c17daa59eb7d3140dbd1c54"
        },
        provider: "PolyNetwork"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth.svg"
      }]
    },
    {
      description: "STARS token on Carbon",
      denom_units: [{
        denom: "ibc/07FA7831E1920D0C87C9388F86B0108677F6ED0C9DE7E4063F05ED675192405C",
        exponent: 0
      }, {
        denom: "stars",
        exponent: 6,
        aliases: ["STARS"]
      }],
      type_asset: "ics20",
      base: "ibc/07FA7831E1920D0C87C9388F86B0108677F6ED0C9DE7E4063F05ED675192405C",
      name: "Stargaze Staking Coin",
      display: "stars",
      symbol: "STARS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "stargaze",
          base_denom: "ustars",
          channel_id: "channel-123"
        },
        chain: {
          channel_id: "channel-15",
          path: "transfer/channel-15/ustars"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stargaze",
          base_denom: "ustars"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.svg"
      }]
    },
    {
      description: "LUNA token on Carbon",
      denom_units: [{
        denom: "ibc/2B58B8C147E8718EECCB3713271DF46DEE8A3A00A27242628604E31C2F370EF5",
        exponent: 0
      }, {
        denom: "luna",
        exponent: 6,
        aliases: ["LUNA"]
      }],
      type_asset: "ics20",
      base: "ibc/2B58B8C147E8718EECCB3713271DF46DEE8A3A00A27242628604E31C2F370EF5",
      name: "Terra Staking Coin",
      display: "luna",
      symbol: "LUNA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "terra2",
          base_denom: "uluna",
          channel_id: "channel-36"
        },
        chain: {
          channel_id: "channel-12",
          path: "transfer/channel-12/uluna"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.svg"
      },
      images: [{
        image_sync: {
          chain_name: "terra2",
          base_denom: "uluna"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.svg"
      }]
    },
    {
      description: "TIA token on Carbon",
      denom_units: [{
        denom: "ibc/6C349F0EB135C5FA99301758F35B87DB88403D690E5E314AB080401FEE4066E5",
        exponent: 0,
        aliases: ["utia"]
      }, {
        denom: "tia",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/6C349F0EB135C5FA99301758F35B87DB88403D690E5E314AB080401FEE4066E5",
      name: "Celestia TIA",
      display: "tia",
      symbol: "TIA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/D79E7D83AB399BFFF93433E54FAA480C191248FC556924A2A8351AE2638B3877",
          channel_id: "channel-188"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-6994/utia"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "celestia",
          base_denom: "utia"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.svg"
      }
    },
    {
      description: "MilkTIA token on Carbon",
      denom_units: [{
        denom: "ibc/16065EE5282C5217685C8F084FC44864C25C706AC37356B0D62811D50B96920F",
        exponent: 0,
        aliases: ["umilkTIA"]
      }, {
        denom: "milkTIA",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/16065EE5282C5217685C8F084FC44864C25C706AC37356B0D62811D50B96920F",
      name: "milkTIA",
      display: "milkTIA",
      symbol: "milkTIA",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1f5vfcph2dvfeqcqkhetwv75fda69z7e5c2dldm3kvgj23crkv6wqcn47a0/umilkTIA"
        },
        provider: "MilkyWay"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/milktia.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/milktia.svg"
      },
      coingecko_id: "milkyway-staked-tia",
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1f5vfcph2dvfeqcqkhetwv75fda69z7e5c2dldm3kvgj23crkv6wqcn47a0/umilkTIA"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/milktia.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/milktia.svg"
      }]
    },
    {
      description: "STRD token on Carbon",
      denom_units: [{
        denom: "ibc/3552CECB7BCE1891DB6070D37EC6E954C972B1400141308FCD85FD148BD06DE5",
        exponent: 0
      }, {
        denom: "strd",
        exponent: 6,
        aliases: ["STRD"]
      }],
      type_asset: "ics20",
      base: "ibc/3552CECB7BCE1891DB6070D37EC6E954C972B1400141308FCD85FD148BD06DE5",
      name: "Stride",
      display: "strd",
      symbol: "STRD",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "stride",
          base_denom: "ustrd",
          channel_id: "channel-47"
        },
        chain: {
          channel_id: "channel-8",
          path: "transfer/channel-8/ustrd"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stride",
          base_denom: "ustrd"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.svg"
      }]
    },
    {
      description: "EVMOS token on Carbon",
      denom_units: [{
        denom: "ibc/35E771B8682D828173F4B795F6C307780F96DC64D6F914FAE4CC9B4666F66364",
        exponent: 0
      }, {
        denom: "evmos",
        exponent: 18,
        aliases: ["EVMOS"]
      }],
      type_asset: "ics20",
      base: "ibc/35E771B8682D828173F4B795F6C307780F96DC64D6F914FAE4CC9B4666F66364",
      name: "Evmos",
      display: "evmos",
      symbol: "EVMOS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "evmos",
          base_denom: "aevmos",
          channel_id: "channel-23"
        },
        chain: {
          channel_id: "channel-6",
          path: "transfer/channel-6/aevmos"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.svg"
      },
      images: [{
        image_sync: {
          chain_name: "evmos",
          base_denom: "aevmos"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.svg"
      }]
    },
    {
      description: "IRIS token on Carbon",
      denom_units: [{
        denom: "ibc/4E06CF24FEBFB3F5AF645377DCC0B70AA6183BAF6B918B8B6243FCDEB7D38118",
        exponent: 0
      }, {
        denom: "iris",
        exponent: 6,
        aliases: ["IRIS"]
      }],
      type_asset: "ics20",
      base: "ibc/4E06CF24FEBFB3F5AF645377DCC0B70AA6183BAF6B918B8B6243FCDEB7D38118",
      name: "IRIS Hub Staking Coin",
      display: "iris",
      symbol: "IRIS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "irisnet",
          base_denom: "uiris",
          channel_id: "channel-68"
        },
        chain: {
          channel_id: "channel-28",
          path: "transfer/channel-28/uiris"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/irisnet/images/iris.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/irisnet/images/iris.svg"
      },
      images: [{
        image_sync: {
          chain_name: "irisnet",
          base_denom: "uiris"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/irisnet/images/iris.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/irisnet/images/iris.svg"
      }]
    },
    {
      description: "KUJI token on Carbon",
      denom_units: [{
        denom: "ibc/662914D0C1CEBCB070C68F061D035E8B10A07C79AB286E7342C85F3BE74612C5",
        exponent: 0
      }, {
        denom: "kuji",
        exponent: 6,
        aliases: ["KUJI"]
      }],
      type_asset: "ics20",
      base: "ibc/662914D0C1CEBCB070C68F061D035E8B10A07C79AB286E7342C85F3BE74612C5",
      name: "Kujira",
      display: "kuji",
      symbol: "KUJI",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kujira",
          base_denom: "ukuji",
          channel_id: "channel-46"
        },
        chain: {
          channel_id: "channel-9",
          path: "transfer/channel-9/ukuji"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kuji.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kuji.svg"
      },
      images: [{
        image_sync: {
          chain_name: "kujira",
          base_denom: "ukuji"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kuji.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kuji.svg"
      }]
    },
    {
      description: "stOSMO token on Carbon",
      denom_units: [{
        denom: "ibc/75249A18DEFBEFE55F83B1C70CAD234DF164F174C6BC51682EE92C2C81C18C93",
        exponent: 0
      }, {
        denom: "stosmo",
        exponent: 6,
        aliases: ["stOSMO"]
      }],
      type_asset: "ics20",
      base: "ibc/75249A18DEFBEFE55F83B1C70CAD234DF164F174C6BC51682EE92C2C81C18C93",
      name: "Stride Staked OSMO",
      display: "stosmo",
      symbol: "stOSMO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "stride",
          base_denom: "stuosmo",
          channel_id: "channel-47"
        },
        chain: {
          channel_id: "channel-8",
          path: "transfer/channel-8/stuosmo"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stride",
          base_denom: "stuosmo"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.svg"
      }]
    },
    {
      description: "CANTO token on Carbon",
      denom_units: [{
        denom: "ibc/92E974290AF9E2BC3AEEEC35305C8FD76AC5A22A74CF8D91270FDF5A1C41E861",
        exponent: 0
      }, {
        denom: "canto",
        exponent: 18,
        aliases: ["CANTO"]
      }],
      type_asset: "ics20",
      base: "ibc/92E974290AF9E2BC3AEEEC35305C8FD76AC5A22A74CF8D91270FDF5A1C41E861",
      name: "Canto",
      display: "canto",
      symbol: "CANTO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "canto",
          base_denom: "acanto",
          channel_id: "channel-6"
        },
        chain: {
          channel_id: "channel-18",
          path: "transfer/channel-18/acanto"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/canto/images/canto.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/canto/images/canto.svg"
      },
      images: [{
        image_sync: {
          chain_name: "canto",
          base_denom: "acanto"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/canto/images/canto.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/canto/images/canto.svg"
      }]
    },
    {
      description: "Cosmos governance token on Carbon",
      denom_units: [{
        denom: "ibc/A4DB47A9D3CF9A068D454513891B526702455D3EF08FB9EB558C561F9DC2B701",
        exponent: 0
      }, {
        denom: "atom",
        exponent: 6,
        aliases: ["ATOM"]
      }],
      type_asset: "ics20",
      base: "ibc/A4DB47A9D3CF9A068D454513891B526702455D3EF08FB9EB558C561F9DC2B701",
      name: "Cosmos",
      display: "atom",
      symbol: "ATOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "cosmoshub",
          base_denom: "uatom",
          channel_id: "channel-342"
        },
        chain: {
          channel_id: "channel-3",
          path: "transfer/channel-3/uatom"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      },
      images: [{
        image_sync: {
          chain_name: "cosmoshub",
          base_denom: "uatom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }]
    },
    {
      description: "stATOM token on Carbon",
      denom_units: [{
        denom: "ibc/B7864B03E1B9FD4F049243E92ABD691586F682137037A9F3FCA5222815620B3C",
        exponent: 0
      }, {
        denom: "statom",
        exponent: 6,
        aliases: ["stATOM"]
      }],
      type_asset: "ics20",
      base: "ibc/B7864B03E1B9FD4F049243E92ABD691586F682137037A9F3FCA5222815620B3C",
      name: "Stride Staked ATOM",
      display: "statom",
      symbol: "stATOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "stride",
          base_denom: "stuatom",
          channel_id: "channel-47"
        },
        chain: {
          channel_id: "channel-8",
          path: "transfer/channel-8/stuatom"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stride",
          base_denom: "stuatom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.svg"
      }]
    },
    {
      description: "OSMO token on Carbon",
      denom_units: [{
        denom: "ibc/ED07A3391A112B175915CD8FAF43A2DA8E4790EDE12566649D0C2F97716B8518",
        exponent: 0
      }, {
        denom: "osmo",
        exponent: 6,
        aliases: ["OSMO"]
      }],
      type_asset: "ics20",
      base: "ibc/ED07A3391A112B175915CD8FAF43A2DA8E4790EDE12566649D0C2F97716B8518",
      name: "Osmosis",
      display: "osmo",
      symbol: "OSMO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "uosmo",
          channel_id: "channel-188"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/uosmo"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      },
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "uosmo"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      }]
    },
    {
      description: "USDC (ERC20) token on Carbon",
      denom_units: [{
        denom: "usdc.1.2.343151",
        exponent: 0
      }, {
        denom: "usdc",
        exponent: 6,
        aliases: ["USDC"]
      }],
      base: "usdc.1.2.343151",
      name: "Circle USD",
      display: "usdc",
      symbol: "USDC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
          contract: "0x9a016ce184a22dbf6c17daa59eb7d3140dbd1c54"
        },
        chain: {
          contract: "0x9a016ce184a22dbf6c17daa59eb7d3140dbd1c54"
        },
        provider: "PolyNetwork"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    },
    {
      description: "USD Coin (BEP-20) token on Carbon",
      denom_units: [{
        denom: "usdc.1.6.53ff75",
        exponent: 0
      }, {
        denom: "usdc",
        exponent: 18,
        aliases: ["USDC"]
      }],
      base: "usdc.1.6.53ff75",
      name: "USD Coin (BEP-20)",
      display: "usdc",
      symbol: "USDC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "binancesmartchain",
          base_denom: "0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d",
          contract: "0xb5D4f343412dC8efb6ff599d790074D0f1e8D430"
        },
        chain: {
          contract: "0xb5D4f343412dC8efb6ff599d790074D0f1e8D430"
        },
        provider: "PolyNetwork"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        image_sync: {
          chain_name: "binancesmartchain",
          base_denom: "0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    },
    {
      description: "ZIL token on Carbon",
      denom_units: [{
        denom: "zil.1.18.1a4a06",
        exponent: 0
      }, {
        denom: "zil",
        exponent: 12,
        aliases: ["ZIL"]
      }],
      base: "zil.1.18.1a4a06",
      name: "Zilliqa",
      display: "zil",
      symbol: "ZIL",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "zilliqa",
          base_denom: "wei",
          contract: "0xd73c6b871b4d0e130d64581993b745fc938a5be7"
        },
        chain: {
          contract: "0xd73c6b871b4d0e130d64581993b745fc938a5be7"
        },
        provider: "PolyNetwork"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/zil.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/zil.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/zil.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/zil.svg"
      }]
    }
  ]
};
var assets_default23 = info63;

// node_modules/chain-registry/esm/mainnet/carbon/chain.js
var info64 = {
  $schema: "../chain.schema.json",
  chain_name: "carbon",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Carbon",
  chain_id: "carbon-1",
  bech32_prefix: "swth",
  daemon_name: "carbond",
  website: "https://www.carbon.network/",
  node_home: "$HOME/.carbon",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [
      {
        denom: "swth",
        fixed_min_gas_price: 1,
        low_gas_price: 1,
        average_gas_price: 1,
        high_gas_price: 1,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "usc",
        fixed_min_gas_price: 0,
        low_gas_price: 1e-4,
        average_gas_price: 1e-4,
        high_gas_price: 1e-4,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "bnb.1.6.773edb",
        fixed_min_gas_price: 0,
        low_gas_price: 1e6,
        average_gas_price: 1e6,
        high_gas_price: 1e6,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "bneo.1.14.e2e5f6",
        fixed_min_gas_price: 0,
        low_gas_price: 15e-4,
        average_gas_price: 15e-4,
        high_gas_price: 15e-4,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "busd.1.6.754a80",
        fixed_min_gas_price: 0,
        low_gas_price: 1e8,
        average_gas_price: 1e8,
        high_gas_price: 1e8,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "cglp.1.19.1698d3",
        fixed_min_gas_price: 0,
        low_gas_price: 1e8,
        average_gas_price: 1e8,
        high_gas_price: 1e8,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "cgt/1",
        fixed_min_gas_price: 0,
        low_gas_price: 1e8,
        average_gas_price: 1e8,
        high_gas_price: 1e8,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "eth.1.19.c3b805",
        fixed_min_gas_price: 0,
        low_gas_price: 1e5,
        average_gas_price: 1e5,
        high_gas_price: 1e5,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "eth.1.2.942d87",
        fixed_min_gas_price: 0,
        low_gas_price: 1e5,
        average_gas_price: 1e5,
        high_gas_price: 1e5,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "ibc/07FA7831E1920D0C87C9388F86B0108677F6ED0C9DE7E4063F05ED675192405C",
        fixed_min_gas_price: 0,
        low_gas_price: 35e-4,
        average_gas_price: 35e-4,
        high_gas_price: 35e-4,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "ibc/16065EE5282C5217685C8F084FC44864C25C706AC37356B0D62811D50B96920F",
        fixed_min_gas_price: 0,
        low_gas_price: 75e-7,
        average_gas_price: 75e-7,
        high_gas_price: 75e-7,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "ibc/2B58B8C147E8718EECCB3713271DF46DEE8A3A00A27242628604E31C2F370EF5",
        fixed_min_gas_price: 0,
        low_gas_price: 5e-5,
        average_gas_price: 5e-5,
        high_gas_price: 5e-5,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "ibc/3552CECB7BCE1891DB6070D37EC6E954C972B1400141308FCD85FD148BD06DE5",
        fixed_min_gas_price: 0,
        low_gas_price: 32e-5,
        average_gas_price: 32e-5,
        high_gas_price: 32e-5,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "ibc/35E771B8682D828173F4B795F6C307780F96DC64D6F914FAE4CC9B4666F66364",
        fixed_min_gas_price: 0,
        low_gas_price: 3e8,
        average_gas_price: 3e8,
        high_gas_price: 3e8,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "ibc/4E06CF24FEBFB3F5AF645377DCC0B70AA6183BAF6B918B8B6243FCDEB7D38118",
        fixed_min_gas_price: 0,
        low_gas_price: 6e-4,
        average_gas_price: 6e-4,
        high_gas_price: 6e-4,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "ibc/662914D0C1CEBCB070C68F061D035E8B10A07C79AB286E7342C85F3BE74612C5",
        fixed_min_gas_price: 0,
        low_gas_price: 15e-5,
        average_gas_price: 15e-5,
        high_gas_price: 15e-5,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "ibc/6C349F0EB135C5FA99301758F35B87DB88403D690E5E314AB080401FEE4066E5",
        fixed_min_gas_price: 0,
        low_gas_price: 75e-7,
        average_gas_price: 75e-7,
        high_gas_price: 75e-7,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "ibc/75249A18DEFBEFE55F83B1C70CAD234DF164F174C6BC51682EE92C2C81C18C93",
        fixed_min_gas_price: 0,
        low_gas_price: 15e-5,
        average_gas_price: 15e-5,
        high_gas_price: 15e-5,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "ibc/92E974290AF9E2BC3AEEEC35305C8FD76AC5A22A74CF8D91270FDF5A1C41E861",
        fixed_min_gas_price: 0,
        low_gas_price: 2e8,
        average_gas_price: 2e8,
        high_gas_price: 2e8,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "ibc/A4DB47A9D3CF9A068D454513891B526702455D3EF08FB9EB558C561F9DC2B701",
        fixed_min_gas_price: 0,
        low_gas_price: 1e-5,
        average_gas_price: 1e-5,
        high_gas_price: 1e-5,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "ibc/B7864B03E1B9FD4F049243E92ABD691586F682137037A9F3FCA5222815620B3C",
        fixed_min_gas_price: 0,
        low_gas_price: 1e-5,
        average_gas_price: 1e-5,
        high_gas_price: 1e-5,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "ibc/ED07A3391A112B175915CD8FAF43A2DA8E4790EDE12566649D0C2F97716B8518",
        fixed_min_gas_price: 0,
        low_gas_price: 15e-5,
        average_gas_price: 15e-5,
        high_gas_price: 15e-5,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "usdc.1.2.343151",
        fixed_min_gas_price: 0,
        low_gas_price: 1e-4,
        average_gas_price: 1e-4,
        high_gas_price: 1e-4,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "usdc.1.6.53ff75",
        fixed_min_gas_price: 0,
        low_gas_price: 1e8,
        average_gas_price: 1e8,
        high_gas_price: 1e8,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      },
      {
        denom: "zil.1.18.1a4a06",
        fixed_min_gas_price: 0,
        low_gas_price: 6e3,
        average_gas_price: 6e3,
        high_gas_price: 6e3,
        gas_costs: {
          cosmos_send: 1e7,
          ibc_transfer: 1e7
        }
      }
    ]
  },
  staking: {
    staking_tokens: [{
      denom: "swth"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/swth.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/swth.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://tm-api.carbon.network",
        provider: "switcheo-labs"
      },
      {
        address: "https://carbon-rpc.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://carbon-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rpc.carbon.blockhunters.org",
        provider: "BlockHunters"
      }
    ],
    rest: [
      {
        address: "https://api.carbon.network",
        provider: "switcheo-labs"
      },
      {
        address: "https://carbon-api.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://carbon-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rest.carbon.blockhunters.org",
        provider: "BlockHunters"
      }
    ],
    grpc: [{
      address: "https://carbon-grpc.lavenderfive.com:443",
      provider: "Lavender.Five Nodes \u{1F41D}"
    }, {
      address: "carbon-mainnet-grpc.autostake.com:443",
      provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
    }]
  },
  explorers: [
    {
      kind: "carbonscan",
      url: "https://scan.carbon.network",
      tx_page: "https://scan.carbon.network/transaction/${txHash}?net=main"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/carbon",
      tx_page: "https://ping.pub/carbon/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/carbon",
      tx_page: "https://atomscan.com/carbon/transactions/${txHash}",
      account_page: "https://atomscan.com/carbon/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/swth.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/swth.svg"
  }]
};
var chain_default23 = info64;

// node_modules/chain-registry/esm/mainnet/carbon/ibc.js
var info65 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "canto",
      client_id: "07-tendermint-10",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "carbon",
      client_id: "07-tendermint-40",
      connection_id: "connection-23"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "demex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "carbon",
      client_id: "07-tendermint-6",
      connection_id: "connection-5"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-765",
      connection_id: "connection-554"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-342",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "demex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "carbon",
      client_id: "07-tendermint-11",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-73",
      connection_id: "connection-29"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "demex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "carbon",
      client_id: "07-tendermint-53",
      connection_id: "connection-30"
    },
    chain_2: {
      chain_name: "irisnet",
      client_id: "07-tendermint-151",
      connection_id: "connection-114"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-28",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-68",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "demex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "carbon",
      client_id: "07-tendermint-16",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-60",
      connection_id: "connection-40"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-46",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "demex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "carbon",
      client_id: "07-tendermint-3",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1808",
      connection_id: "connection-1412"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-188",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "carbon",
      client_id: "07-tendermint-36",
      connection_id: "connection-19"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-224",
      connection_id: "connection-158"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-123",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "demex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "carbon",
      client_id: "07-tendermint-13",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-40",
      connection_id: "connection-27"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-47",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "demex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "carbon",
      client_id: "07-tendermint-33",
      connection_id: "connection-16"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-66",
      connection_id: "connection-54"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "demex"
      }
    }, {
      chain_1: {
        channel_id: "channel-16",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-41",
        port_id: "wasm.terra1e0mrzy8077druuu42vs0hu7ugguade0cj65dgtauyaw4gsl4kv0qtdf2au"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default19 = info65;

// node_modules/chain-registry/esm/mainnet/carbon/index.js
var assets23 = assets_default23;
var chain23 = chain_default23;
var ibc19 = ibc_default19;

// node_modules/chain-registry/esm/mainnet/celestia/assets.js
var info66 = {
  $schema: "../assetlist.schema.json",
  chain_name: "celestia",
  assets: [{
    description: "The native token of the Celestia blockchain.",
    extended_description: "Celestia is a modular data availability network. It simplifies the process of launching blockchains, making blockchain technology more accessible and user-friendly. Unlike traditional blockchains that handle multiple functions, Celestia specializes in specific roles, which leads to enhanced scalability, flexibility, and interoperability. This specialization enables developers to create blockchain applications for mass adoption\u200B.",
    denom_units: [{
      denom: "utia",
      exponent: 0
    }, {
      denom: "tia",
      exponent: 6
    }],
    base: "utia",
    name: "Celestia",
    display: "tia",
    symbol: "TIA",
    coingecko_id: "celestia",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.svg"
    }],
    socials: {
      website: "https://celestia.org/",
      twitter: "https://twitter.com/CelestiaOrg"
    }
  }]
};
var assets_default24 = info66;

// node_modules/chain-registry/esm/mainnet/celestia/chain.js
var info67 = {
  $schema: "../chain.schema.json",
  chain_name: "celestia",
  chain_id: "celestia",
  pretty_name: "Celestia",
  status: "live",
  network_type: "mainnet",
  website: "https://celestia.org/",
  bech32_prefix: "celestia",
  daemon_name: "celestia-appd",
  node_home: "$HOME/.celestia-app",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "utia",
      fixed_min_gas_price: 2e-3,
      low_gas_price: 0.01,
      average_gas_price: 0.02,
      high_gas_price: 0.1
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "utia"
    }]
  },
  codebase: {
    cosmos_sdk_version: "celestiaorg/cosmos-sdk v1.20.1-sdk-v0.46.16"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.svg"
  },
  description: "Celestia is a modular data availability network that securely scales with the number of users, making it easy for anyone to launch their own blockchain.",
  apis: {
    rpc: [
      {
        address: "https://public-celestia-rpc.numia.xyz",
        provider: "Numia"
      },
      {
        address: "https://celestia-rpc.mesa.newmetric.xyz",
        provider: "Newmetric"
      },
      {
        address: "https://rpc.lunaroasis.net",
        provider: "Lunar Oasis"
      },
      {
        address: "https://rpc.celestia.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://celestia-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc-celestia-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://rpc-celestia.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "http://celestia.rpc.nodersteam.com:29657",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://celestia.rpc.interchain.validao.xyz",
        provider: "ValiDAO"
      },
      {
        address: "https://celestia-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://celestia.rpc.stakin-nodes.com",
        provider: "Stakin"
      },
      {
        address: "https://celestia.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://celestia-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://rpc-celestia.mzonder.com",
        provider: "MZONDER"
      },
      {
        address: "https://celestia-rpc.enigma-validator.com",
        provider: "Enigma"
      },
      {
        address: "https://rpc-celestia.theamsolutions.info",
        provider: "AM Solutions"
      },
      {
        address: "https://celestia-mainnet-rpc.autostake.com:443",
        provider: "AutoStake | Delegate for StakeDrops"
      },
      {
        address: "https://rpc.celestia.validatus.com",
        provider: "Validatus"
      },
      {
        address: "https://celestia-rpc.sr20de.xyz",
        provider: "Sr20de"
      },
      {
        address: "https://rpc-celestia-full.avril14th.org",
        provider: "Avril 14th"
      },
      {
        address: "https://rpc.freshstaking.com/celestia",
        provider: "FreshSTAKING"
      },
      {
        address: "https://celestia.cumulo.org.es/",
        provider: "Cumulo"
      },
      {
        address: "https://celestia-rpc.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://rpc.celestia-app.bronbro.io",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://celestia-rpc.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://rpc.celestia.citizenweb3.com",
        provider: "Citizen Web3"
      },
      {
        address: "https://celestia-mainnet-rpc.itrocket.net",
        provider: "\u{1F680} itrocket \u{1F680}"
      },
      {
        address: "https://rpc.celestia.mainnet.dteam.tech:443",
        provider: "DTEAM"
      }
    ],
    rest: [
      {
        address: "https://public-celestia-lcd.numia.xyz",
        provider: "Numia"
      },
      {
        address: "https://celestia-rest.mesa.newmetric.xyz",
        provider: "Newmetric"
      },
      {
        address: "http://celestia.rpc.nodersteam.com:1617",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://api.lunaroasis.net",
        provider: "Lunar Oasis"
      },
      {
        address: "https://api.celestia.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://celestia-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://api-celestia-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://api-celestia.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://celestia.rest.interchain.validao.xyz",
        provider: "ValiDAO"
      },
      {
        address: "https://celestia-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://celestia.rest.stakin-nodes.com",
        provider: "Stakin"
      },
      {
        address: "https://celestia.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://api-celestia.mzonder.com",
        provider: "MZONDER"
      },
      {
        address: "https://celestia-lcd.enigma-validator.com",
        provider: "Enigma"
      },
      {
        address: "https://rest-celestia.theamsolutions.info",
        provider: "AM Solutions"
      },
      {
        address: "https://api.celestia.validatus.com",
        provider: "Validatus"
      },
      {
        address: "https://celestia-api.sr20de.xyz",
        provider: "Sr20de"
      },
      {
        address: "https://celestia-mainnet-lcd.autostake.com:443",
        provider: "AutoStake | Delegate for StakeDrops"
      },
      {
        address: "https://api-celestia-full.avril14th.org",
        provider: "Avril 14th"
      },
      {
        address: "https://celestia.api.cumulo.org.es",
        provider: "Cumulo"
      },
      {
        address: "https://celestia-api.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://lcd.celestia-app.bronbro.io",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://celestia-api.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://celestia-mainnet-api.itrocket.net",
        provider: "\u{1F680} itrocket \u{1F680}"
      },
      {
        address: "https://api.celestia.mainnet.dteam.tech:443",
        provider: "DTEAM"
      }
    ],
    grpc: [
      {
        address: "https://grpc.celestia.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "celestia-mainnet-grpc.autostake.com:443",
        provider: "AutoStake | Delegate for StakeDrops"
      },
      {
        address: "https://celestia-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "celestia.grpc.nodersteam.com:9690",
        provider: "[NODERS]TEAM"
      },
      {
        address: "grpc-celestia-01.stakeflow.io:15002",
        provider: "Stakeflow"
      },
      {
        address: "grpc-celestia.cosmos-spaces.cloud:443",
        provider: "Cosmos Spaces"
      },
      {
        address: "celestia.grpc.interchain.validao.xyz:443",
        provider: "ValiDAO"
      },
      {
        address: "celestia-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "celestia.grpc.stakin-nodes.com:443",
        provider: "Stakin"
      },
      {
        address: "celestia.grpc.kjnodes.com:443",
        provider: "kjnodes"
      },
      {
        address: "grpc-celestia.mzonder.com:443",
        provider: "MZONDER"
      },
      {
        address: "grpc-celestia.theamsolutions.info:443",
        provider: "AM Solutions"
      },
      {
        address: "grpc.celestia.validatus.com",
        provider: "Validatus"
      },
      {
        address: "celestia-grpc.sr20de.xyz",
        provider: "Sr20de"
      },
      {
        address: "grpc-celestia-full.avril14th.org",
        provider: "Avril 14th"
      },
      {
        address: "celestia.grpc.cumulo.org.es",
        provider: "Cumulo"
      },
      {
        address: "https://celestia-grpc.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "grpc.celestia-app.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "celestia-grpc.noders.services:11090",
        provider: "[NODERS]TEAM"
      },
      {
        address: "celestia-mainnet-grpc.itrocket.net:40090",
        provider: "\u{1F680} itrocket \u{1F680}"
      },
      {
        address: "grpc.celestia.mainnet.dteam.tech:28090",
        provider: "DTEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "Mintscan",
      url: "https://mintscan.io/celestia",
      tx_page: "https://mintscan.io/celestia/txs/${txHash}",
      account_page: "https://mintscan.io/celestia/address/${accountAddress}"
    },
    {
      kind: "NodeStake",
      url: "https://explorer.nodestake.top/celestia/",
      tx_page: "https://explorer.nodestake.top/celestia/txs/${txHash}",
      account_page: "https://explorer.nodestake.top/celestia/account/${accountAddress}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/celestia",
      tx_page: "https://stakeflow.io/celestia/transactions/${txHash}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/celestia",
      tx_page: "https://explorer.tcnetwork.io/celestia/transaction/${txHash}",
      account_page: "https://explorer.tcnetwork.io/celestia/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Celestia-Mainnet",
      tx_page: "https://explorer.stavr.tech/Celestia-Mainnet/transaction/${txHash}",
      account_page: "https://explorer.stavr.tech/Celestia-Mainnet/account/${accountAddress}"
    },
    {
      kind: "AM Solutions",
      url: "https://explorer.theamsolutions.info/celestia-main",
      tx_page: "https://explorer.theamsolutions.info/celestia-main/transaction/${txHash}",
      account_page: "https://explorer.theamsolutions.info/celestia-main/account/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/celestia",
      tx_page: "https://ezstaking.app/celestia/txs/${txHash}",
      account_page: "https://ezstaking.app/celestia/account/${accountAddress}"
    },
    {
      kind: "\u{1F680} itrocket \u{1F680}",
      url: "https://mainnet.itrocket.net/celestia",
      tx_page: "https://mainnet.itrocket.net/celestia/transaction/${txHash}",
      account_page: "https://mainnet.itrocket.net/celestia/account/${accountAddress}"
    },
    {
      kind: "DTEAM | Explorer",
      url: "https://explorer.mainnet.dteam.tech/celestia",
      tx_page: "https://explorer.mainnet.dteam.tech/celestia/transaction/${txHash}",
      account_page: "https://explorer.mainnet.dteam.tech/celestia/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.svg"
  }]
};
var chain_default24 = info67;

// node_modules/chain-registry/esm/mainnet/celestia/ibc.js
var info68 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-185",
      connection_id: "connection-163"
    },
    chain_2: {
      chain_name: "celestia",
      client_id: "07-tendermint-9",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-125",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-35",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "composable",
      client_id: "07-tendermint-138",
      connection_id: "connection-55"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-38",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-82",
      connection_id: "connection-52"
    },
    chain_2: {
      chain_name: "dymension",
      client_id: "07-tendermint-6",
      connection_id: "connection-5"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-27",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-79",
      connection_id: "connection-49"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-134",
      connection_id: "connection-80"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-26",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-106",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-28",
      connection_id: "connection-6"
    },
    chain_2: {
      chain_name: "injective",
      client_id: "07-tendermint-226",
      connection_id: "connection-210"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-152",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-49",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "kava",
      client_id: "07-tendermint-158",
      connection_id: "connection-198"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-140",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-29",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-48",
      connection_id: "connection-36"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-35",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-10",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3012",
      connection_id: "connection-2503"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6994",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-88",
      connection_id: "connection-57"
    },
    chain_2: {
      chain_name: "pryzm",
      client_id: "07-tendermint-3",
      connection_id: "connection-3"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-34",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-52",
      connection_id: "connection-15"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-174",
      connection_id: "connection-131"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-91",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-86",
      connection_id: "connection-56"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-359",
      connection_id: "connection-296"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-33",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-291",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-0",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-137",
      connection_id: "connection-125"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-162",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-53",
      connection_id: "connection-16"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-391",
      connection_id: "connection-381"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-300",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-58",
      connection_id: "connection-18"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-245",
      connection_id: "connection-209"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-19",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-119",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  }
];
var ibc_default20 = info68;

// node_modules/chain-registry/esm/mainnet/celestia/index.js
var assets24 = assets_default24;
var chain24 = chain_default24;
var ibc20 = ibc_default20;

// node_modules/chain-registry/esm/mainnet/cerberus/assets.js
var info69 = {
  $schema: "../assetlist.schema.json",
  chain_name: "cerberus",
  assets: [{
    description: "The native token of Cerberus Chain",
    denom_units: [{
      denom: "ucrbrus",
      exponent: 0
    }, {
      denom: "crbrus",
      exponent: 6
    }],
    base: "ucrbrus",
    name: "Cerberus",
    display: "crbrus",
    symbol: "CRBRUS",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cerberus/images/crbrus.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cerberus/images/crbrus.svg"
    },
    coingecko_id: "cerberus-2",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cerberus/images/crbrus.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cerberus/images/crbrus.svg"
    }]
  }]
};
var assets_default25 = info69;

// node_modules/chain-registry/esm/mainnet/cerberus/chain.js
var info70 = {
  $schema: "../chain.schema.json",
  chain_name: "cerberus",
  status: "killed",
  network_type: "mainnet",
  website: "https://cerberus.zone/",
  pretty_name: "Cerberus",
  chain_id: "cerberus-chain-1",
  bech32_prefix: "cerberus",
  daemon_name: "cerberusd",
  node_home: "$HOME/.cerberus",
  slip44: 118,
  codebase: {},
  fees: {
    fee_tokens: [{
      denom: "ucrbrus",
      fixed_min_gas_price: 0,
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ucrbrus"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cerberus/images/crbrus.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cerberus/images/crbrus.svg"
  },
  apis: {
    rpc: [],
    rest: [],
    grpc: [{
      address: "grpc-cerberus-ia.cosmosia.notional.ventures:443",
      provider: "Notional"
    }, {
      address: "cerberus-grpc.polkachu.com:13890",
      provider: "Polkachu"
    }]
  },
  explorers: [
    {
      kind: "skynetexplorers",
      url: "https://skynetexplorers.com/cerberus",
      tx_page: "https://skynetexplorers.com/cerberus/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/cerberus",
      tx_page: "https://ping.pub/cerberus/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/cerberus",
      tx_page: "https://atomscan.com/cerberus/transactions/${txHash}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/cerberus",
      tx_page: "https://explorer.tcnetwork.io/cerberus/transaction/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cerberus/images/crbrus.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cerberus/images/crbrus.svg"
  }]
};
var chain_default25 = info70;

// node_modules/chain-registry/esm/mainnet/cerberus/ibc.js
var info71 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "cerberus",
    client_id: "07-tendermint-1",
    connection_id: "connection-1"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-1875",
    connection_id: "connection-1460"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-212",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default21 = info71;

// node_modules/chain-registry/esm/mainnet/cerberus/index.js
var assets25 = assets_default25;
var chain25 = chain_default25;
var ibc21 = ibc_default21;

// node_modules/chain-registry/esm/mainnet/chain4energy/assets.js
var info72 = {
  $schema: "../assetlist.schema.json",
  chain_name: "chain4energy",
  assets: [{
    description: "The native token of Chain4Energy",
    extended_description: "C4E is a DePIN L1 Blockchain platform, designed to support a variety of innovative energy and e-mobility applications by creating a decentralized and democratized community-powered ecosystem.",
    denom_units: [{
      denom: "uc4e",
      exponent: 0
    }, {
      denom: "c4e",
      exponent: 6
    }],
    base: "uc4e",
    name: "Chain4Energy",
    display: "c4e",
    symbol: "C4E",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chain4energy/images/c4e.png"
    },
    coingecko_id: "chain4energy",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chain4energy/images/c4e.png"
    }],
    socials: {
      website: "https://c4e.io/",
      twitter: "https://twitter.com/Chain4Energy"
    }
  }]
};
var assets_default26 = info72;

// node_modules/chain-registry/esm/mainnet/chain4energy/chain.js
var info73 = {
  $schema: "../chain.schema.json",
  chain_name: "chain4energy",
  status: "live",
  network_type: "mainnet",
  website: "https://c4e.io/",
  pretty_name: "C4E",
  chain_id: "perun-1",
  bech32_prefix: "c4e",
  daemon_name: "c4ed",
  node_home: "$HOME/.c4e-chain",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uc4e",
      fixed_min_gas_price: 0,
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uc4e"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chain4energy/images/c4e.png"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.c4e.io/",
        provider: "C4E"
      },
      {
        address: "https://rpc.c4e.mainnet.dteam.tech:443",
        provider: "DTEAM"
      },
      {
        address: "https://rpc.c4e.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://c4e.rpc.bccnodes.com",
        provider: "BccNodes"
      },
      {
        address: "https://chain4energy-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://c4e.rpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc-c4e.takeshi.team",
        provider: "TAKESHI"
      },
      {
        address: "https://rpc-c4e.mzonder.com",
        provider: "MZONDER"
      },
      {
        address: "https://rpc.cros-nest.com/chain4energy",
        provider: "Crosnest"
      },
      {
        address: "https://rpc.c4e.indonode.net",
        provider: "Indonode"
      },
      {
        address: "https://c4e-rpc.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://rpc.c4e.silentvalidator.com",
        provider: "silent"
      },
      {
        address: "http://rpc.c4e.stakeup.tech",
        provider: "StakeUp"
      },
      {
        address: "https://chain4energy-rpc.stakeangle.com",
        provider: "StakeAngle"
      },
      {
        address: "https://c4e-rpc.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://rpc-c4e.theamsolutions.info",
        provider: "AM Solutions"
      },
      {
        address: "https://c4e.rpc.m.anode.team",
        provider: "AlxVoy \u26A1 ANODE.TEAM"
      },
      {
        address: "http://185.245.182.192:46657",
        provider: "Meerlabs"
      },
      {
        address: "http://89.117.58.109:26657",
        provider: "medes"
      },
      {
        address: "http://c4e.rpc.node75.org:26957",
        provider: "Pro-nodes75"
      },
      {
        address: "http://164.68.125.243:26657",
        provider: "Smt Network"
      },
      {
        address: "https://c4e-rpc.antrixy.org/",
        provider: "Antrix Validators"
      },
      {
        address: "https://c4e.doubletop.tech/",
        provider: "DOUBLETOP"
      },
      {
        address: "https://c4e-rpc.kalia.network:443",
        provider: "Kalia Network"
      },
      {
        address: "http://38.242.220.64:16657",
        provider: "mahof"
      },
      {
        address: "http://209.182.239.169:46657",
        provider: "SECARD"
      },
      {
        address: "https://rpc.c4e.validatus.com:443",
        provider: "Validatus"
      },
      {
        address: "https://rpc-m-c4e.apeironnodes.com:443",
        provider: "Apeiron Nodes"
      },
      {
        address: "http://rpc-c4e.cryptech.com.ua:443",
        provider: "Cryptech"
      }
    ],
    rest: [
      {
        address: "https://lcd.c4e.io/",
        provider: "C4E"
      },
      {
        address: "https://api.c4e.mainnet.dteam.tech:443",
        provider: "DTEAM"
      },
      {
        address: "https://api.c4e.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://c4e.lcd.bccnodes.com",
        provider: "BccNodes"
      },
      {
        address: "https://chain4energy-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://c4e.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api-c4e.takeshi.team",
        provider: "TAKESHI"
      },
      {
        address: "https://api-c4e.mzonder.com",
        provider: "MZONDER"
      },
      {
        address: "https://rest.cros-nest.com/chain4energy",
        provider: "Crosnest"
      },
      {
        address: "https://api.c4e.indonode.net",
        provider: "Indonode"
      },
      {
        address: "https://c4e-api.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://api.c4e.silentvalidator.com",
        provider: "silent"
      },
      {
        address: "http://api.c4e.stakeup.tech",
        provider: "StakeUp"
      },
      {
        address: "http://chain4energy-rpc.stakeangle.com:1317",
        provider: "StakeAngle"
      },
      {
        address: "https://c4e-api.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://api-c4e.theamsolutions.info",
        provider: "AM Solutions"
      },
      {
        address: "https://c4e.api.m.anode.team",
        provider: "AlxVoy \u26A1 ANODE.TEAM"
      },
      {
        address: "http://c4e.api.node75.org:1397",
        provider: "Pro-nodes75"
      },
      {
        address: "http://164.68.125.243:1319",
        provider: "Smt Network"
      },
      {
        address: "https://c4e-rest.antrixy.org/",
        provider: "Antrix Validators"
      },
      {
        address: "https://c4e-api.kalia.network:443",
        provider: "Kalia Network"
      },
      {
        address: "http://38.242.220.64:11317",
        provider: "mahof"
      },
      {
        address: "http://209.182.239.169:1417",
        provider: "SECARD"
      },
      {
        address: "https://api.c4e.validatus.com:443",
        provider: "Validatus"
      },
      {
        address: "https://api-c4e.cryptech.com.ua:443",
        provider: "CrypTech"
      },
      {
        address: "https://lcd-m-c4e.apeironnodes.com",
        provider: "Apeiron Nodes"
      }
    ],
    grpc: [
      {
        address: "grpc.c4e.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "grpc.c4e.mainnet.dteam.tech:30090",
        provider: "DTEAM"
      },
      {
        address: "c4e.grpc.bccnodes.com:443",
        provider: "BccNodes"
      },
      {
        address: "chain4energy-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "c4e.grpc.bccnodes.com:443",
        provider: "BccNodes"
      },
      {
        address: "grpc-c4e.takeshi.team:443",
        provider: "TAKESHI"
      },
      {
        address: "grpc-c4e.mzonder.com:443",
        provider: "MZONDER"
      },
      {
        address: "http://c4e.grpc.m.stavr.tech:7029",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "c4e-grpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "grpc.c4e.silentvalidator.com:443",
        provider: "silent"
      },
      {
        address: "http://chain4energy-rpc.stakeangle.com:1317",
        provider: "StakeAngle"
      },
      {
        address: "c4e-grpc.genznodes.dev:52090",
        provider: "genznodes"
      },
      {
        address: "https://grpc-c4e.theamsolutions.info:9391",
        provider: "AM Solutions"
      },
      {
        address: "https://c4e.grpc.m.anode.team",
        provider: "AlxVoy \u26A1 ANODE.TEAM"
      },
      {
        address: "https://c4e-grpc.validatrium.club",
        provider: "Validatrium"
      },
      {
        address: "http://185.245.182.192:1318",
        provider: "Meerlabs"
      },
      {
        address: "grpc-c4e.stakerun.com:1190",
        provider: "StakeRun"
      },
      {
        address: "https://c4e-grpc.antrixy.org/",
        provider: "Antirx Validators"
      },
      {
        address: "https://c4e.doubletop.tech:443",
        provider: "DOUBLETOP"
      },
      {
        address: "c4e-grpc.kalia.network:3090",
        provider: "Kalia Network"
      },
      {
        address: "https://c4e.grpc.skynodejs.net",
        provider: "skynodejs"
      },
      {
        address: "http://38.242.220.64:19090",
        provider: "mahof"
      },
      {
        address: "http://209.182.239.169:9190",
        provider: "SECARD"
      },
      {
        address: "https://grpc.c4e.validatus.com:443",
        provider: "Validatus"
      },
      {
        address: "https://grpc-c4e.cryptech.com.ua:443",
        provider: "Cryptech"
      },
      {
        address: "http://207.180.208.47:46657",
        provider: "NakoTurk"
      }
    ]
  },
  explorers: [
    {
      kind: "explorer",
      url: "https://explorer.apeironnodes.com/chain4energy",
      tx_page: "https://explorer.apeironnodes.com/chain4energy/transactions/${txHash}"
    },
    {
      kind: "DTEAM | Explorer",
      url: "https://explorer.mainnet.dteam.tech/chain4energy",
      tx_page: "https://explorer.mainnet.dteam.tech/chain4energytransactions/${txHash}"
    },
    {
      kind: "explorer",
      url: "https://explorer.ppnv.space/c4e",
      tx_page: "https://explorer.ppnv.space/c4e/transactions/${txHash}"
    },
    {
      kind: "explorer",
      url: "https://explorer.c4e.io/",
      tx_page: "https://explorer.c4e.io/transactions/${txHash}"
    },
    {
      kind: "NodeStake Explorer",
      url: "https://explorer.nodestake.top/chain4energy",
      tx_page: "https://explorer.nodestake.top/chain4energy/transactions/${txHash}"
    },
    {
      kind: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400} Explorer",
      url: "https://exp.utsa.tech/c4e",
      tx_page: "https://exp.utsa.tech/c4e/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525} Explorer",
      url: "https://explorer.stavr.tech/c4e",
      tx_page: "https://explorer.stavr.tech/c4e/tx/${txHash}"
    },
    {
      kind: "BccNodes Explorer",
      url: "https://explorer.bccnodes.com/chain4energy",
      tx_page: "https://explorer.bccnodes.com/chain4energy/transactions/${txHash}"
    },
    {
      kind: "NODEXPLORER",
      url: "https://explorer.nodexcapital.com/c4e",
      tx_page: "https://explorer.nodexcapital.com/c4e/transactions/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/chain4energy",
      tx_page: "https://atomscan.com/chain4energy/transactions/${txHash}",
      account_page: "https://atomscan.com/chain4energy/accounts/${accountAddress}"
    },
    {
      kind: "AM Solutions Explorer",
      url: "https://explorer.theamsolutions.info/c4e-main/staking",
      tx_page: "https://explorer.theamsolutions.info/c4e-main/transactions/${txHash}"
    },
    {
      kind: "AlxVoy \u26A1 ANODE.TEAM Explorer",
      url: "https://main.anode.team/c4e",
      tx_page: "https://main.anode.team/c4e/tx/${txHash}"
    },
    {
      kind: "ScanRun",
      url: "https://scanrun.io/c4e",
      tx_page: "https://scanrun.io/c4e/transactions/${txHash}"
    },
    {
      kind: "Cryptech",
      url: "https://explorers.cryptech.com.ua/chain4energy",
      tx_page: "https://explorers.cryptech.com.ua/chain4energy/tx/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chain4energy/images/c4e.png"
  }]
};
var chain_default26 = info73;

// node_modules/chain-registry/esm/mainnet/chain4energy/ibc.js
var info74 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "axelar",
    client_id: "07-tendermint-203",
    connection_id: "connection-183"
  },
  chain_2: {
    chain_name: "chain4energy",
    client_id: "07-tendermint-1",
    connection_id: "connection-1"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-141",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "chain4energy",
    client_id: "07-tendermint-2",
    connection_id: "connection-2"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-3107",
    connection_id: "connection-2586"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-22172",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default22 = info74;

// node_modules/chain-registry/esm/mainnet/chain4energy/index.js
var assets26 = assets_default26;
var chain26 = chain_default26;
var ibc22 = ibc_default22;

// node_modules/chain-registry/esm/mainnet/cheqd/assets.js
var info75 = {
  $schema: "../assetlist.schema.json",
  chain_name: "cheqd",
  assets: [{
    description: "Native token for the cheqd network",
    denom_units: [{
      denom: "ncheq",
      exponent: 0
    }, {
      denom: "cheq",
      exponent: 9
    }],
    base: "ncheq",
    display: "cheq",
    name: "cheqd",
    symbol: "CHEQ",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cheqd/images/cheq.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cheqd/images/cheq.svg"
    },
    coingecko_id: "cheqd-network",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cheqd/images/cheq.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cheqd/images/cheq.svg"
    }]
  }]
};
var assets_default27 = info75;

// node_modules/chain-registry/esm/mainnet/cheqd/chain.js
var info76 = {
  $schema: "../chain.schema.json",
  chain_name: "cheqd",
  status: "live",
  network_type: "mainnet",
  website: "https://www.cheqd.io/",
  pretty_name: "Cheqd",
  chain_id: "cheqd-mainnet-1",
  bech32_prefix: "cheqd",
  daemon_name: "cheqd-noded",
  node_home: "$HOME/.cheqdnode",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ncheq",
      fixed_min_gas_price: 25,
      low_gas_price: 50,
      average_gas_price: 75,
      high_gas_price: 100
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ncheq"
    }]
  },
  codebase: {
    cosmos_sdk_version: "cheqd/cosmos-sdk v0.47.10-height-mismatch"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.cheqd.net",
        provider: "cheqd"
      },
      {
        address: "https://cheqd-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes"
      },
      {
        address: "https://cheqd.rpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc-cheqd-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://rpc.cheqd.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://rpc-cheqd.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://cheqd-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rpc-cheqd.blockval.io",
        provider: "Blockval"
      },
      {
        address: "https://public.stakewolle.com/cosmos/cheqd/rpc",
        provider: "Stakewolle"
      },
      {
        address: "https://cheq-rpc.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://cheqd-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    rest: [
      {
        address: "https://api.cheqd.net",
        provider: "cheqd"
      },
      {
        address: "https://cheqd-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes"
      },
      {
        address: "https://cheqd.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api-cheqd-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://cheqd-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://api.cheqd.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://lcd-cheqd.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://api-cheqd.blockval.io",
        provider: "Blockval"
      },
      {
        address: "https://public.stakewolle.com/cosmos/cheqd/rest",
        provider: "Stakewolle"
      },
      {
        address: "https://cheq-api.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://cheqd-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    grpc: [
      {
        address: "grpc.cheqd.net:443",
        provider: "cheqd"
      },
      {
        address: "cheqd.grpc.m.stavr.tech:9337",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "cheqd-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "cheqd-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "grpc-cheqd-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "grpc.cheqd.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "grpc-cheqd.blockval.io:9290",
        provider: "Blockval"
      },
      {
        address: "cheqd-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ]
  },
  explorers: [
    {
      kind: "bigdipper",
      url: "https://bigdipper.live/cheqd",
      tx_page: "https://bigdipper.live/cheqd/transactions/${txHash}",
      account_page: "https://bigdipper.live/cheqd/accounts/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/cheqd",
      tx_page: "https://ping.pub/cheqd/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Cheqd-Mainnet",
      tx_page: "https://explorer.stavr.tech/Cheqd-Mainnet/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/cheqd",
      tx_page: "https://atomscan.com/cheqd/transactions/${txHash}",
      account_page: "https://atomscan.com/cheqd/accounts/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/cheqd",
      tx_page: "https://ezstaking.app/cheqd/txs/${txHash}",
      account_page: "https://ezstaking.app/cheqd/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://look.chillvalidation.com/cheqd",
      tx_page: "https://look.chillvalidation.com/cheqd/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.wildsage.io/cheqd",
      tx_page: "https://ping.wildsage.io/cheqd/tx/${txHash}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/cheqd",
      tx_page: "https://mainnet.whispernode.com/cheqd/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/cheqd/account/${accountAddress}"
    }
  ],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cheqd/images/cheq.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cheqd/images/cheq.svg"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cheqd/images/cheq.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cheqd/images/cheq.svg"
  }]
};
var chain_default27 = info76;

// node_modules/chain-registry/esm/mainnet/cheqd/ibc.js
var info77 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cheqd",
      client_id: "07-tendermint-13",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-64",
      connection_id: "connection-74"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-43",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cheqd",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1615",
      connection_id: "connection-1268"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-108",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cheqd",
      client_id: "07-tendermint-85",
      connection_id: "connection-63"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-196",
      connection_id: "connection-191"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-141",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      fee_version: "ics29-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cheqd",
      client_id: "07-tendermint-83",
      connection_id: "connection-61"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-392",
      connection_id: "connection-382"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-34",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-301",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default23 = info77;

// node_modules/chain-registry/esm/mainnet/cheqd/index.js
var assets27 = assets_default27;
var chain27 = chain_default27;
var ibc23 = ibc_default23;

// node_modules/chain-registry/esm/mainnet/chihuahua/assets.js
var info78 = {
  $schema: "../assetlist.schema.json",
  chain_name: "chihuahua",
  assets: [
    {
      description: "The native token of Chihuahua Chain",
      denom_units: [{
        denom: "uhuahua",
        exponent: 0
      }, {
        denom: "huahua",
        exponent: 6
      }],
      base: "uhuahua",
      name: "Chihuahua",
      display: "huahua",
      symbol: "HUAHUA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/huahua.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/huahua.svg"
      },
      coingecko_id: "chihuahua-token",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/huahua.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/huahua.svg"
      }]
    },
    {
      description: "Puppy",
      denom_units: [{
        denom: "cw20:chihuahua1yl8z39ugle8s02fpwkhh293509q5xcpalmdzc4amvchz8nkexrmsy95gef",
        exponent: 0
      }, {
        denom: "puppy",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "chihuahua1yl8z39ugle8s02fpwkhh293509q5xcpalmdzc4amvchz8nkexrmsy95gef",
      base: "cw20:chihuahua1yl8z39ugle8s02fpwkhh293509q5xcpalmdzc4amvchz8nkexrmsy95gef",
      name: "Puppy",
      display: "puppy",
      symbol: "PUPPY",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/puppyhuahua_logo.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/puppyhuahua_logo.png"
      }
    },
    {
      description: "has a hat",
      extended_description: "Chihuahuawifhat is the biggest cult of the Chihuahua chain aiming to take over Cosmos. The token is $BADDOG and we're not playing around.",
      denom_units: [{
        denom: "factory/chihuahua1x4q2vkrz4dfgd9hcw0p5m2f2nuv2uqmt9xr8k2/achihuahuawifhat",
        exponent: 0
      }, {
        denom: "achihuahuawifhat",
        exponent: 6
      }],
      base: "factory/chihuahua1x4q2vkrz4dfgd9hcw0p5m2f2nuv2uqmt9xr8k2/achihuahuawifhat",
      name: "Chihuahuawifhat",
      display: "achihuahuawifhat",
      symbol: "BADDOG",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/baddog.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/baddog.png",
        theme: {
          primary_color_hex: "#F7E3C0",
          background_color_hex: "#F7E3C0",
          circle: true
        }
      }],
      socials: {
        website: "https://baddog.lol/",
        twitter: "https://x.com/chihuahuawifhat"
      }
    },
    {
      description: "Woof",
      denom_units: [{
        denom: "factory/chihuahua13jawsn574rf3f0u5rhu7e8n6sayx5gkw3eddhp/uwoof",
        exponent: 0
      }, {
        denom: "WOOF",
        exponent: 6
      }],
      base: "factory/chihuahua13jawsn574rf3f0u5rhu7e8n6sayx5gkw3eddhp/uwoof",
      name: "WOOF",
      display: "WOOF",
      symbol: "WOOF",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/woof.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/woof.png"
      }]
    },
    {
      description: "Tacos",
      denom_units: [{
        denom: "factory/chihuahua13jawsn574rf3f0u5rhu7e8n6sayx5gkw3eddhp/utacos",
        exponent: 0
      }, {
        denom: "TACOS",
        exponent: 6
      }],
      base: "factory/chihuahua13jawsn574rf3f0u5rhu7e8n6sayx5gkw3eddhp/utacos",
      name: "TACOS",
      display: "TACOS",
      symbol: "TACOS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/tacos.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/tacos.png"
      }]
    },
    {
      description: "Weed",
      denom_units: [{
        denom: "factory/chihuahua13jawsn574rf3f0u5rhu7e8n6sayx5gkw3eddhp/uweed",
        exponent: 0
      }, {
        denom: "WEED",
        exponent: 6
      }],
      base: "factory/chihuahua13jawsn574rf3f0u5rhu7e8n6sayx5gkw3eddhp/uweed",
      name: "WEED",
      display: "WEED",
      symbol: "WEED",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/weed.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/weed.png"
      }]
    },
    {
      description: "Bulldog",
      denom_units: [{
        denom: "factory/chihuahua13jawsn574rf3f0u5rhu7e8n6sayx5gkw3eddhp/ubdog",
        exponent: 0
      }, {
        denom: "BDOG",
        exponent: 6
      }],
      base: "factory/chihuahua13jawsn574rf3f0u5rhu7e8n6sayx5gkw3eddhp/ubdog",
      name: "BDOG",
      display: "BDOG",
      symbol: "BDOG",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/bdog.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/bdog.png"
      }]
    },
    {
      description: "CaneCorso",
      denom_units: [{
        denom: "factory/chihuahua13jawsn574rf3f0u5rhu7e8n6sayx5gkw3eddhp/ucorso",
        exponent: 0
      }, {
        denom: "CORSO",
        exponent: 6
      }],
      base: "factory/chihuahua13jawsn574rf3f0u5rhu7e8n6sayx5gkw3eddhp/ucorso",
      name: "CORSO",
      display: "CORSO",
      symbol: "CORSO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/corso.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/corso.png"
      }]
    },
    {
      description: "BackBone Labs Liquid Staked HUAHUA",
      denom_units: [{
        denom: "cw20:chihuahua1jz5n4aynhpxx7clf2m8hrv9dp5nz83k67fgaxhy4p9dfwl6zssrq3ymr6w",
        exponent: 0
      }, {
        denom: "bHUAHUA",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "chihuahua1jz5n4aynhpxx7clf2m8hrv9dp5nz83k67fgaxhy4p9dfwl6zssrq3ymr6w",
      base: "cw20:chihuahua1jz5n4aynhpxx7clf2m8hrv9dp5nz83k67fgaxhy4p9dfwl6zssrq3ymr6w",
      name: "BackBone Labs Liquid Staked HUAHUA",
      display: "bHUAHUA",
      symbol: "bHUAHUA",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/bhuahua.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/bhuahua.png"
      },
      coingecko_id: "backbone-labs-staked-huahua"
    },
    {
      description: "ashHUAHUA - Burned HUAHUA",
      extended_description: "ashHUAHUA - receipt token recieved when burning HUAHUA via ASH DAOs Furnace",
      denom_units: [{
        denom: "factory/chihuahua1hplyuj2hzxd75q8686g9vm3uzrrny9ggvt8aza2csupgdp98vg2sp0e3h0/uhuahua.ash",
        exponent: 0
      }, {
        denom: "ashHUAHUA",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "chihuahua1hplyuj2hzxd75q8686g9vm3uzrrny9ggvt8aza2csupgdp98vg2sp0e3h0",
      base: "factory/chihuahua1hplyuj2hzxd75q8686g9vm3uzrrny9ggvt8aza2csupgdp98vg2sp0e3h0/uhuahua.ash",
      name: "Burned HUAHUA",
      display: "ashHUAHUA",
      symbol: "ashHUAHUA",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/ashhuahua.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/ashhuahua.png"
      }
    },
    {
      denom_units: [{
        denom: "ibc/7D01429FF7542DBC41C261793B480B63FE7A83260C751989CC268BC7E852EB99",
        exponent: 0,
        aliases: ["factory/migaloo1nsskhvvh0msm7d5ke2kfg24a8d4jecsnxd28s27h0uz5kf9ap60shlqmcl/ampGASH"]
      }, {
        denom: "ampGASH",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/7D01429FF7542DBC41C261793B480B63FE7A83260C751989CC268BC7E852EB99",
      name: "ampGASH",
      display: "ampGASH",
      symbol: "ampGASH",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1nsskhvvh0msm7d5ke2kfg24a8d4jecsnxd28s27h0uz5kf9ap60shlqmcl/ampGASH",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-39",
          path: "transfer/channel-39/factory/migaloo1nsskhvvh0msm7d5ke2kfg24a8d4jecsnxd28s27h0uz5kf9ap60shlqmcl/ampGASH"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1nsskhvvh0msm7d5ke2kfg24a8d4jecsnxd28s27h0uz5kf9ap60shlqmcl/ampGASH"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/ampgash.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/ampgash.png"
      }
    },
    {
      denom_units: [{
        denom: "ibc/DBBDE1753EFA93F09C468DB5E384861BB741D4AA73E9C7032D139BB2C99FDD65",
        exponent: 0,
        aliases: ["factory/migaloo1etlu2h30tjvv8rfa4fwdc43c92f6ul5w9acxzk/uguppy"]
      }, {
        denom: "GUPPY",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/DBBDE1753EFA93F09C468DB5E384861BB741D4AA73E9C7032D139BB2C99FDD65",
      name: "GUPPY",
      display: "GUPPY",
      symbol: "GUPPY",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1etlu2h30tjvv8rfa4fwdc43c92f6ul5w9acxzk/uguppy",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-39",
          path: "transfer/channel-39/factory/migaloo1etlu2h30tjvv8rfa4fwdc43c92f6ul5w9acxzk/uguppy"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1etlu2h30tjvv8rfa4fwdc43c92f6ul5w9acxzk/uguppy"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/guppy.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/guppy.png"
      }
    }
  ]
};
var assets_default28 = info78;

// node_modules/chain-registry/esm/mainnet/chihuahua/chain.js
var info79 = {
  $schema: "../chain.schema.json",
  chain_name: "chihuahua",
  status: "live",
  network_type: "mainnet",
  website: "https://chihuahua.wtf/",
  pretty_name: "Chihuahua",
  chain_id: "chihuahua-1",
  bech32_prefix: "chihuahua",
  daemon_name: "chihuahuad",
  node_home: "$HOME/.chihuahuad",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uhuahua",
      fixed_min_gas_price: 0,
      low_gas_price: 500,
      average_gas_price: 1250,
      high_gas_price: 2e3
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uhuahua"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.47.8",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.41.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/huahua.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/huahua.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.chihuahua.wtf",
        provider: "Chihuahua"
      },
      {
        address: "https://rpc-chihuahua.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://chihua.rpc.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://chihuahua-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://rpc-chihuahua-ia.cosmosia.notional.ventures",
        provider: "Notional"
      },
      {
        address: "https://chihuahua-rpc.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc.huahua.bh.rocks",
        provider: "BlockHunters \u{1F3AF}"
      },
      {
        address: "https://chihuahua-rpc.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://rpc-chihuahua.pupmos.network",
        provider: "PUPM\xD8S"
      },
      {
        address: "https://chihuahua-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://chihuahua-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://rpc.chihuahua.validatus.com",
        provider: "Validatus"
      },
      {
        address: "https://chihuahua-rpc.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://chihuahua.rpc.nodeshub.online:443",
        provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705"
      }
    ],
    rest: [
      {
        address: "https://api.chihuahua.wtf",
        provider: "Chihuahua"
      },
      {
        address: "https://rest-chihuahua.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://chihua.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api-chihuahua-ia.cosmosia.notional.ventures",
        provider: "Notional"
      },
      {
        address: "https://chihuahua-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://chihuahua-api.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://chihuahua-api.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://api-chihuahua.pupmos.network",
        provider: "PUPM\xD8S"
      },
      {
        address: "https://chihuahua-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://chihuahua-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://api.chihuahua.validatus.com",
        provider: "Validatus"
      },
      {
        address: "https://chihuahua-api.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://chihuahua.api.nodeshub.online:443",
        provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705"
      }
    ],
    grpc: [
      {
        address: "grpc-chihuahua-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "chihuahua-grpc.polkachu.com:12990",
        provider: "Polkachu"
      },
      {
        address: "chihuahua-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "chihua.grpc.m.stavr.tech:108",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "grpc-chihuahua.cosmos-spaces.cloud:2290",
        provider: "Cosmos Spaces"
      },
      {
        address: "chihuahua-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "chihuahua-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "grpc.chihuahua.validatus.com:443",
        provider: "Validatus"
      },
      {
        address: "chihuahua.grpc.nodeshub.online",
        provider: "Nodes Hub"
      }
    ]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://ping.pub/chihuahua",
      tx_page: "https://ping.pub/chihuahua/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Chihua-Mainnet",
      tx_page: "https://explorer.stavr.tech/Chihua-Mainnet/tx/${txHash}"
    },
    {
      kind: "mintscan",
      url: "https://mintscan.io/chihuahua",
      tx_page: "https://mintscan.io/chihuahua/transactions/${txHash}",
      account_page: "https://www.mintscan.io/chihuahua/accounts/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/chihuahua",
      tx_page: "https://atomscan.com/chihuahua/transactions/${txHash}",
      account_page: "https://atomscan.com/chihuahua/accounts/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/chihuahua",
      tx_page: "https://ezstaking.app/chihuahua/txs/${txHash}",
      account_page: "https://ezstaking.app/chihuahua/account/${accountAddress}"
    },
    {
      kind: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705",
      url: "https://explorer.nodeshub.online/chihuahua/",
      tx_page: "https://explorer.nodeshub.online/chihuahua/tx/${txHash}",
      account_page: "https://explorer.nodeshub.online/chihuahua/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/huahua.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/huahua.svg"
  }]
};
var chain_default28 = info79;

// node_modules/chain-registry/esm/mainnet/chihuahua/ibc.js
var info80 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "chihuahua",
      client_id: "07-tendermint-54",
      connection_id: "connection-30"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-79",
      connection_id: "connection-46"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-28",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "chihuahua",
      client_id: "07-tendermint-126",
      connection_id: "connection-81"
    },
    chain_2: {
      chain_name: "migaloo",
      client_id: "07-tendermint-21",
      connection_id: "connection-21"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-39",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "chihuahua",
      client_id: "07-tendermint-191",
      connection_id: "connection-127"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-74",
      connection_id: "connection-53"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-76",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-77",
        port_id: "wasm.chihuahua1jwkag4yvhyj9fuddtkygvavya8hmdjuzmgxwg9vp3lw9twv6lrcq9mgl52"
      },
      chain_2: {
        channel_id: "channel-52",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "chihuahua",
      client_id: "07-tendermint-85",
      connection_id: "connection-54"
    },
    chain_2: {
      chain_name: "okexchain",
      client_id: "07-tendermint-5",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-24",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "chihuahua",
      client_id: "07-tendermint-45",
      connection_id: "connection-25"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1666",
      connection_id: "connection-1278"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-113",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }, {
      chain_1: {
        channel_id: "channel-73",
        port_id: "wasm.chihuahua1jwkag4yvhyj9fuddtkygvavya8hmdjuzmgxwg9vp3lw9twv6lrcq9mgl52"
      },
      chain_2: {
        channel_id: "channel-11348",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "chihuahua",
      client_id: "07-tendermint-207",
      connection_id: "connection-137"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-168",
      connection_id: "connection-212"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-94",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-203",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "chihuahua",
      client_id: "07-tendermint-70",
      connection_id: "connection-38"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-27",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-16",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "chihuahua",
      client_id: "07-tendermint-86",
      connection_id: "connection-55"
    },
    chain_2: {
      chain_name: "stafihub",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-25",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default24 = info80;

// node_modules/chain-registry/esm/mainnet/chihuahua/index.js
var assets28 = assets_default28;
var chain28 = chain_default28;
var ibc24 = ibc_default24;

// node_modules/chain-registry/esm/mainnet/chimba/assets.js
var info81 = {
  $schema: "../assetlist.schema.json",
  chain_name: "chimba",
  assets: [{
    description: "The first blokchain in colombia",
    denom_units: [{
      denom: "ucmba",
      exponent: 0
    }, {
      denom: "chimba",
      exponent: 6
    }],
    base: "ucmba",
    name: "Chimba",
    display: "chimba",
    symbol: "CMBA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chimba/images/chimba-blue.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chimba/images/chimba-blue.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chimba/images/chimba-blue.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chimba/images/chimba-blue.svg"
    }]
  }]
};
var assets_default29 = info81;

// node_modules/chain-registry/esm/mainnet/chimba/chain.js
var info82 = {
  $schema: "../chain.schema.json",
  chain_name: "chimba",
  status: "live",
  network_type: "mainnet",
  website: "https://chimba.ooo/",
  pretty_name: "Chimba",
  chain_id: "chimba",
  bech32_prefix: "chimba",
  daemon_name: "chimbad",
  node_home: "$HOME/.chimbad",
  fees: {
    fee_tokens: [{
      denom: "ucmba",
      fixed_min_gas_price: 0.25,
      low_gas_price: 1,
      average_gas_price: 5,
      high_gas_price: 10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ucmba"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chimba/images/chimba-blue.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chimba/images/chimba-blue.svg"
  },
  apis: {
    rpc: [{
      address: "https://rpc.mainnet.chimba.ooo",
      provider: "chimba"
    }],
    rest: [{
      address: "https://mainnet.chimba.ooo",
      provider: "chimba"
    }]
  },
  explorers: [{
    kind: "bigdipper",
    url: "https://explorer.chimba.ooo/",
    tx_page: "https://explorer.chimba.ooo/transactions/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chimba/images/chimba-blue.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chimba/images/chimba-blue.svg"
  }],
  slip44: 118
};
var chain_default29 = info82;

// node_modules/chain-registry/esm/mainnet/chimba/index.js
var assets29 = assets_default29;
var chain29 = chain_default29;

// node_modules/chain-registry/esm/mainnet/chronicnetwork/assets.js
var info83 = {
  $schema: "../assetlist.schema.json",
  chain_name: "chronicnetwork",
  assets: [{
    description: "The CHT coin is the governance token within the Chronic Chain network, aimed to serve the entire cannabis community through its payment network, supply chain and trust network.",
    denom_units: [{
      denom: "ucht",
      exponent: 0
    }, {
      denom: "cht",
      exponent: 6
    }],
    base: "ucht",
    display: "cht",
    name: "Chronic Token",
    symbol: "CHT",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chronicnetwork/images/cht.png"
    },
    coingecko_id: "cht",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chronicnetwork/images/cht.png"
    }]
  }, {
    description: "The CGAS coin is the transactional token within the Chronic Chain network, aimed to serve the entire cannabis community through its payment network, supply chain and trust network.",
    denom_units: [{
      denom: "ucgas",
      exponent: 0
    }, {
      denom: "cgas",
      exponent: 6
    }],
    base: "ucgas",
    display: "cgas",
    name: "Chronic Gas",
    symbol: "CGAS",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chronicnetwork/images/cgas.png"
    },
    coingecko_id: "cgas",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chronicnetwork/images/cgas.png"
    }]
  }]
};
var assets_default30 = info83;

// node_modules/chain-registry/esm/mainnet/chronicnetwork/chain.js
var info84 = {
  $schema: "../chain.schema.json",
  chain_name: "chronicnetwork",
  status: "killed",
  network_type: "mainnet",
  pretty_name: "Chronic Chain",
  chain_id: "morocco-1",
  bech32_prefix: "chronic",
  daemon_name: "chtd",
  node_home: "$HOME/.cht",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ucgas",
      fixed_min_gas_price: 1e-3
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://rpc-chronic.zenchainlabs.io/",
      provider: "ZenChainLabs"
    }],
    rest: [{
      address: "https://api-chronic.zenchainlabs.io/",
      provider: "ZenChainLabs"
    }]
  },
  explorers: [
    {
      kind: "skynetexplorers",
      url: "https://www.skynetexplorers.com/chronic-token"
    },
    {
      kind: "Zenscan.io",
      url: "https://www.chronic.zenscan.io"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/chronicnetwork",
      tx_page: "https://atomscan.com/chronicnetwork/transactions/${txHash}",
      account_page: "https://atomscan.com/chronicnetwork/accounts/${accountAddress}"
    }
  ]
};
var chain_default30 = info84;

// node_modules/chain-registry/esm/mainnet/chronicnetwork/index.js
var assets30 = assets_default30;
var chain30 = chain_default30;

// node_modules/chain-registry/esm/mainnet/cifer/assets.js
var info85 = {
  $schema: "../assetlist.schema.json",
  chain_name: "cifer",
  assets: [{
    description: "Decentralized Machine Learning",
    denom_units: [{
      denom: "ucif",
      exponent: 0
    }, {
      denom: "cif",
      exponent: 6
    }],
    base: "ucif",
    name: "Cifer",
    display: "cif",
    symbol: "CIF",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.svg"
    }],
    socials: {
      website: "http://cifer.ai/",
      twitter: "https://twitter.com/cifer_ai"
    }
  }]
};
var assets_default31 = info85;

// node_modules/chain-registry/esm/mainnet/cifer/chain.js
var info86 = {
  $schema: "../chain.schema.json",
  chain_name: "cifer",
  status: "live",
  network_type: "mainnet",
  website: "https://cifer.ai/",
  pretty_name: "Cifer",
  chain_id: "cifer-2",
  bech32_prefix: "cife",
  daemon_name: "ciferd",
  node_home: "$HOME/.ciferd",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ucif",
      fixed_min_gas_price: 25e-4,
      low_gas_price: 1,
      average_gas_price: 5,
      high_gas_price: 10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ucif"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.svg"
  },
  apis: {
    rpc: [{
      address: "https://cif_node.cifer.ai/",
      provider: "Cifer"
    }],
    rest: [{
      address: "https://api.cifer.ai",
      provider: "Cifer"
    }],
    grpc: [{
      address: "http://grpc.cifer.ai",
      provider: "Cifer"
    }]
  },
  explorers: [{
    kind: "bigdipper",
    url: "https://explorer.cifer.ai/",
    tx_page: "https://explorer.cifer.ai/transactions/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.svg"
  }]
};
var chain_default31 = info86;

// node_modules/chain-registry/esm/mainnet/cifer/ibc.js
var info87 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "cifer",
    client_id: "07-tendermint-0",
    connection_id: "connection-0"
  },
  chain_2: {
    chain_name: "cosmoshub",
    client_id: "07-tendermint-1301",
    connection_id: "connection-1035"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-831",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "cifer",
    client_id: "07-tendermint-1",
    connection_id: "connection-1"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-3184",
    connection_id: "connection-2646"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-39205",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default25 = info87;

// node_modules/chain-registry/esm/mainnet/cifer/index.js
var assets31 = assets_default31;
var chain31 = chain_default31;
var ibc25 = ibc_default25;

// node_modules/chain-registry/esm/mainnet/cifer1/assets.js
var info88 = {
  $schema: "../assetlist.schema.json",
  chain_name: "cifer1",
  assets: [{
    description: "Decentralized Federated Learning",
    denom_units: [{
      denom: "ucif",
      exponent: 0
    }, {
      denom: "cif",
      exponent: 6
    }],
    base: "ucif",
    name: "Cifer",
    display: "cif",
    symbol: "CIF",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.svg"
    }]
  }]
};
var assets_default32 = info88;

// node_modules/chain-registry/esm/mainnet/cifer1/chain.js
var info89 = {
  $schema: "../chain.schema.json",
  chain_name: "cifer1",
  status: "killed",
  network_type: "mainnet",
  website: "https://cifer.ai/",
  pretty_name: "Cifer",
  chain_id: "cifer-1",
  bech32_prefix: "cife",
  daemon_name: "ciferd",
  node_home: "$HOME/.ciferd",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ucif",
      fixed_min_gas_price: 25e-4,
      low_gas_price: 1,
      average_gas_price: 5,
      high_gas_price: 10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ucif"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.svg"
  },
  apis: {
    rpc: [{
      address: "https://cif_node.cifer.ai/",
      provider: "Cifer"
    }],
    rest: [{
      address: "https://api.cifer.ai",
      provider: "Cifer"
    }],
    grpc: [{
      address: "http://grpc.cifer.ai",
      provider: "Cifer"
    }]
  },
  explorers: [{
    kind: "bigdipper",
    url: "https://explorer.cifer.ai/",
    tx_page: "https://explorer.cifer.ai/transactions/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.svg"
  }]
};
var chain_default32 = info89;

// node_modules/chain-registry/esm/mainnet/cifer1/index.js
var assets32 = assets_default32;
var chain32 = chain_default32;

// node_modules/chain-registry/esm/mainnet/comdex/assets.js
var info90 = {
  $schema: "../assetlist.schema.json",
  chain_name: "comdex",
  assets: [
    {
      description: "Native Token of Comdex Protocol",
      denom_units: [{
        denom: "ucmdx",
        exponent: 0
      }, {
        denom: "cmdx",
        exponent: 6
      }],
      base: "ucmdx",
      name: "Comdex",
      display: "cmdx",
      symbol: "CMDX",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmdx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmdx.svg"
      },
      coingecko_id: "comdex",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmdx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmdx.svg"
      }]
    },
    {
      description: "Governance Token of Harbor protocol on Comdex network",
      denom_units: [{
        denom: "uharbor",
        exponent: 0
      }, {
        denom: "harbor",
        exponent: 6
      }],
      base: "uharbor",
      name: "Harbor",
      display: "harbor",
      symbol: "HARBOR",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/harbor.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/harbor.svg"
      },
      coingecko_id: "harbor-2",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/harbor.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/harbor.svg"
      }]
    },
    {
      description: "Stable Token of Harbor protocol on Comdex network",
      denom_units: [{
        denom: "ucmst",
        exponent: 0
      }, {
        denom: "cmst",
        exponent: 6
      }],
      base: "ucmst",
      name: "CMST",
      display: "cmst",
      symbol: "CMST",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmst.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmst.svg"
      },
      coingecko_id: "composite",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmst.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmst.svg"
      }]
    }
  ]
};
var assets_default33 = info90;

// node_modules/chain-registry/esm/mainnet/comdex/chain.js
var info91 = {
  $schema: "../chain.schema.json",
  chain_name: "comdex",
  status: "live",
  network_type: "mainnet",
  website: "https://comdex.one/",
  pretty_name: "Comdex",
  chain_id: "comdex-1",
  bech32_prefix: "comdex",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ucmdx",
      fixed_min_gas_price: 0,
      low_gas_price: 0,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ucmdx"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.47.5",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.41.0"
  },
  daemon_name: "comdex",
  node_home: "$HOME/.comdex",
  key_algos: ["secp256k1"],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmdx.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmdx.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.comdex.one",
        provider: "comdex"
      },
      {
        address: "https://comdex-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://comdex.rpc.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc.comdex.chaintools.tech/",
        provider: "ChainTools"
      },
      {
        address: "https://comdex-rpc.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc-comdex.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://rpc-comdex.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://comdex-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://comdex-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://comdex-rpc.stakerhouse.com",
        provider: "StakerHouse"
      },
      {
        address: "https://comdex-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://rpc-comdex-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://comdex-rpc.validatornode.com",
        provider: "ValidatorNode"
      },
      {
        address: "https://rpc-comdex.blockval.io",
        provider: "Blockval"
      }
    ],
    rest: [
      {
        address: "https://rest.comdex.one",
        provider: "comdex"
      },
      {
        address: "https://api.comdex.chaintools.tech/",
        provider: "ChainTools"
      },
      {
        address: "https://comdex-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://comdex.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://comdex-api.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://api-comdex.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://comdex-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://lcd-comdex.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://comdex-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://comdex-rest.stakerhouse.com",
        provider: "StakerHouse"
      },
      {
        address: "https://comdex-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://api-comdex-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://comdex-api.validatornode.com",
        provider: "ValidatorNode"
      },
      {
        address: "https://api-comdex.blockval.io",
        provider: "Blockval"
      }
    ],
    grpc: [
      {
        address: "grpc-comdex-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "comdex.grpcui.chaintools.host:443",
        provider: "ChainTools"
      },
      {
        address: "comdex-grpc.polkachu.com:13190",
        provider: "Polkachu"
      },
      {
        address: "comdex.grpc.m.stavr.tech:104",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "grpc-comdex.cosmos-spaces.cloud:2300",
        provider: "Cosmos Spaces"
      },
      {
        address: "comdex-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "comdex-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "comdex-grpc.w3coins.io:13190",
        provider: "w3coins"
      },
      {
        address: "comdex-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "grpc-comdex-01.stakeflow.io:10002",
        provider: "Stakeflow"
      },
      {
        address: "comdex-grpc.stakerhouse.com:443",
        provider: "StakerHouse"
      },
      {
        address: "https://grpc-comdex.blockval.io:443",
        provider: "Blockval"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/comdex",
      tx_page: "https://ezstaking.app/comdex/txs/${txHash}",
      account_page: "https://ezstaking.app/comdex/account/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/comdex",
      tx_page: "https://www.mintscan.io/comdex/transactions/${txHash}",
      account_page: "https://www.mintscan.io/comdex/accounts/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Comdex-Mainnet",
      tx_page: "https://explorer.stavr.tech/Comdex-Mainnet/txs/${txHash}",
      account_page: "https://explorer.stavr.tech/Comdex-Mainnet/accounts/${accountAddress}"
    },
    {
      kind: "aneka",
      url: "https://comdex.aneka.io/",
      tx_page: "https://comdex.aneka.io/txs/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/comdex",
      tx_page: "https://ping.pub/comdex/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/comdex",
      tx_page: "https://atomscan.com/comdex/transactions/${txHash}",
      account_page: "https://atomscan.com/comdex/accounts/${accountAddress}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/comdex",
      account_page: "https://stakeflow.io/comdex/accounts/${accountAddress}"
    },
    {
      kind: "ValidatorNode",
      url: "https://explorer.validatornode.com/comdex",
      tx_page: "https://explorer.validatornode.com/comdex/tx/${txHash}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/comdex",
      tx_page: "https://mainnet.whispernode.com/comdex/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/comdex/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmdx.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmdx.svg"
  }]
};
var chain_default33 = info91;

// node_modules/chain-registry/esm/mainnet/comdex/ibc.js
var info92 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bandchain",
      client_id: "07-tendermint-124",
      connection_id: "connection-107"
    },
    chain_2: {
      chain_name: "comdex",
      client_id: "07-tendermint-81",
      connection_id: "connection-48"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-96",
        port_id: "oracle"
      },
      chain_2: {
        channel_id: "channel-43",
        port_id: "bandoracleV1"
      },
      ordering: "unordered",
      version: "bandchain-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "comdex",
      client_id: "07-tendermint-108",
      connection_id: "connection-54"
    },
    chain_2: {
      chain_name: "crescent",
      client_id: "07-tendermint-32",
      connection_id: "connection-33"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-49",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-26",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "comdex",
      client_id: "07-tendermint-30",
      connection_id: "connection-19"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-92",
      connection_id: "connection-55"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "comdex",
      client_id: "07-tendermint-52",
      connection_id: "connection-34"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-20",
      connection_id: "connection-15"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-31",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "comdex",
      client_id: "07-tendermint-139",
      connection_id: "connection-71"
    },
    chain_2: {
      chain_name: "migaloo",
      client_id: "07-tendermint-25",
      connection_id: "connection-24"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-63",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "comdex",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1587",
      connection_id: "connection-1243"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-87",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "comdex",
      client_id: "07-tendermint-123",
      connection_id: "connection-65"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-94",
      connection_id: "connection-75"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-57",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-71",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "comdex",
      client_id: "07-tendermint-142",
      connection_id: "connection-74"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-125",
      connection_id: "connection-95"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-65",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-63",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "comdex",
      client_id: "07-tendermint-83",
      connection_id: "connection-50"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-41",
      connection_id: "connection-28"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-45",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-49",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "comdex",
      client_id: "07-tendermint-117",
      connection_id: "connection-56"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-70",
      connection_id: "connection-59"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-39",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default26 = info92;

// node_modules/chain-registry/esm/mainnet/comdex/index.js
var assets33 = assets_default33;
var chain33 = chain_default33;
var ibc26 = ibc_default26;

// node_modules/chain-registry/esm/mainnet/commercionetwork/assets.js
var info93 = {
  $schema: "../assetlist.schema.json",
  chain_name: "commercionetwork",
  assets: [{
    description: "The native token of Commercio.network",
    denom_units: [{
      denom: "ucommercio",
      exponent: 0,
      aliases: []
    }, {
      denom: "commercio",
      exponent: 6,
      aliases: []
    }],
    base: "ucommercio",
    display: "commercio",
    name: "Commercio",
    symbol: "COM",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/commercionetwork/images/com.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/commercionetwork/images/com.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/commercionetwork/images/com.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/commercionetwork/images/com.svg"
    }]
  }, {
    description: "The cash credit token of Commercio.network",
    denom_units: [{
      denom: "uccc",
      exponent: 0,
      aliases: []
    }, {
      denom: "ccc",
      exponent: 6,
      aliases: []
    }],
    base: "uccc",
    display: "ccc",
    name: "Commercio Cash Credit",
    symbol: "CCC",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/commercionetwork/images/ccc.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/commercionetwork/images/ccc.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/commercionetwork/images/ccc.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/commercionetwork/images/ccc.svg"
    }]
  }]
};
var assets_default34 = info93;

// node_modules/chain-registry/esm/mainnet/commercionetwork/chain.js
var info94 = {
  $schema: "../chain.schema.json",
  chain_name: "commercionetwork",
  chain_id: "commercio-3",
  pretty_name: "Commercio.network",
  status: "live",
  network_type: "mainnet",
  bech32_prefix: "did:com:",
  daemon_name: "commercionetworkd",
  node_home: "$HOME/.commercionetwork",
  key_algos: ["secp256k1"],
  slip44: 701,
  fees: {
    fee_tokens: [{
      denom: "ucommercio"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/commercionetwork/images/com.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/commercionetwork/images/com.svg"
  },
  apis: {
    rpc: [{
      address: "https://rpc-mainnet.commercio.network"
    }],
    rest: [{
      address: "https://lcd-mainnet.commercio.network"
    }]
  },
  explorers: [{
    kind: "almerico",
    url: "https://mainnet.commercio.network",
    tx_page: "https://mainnet.commercio.network/transactions/detail/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/commercionetwork/images/com.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/commercionetwork/images/com.svg"
  }]
};
var chain_default34 = info94;

// node_modules/chain-registry/esm/mainnet/commercionetwork/index.js
var assets34 = assets_default34;
var chain34 = chain_default34;

// node_modules/chain-registry/esm/mainnet/composable/assets.js
var info95 = {
  $schema: "../assetlist.schema.json",
  chain_name: "composable",
  assets: [
    {
      description: "The native staking, governance and revenue sharing token of Picasso.",
      denom_units: [{
        denom: "ppica",
        exponent: 0
      }, {
        denom: "pica",
        exponent: 12
      }],
      base: "ppica",
      name: "Pica",
      display: "pica",
      symbol: "PICA",
      coingecko_id: "picasso",
      traces: [{
        type: "additional-mintage",
        counterparty: {
          chain_name: "picasso",
          base_denom: "ppica"
        },
        provider: "Picasso"
      }],
      images: [{
        image_sync: {
          chain_name: "picasso",
          base_denom: "ppica"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/composable/images/pica.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/composable/images/pica.svg"
      },
      socials: {
        website: "https://picasso.network/",
        twitter: "https://twitter.com/picasso_network"
      }
    },
    {
      description: "The native staking and governance token of Kusama Relay Chain.",
      denom_units: [{
        denom: "ibc/EE9046745AEC0E8302CB7ED9D5AD67F528FB3B7AE044B247FB0FB293DBDA35E9",
        exponent: 0,
        aliases: ["4"]
      }, {
        denom: "ksm",
        exponent: 12
      }],
      type_asset: "ics20",
      base: "ibc/EE9046745AEC0E8302CB7ED9D5AD67F528FB3B7AE044B247FB0FB293DBDA35E9",
      name: "KSM",
      display: "ksm",
      symbol: "KSM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "picasso",
          base_denom: "4",
          channel_id: "channel-17"
        },
        chain: {
          channel_id: "channel-2",
          path: "transfer/channel-2/4"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "picasso",
          base_denom: "4"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/kusama/images/ksm.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/kusama/images/ksm.svg"
      }
    },
    {
      description: "The native staking and governance token of Polkadot Relay Chain.",
      denom_units: [{
        denom: "ibc/3CC19CEC7E5A3E90E78A5A9ECC5A0E2F8F826A375CF1E096F4515CF09DA3E366",
        exponent: 0,
        aliases: ["79228162514264337593543950342"]
      }, {
        denom: "dot",
        exponent: 10
      }],
      type_asset: "ics20",
      base: "ibc/3CC19CEC7E5A3E90E78A5A9ECC5A0E2F8F826A375CF1E096F4515CF09DA3E366",
      name: "DOT",
      display: "dot",
      symbol: "DOT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "picasso",
          base_denom: "79228162514264337593543950342",
          channel_id: "channel-17"
        },
        chain: {
          channel_id: "channel-2",
          path: "transfer/channel-2/transfer/channel-15/79228162514264337593543950342"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "picasso",
          base_denom: "79228162514264337593543950342"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.svg"
      }
    },
    {
      description: "USDT issued by the Kusama Asset Hub.",
      denom_units: [{
        denom: "ibc/F3EC9F834E57DF704FA3AEAF14E8391C2E58397FE56960AD70E67562990D8265",
        exponent: 0,
        aliases: ["130"]
      }, {
        denom: "usdt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/F3EC9F834E57DF704FA3AEAF14E8391C2E58397FE56960AD70E67562990D8265",
      name: "USDT",
      display: "usdt",
      symbol: "USDT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "picasso",
          base_denom: "130",
          channel_id: "channel-17"
        },
        chain: {
          channel_id: "channel-2",
          path: "transfer/channel-2/130"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "picasso",
          base_denom: "130"
        }
      }]
    },
    {
      description: "The native fee, staking and governance token of the Tinkernet Parachain.",
      denom_units: [{
        denom: "ibc/C58E5D2571042137CB68B1B9851C4E7211C05F7C2C79E21E0966AF0F063961F8",
        exponent: 0,
        aliases: ["2125"]
      }, {
        denom: "tnkr",
        exponent: 12
      }],
      type_asset: "ics20",
      base: "ibc/C58E5D2571042137CB68B1B9851C4E7211C05F7C2C79E21E0966AF0F063961F8",
      name: "TNKR",
      display: "tnkr",
      symbol: "TNKR",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "picasso",
          base_denom: "2125",
          channel_id: "channel-17"
        },
        chain: {
          channel_id: "channel-2",
          path: "transfer/channel-2/2125"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "picasso",
          base_denom: "2125"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/tinkernet/images/tnkr.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/tinkernet/images/tnkr.svg"
      }
    },
    {
      description: "The native token of Ethereum, bridged via IBC.",
      extended_description: "Ether is the native token of the Ethereum blockchain. It powers a wide range of decentralized applications and smart contracts on the platform. This specific version has been bridged through Picasso's implementation of IBC on Ethereum.",
      denom_units: [{
        denom: "ibc/F9D075D4079FC56A9C49B601E54A45292C319D8B0E8CC0F8439041130AA7166C",
        exponent: 0,
        aliases: ["wei"]
      }, {
        denom: "eth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/F9D075D4079FC56A9C49B601E54A45292C319D8B0E8CC0F8439041130AA7166C",
      name: "Ethereum",
      display: "eth",
      symbol: "ETH",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "wei",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/wei"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "wei"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.png"
      }],
      socials: {
        website: "https://ethereum.org/",
        twitter: "https://twitter.com/ethereum"
      }
    },
    {
      description: "A stablecoin issued by Maker Protocol.",
      extended_description: "DAI, a stablecoin issued by the Maker Protocol, maintains a value pegged to the US dollar. This specific version has been bridged through Picasso's implementation of IBC on Ethereum.",
      denom_units: [{
        denom: "ibc/A342F6F8D1CDE1D934C50E8EAFF91E813D971E1BFEED7E557F1674E01004A533",
        exponent: 0,
        aliases: ["dai-wei"]
      }, {
        denom: "dai",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/A342F6F8D1CDE1D934C50E8EAFF91E813D971E1BFEED7E557F1674E01004A533",
      name: "Dai",
      display: "dai",
      symbol: "DAI",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x6b175474e89094c44da98b954eedeac495271d0f",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0x6b175474e89094c44da98b954eedeac495271d0f"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/dai.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x6b175474e89094c44da98b954eedeac495271d0f"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/dai.svg"
      }],
      socials: {
        website: "https://makerdao.com/",
        twitter: "https://twitter.com/MakerDAO"
      }
    },
    {
      description: "The governance token of the Frax ecosystem.",
      extended_description: "Frax Shares is the governance and utility token of the Frax Protocol. It plays a crucial role in maintaining the stability of the FRAX stablecoin. Holders of FXS can participate in governance decisions and benefit from the protocol's growth and revenue, as the token captures fees.",
      denom_units: [{
        denom: "ibc/5F9BE030FC355733EC79307409FA98398BBFC747C9430B326C144A74F6808B29",
        exponent: 0,
        aliases: ["fxs-wei"]
      }, {
        denom: "fxs",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/5F9BE030FC355733EC79307409FA98398BBFC747C9430B326C144A74F6808B29",
      name: "Frax Shares",
      display: "fxs",
      symbol: "FXS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/fxs.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/fxs.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/fxs.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/fxs.png"
      }],
      socials: {
        website: "https://www.frax.com/",
        twitter: "https://twitter.com/fraxfinance"
      }
    },
    {
      description: "The first fractional-algorithmic stablecoin by Frax Finance.",
      extended_description: "FRAX is a stablecoin designed to maintain a stable value to a peg of the US dollar. It is issued by the Frax Protocol, which employs a hybrid approach combining algorithmic mechanisms with collateral backing.",
      denom_units: [{
        denom: "ibc/4F20D68B51ED559F99C3CD658383E91F45486D884BF546E7B25337A058562CDB",
        exponent: 0,
        aliases: ["frax-wei"]
      }, {
        denom: "frax",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/4F20D68B51ED559F99C3CD658383E91F45486D884BF546E7B25337A058562CDB",
      name: "Frax",
      display: "frax",
      symbol: "FRAX",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x853d955acef822db058eb8505911ed77f175b99e",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0x853d955acef822db058eb8505911ed77f175b99e"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frax.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x853d955acef822db058eb8505911ed77f175b99e"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frax.svg"
      }],
      socials: {
        website: "https://www.frax.com/",
        twitter: "https://twitter.com/fraxfinance"
      }
    },
    {
      description: "A liquid ETH staking derivative designed to leverage the Frax ecosystem.",
      extended_description: "FrxETH is a stablecoin that is loosely pegged to ETH, meaning that 1 frxETH always represents 1 ETH.",
      denom_units: [{
        denom: "ibc/458032E654E41DB91EF98F13E2CE4F9E0FE86BA3E0CDBEC074A854E9F5229A90",
        exponent: 0,
        aliases: ["frxeth-wei"]
      }, {
        denom: "frxeth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/458032E654E41DB91EF98F13E2CE4F9E0FE86BA3E0CDBEC074A854E9F5229A90",
      name: "Frax Ether",
      display: "frxeth",
      symbol: "frxETH",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x5e8422345238f34275888049021821e8e08caa1f",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0x5e8422345238f34275888049021821e8e08caa1f"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frxeth.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frxeth.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x5e8422345238f34275888049021821e8e08caa1f"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frxeth.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frxeth.png"
      }],
      socials: {
        website: "https://www.frax.com/",
        twitter: "https://twitter.com/fraxfinance"
      }
    },
    {
      description: "A Liquid Staking Derivative designed to accrue the staking yield of the Frax ETH validators.",
      extended_description: "SFRXETH is a ERC-4626 vault designed to accrue the staking yield of the Frax ETH validators. It allows users to earn staking yield on their frxETH, a type of Frax Ether.",
      denom_units: [{
        denom: "ibc/4E0ECE7819D77B0F2B49F5C34B5E594A02D2BA8B1B0F103208F847B53EBFB69A",
        exponent: 0,
        aliases: ["sfrxeth-wei"]
      }, {
        denom: "sfrxeth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/4E0ECE7819D77B0F2B49F5C34B5E594A02D2BA8B1B0F103208F847B53EBFB69A",
      name: "Frax Staked Ether",
      display: "sfrxeth",
      symbol: "sfrxETH",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xac3e018457b222d93114458476f3e3416abbe38f",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0xac3e018457b222d93114458476f3e3416abbe38f"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sfrxeth.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xac3e018457b222d93114458476f3e3416abbe38f"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sfrxeth.svg"
      }],
      socials: {
        website: "https://www.frax.com/",
        twitter: "https://twitter.com/fraxfinance"
      }
    },
    {
      description: "An ERC4626 staking vault that distributes part of the Frax Protocol yield weekly to stakers denominated in FRAX stablecoins. ",
      extended_description: "Staked FRAX (sFRAX) is an ERC4626 staking vault that distributes part of the Frax Protocol yield weekly to stakers denominated in FRAX stablecoins. The sFRAX token represents pro rata deposits within the vault and is always withdrawable for FRAX stablecoins at the pro rata rate at all times.",
      denom_units: [{
        denom: "ibc/5BD7F23FE150D9CF3BCC944DB829380BCC51A4022A131151C4D13B3AFAC2D1D9",
        exponent: 0,
        aliases: ["sfrax-wei"]
      }, {
        denom: "sfrax",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/5BD7F23FE150D9CF3BCC944DB829380BCC51A4022A131151C4D13B3AFAC2D1D9",
      name: "Staked FRAX",
      display: "sfrax",
      symbol: "sFRAX",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xa663b02cf0a4b149d2ad41910cb81e23e1c41c32",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0xa663b02cf0a4b149d2ad41910cb81e23e1c41c32"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sfrax.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sfrax.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xa663b02cf0a4b149d2ad41910cb81e23e1c41c32"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sfrax.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sfrax.png"
      }],
      socials: {
        website: "https://www.frax.com/",
        twitter: "https://twitter.com/fraxfinance"
      }
    },
    {
      description: "A stablecoin issued by Tether that is pegged 1:1 to the USD.",
      extended_description: "USDT, or Tether, is a widely used stablecoin pegged to the US dollar, designed to maintain a stable value and facilitate transactions. This specific version has been bridged through Picasso's implementation of IBC on Ethereum.",
      denom_units: [{
        denom: "ibc/37CC704EA53E96AB09A9C31D79142DE7DB252420F3AB18015F9870AE219947BD",
        exponent: 0,
        aliases: ["uusdt"]
      }, {
        denom: "usdt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/37CC704EA53E96AB09A9C31D79142DE7DB252420F3AB18015F9870AE219947BD",
      name: "Tether (Ethereum)",
      display: "usdt",
      symbol: "USDT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0xdac17f958d2ee523a2206206994597c13d831ec7"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }],
      socials: {
        website: "https://www.tether.to/",
        twitter: "https://twitter.com/Tether_to"
      }
    },
    {
      description: "CRV is the governance token for Curve Finance.",
      denom_units: [{
        denom: "ibc/52C8C6197989684F891076F228F20CD1659AB6E1776E3B85E65CBBEC67DA5DED",
        exponent: 0,
        aliases: ["crv-wei"]
      }, {
        denom: "crv",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/52C8C6197989684F891076F228F20CD1659AB6E1776E3B85E65CBBEC67DA5DED",
      name: "Curve DAO",
      display: "crv",
      symbol: "CRV",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xd533a949740bb3306d119cc777fa900ba034cd52",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0xd533a949740bb3306d119cc777fa900ba034cd52"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/crv.png"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xd533a949740bb3306d119cc777fa900ba034cd52"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/crv.png"
      }]
    },
    {
      description: "An ERC-20 token issued Ethereum that represents Bitcoin.",
      denom_units: [{
        denom: "ibc/1507315B0C337368B85A7EC67C3956C508E1106EBD96336B1B092F7B2815B3E5",
        exponent: 0,
        aliases: ["wbtc-satoshi"]
      }, {
        denom: "wbtc",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/1507315B0C337368B85A7EC67C3956C508E1106EBD96336B1B092F7B2815B3E5",
      name: "Wrapped Bitcoin",
      display: "wbtc",
      symbol: "wBTC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0x2260fac5e5542a773aa44fbcfedf7c193bc2c599"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.png"
      }]
    },
    {
      description: "A token that represents staked ether in Lido.",
      denom_units: [{
        denom: "ibc/74F65FE91F672BC2524C039B3CD0211F6D370071209552533DF26D57743D5FFD",
        exponent: 0,
        aliases: ["steth-wei"]
      }, {
        denom: "steth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/74F65FE91F672BC2524C039B3CD0211F6D370071209552533DF26D57743D5FFD",
      name: "Lido Staked Ether",
      display: "steth",
      symbol: "stETH",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xae7ab96520de3a18e5e111b5eaab095312d7fe84",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/steth.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xae7ab96520de3a18e5e111b5eaab095312d7fe84"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/steth.svg"
      }]
    },
    {
      description: "Rocket Pool protocol's liquid staking token.",
      denom_units: [{
        denom: "ibc/207E7F34DFEBF714CED4900C1FD85BAF200230BF431EE8133EB26B98CB535EDC",
        exponent: 0,
        aliases: ["reth-wei"]
      }, {
        denom: "reth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/207E7F34DFEBF714CED4900C1FD85BAF200230BF431EE8133EB26B98CB535EDC",
      name: "Rocket Pool ETH",
      display: "reth",
      symbol: "rETH",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xae78736cd615f374d3085123a210448e74fc6393",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0xae78736cd615f374d3085123a210448e74fc6393"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/reth.png"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xae78736cd615f374d3085123a210448e74fc6393"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/reth.png"
      }]
    },
    {
      description: "A collateralized-debt-position (CDP) stablecoin by Curve DAO.",
      denom_units: [{
        denom: "ibc/C9D79BE8E3E75CA2DFDC722C77D7B179C39A4802D59019C790A825FDE34B724A",
        exponent: 0,
        aliases: ["crvusd-wei"]
      }, {
        denom: "crvusd",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/C9D79BE8E3E75CA2DFDC722C77D7B179C39A4802D59019C790A825FDE34B724A",
      name: "crvUSD",
      display: "crvusd",
      symbol: "crvUSD",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xf939e0a03fb07f59a73314e73794be0e57ac1b4e",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0xf939e0a03fb07f59a73314e73794be0e57ac1b4e"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/crvusd.png"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xf939e0a03fb07f59a73314e73794be0e57ac1b4e"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/crvusd.png"
      }]
    },
    {
      description: "pxETH is built on top of the Pirex platform and forms the foundation of the Dinero protocol.",
      denom_units: [{
        denom: "ibc/36EF1EA47A09689C81D848B08E5240FA9FF13B17DB7DCF48B77D4D0D9B152821",
        exponent: 0,
        aliases: ["pxeth-wei"]
      }, {
        denom: "pxeth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/36EF1EA47A09689C81D848B08E5240FA9FF13B17DB7DCF48B77D4D0D9B152821",
      name: "Dinero Staked ETH",
      display: "pxeth",
      symbol: "pxETH",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x04c154b66cb340f3ae24111cc767e0184ed00cc6",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0x04c154b66cb340f3ae24111cc767e0184ed00cc6"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pxeth.png"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x04c154b66cb340f3ae24111cc767e0184ed00cc6"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pxeth.png"
      }]
    },
    {
      description: "eETH is a natively restaked liquid staking token on Ethereum.",
      denom_units: [{
        denom: "ibc/34C23BA6BAA2EAE0199D85AD1E2E214F76B0BFAD42BF75542D15F71264EEB05B",
        exponent: 0,
        aliases: ["eeth-wei"]
      }, {
        denom: "eeth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/34C23BA6BAA2EAE0199D85AD1E2E214F76B0BFAD42BF75542D15F71264EEB05B",
      name: "ether.fi Staked ETH",
      display: "eeth",
      symbol: "eETH",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x35fa164735182de50811e8e2e824cfb9b6118ac2",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0x35fa164735182de50811e8e2e824cfb9b6118ac2"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eeth.png"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x35fa164735182de50811e8e2e824cfb9b6118ac2"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eeth.png"
      }]
    },
    {
      description: "The native governance token of Ethena.",
      denom_units: [{
        denom: "ibc/B089810D5A6316AD5E9C7808733DC4AB11C7BA3033221D28711FC7206BACB929",
        exponent: 0,
        aliases: ["ena-wei"]
      }, {
        denom: "ena",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/B089810D5A6316AD5E9C7808733DC4AB11C7BA3033221D28711FC7206BACB929",
      name: "Ethena",
      display: "ena",
      symbol: "ENA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x57e114b691db790c35207b2e685d4a43181e6061",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0x57e114b691db790c35207b2e685d4a43181e6061"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x57e114b691db790c35207b2e685d4a43181e6061"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ena.png"
      }]
    },
    {
      description: "Ethena USDe is a synthetic dollar protocol built on Ethereum.",
      denom_units: [{
        denom: "ibc/FFD9EB71B4480ED4D73F7370A2AEBDB48447A0AAE27265F8060A957F0FF71983",
        exponent: 0,
        aliases: ["usde-wei"]
      }, {
        denom: "usde",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/FFD9EB71B4480ED4D73F7370A2AEBDB48447A0AAE27265F8060A957F0FF71983",
      name: "Ethena USDe",
      display: "usde",
      symbol: "USDe",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x4c9edd5852cd905f086c759e8383e09bff1e68b3",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0x4c9edd5852cd905f086c759e8383e09bff1e68b3"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x4c9edd5852cd905f086c759e8383e09bff1e68b3"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usde.png"
      }]
    },
    {
      description: "A Liquid Restaking Token (LRT) and Strategy Manager for EigenLayer.",
      denom_units: [{
        denom: "ibc/0247E0E2C174135AADF4EA172D97FF5C15A64689A403E83603EAE4F0616DD365",
        exponent: 0,
        aliases: ["ezeth-wei"]
      }, {
        denom: "ezeth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/0247E0E2C174135AADF4EA172D97FF5C15A64689A403E83603EAE4F0616DD365",
      name: "Renzo Restaked ETH",
      display: "ezeth",
      symbol: "ezETH",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xbf5495efe5db9ce00f80364c8b423567e58d2110",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0xbf5495efe5db9ce00f80364c8b423567e58d2110"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xbf5495efe5db9ce00f80364c8b423567e58d2110"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ezeth.png"
      }]
    },
    {
      description: "PEPE is a deflationary memecoin launched on Ethereum. ",
      denom_units: [{
        denom: "ibc/6367C5AF2E2477FB13DD0C8CB0027FEDDF5AE947EE84C69FB75003E604E29D05",
        exponent: 0,
        aliases: ["pepe-wei"]
      }, {
        denom: "pepe",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/6367C5AF2E2477FB13DD0C8CB0027FEDDF5AE947EE84C69FB75003E604E29D05",
      name: "Pepe",
      display: "pepe",
      symbol: "PEPE",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x6982508145454Ce325dDbE47a25d4ec3d2311933",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0x6982508145454ce325ddbe47a25d4ec3d2311933"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x6982508145454Ce325dDbE47a25d4ec3d2311933"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pepe.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pepe.png"
      }]
    },
    {
      description: "SOL is the native cryptocurrency of the Solana blockchain.",
      denom_units: [{
        denom: "ibc/2CC39C8141F257EBBA250F65B9D0F31DC8D153C225E51EC192DE6E3F65D43F0C",
        exponent: 0,
        aliases: ["Lamport"]
      }, {
        denom: "wsol",
        exponent: 9
      }],
      type_asset: "ics20",
      base: "ibc/2CC39C8141F257EBBA250F65B9D0F31DC8D153C225E51EC192DE6E3F65D43F0C",
      name: "Wrapped Solana",
      display: "wsol",
      symbol: "wSOL",
      traces: [{
        type: "wrapped",
        counterparty: {
          chain_name: "solana",
          base_denom: "Lamport"
        },
        provider: "Solana"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "solana",
          base_denom: "So11111111111111111111111111111111111111112",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-71",
          path: "transfer/channel-71/So11111111111111111111111111111111111111112"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "So11111111111111111111111111111111111111112"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/sol.svg"
      }]
    },
    {
      description: "mSOL represents staked SOL in the Marinade stake pool.",
      denom_units: [{
        denom: "ibc/C280CB39B97E7CD33A0BF149CFD392C2A3F95FF896AFF89CFF2FA181479BED8D",
        exponent: 0
      }, {
        denom: "msol",
        exponent: 9
      }],
      type_asset: "ics20",
      base: "ibc/C280CB39B97E7CD33A0BF149CFD392C2A3F95FF896AFF89CFF2FA181479BED8D",
      name: "Marinade Staked SOL",
      display: "msol",
      symbol: "mSOL",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "solana",
          base_denom: "mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-71",
          path: "transfer/channel-71/mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/msol.png"
      }]
    },
    {
      description: "A representative token for staked SOL, derived through the process of liquid staking SOL using Jito.",
      denom_units: [{
        denom: "ibc/91A2FE07F8BDFC0552B1C9972FCCBF2CFD067DDE5F496D81E5132CE57762B0F2",
        exponent: 0
      }, {
        denom: "jitosol",
        exponent: 9
      }],
      type_asset: "ics20",
      base: "ibc/91A2FE07F8BDFC0552B1C9972FCCBF2CFD067DDE5F496D81E5132CE57762B0F2",
      name: "Jito Staked SOL",
      display: "jitosol",
      symbol: "jitoSOL",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "solana",
          base_denom: "J1toso1uCk3RLmjorhTtrVwY9HJ7X8V9yYac6Y7kGCPn",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-71",
          path: "transfer/channel-71/J1toso1uCk3RLmjorhTtrVwY9HJ7X8V9yYac6Y7kGCPn"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "J1toso1uCk3RLmjorhTtrVwY9HJ7X8V9yYac6Y7kGCPn"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/jitosol.png"
      }]
    },
    {
      description: "A representative token for staked SOL, derived through the process of liquid staking SOL using the BlazeStake protocol.",
      denom_units: [{
        denom: "ibc/F52A71607B3AA7BBA8A222A9176E9939E92AB3656A094289CD218907D45DB716",
        exponent: 0
      }, {
        denom: "bsol",
        exponent: 9
      }],
      type_asset: "ics20",
      base: "ibc/F52A71607B3AA7BBA8A222A9176E9939E92AB3656A094289CD218907D45DB716",
      name: "BlazeStake Staked SOL",
      display: "bsol",
      symbol: "bSOL",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "solana",
          base_denom: "bSo13r4TkiE4KumL71LsHTPpL2euBYLFx6h9HP3piy1",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-71",
          path: "transfer/channel-71/bSo13r4TkiE4KumL71LsHTPpL2euBYLFx6h9HP3piy1"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "bSo13r4TkiE4KumL71LsHTPpL2euBYLFx6h9HP3piy1"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/bsol.png"
      }]
    },
    {
      description: "A representative token for staked SOL, derived through the process of liquid staking SOL using the MarginFi protocol.",
      denom_units: [{
        denom: "ibc/55F5B582483FEFA5422794292B079B4D49A5BAB9881E7C801F9F271F1D234F1D",
        exponent: 0
      }, {
        denom: "lst",
        exponent: 9
      }],
      type_asset: "ics20",
      base: "ibc/55F5B582483FEFA5422794292B079B4D49A5BAB9881E7C801F9F271F1D234F1D",
      name: "Liquid Staking Token",
      display: "lst",
      symbol: "LST",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "solana",
          base_denom: "LSTxxxnJzKDFSLr4dUkPcmCf5VyryEqzPLz5j4bpxFp",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-71",
          path: "transfer/channel-71/LSTxxxnJzKDFSLr4dUkPcmCf5VyryEqzPLz5j4bpxFp"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/msol.png"
      }]
    },
    {
      description: "A representative token for staked SOL, derived through the process of liquid staking SOL using the Edgevana protocol.",
      denom_units: [{
        denom: "ibc/BADB5950C4A81AC201696EBCB33CD295137FA86F0AA620CDDE946D3700E0208C",
        exponent: 0
      }, {
        denom: "edgesol",
        exponent: 9
      }],
      type_asset: "ics20",
      base: "ibc/BADB5950C4A81AC201696EBCB33CD295137FA86F0AA620CDDE946D3700E0208C",
      name: "Edgevana Staked SOL",
      display: "edgesol",
      symbol: "edgeSOL",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "solana",
          base_denom: "edge86g9cVz87xcpKpy3J77vbp4wYd9idEV562CCntt",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-71",
          path: "transfer/channel-71/edge86g9cVz87xcpKpy3J77vbp4wYd9idEV562CCntt"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "edge86g9cVz87xcpKpy3J77vbp4wYd9idEV562CCntt"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/edgesol.png"
      }]
    },
    {
      description: "A liquid staked token that represents SOL staked to Helius's validator.",
      denom_units: [{
        denom: "ibc/531C52D572698BCBA29F44D959E73CD2148EE6542A3118F9E56621A28E1FF4C6",
        exponent: 0
      }, {
        denom: "hsol",
        exponent: 9
      }],
      type_asset: "ics20",
      base: "ibc/531C52D572698BCBA29F44D959E73CD2148EE6542A3118F9E56621A28E1FF4C6",
      name: "Helius Staked SOL",
      display: "hsol",
      symbol: "hSOL",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "solana",
          base_denom: "he1iusmfkpAdwvxLNGV8Y1iSbj4rUy6yMhEA3fotn9A",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-71",
          path: "transfer/channel-71/he1iusmfkpAdwvxLNGV8Y1iSbj4rUy6yMhEA3fotn9A"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "he1iusmfkpAdwvxLNGV8Y1iSbj4rUy6yMhEA3fotn9A"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/hsol.png"
      }]
    },
    {
      description: "A liquid staked token that represents SOL staked to Jupiter's validator.",
      denom_units: [{
        denom: "ibc/6976998E24F1CFC373A9F799C9CE901F5EC32C3E33B2B09384A05774D9339626",
        exponent: 0
      }, {
        denom: "jupsol",
        exponent: 9
      }],
      type_asset: "ics20",
      base: "ibc/6976998E24F1CFC373A9F799C9CE901F5EC32C3E33B2B09384A05774D9339626",
      name: "Jupiter Staked SOL",
      display: "jupsol",
      symbol: "jupSOL",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "solana",
          base_denom: "jupSoLaHXQiZZTSfEWMTRRgpnyFm8f6sZdosWBjx93v",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-71",
          path: "transfer/channel-71/jupSoLaHXQiZZTSfEWMTRRgpnyFm8f6sZdosWBjx93v"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "jupSoLaHXQiZZTSfEWMTRRgpnyFm8f6sZdosWBjx93v"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/jupsol.png"
      }]
    },
    {
      description: "dogwifhat is a meme coin that operates on Solana.",
      denom_units: [{
        denom: "ibc/BA34EAA22BBDA46C228DC70E4ED7E42A0867D5B051D625F953CC7B1CEF58C071",
        exponent: 0
      }, {
        denom: "wif",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/BA34EAA22BBDA46C228DC70E4ED7E42A0867D5B051D625F953CC7B1CEF58C071",
      name: "dogwifhat",
      display: "wif",
      symbol: "WIF",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "solana",
          base_denom: "EKpQGSJtjMFqKZ9KQanSqYXRcF8fBopzLHYxdM65zcjm",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-71",
          path: "transfer/channel-71/EKpQGSJtjMFqKZ9KQanSqYXRcF8fBopzLHYxdM65zcjm"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "EKpQGSJtjMFqKZ9KQanSqYXRcF8fBopzLHYxdM65zcjm"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/wif.png"
      }]
    },
    {
      description: "Tether, issued natively on Solana.",
      denom_units: [{
        denom: "ibc/D105950618E47CA2AEC314282BC401625025F80A4F812808DEEBB1941C685575",
        exponent: 0
      }, {
        denom: "usdt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/D105950618E47CA2AEC314282BC401625025F80A4F812808DEEBB1941C685575",
      name: "Tether",
      display: "usdt",
      symbol: "USDT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "solana",
          base_denom: "Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-71",
          path: "transfer/channel-71/Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }]
    },
    {
      description: "Whinecoin is an experimental memecoin by the Sommelier Finance team.",
      denom_units: [{
        denom: "ibc/9D5DA3720001F91DD76B8F609A93F96688EC8185B54BF9A1A1450EB34FF2D912",
        exponent: 0,
        aliases: ["ATeTQcUkWGs7AZ15mCiFUWCW9EUL7KpDZEHCN1Y8pump"]
      }, {
        denom: "whine",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/9D5DA3720001F91DD76B8F609A93F96688EC8185B54BF9A1A1450EB34FF2D912",
      name: "WHINEcoin",
      display: "whine",
      symbol: "WHINE",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "solana",
          base_denom: "ATeTQcUkWGs7AZ15mCiFUWCW9EUL7KpDZEHCN1Y8pump",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-71",
          path: "transfer/channel-71/ATeTQcUkWGs7AZ15mCiFUWCW9EUL7KpDZEHCN1Y8pump"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "ATeTQcUkWGs7AZ15mCiFUWCW9EUL7KpDZEHCN1Y8pump"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/whine.png",
        theme: {
          primary_color_hex: "#FFFFFF",
          background_color_hex: "#FFFFFF",
          circle: false
        }
      }]
    }
  ]
};
var assets_default35 = info95;

// node_modules/chain-registry/esm/mainnet/composable/chain.js
var info96 = {
  $schema: "../chain.schema.json",
  chain_name: "composable",
  chain_id: "centauri-1",
  website: "https://www.picasso.xyz/",
  pretty_name: "Picasso",
  status: "live",
  network_type: "mainnet",
  bech32_prefix: "pica",
  daemon_name: "picad",
  node_home: "$HOME/.banksy",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ppica",
      fixed_min_gas_price: 0,
      low_gas_price: 0,
      average_gas_price: 0,
      high_gas_price: 0
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ppica"
    }]
  },
  codebase: {
    cosmos_sdk_version: "rust-ninja/cosmos-sdk v0.47.5-patch-validators-trim-tag"
  },
  logo_URIs: {
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/composable/images/pica.svg"
  },
  description: "Picasso is a DeFi infrastructure-focused Layer 1 protocol that leads the industry in building the trust-minimized interoperability solution -Cross-Ecosystem IBC. Complementary to the interoperability work, Picasso is building the first Generalized Restaking Layer starting with deployment on Solana, and expand support for all IBC connected ecosystems.",
  apis: {
    rpc: [
      {
        address: "https://rpc-composable-ia.cosmosia.notional.ventures",
        provider: "Notional"
      },
      {
        address: "https://composable-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://picasso-rpc.cogwheel.zone:443",
        provider: "Cogwheel \u2699\uFE0F"
      },
      {
        address: "https://picasso-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://composable-rpc.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://rpc-picasso.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://picasso-rpc.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://composable.rpc.stakevillage.net:443",
        provider: "Stake Village"
      },
      {
        address: "https://composable-rpc.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://rpc.centauri.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://composable.rpc.moonbridge.team",
        provider: "Moonbridge"
      },
      {
        address: "https://rpc.composable.citizenweb3.com:443",
        provider: "Citizen Web3"
      },
      {
        address: "https://composable.rpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      }
    ],
    rest: [
      {
        address: "https://api-composable-ia.cosmosia.notional.ventures",
        provider: "Notional"
      },
      {
        address: "https://composable-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://picasso-api.cogwheel.zone:443",
        provider: "Cogwheel \u2699\uFE0F"
      },
      {
        address: "https://picasso-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://composable-api.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://api-picasso.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://picasso-api.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://composable.api.stakevillage.net",
        provider: "Stake Village"
      },
      {
        address: "https://composable-api.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://lcd.centauri.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://composable.api.moonbridge.team",
        provider: "Moonbridge"
      },
      {
        address: "https://composable.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      }
    ],
    grpc: [
      {
        address: "https://grpc-composable-ia.cosmosia.notional.ventures",
        provider: "Notional"
      },
      {
        address: "grpc.composable.nodestake.top:9090",
        provider: "NodeStake"
      },
      {
        address: "composable-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "grpc-centauri.cosmos-spaces.cloud:1120",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://picasso-grpc.cogwheel.zone:443",
        provider: "Cogwheel \u2699\uFE0F"
      },
      {
        address: "https://picasso-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "composable-grpc.genznodes.dev:53090",
        provider: "genznodes"
      },
      {
        address: "picasso-grpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "grpc-composable.vinjan.xyz:36090",
        provider: "vinjan"
      },
      {
        address: "composable.grpc.skynodejs.net",
        provider: "skynodejs"
      },
      {
        address: "composable.grpc.stakevillage.net:16190",
        provider: "Stake Village"
      },
      {
        address: "composable-rpc.stakeandrelax.net:22290",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "grpc.composable.validatus.com",
        provider: "Validatus"
      },
      {
        address: "https://grpc.centauri.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://composable.grpc.moonbridge.team",
        provider: "Moonbridge"
      },
      {
        address: "composable.grpc.m.stavr.tech:9907",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "grpc-picasso.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      }
    ]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://ping.pub/composable",
      tx_page: "https://ping.pub/composable/tx/${txHash}"
    },
    {
      kind: "NodeStake Explorer",
      url: "https://explorer.nodestake.top/composable",
      tx_page: "https://explorer.nodestake.top/composable/tx/${txHash}"
    },
    {
      kind: "Stake Village",
      url: "https://exp.stakevillage.net/composable",
      tx_page: "https://exp.stakevillage.net/composable/tx/${txHash}",
      account_page: "https://exp.stakevillage.net/composable/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Composable-Mainnet",
      tx_page: "https://explorer.stavr.tech/Composable-Mainnet/tx/${txHash}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/picasso",
      tx_page: "https://mainnet.whispernode.com/picasso/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/picasso/account/${accountAddress}"
    }
  ],
  images: [{
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/composable/images/pica.svg"
  }]
};
var chain_default35 = info96;

// node_modules/chain-registry/esm/mainnet/composable/ibc.js
var info97 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-70",
      connection_id: "connection-64"
    },
    chain_2: {
      chain_name: "composable",
      client_id: "07-tendermint-51",
      connection_id: "connection-20"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-55",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-75",
      connection_id: "connection-79"
    },
    chain_2: {
      chain_name: "composable",
      client_id: "07-tendermint-143",
      connection_id: "connection-63"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-108",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-50",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-187",
      connection_id: "connection-165"
    },
    chain_2: {
      chain_name: "composable",
      client_id: "07-tendermint-140",
      connection_id: "connection-58"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-127",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-46",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics-20",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "canto",
      client_id: "07-tendermint-38",
      connection_id: "connection-32"
    },
    chain_2: {
      chain_name: "composable",
      client_id: "07-tendermint-50",
      connection_id: "connection-19"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-35",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "composable",
      client_id: "07-tendermint-138",
      connection_id: "connection-55"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-38",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-7",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1150",
      connection_id: "connection-871"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-617",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-46",
      connection_id: "connection-18"
    },
    chain_2: {
      chain_name: "crescent",
      client_id: "07-tendermint-112",
      connection_id: "connection-98"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-64",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "08-wasm-159",
      connection_id: "connection-70"
    },
    chain_2: {
      chain_name: "ethereum",
      client_id: "07-tendermint-11",
      connection_id: "connection-10"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-52",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-26",
      connection_id: "connection-14"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-111",
      connection_id: "connection-66"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-82",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-123",
      connection_id: "connection-45"
    },
    chain_2: {
      chain_name: "injective",
      client_id: "07-tendermint-207",
      connection_id: "connection-191"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-29",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-145",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-30",
      connection_id: "connection-15"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-382",
      connection_id: "connection-376"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-280",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-110",
      connection_id: "connection-43"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-147",
      connection_id: "connection-112"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-27",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-101",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-66",
      connection_id: "connection-28"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-29",
      connection_id: "connection-22"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-6",
      connection_id: "connection-6"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2846",
      connection_id: "connection-2358"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1279",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "08-wasm-5",
      connection_id: "connection-5"
    },
    chain_2: {
      chain_name: "picasso",
      client_id: "07-tendermint-32",
      connection_id: "connection-26"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-31",
      connection_id: "connection-16"
    },
    chain_2: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-78",
      connection_id: "connection-53"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-94",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-52",
      connection_id: "connection-21"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-166",
      connection_id: "connection-116"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-80",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-26",
        port_id: "transfer",
        client_id: "07-tendermint-52",
        connection_id: "connection-21"
      },
      chain_2: {
        channel_id: "channel-83",
        port_id: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4",
        client_id: "07-tendermint-166",
        connection_id: "connection-116"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "08-wasm-215",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "solana",
      client_id: "07-tendermint-1",
      connection_id: "connection-108"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-71",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-25",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-279",
      connection_id: "connection-207"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-184",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-14",
      connection_id: "connection-8"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-126",
      connection_id: "connection-116"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-134",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default27 = info97;

// node_modules/chain-registry/esm/mainnet/composable/index.js
var assets35 = assets_default35;
var chain35 = chain_default35;
var ibc27 = ibc_default27;

// node_modules/chain-registry/esm/mainnet/conscious/assets.js
var info98 = {
  $schema: "../assetlist.schema.json",
  chain_name: "conscious",
  assets: [{
    description: "Cvn is a Layer-1 blockchain built to deliver on the promise of DeFi",
    extended_description: "Conscious Network is a public chain infrastructure that deeply integrates AI. It is based on a multi-layer blockchain network architecture consisting of Layer 1 and L2 Rollup, and introduces decentralized storage protocols to build a scalable Web3 AI infrastructure.",
    denom_units: [{
      denom: "acvnt",
      exponent: 0
    }, {
      denom: "cvnt",
      exponent: 18
    }],
    base: "acvnt",
    name: "Cvn",
    display: "cvnt",
    symbol: "CVN",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/conscious/images/cvn.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/conscious/images/cvn.svg"
    },
    coingecko_id: "consciousdao",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/conscious/images/cvn.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/conscious/images/cvn.svg"
    }],
    socials: {
      website: "https://cvn.io",
      twitter: "https://twitter.com/conscious_chain"
    }
  }]
};
var assets_default36 = info98;

// node_modules/chain-registry/esm/mainnet/conscious/chain.js
var info99 = {
  $schema: "../chain.schema.json",
  chain_name: "conscious",
  status: "live",
  network_type: "mainnet",
  website: "https://cvn.io/",
  pretty_name: "ConsciousDAO",
  chain_id: "cvn_2032-1",
  bech32_prefix: "cvn",
  node_home: "$HOME/.cvnd",
  daemon_name: "cvnd",
  key_algos: ["ethsecp256k1"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "acvnt",
      fixed_min_gas_price: 1e8,
      low_gas_price: 1e8,
      average_gas_price: 2e8,
      high_gas_price: 3e8
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "acvnt"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/conscious/images/cvn.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/conscious/images/cvn.svg"
  },
  apis: {
    rpc: [{
      address: "https://rpc.cvn.io/",
      provider: "cvn.io"
    }, {
      address: "https://conscious_mainnet_rpc.chain.whenmoonwhenlambo.money/",
      provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
    }],
    rest: [{
      address: "https://api.cvn.io",
      provider: "cvn.io"
    }, {
      address: "https://conscious_mainnet_api.chain.whenmoonwhenlambo.money/",
      provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
    }],
    grpc: [{
      address: "https://grpc.cvn.io",
      provider: "cvn.io"
    }],
    "evm-http-jsonrpc": [
      {
        address: "https://node.cvn.io/",
        provider: "cvn"
      },
      {
        address: "https://node.consciousdao.io/",
        provider: "consciousdao"
      },
      {
        address: "https://conscious_mainnet_evm.chain.whenmoonwhenlambo.money/",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      }
    ]
  },
  explorers: [{
    kind: "blockscout",
    url: "https://explore.consciousdao.com/",
    tx_page: "https://explore.consciousdao.com/tx/${txHash}"
  }, {
    kind: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}",
    url: "https://explorer.whenmoonwhenlambo.money/conscious",
    tx_page: "https://explorer.whenmoonwhenlambo.money/conscious/tx/${txHash}",
    account_page: "https://explorer.whenmoonwhenlambo.money/conscious/account/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/conscious/images/cvn.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/conscious/images/cvn.svg"
  }]
};
var chain_default36 = info99;

// node_modules/chain-registry/esm/mainnet/conscious/ibc.js
var info100 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "conscious",
    client_id: "07-tendermint-12",
    connection_id: "connection-9"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-3199",
    connection_id: "connection-2656"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-6",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-73971",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default28 = info100;

// node_modules/chain-registry/esm/mainnet/conscious/index.js
var assets36 = assets_default36;
var chain36 = chain_default36;
var ibc28 = ibc_default28;

// node_modules/chain-registry/esm/mainnet/coreum/assets.js
var info101 = {
  $schema: "../assetlist.schema.json",
  chain_name: "coreum",
  assets: [{
    description: "The native token of Coreum",
    denom_units: [{
      denom: "ucore",
      exponent: 0
    }, {
      denom: "core",
      exponent: 6
    }],
    base: "ucore",
    name: "Coreum",
    display: "core",
    symbol: "COREUM",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coreum/images/coreum.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coreum/images/coreum.svg"
    },
    coingecko_id: "coreum",
    keywords: [
      "dex",
      "staking",
      "wasm",
      "assets",
      "nft",
      "XRPL"
    ],
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coreum/images/coreum.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coreum/images/coreum.svg"
    }],
    socials: {
      website: "https://www.coreum.com/",
      twitter: "https://twitter.com/CoreumOfficial"
    }
  }, {
    description: "XRP bridged from XRPL",
    denom_units: [{
      denom: "drop-core1zhs909jp9yktml6qqx9f0ptcq2xnhhj99cja03j3lfcsp2pgm86studdrz",
      exponent: 0,
      aliases: ["drop"]
    }, {
      denom: "xrp",
      exponent: 6
    }],
    base: "drop-core1zhs909jp9yktml6qqx9f0ptcq2xnhhj99cja03j3lfcsp2pgm86studdrz",
    name: "Ripple",
    display: "xrp",
    symbol: "XRP",
    traces: [{
      type: "bridge",
      counterparty: {
        chain_name: "xrpl",
        base_denom: "drop"
      },
      provider: "Coreum"
    }],
    images: [{
      image_sync: {
        chain_name: "xrpl",
        base_denom: "drop"
      },
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/xrpl/images/xrp.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/xrpl/images/xrp.svg"
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/xrpl/images/xrp.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/xrpl/images/xrp.svg"
    }
  }]
};
var assets_default37 = info101;

// node_modules/chain-registry/esm/mainnet/coreum/chain.js
var info102 = {
  $schema: "../chain.schema.json",
  chain_name: "coreum",
  status: "live",
  network_type: "mainnet",
  website: "https://www.coreum.com",
  pretty_name: "Coreum",
  chain_id: "coreum-mainnet-1",
  bech32_prefix: "core",
  daemon_name: "cored",
  node_home: "$HOME/.core/coreum-mainnet-1",
  key_algos: ["secp256k1"],
  slip44: 990,
  fees: {
    fee_tokens: [{
      denom: "ucore",
      fixed_min_gas_price: 0.03125,
      low_gas_price: 0.0625,
      average_gas_price: 0.0625,
      high_gas_price: 62.5
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ucore"
    }],
    lock_duration: {
      time: "168h"
    }
  },
  codebase: {
    cosmos_sdk_version: "0.47",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.44"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coreum/images/coreum.png",
    theme: {
      primary_color_hex: "#25d695"
    }
  }, {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coreum/images/coreum.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coreum/images/coreum.svg"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coreum/images/coreum.png"
  },
  apis: {
    rpc: [
      {
        address: "https://full-node.mainnet-1.coreum.dev:26657",
        provider: "Coreum Foundation"
      },
      {
        address: "https://full-node-californium.mainnet-1.coreum.dev:26657",
        provider: "Coreum Foundation"
      },
      {
        address: "https://full-node-curium.mainnet-1.coreum.dev:26657",
        provider: "Coreum Foundation"
      },
      {
        address: "https://full-node-uranium.mainnet-1.coreum.dev:26657",
        provider: "Coreum Foundation"
      },
      {
        address: "https://rpc-coreum.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://coreum.rpc.silknodes.io",
        provider: "Silk Nodes"
      },
      {
        address: "https://coreum-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://rpc.m.core.solonation.io",
        provider: "#SoloNation"
      },
      {
        address: "https://coreum-rpc.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://coreum-rpc.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://public.stakewolle.com/cosmos/coreum/rpc",
        provider: "Stakewolle"
      }
    ],
    grpc: [
      {
        address: "https://full-node.mainnet-1.coreum.dev:9090",
        provider: "Coreum Foundation"
      },
      {
        address: "https://full-node-californium.mainnet-1.coreum.dev:9090",
        provider: "Coreum Foundation"
      },
      {
        address: "https://full-node-curium.mainnet-1.coreum.dev:9090",
        provider: "Coreum Foundation"
      },
      {
        address: "https://full-node-uranium.mainnet-1.coreum.dev:9090",
        provider: "Coreum Foundation"
      },
      {
        address: "https://grpc.coreum.nodexcapital.com:444",
        provider: "NodeX Validator"
      },
      {
        address: "coreum-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "coreum-grpc.genznodes.dev:35090",
        provider: "genznodes"
      }
    ],
    rest: [
      {
        address: "https://rest-coreum.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://coreum.api.silknodes.io",
        provider: "Silk Nodes"
      },
      {
        address: "https://full-node.mainnet-1.coreum.dev:1317",
        provider: "Coreum"
      },
      {
        address: "https://coreum-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://api.m.core.solonation.io",
        provider: "#SoloNation"
      },
      {
        address: "https://coreum-api.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://coreum-api.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://public.stakewolle.com/cosmos/coreum/rest",
        provider: "Stakewolle"
      }
    ]
  },
  explorers: [
    {
      kind: "Coreum",
      url: "https://explorer.coreum.com/coreum",
      tx_page: "https://explorer.coreum.com/coreum/transactions/${txHash}",
      account_page: "https://explorer.coreum.com/coreum/account/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/coreum",
      tx_page: "https://www.mintscan.io/coreum/transactions/${txHash}",
      account_page: "https://www.mintscan.io/coreum/accounts/${accountAddress}"
    },
    {
      kind: "NODEXPLORER",
      url: "https://explorer.nodexcapital.com/coreum",
      tx_page: "https://explorer.nodexcapital.com/coreum/txs/${txHash}",
      account_page: "https://explorer.nodexcapital.com/coreum/account/${accountAddress}"
    },
    {
      kind: "Silk Nodes",
      url: "https://explorer.silknodes.io/coreum",
      tx_page: "https://explorer.silknodes.io/coreum/tx/${txHash}",
      account_page: "https://explorer.silknodes.io/coreum/account/${accountAddress}"
    },
    {
      kind: "#SoloNation",
      url: "https://explorer.solonation.io/core-main",
      tx_page: "https://explorer.solonation.io/core-main/tx/${txHash}",
      account_page: "https://explorer.solonation.io/core-main/account/${accountAddress}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/coreum",
      tx_page: "https://explorer.tcnetwork.io/coreum/transaction/${txHash}",
      account_page: "https://explorer.tcnetwork.io/coreum/account/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/coreum",
      tx_page: "https://ezstaking.app/coreum/txs/${txHash}",
      account_page: "https://ezstaking.app/coreum/account/${accountAddress}"
    }
  ],
  keywords: [
    "dex",
    "staking",
    "wasm",
    "assets",
    "nft",
    "XRPL"
  ]
};
var chain_default37 = info102;

// node_modules/chain-registry/esm/mainnet/coreum/ibc.js
var info103 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-179",
      connection_id: "connection-157"
    },
    chain_2: {
      chain_name: "coreum",
      client_id: "07-tendermint-7",
      connection_id: "connection-7"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-120",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bandchain",
      client_id: "07-tendermint-162",
      connection_id: "connection-141"
    },
    chain_2: {
      chain_name: "coreum",
      client_id: "07-tendermint-33",
      connection_id: "connection-22"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-159",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-20",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-11",
      connection_id: "connection-11"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1162",
      connection_id: "connection-884"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-660",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-12",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "doravota",
      client_id: "07-tendermint-12",
      connection_id: "connection-4"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-38",
      connection_id: "connection-26"
    },
    chain_2: {
      chain_name: "dydx",
      client_id: "07-tendermint-14",
      connection_id: "connection-20"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-24",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-9",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-117",
      connection_id: "connection-71"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-87",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-8",
      connection_id: "connection-8"
    },
    chain_2: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-421",
      connection_id: "connection-399"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-142",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-29",
      connection_id: "connection-20"
    },
    chain_2: {
      chain_name: "kava",
      client_id: "07-tendermint-160",
      connection_id: "connection-200"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-142",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-28",
      connection_id: "connection-19"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-163",
      connection_id: "connection-126"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-122",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-32",
      connection_id: "connection-21"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-71",
      connection_id: "connection-72"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-19",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-49",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-3",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2929",
      connection_id: "connection-2426"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2188",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-40",
      connection_id: "connection-27"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-186",
      connection_id: "connection-138"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-25",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-101",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default29 = info103;

// node_modules/chain-registry/esm/mainnet/coreum/index.js
var assets37 = assets_default37;
var chain37 = chain_default37;
var ibc29 = ibc_default29;

// node_modules/chain-registry/esm/mainnet/cosmoshub/assets.js
var info104 = {
  $schema: "../assetlist.schema.json",
  chain_name: "cosmoshub",
  assets: [
    {
      description: "The native staking and governance token of the Cosmos Hub.",
      denom_units: [{
        denom: "uatom",
        exponent: 0
      }, {
        denom: "atom",
        exponent: 6
      }],
      base: "uatom",
      name: "Cosmos Hub Atom",
      display: "atom",
      symbol: "ATOM",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      },
      coingecko_id: "cosmos",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }],
      socials: {
        website: "https://cosmos.network",
        twitter: "https://twitter.com/cosmoshub"
      }
    },
    {
      description: "Tether USDt on the Cosmos Hub",
      denom_units: [{
        denom: "ibc/F04D72CF9B5D9C849BB278B691CDFA2241813327430EC9CDC83F8F4CA4CDC2B0",
        exponent: 0
      }, {
        denom: "usdt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/F04D72CF9B5D9C849BB278B691CDFA2241813327430EC9CDC83F8F4CA4CDC2B0",
      name: "Tether USDt",
      display: "usdt",
      symbol: "USDt",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kava",
          base_denom: "erc20/tether/usdt",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-277",
          path: "transfer/channel-277/erc20/tether/usdt"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "kava",
          base_denom: "erc20/tether/usdt"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      }
    },
    {
      description: "FX on Cosmos Hub",
      denom_units: [{
        denom: "ibc/4925E6ABA571A44D2BE0286D2D29AF42A294D0FF2BB16490149A1B26EAD33729",
        exponent: 0,
        aliases: ["FX"]
      }],
      type_asset: "ics20",
      base: "ibc/4925E6ABA571A44D2BE0286D2D29AF42A294D0FF2BB16490149A1B26EAD33729",
      name: "Function X",
      display: "FX",
      symbol: "FX",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "fxcore",
          base_denom: "FX",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-585",
          path: "transfer/channel-585/FX"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "fxcore",
          base_denom: "FX"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fxcore/images/fx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fxcore/images/fx.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fxcore/images/fx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fxcore/images/fx.svg"
      }
    }
  ]
};
var assets_default38 = info104;

// node_modules/chain-registry/esm/mainnet/cosmoshub/chain.js
var info105 = {
  $schema: "../chain.schema.json",
  chain_name: "cosmoshub",
  chain_id: "cosmoshub-4",
  website: "https://cosmos.network/",
  pretty_name: "Cosmos Hub",
  status: "live",
  network_type: "mainnet",
  bech32_prefix: "cosmos",
  daemon_name: "gaiad",
  node_home: "$HOME/.gaia",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uatom",
      fixed_min_gas_price: 5e-3,
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.03
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uatom"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.47.13-ics-lsm"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
  },
  description: "In a nutshell, Cosmos Hub bills itself as a project that solves some of the hardest problems facing the blockchain industry. It aims to offer an antidote to slow, expensive, unscalable and environmentally harmful proof-of-work protocols, like those used by Bitcoin, by offering an ecosystem of connected blockchains.\n\nThe project\u2019s other goals include making blockchain technology less complex and difficult for developers thanks to a modular framework that demystifies decentralized apps. Last but not least, an Inter-blockchain Communication protocol makes it easier for blockchain networks to communicate with each other \u2014 preventing fragmentation in the industry.\n\nCosmos Hub's origins can be dated back to 2014, when Tendermint, a core contributor to the network, was founded. In 2016, a white paper for Cosmos was published \u2014 and a token sale was held the following year. ATOM tokens are earned through a hybrid proof-of-stake algorithm, and they help to keep the Cosmos Hub, the project\u2019s flagship blockchain, secure. This cryptocurrency also has a role in the network\u2019s governance.",
  apis: {
    rpc: [
      {
        address: "https://cosmos-rpc.quickapi.com:443",
        provider: "Chainlayer"
      },
      {
        address: "https://cosmos-rpc.onivalidator.com",
        provider: "Oni Validator \u26E9\uFE0F"
      },
      {
        address: "https://rpc-cosmoshub.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://cosmoshub-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc-cosmoshub.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://go.getblock.io/17515cb3ec0e43b7817f182e5de6066a",
        provider: "GetBlock RPC Nodes"
      },
      {
        address: "https://rpc-cosmoshub.pupmos.network",
        provider: "PUPM\xD8S"
      },
      {
        address: "https://rpc-cosmoshub.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://cosmos-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://cosmos-rpc.staketab.org:443",
        provider: "Staketab"
      },
      {
        address: "https://rpc-cosmoshub-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://rpc-cosmoshub.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "https://rpc.cosmos.dragonstake.io",
        provider: "DragonStake"
      },
      {
        address: "https://cosmoshub.rpc.stakin-nodes.com",
        provider: "Stakin"
      },
      {
        address: "https://rpc.cosmos.bh.rocks",
        provider: "BlockHunters \u{1F3AF}"
      },
      {
        address: "https://cosmos-rpc.rockrpc.net",
        provider: "RockawayX Infra"
      },
      {
        address: "http://rpc-cosmoshub.freshstaking.com:26657",
        provider: "FreshSTAKING"
      },
      {
        address: "https://cosmos-rpc.easy2stake.com/",
        provider: "Easy 2 Stake"
      },
      {
        address: "https://rpc.cosmos.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://cosmos.rpc.silknodes.io",
        provider: "Silk Nodes"
      },
      {
        address: "https://cosmos-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://cosmoshub.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://rpc.cosmoshub.goldenratiostaking.net",
        provider: "Golden Ratio Staking"
      },
      {
        address: "https://rpc-cosmos-hub-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://cosmos-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://rpc-cosmoshub.mms.team",
        provider: "MMS"
      },
      {
        address: "https://cosmos-rpc.tienthuattoan.ventures",
        provider: "TienThuatToan"
      },
      {
        address: "https://community.nuxian-node.ch:6797/gaia/trpc",
        provider: "PRO Delegators"
      },
      {
        address: "https://cosmos-rpc.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://cosmoshub-rpc.cosmosrescue.dev",
        provider: "cosmosrescue"
      },
      {
        address: "https://cosmos.interstellar-lounge.org",
        provider: "Interstellar Lounge \u{1F378}"
      },
      {
        address: "https://public.stakewolle.com/cosmos/cosmoshub/rpc",
        provider: "Stakewolle"
      },
      {
        address: "https://rpc-cosmos.kewrnode.com",
        provider: "Kewr Node"
      },
      {
        address: "https://rpc.cosmoshub-4.citizenweb3.com",
        provider: "Citizen Web3"
      }
    ],
    rest: [
      {
        address: "https://cosmos-lcd.quickapi.com:443",
        provider: "Chainlayer"
      },
      {
        address: "https://rest.cosmoshub.goldenratiostaking.net",
        provider: "Golden Ratio Staking"
      },
      {
        address: "https://cosmoshub-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://api-cosmoshub.pupmos.network",
        provider: "PUPM\xD8S"
      },
      {
        address: "https://api-cosmoshub.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://api-cosmoshub-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://cosmos-rest.staketab.org",
        provider: "Staketab"
      },
      {
        address: "https://lcd.cosmos.dragonstake.io",
        provider: "DragonStake"
      },
      {
        address: "https://cosmoshub.rest.stakin-nodes.com",
        provider: "Stakin"
      },
      {
        address: "https://rest-cosmoshub.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "https://rest-cosmoshub.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://lcd-cosmoshub.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://cosmos-lcd.easy2stake.com",
        provider: "Easy 2 Stake"
      },
      {
        address: "https://api.cosmos.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://cosmos.api.silknodes.io",
        provider: "Silk Nodes"
      },
      {
        address: "https://cosmos-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://cosmoshub.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://api-cosmos-hub-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://cosmos-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://api-cosmoshub.mms.team",
        provider: "MMS"
      },
      {
        address: "https://cosmos-api.tienthuattoan.ventures",
        provider: "TienThuatToan"
      },
      {
        address: "https://community.nuxian-node.ch:6797/gaia/crpc",
        provider: "PRO Delegators"
      },
      {
        address: "https://cosmos-api.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://cosmoshub-api.cosmosrescue.dev",
        provider: "cosmosrescue"
      },
      {
        address: "https://cosmos-rest.interstellar-lounge.org",
        provider: "Interstellar Lounge \u{1F378}"
      },
      {
        address: "https://public.stakewolle.com/cosmos/cosmoshub/rest",
        provider: "Stakewolle"
      },
      {
        address: "https://rest-cosmos.kewrnode.com",
        provider: "Kewr Node"
      }
    ],
    grpc: [
      {
        address: "cosmoshub-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "grpc-cosmoshub-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "cosmos-grpc.polkachu.com:14990",
        provider: "Polkachu"
      },
      {
        address: "grpc.cosmos.interbloc.org:443",
        provider: "Interbloc"
      },
      {
        address: "services.staketab.com:9030",
        provider: "Staketab"
      },
      {
        address: "grpc.cosmos.dragonstake.io:443",
        provider: "DragonStake"
      },
      {
        address: "cosmoshub.grpc.stakin-nodes.com:443",
        provider: "Stakin"
      },
      {
        address: "https://grpc.cosmos.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "cosmos-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "grpc-cosmoshub.cosmos-spaces.cloud:3910",
        provider: "Cosmos Spaces"
      },
      {
        address: "cosmoshub.grpc.kjnodes.com:11390",
        provider: "kjnodes"
      },
      {
        address: "grpc-cosmos-hub-01.stakeflow.io:9090",
        provider: "Stakeflow"
      },
      {
        address: "grpc-cosmoshub.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "cosmos-grpc.w3coins.io:14990",
        provider: "w3coins"
      },
      {
        address: "grpc-cosmoshub.mms.team:443",
        provider: "MMS"
      },
      {
        address: "cosmos-grpc.tienthuattoan.ventures:9090",
        provider: "TienThuatToan"
      },
      {
        address: "cosmoshub-mainnet.grpc.l0vd.com:80",
        provider: "L0vd.com \u2764\uFE0F"
      },
      {
        address: "https://grpc-cosmos.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "cosmos-grpc.stakeandrelax.net:14990",
        provider: "Stake&Relax \u{1F9A5}"
      }
    ]
  },
  explorers: [
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/cosmos",
      tx_page: "https://www.mintscan.io/cosmos/transactions/${txHash}",
      account_page: "https://www.mintscan.io/cosmos/accounts/${accountAddress}",
      validator_page: "https://www.mintscan.io/cosmos/validators/${validatorAddress}",
      proposal_page: "https://www.mintscan.io/cosmos/proposals/${proposalId}",
      block_page: "https://www.mintscan.io/cosmos/blocks/${blockHeight}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/cosmoshub",
      tx_page: "https://ezstaking.app/cosmoshub/txs/${txHash}",
      account_page: "https://ezstaking.app/cosmoshub/account/${accountAddress}",
      validator_page: "https://ezstaking.app/cosmoshub/validators/${validatorAddress}",
      proposal_page: "https://ezstaking.app/cosmoshub/proposals/${proposalId}",
      block_page: "https://ezstaking.app/cosmoshub/blocks/${blockHeight}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/cosmos",
      tx_page: "https://ping.pub/cosmos/tx/${txHash}",
      account_page: "https://ping.pub/cosmos/account/${accountAddress}",
      validator_page: "https://ping.pub/cosmos/staking/${validatorAddress}",
      proposal_page: "https://ping.pub/cosmos/gov/${proposalId}",
      block_page: "https://ping.pub/cosmos/block/${blockHeight}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com",
      tx_page: "https://atomscan.com/transactions/${txHash}",
      account_page: "https://atomscan.com/accounts/${accountAddress}",
      validator_page: "https://atomscan.com/validators/${validatorAddress}",
      proposal_page: "https://atomscan.com/votes/${proposalId}",
      block_page: "https://atomscan.com/blocks/${blockHeight}"
    },
    {
      kind: "unichain",
      url: "https://unicha.in/cosmos",
      tx_page: "https://unicha.in/cosmos/transaction/${txHash}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/cosmoshub",
      tx_page: "https://explorer.tcnetwork.io/cosmoshub/transaction/${txHash}",
      account_page: "https://explorer.tcnetwork.io/cosmoshub/account/${accountAddress}",
      validator_page: "https://explorer.tcnetwork.io/cosmoshub/validator/${validatorAddress}",
      proposal_page: "https://explorer.tcnetwork.io/cosmoshub/proposal/${proposalId}",
      block_page: "https://explorer.tcnetwork.io/cosmoshub/block/${blockHeight}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/cosmos",
      account_page: "https://stakeflow.io/cosmos/accounts/${accountAddress}",
      validator_page: "https://stakeflow.io/cosmos/validators/${validatorAddress}"
    },
    {
      kind: "Nodeist Explorer",
      url: "https://exp.nodeist.net/cosmos"
    },
    {
      kind: "Inbloc",
      url: "https://inbloc.org",
      tx_page: "https://inbloc.org/transactions/${txHash}",
      account_page: "https://inbloc.org/account/${accountAddress}",
      validator_page: "https://inbloc.org/cosmos/validator/${validatorAddress}",
      proposal_page: "https://inbloc.org/cosmos/proposal/${proposalId}",
      block_page: "https://inbloc.org/cosmos/blocks/${blockHeight}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/cosmos",
      tx_page: "https://mainnet.whispernode.com/cosmos/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/cosmos/account/${accountAddress}",
      validator_page: "https://mainnet.whispernode.com/cosmos/staking/${validatorAddress}",
      proposal_page: "https://mainnet.whispernode.com/cosmos/gov/${proposalId}",
      block_page: "https://mainnet.whispernode.com/cosmos/block/${blockHeight}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
  }]
};
var chain_default38 = info105;

// node_modules/chain-registry/esm/mainnet/cosmoshub/ibc.js
var info106 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-9",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1002",
      connection_id: "connection-701"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-457",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-6",
      connection_id: "connection-8"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-927",
      connection_id: "connection-649"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-405",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "aioz",
      client_id: "07-tendermint-1",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1121",
      connection_id: "connection-808"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-567",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-53",
      connection_id: "connection-29"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-385",
      connection_id: "connection-339"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-184",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1152",
      connection_id: "connection-873"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-623",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "aura",
      client_id: "07-tendermint-24",
      connection_id: "connection-14"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1158",
      connection_id: "connection-880"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-646",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-622",
      connection_id: "connection-481"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-293",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bitcanna",
      client_id: "07-tendermint-4",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-490",
      connection_id: "connection-399"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-232",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bitsong",
      client_id: "07-tendermint-1",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-481",
      connection_id: "connection-395"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-229",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "carbon",
      client_id: "07-tendermint-6",
      connection_id: "connection-5"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-765",
      connection_id: "connection-554"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-342",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "demex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cifer",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1301",
      connection_id: "connection-1035"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-831",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-7",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1150",
      connection_id: "connection-871"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-617",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-11",
      connection_id: "connection-11"
    },
    chain_2: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1162",
      connection_id: "connection-884"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-660",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-724",
      connection_id: "connection-538"
    },
    chain_2: {
      chain_name: "crescent",
      client_id: "07-tendermint-3",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-326",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-389",
      connection_id: "connection-342"
    },
    chain_2: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-735",
      connection_id: "connection-220"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-187",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-27",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1191",
      connection_id: "connection-920"
    },
    chain_2: {
      chain_name: "doravota",
      client_id: "07-tendermint-14",
      connection_id: "connection-8"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-750",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1205",
      connection_id: "connection-933"
    },
    chain_2: {
      chain_name: "dymension",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-794",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-432",
      connection_id: "connection-365"
    },
    chain_2: {
      chain_name: "emoney",
      client_id: "07-tendermint-8",
      connection_id: "connection-3"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-202",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1151",
      connection_id: "connection-872"
    },
    chain_2: {
      chain_name: "empowerchain",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-621",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-620",
      connection_id: "connection-480"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-3",
      connection_id: "connection-3"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-292",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1141",
      connection_id: "connection-829"
    },
    chain_2: {
      chain_name: "fxcore",
      client_id: "07-tendermint-13",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-585",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1153",
      connection_id: "connection-874"
    },
    chain_2: {
      chain_name: "haqq",
      client_id: "07-tendermint-2",
      connection_id: "connection-3"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-632",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-434",
      connection_id: "connection-368"
    },
    chain_2: {
      chain_name: "impacthub",
      client_id: "07-tendermint-9",
      connection_id: "connection-9"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-204",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-470",
      connection_id: "connection-388"
    },
    chain_2: {
      chain_name: "injective",
      client_id: "07-tendermint-5",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-220",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-384",
      connection_id: "connection-338"
    },
    chain_2: {
      chain_name: "irisnet",
      client_id: "07-tendermint-31",
      connection_id: "connection-22"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-182",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1307",
      connection_id: "connection-1041"
    },
    chain_2: {
      chain_name: "joltify",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-866",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-439",
      connection_id: "connection-372"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-207",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-557",
      connection_id: "connection-460"
    },
    chain_2: {
      chain_name: "kava",
      client_id: "07-tendermint-1",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-277",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-475",
      connection_id: "connection-392"
    },
    chain_2: {
      chain_name: "kichain",
      client_id: "07-tendermint-6",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-223",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-769",
      connection_id: "connection-555"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-343",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-468",
      connection_id: "connection-386"
    },
    chain_2: {
      chain_name: "likecoin",
      client_id: "07-tendermint-24",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-217",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1120",
      connection_id: "connection-807"
    },
    chain_2: {
      chain_name: "lumnetwork",
      client_id: "07-tendermint-21",
      connection_id: "connection-22"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-566",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1119",
      connection_id: "connection-809"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-569",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1116",
      connection_id: "connection-790"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-4",
      connection_id: "connection-12"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-536",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-656",
      connection_id: "connection-501"
    },
    chain_2: {
      chain_name: "omniflixhub",
      client_id: "07-tendermint-23",
      connection_id: "connection-19"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-306",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-651",
      connection_id: "connection-497"
    },
    chain_2: {
      chain_name: "oraichain",
      client_id: "07-tendermint-47",
      connection_id: "connection-22"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-301",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "oraidex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-259",
      connection_id: "connection-257"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-141",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-391",
      connection_id: "connection-344"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-36",
      connection_id: "connection-30"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-190",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-24",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-994",
      connection_id: "connection-693"
    },
    chain_2: {
      chain_name: "planq",
      client_id: "07-tendermint-5",
      connection_id: "connection-3"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-446",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-926",
      connection_id: "connection-648"
    },
    chain_2: {
      chain_name: "point",
      client_id: "07-tendermint-1",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-404",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1304",
      connection_id: "connection-1038"
    },
    chain_2: {
      chain_name: "pryzm",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-859",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1018",
      connection_id: "connection-709"
    },
    chain_2: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-2",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-467",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1"
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1157",
      connection_id: "connection-879"
    },
    chain_2: {
      chain_name: "realio",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-645",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-386",
      connection_id: "connection-340"
    },
    chain_2: {
      chain_name: "regen",
      client_id: "07-tendermint-27",
      connection_id: "connection-24"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-185",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-492",
      connection_id: "connection-401"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-1",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-235",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1140",
      connection_id: "connection-827"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-3",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-584",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1310",
      connection_id: "connection-1043"
    },
    chain_2: {
      chain_name: "self",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-892",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-388",
      connection_id: "connection-341"
    },
    chain_2: {
      chain_name: "sentinel",
      client_id: "07-tendermint-58",
      connection_id: "connection-33"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-186",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-395",
      connection_id: "connection-347"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-192",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-892",
      connection_id: "connection-618"
    },
    chain_2: {
      chain_name: "stafihub",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-369",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1188",
      connection_id: "connection-918"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-320",
      connection_id: "connection-256"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-730",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-239",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-326",
      connection_id: "connection-300"
    },
    chain_2: {
      chain_name: "starname",
      client_id: "07-tendermint-6",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-158",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-913",
      connection_id: "connection-635"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-391",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-962",
      connection_id: "connection-1710"
    },
    chain_2: {
      chain_name: "teritori",
      client_id: "07-tendermint-32",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-431",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-760",
      connection_id: "connection-551"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-0",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-339",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-611",
      connection_id: "connection-473"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-9",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-288",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1115",
      connection_id: "connection-788"
    },
    chain_2: {
      chain_name: "uptick",
      client_id: "07-tendermint-3",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-535",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1"
    }]
  }
];
var ibc_default30 = info106;

// node_modules/chain-registry/esm/mainnet/cosmoshub/index.js
var assets38 = assets_default38;
var chain38 = chain_default38;
var ibc30 = ibc_default30;

// node_modules/chain-registry/esm/mainnet/coss/assets.js
var info107 = {
  $schema: "../assetlist.schema.json",
  chain_name: "coss",
  assets: [
    {
      description: "The native staking and governance token of the COSS.",
      denom_units: [{
        denom: "ucgas",
        exponent: 0
      }, {
        denom: "cgas",
        exponent: 6
      }],
      base: "ucgas",
      name: "CGAS",
      display: "cgas",
      symbol: "CGAS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coss/images/cgas.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coss/images/cgas.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coss/images/cgas.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coss/images/cgas.svg"
      }]
    },
    {
      description: "The inscription token of the COSS.",
      denom_units: [{
        denom: "ucoss",
        exponent: 0
      }, {
        denom: "coss",
        exponent: 6
      }],
      base: "ucoss",
      name: "COSS",
      display: "coss",
      symbol: "COSS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coss/images/coss.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coss/images/coss.svg"
      },
      coingecko_id: "coss-2",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coss/images/coss.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coss/images/coss.svg"
      }]
    },
    {
      description: "The inscription token of the CIAS.",
      denom_units: [{
        denom: "ucias",
        exponent: 0
      }, {
        denom: "cias",
        exponent: 6
      }],
      base: "ucias",
      name: "CIAS",
      display: "cias",
      symbol: "CIAS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coss/images/cias.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coss/images/cias.svg"
      },
      coingecko_id: "cias",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coss/images/cias.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coss/images/cias.svg"
      }]
    }
  ]
};
var assets_default39 = info107;

// node_modules/chain-registry/esm/mainnet/coss/chain.js
var info108 = {
  $schema: "../chain.schema.json",
  chain_name: "coss",
  chain_id: "coss-1",
  website: "https://coss.ink/",
  pretty_name: "COSS",
  status: "live",
  network_type: "mainnet",
  bech32_prefix: "coss",
  daemon_name: "cossd",
  node_home: "$HOME/.coss",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [
      {
        denom: "ucoss",
        fixed_min_gas_price: 0.025,
        low_gas_price: 0.025,
        average_gas_price: 0.03,
        high_gas_price: 0.04
      },
      {
        denom: "ucgas",
        fixed_min_gas_price: 0.025,
        low_gas_price: 0.025,
        average_gas_price: 0.03,
        high_gas_price: 0.04
      },
      {
        denom: "ucias",
        fixed_min_gas_price: 0.025,
        low_gas_price: 0.025,
        average_gas_price: 0.03,
        high_gas_price: 0.04
      }
    ]
  },
  staking: {
    staking_tokens: [{
      denom: "ucgas"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coss/images/coss.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coss/images/coss.svg"
  },
  apis: {
    rpc: [{
      address: "https://coss-rpc.coss.ink",
      provider: "StellarGuardian"
    }, {
      address: "https://coss-rpc.cias.network",
      provider: "CelestialPhoenix"
    }],
    rest: [{
      address: "https://coss-rest.coss.ink",
      provider: "StellarGuardian"
    }, {
      address: "https://coss-rest.cias.network",
      provider: "CelestialPhoenix"
    }]
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coss/images/coss.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coss/images/coss.svg"
  }]
};
var chain_default39 = info108;

// node_modules/chain-registry/esm/mainnet/coss/index.js
var assets39 = assets_default39;
var chain39 = chain_default39;

// node_modules/chain-registry/esm/mainnet/crescent/assets.js
var info109 = {
  $schema: "../assetlist.schema.json",
  chain_name: "crescent",
  assets: [{
    description: "The native token of Crescent",
    denom_units: [{
      denom: "ucre",
      exponent: 0
    }, {
      denom: "cre",
      exponent: 6
    }],
    base: "ucre",
    name: "Crescent",
    display: "cre",
    symbol: "CRE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/crescent/images/cre.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/crescent/images/cre.svg"
    },
    coingecko_id: "crescent-network",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/crescent/images/cre.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/crescent/images/cre.svg"
    }]
  }, {
    description: "The bonded token of Crescent",
    denom_units: [{
      denom: "ubcre",
      exponent: 0
    }, {
      denom: "bcre",
      exponent: 6
    }],
    base: "ubcre",
    name: "Bonded Crescent",
    display: "bcre",
    symbol: "bCRE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/crescent/images/bcre.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/crescent/images/bcre.svg"
    },
    coingecko_id: "liquid-staking-crescent",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/crescent/images/bcre.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/crescent/images/bcre.svg"
    }]
  }]
};
var assets_default40 = info109;

// node_modules/chain-registry/esm/mainnet/crescent/chain.js
var info110 = {
  $schema: "../chain.schema.json",
  chain_name: "crescent",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Crescent",
  chain_id: "crescent-1",
  bech32_prefix: "cre",
  daemon_name: "crescentd",
  node_home: "$HOME/.crescent",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ucre",
      fixed_min_gas_price: 0,
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.03
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ucre"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/crescent/images/cre.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/crescent/images/cre.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://mainnet.crescent.network:26657",
        provider: "crescent"
      },
      {
        address: "https://crescent-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://rpc-crescent.pupmos.network",
        provider: "PUPM\xD8S"
      },
      {
        address: "https://crescent.rpc.stakin-nodes.com",
        provider: "Stakin"
      },
      {
        address: "https://crescent-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rpc-crescent.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://rpc-crescent-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://crescent-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://rpc.crescent.bronbro.io:443",
        provider: "Bro_n_Bro"
      }
    ],
    rest: [
      {
        address: "https://mainnet.crescent.network:1317",
        provider: "crescent"
      },
      {
        address: "https://api-crescent.pupmos.network",
        provider: "PUPM\xD8S"
      },
      {
        address: "https://crescent-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://crescent.rest.stakin-nodes.com",
        provider: "Stakin"
      },
      {
        address: "https://api-crescent.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://crescent-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://api-crescent-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://crescent-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://lcd.crescent.bronbro.io:443",
        provider: "Bro_n_Bro"
      }
    ],
    grpc: [
      {
        address: "crescent-grpc.polkachu.com:14590",
        provider: "Polkachu"
      },
      {
        address: "crescent.grpc.stakin-nodes.com:443",
        provider: "Stakin"
      },
      {
        address: "crescent-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "grpc-crescent.cosmos-spaces.cloud:2270",
        provider: "Cosmos Spaces"
      },
      {
        address: "grpc-crescent-01.stakeflow.io:1402",
        provider: "Stakeflow"
      },
      {
        address: "crescent-grpc.w3coins.io:14590",
        provider: "w3coins"
      },
      {
        address: "https://grpc.crescent.bronbro.io:443",
        provider: "Bro_n_Bro"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/crescent",
      tx_page: "https://ezstaking.app/crescent/txs/${txHash}",
      account_page: "https://ezstaking.app/crescent/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/crescent",
      tx_page: "https://ping.pub/crescent/tx/${txHash}"
    },
    {
      kind: "explorers.guru",
      url: "https://crescent.explorers.guru",
      tx_page: "https://crescent.explorers.guru/transaction/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/crescent",
      tx_page: "https://atomscan.com/crescent/transactions/${txHash}",
      account_page: "https://atomscan.com/crescent/accounts/${accountAddress}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/crescent",
      account_page: "https://stakeflow.io/crescent/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/crescent/images/cre.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/crescent/images/cre.svg"
  }]
};
var chain_default40 = info110;

// node_modules/chain-registry/esm/mainnet/crescent/ibc.js
var info111 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "crescent",
      client_id: "07-tendermint-19",
      connection_id: "connection-14"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-132",
      connection_id: "connection-107"
    },
    chain_2: {
      chain_name: "crescent",
      client_id: "07-tendermint-80",
      connection_id: "connection-71"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-70",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-44",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-31",
      connection_id: "connection-17"
    },
    chain_2: {
      chain_name: "crescent",
      client_id: "07-tendermint-6",
      connection_id: "connection-4"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "comdex",
      client_id: "07-tendermint-108",
      connection_id: "connection-54"
    },
    chain_2: {
      chain_name: "crescent",
      client_id: "07-tendermint-32",
      connection_id: "connection-33"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-49",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-26",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-46",
      connection_id: "connection-18"
    },
    chain_2: {
      chain_name: "crescent",
      client_id: "07-tendermint-112",
      connection_id: "connection-98"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-64",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-724",
      connection_id: "connection-538"
    },
    chain_2: {
      chain_name: "crescent",
      client_id: "07-tendermint-3",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-326",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-77",
      connection_id: "connection-65"
    },
    chain_2: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-1153",
      connection_id: "connection-277"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-40",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-61",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-12",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-38",
      connection_id: "connection-15"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-4",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-100",
      connection_id: "connection-102"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-62",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-26",
      connection_id: "connection-29"
    },
    chain_2: {
      chain_name: "injective",
      client_id: "07-tendermint-132",
      connection_id: "connection-105"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-90",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-67",
      connection_id: "connection-61"
    },
    chain_2: {
      chain_name: "irisnet",
      client_id: "07-tendermint-86",
      connection_id: "connection-70"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-111",
      connection_id: "connection-97"
    },
    chain_2: {
      chain_name: "jackal",
      client_id: "07-tendermint-56",
      connection_id: "connection-46"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-63",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-38",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-5",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-160",
      connection_id: "connection-107"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-81",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-78",
      connection_id: "connection-68"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-105",
      connection_id: "connection-75"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-42",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-67",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-53",
      connection_id: "connection-52"
    },
    chain_2: {
      chain_name: "mars",
      client_id: "07-tendermint-14",
      connection_id: "connection-9"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-35",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-68",
      connection_id: "connection-63"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-38",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-44",
      connection_id: "connection-46"
    },
    chain_2: {
      chain_name: "okexchain",
      client_id: "07-tendermint-116",
      connection_id: "connection-78"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-31",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-46",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-17",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2083",
      connection_id: "connection-1624"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-297",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-42",
      connection_id: "connection-41"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-88",
      connection_id: "connection-72"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-30",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-68",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-18",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-53",
      connection_id: "connection-31"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-24",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent",
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-24",
      connection_id: "connection-27"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-180",
      connection_id: "connection-114"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-21",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-38",
      connection_id: "connection-39"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-44",
      connection_id: "connection-30"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-29",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "terra",
      client_id: "07-tendermint-101",
      connection_id: "connection-70"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-49",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-36",
      connection_id: "connection-37"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-68",
      connection_id: "connection-57"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-27",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-56",
      connection_id: "connection-53"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-170",
      connection_id: "connection-110"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-49",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  }
];
var ibc_default31 = info111;

// node_modules/chain-registry/esm/mainnet/crescent/index.js
var assets40 = assets_default40;
var chain40 = chain_default40;
var ibc31 = ibc_default31;

// node_modules/chain-registry/esm/mainnet/cronos/assets.js
var info112 = {
  $schema: "../assetlist.schema.json",
  chain_name: "cronos",
  assets: [{
    description: "Cronos Chain - Get Instant DApp Portability with EVM Support",
    denom_units: [{
      denom: "basecro",
      exponent: 0
    }, {
      denom: "cro",
      exponent: 18
    }],
    base: "basecro",
    name: "Cronos",
    display: "cro",
    symbol: "CRO",
    traces: [{
      type: "additional-mintage",
      counterparty: {
        chain_name: "cryptoorgchain",
        base_denom: "basecro"
      },
      provider: "Cronos"
    }],
    images: [{
      image_sync: {
        chain_name: "cryptoorgchain",
        base_denom: "basecro"
      },
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cronos/images/cro.svg"
    }],
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cronos/images/cro.svg"
    }
  }, {
    description: "Tether USDt on Cronos",
    denom_units: [{
      denom: "ibc/9106F2626880DF7FAD30621F355423B2A7523D8E2274475F009644D708A90682",
      exponent: 0
    }, {
      denom: "usdt",
      exponent: 6
    }],
    type_asset: "ics20",
    base: "ibc/9106F2626880DF7FAD30621F355423B2A7523D8E2274475F009644D708A90682",
    name: "Tether USDt",
    display: "usdt",
    symbol: "USDt",
    traces: [{
      type: "ibc",
      counterparty: {
        chain_name: "kava",
        base_denom: "erc20/tether/usdt",
        channel_id: "channel-125"
      },
      chain: {
        channel_id: "channel-11",
        path: "transfer/channel-11/erc20/tether/usdt"
      }
    }],
    images: [{
      image_sync: {
        chain_name: "kava",
        base_denom: "erc20/tether/usdt"
      },
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
      theme: {
        circle: true,
        primary_color_hex: "#009393",
        background_color_hex: "#009393"
      }
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
    }
  }]
};
var assets_default41 = info112;

// node_modules/chain-registry/esm/mainnet/cronos/chain.js
var info113 = {
  $schema: "../chain.schema.json",
  chain_name: "cronos",
  status: "live",
  network_type: "mainnet",
  website: "https://cronos.org",
  pretty_name: "Cronos",
  chain_id: "cronosmainnet_25-1",
  bech32_prefix: "crc",
  daemon_name: "cronosd",
  node_home: "$HOME/.cronos",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "basecro"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cronos/images/cronos.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cronos/images/cro.svg"
  },
  apis: {
    rpc: [{
      address: "https://rpc.cronos.org/",
      provider: "cronos.org"
    }, {
      address: "https://cronos-rpc.publicnode.com:443",
      provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
    }],
    rest: [{
      address: "https://rest.cronos.org/",
      provider: "cronos.org"
    }, {
      address: "https://cronos-rest.publicnode.com",
      provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
    }],
    grpc: [{
      address: "grpc.cronos.org:443",
      provider: "cronos.org"
    }, {
      address: "cronos-grpc.publicnode.com:443",
      provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
    }],
    "evm-http-jsonrpc": [{
      address: "https://evm.cronos.org/",
      provider: "cronos.org"
    }, {
      address: "https://cronos-evm.publicnode.com",
      provider: "Allnodes.com \u26A1\uFE0F Nodes & Staking"
    }]
  },
  explorers: [
    {
      kind: "cronoscan",
      url: "https://cronoscan.com",
      tx_page: "https://cronoscan.com/tx/${txHash}"
    },
    {
      kind: "crypto.org",
      url: "https://cronos.org/explorer",
      tx_page: "https://cronos.org/explorer/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/cronos",
      tx_page: "https://ping.pub/cronos/tx/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cronos/images/cronos.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cronos/images/cro.svg"
  }]
};
var chain_default41 = info113;

// node_modules/chain-registry/esm/mainnet/cronos/ibc.js
var info114 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "cronos",
    client_id: "07-tendermint-33",
    connection_id: "connection-17"
  },
  chain_2: {
    chain_name: "kava",
    client_id: "07-tendermint-134",
    connection_id: "connection-169"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-11",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-125",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default32 = info114;

// node_modules/chain-registry/esm/mainnet/cronos/index.js
var assets41 = assets_default41;
var chain41 = chain_default41;
var ibc32 = ibc_default32;

// node_modules/chain-registry/esm/mainnet/cryptoorgchain/assets.js
var info115 = {
  $schema: "../assetlist.schema.json",
  chain_name: "cryptoorgchain",
  assets: [
    {
      description: "CRO is the native token of the Crypto.org Chain, referred to as Native CRO.",
      denom_units: [{
        denom: "basecro",
        exponent: 0
      }, {
        denom: "cro",
        exponent: 8
      }],
      base: "basecro",
      name: "Cronos",
      display: "cro",
      symbol: "CRO",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cronos/images/cro.svg"
      },
      coingecko_id: "crypto-com-chain",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cronos/images/cro.svg"
      }, {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cronos/images/cronos.png"
      }],
      socials: {
        website: "https://cronos.org/",
        twitter: "https://twitter.com/cronos_chain"
      }
    },
    {
      description: "Synthetic XLM pegged 1:1 by Crypto.com",
      denom_units: [{
        denom: "baseXLM",
        exponent: 0,
        aliases: ["stroop"]
      }, {
        denom: "lumen",
        exponent: 7
      }],
      base: "baseXLM",
      name: "Lumen (XLM) pegged token",
      display: "lumen",
      symbol: "XLM",
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "stellar",
          base_denom: "stroop"
        },
        provider: "Crypto.com"
      }],
      images: [{
        image_sync: {
          chain_name: "stellar",
          base_denom: "stroop"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/stellar/images/xlm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/stellar/images/xlm.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/stellar/images/xlm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/stellar/images/xlm.svg"
      }
    },
    {
      description: "The native token of Stellar network, transferred via Solo Machine.",
      denom_units: [{
        denom: "ibc/34A1D4BF5FFCDB912F64FE71D54426D56970F873F1279983B69C713B3A62D10D",
        exponent: 0,
        aliases: ["stroop"]
      }, {
        denom: "lumen",
        exponent: 7
      }],
      base: "ibc/34A1D4BF5FFCDB912F64FE71D54426D56970F873F1279983B69C713B3A62D10D",
      name: "Lumen (Solo Machine)",
      display: "lumen",
      symbol: "XLM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "cryptoorgchain",
          base_denom: "baseXLM",
          channel_id: "channel-JEnb"
        },
        chain: {
          channel_id: "channel-46",
          path: "transfer/channel-46/baseXLM"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "stellar",
          base_denom: "stroop"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/stellar/images/xlm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/stellar/images/xlm.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/stellar/images/xlm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/stellar/images/xlm.svg"
      }
    }
  ]
};
var assets_default42 = info115;

// node_modules/chain-registry/esm/mainnet/cryptoorgchain/chain.js
var info116 = {
  $schema: "../chain.schema.json",
  chain_name: "cryptoorgchain",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Cronos POS Chain",
  chain_id: "crypto-org-chain-mainnet-1",
  bech32_prefix: "cro",
  website: "https://cronos-pos.org/",
  daemon_name: "chain-maind",
  node_home: "$HOME/.chain-maind",
  slip44: 394,
  alternative_slip44s: [118],
  fees: {
    fee_tokens: [{
      denom: "basecro",
      low_gas_price: 0.025,
      average_gas_price: 0.03,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "basecro"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cryptoorgchain/images/cronos.png"
  },
  description: "Cronos PoS Chain is a public, open-source and permissionless blockchain - a fully decentralized network with high speed and low fees, designed to be a public good that helps drive mass adoption of blockchain technology through use cases like Payments, DeFi and NFTs.",
  apis: {
    rpc: [
      {
        address: "https://rpc.mainnet.crypto.org/",
        provider: "cronos.org"
      },
      {
        address: "https://rpc-cryptoorgchain-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://rpc-cryptoorgchain.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://cryptocom-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://cryptocom-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://rpc-cryptoorg.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://cro-chain-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    rest: [
      {
        address: "https://rest.mainnet.crypto.org/",
        provider: "cronos.org"
      },
      {
        address: "https://api-cryptoorgchain-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://cryptocom-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://rest-cryptoorgchain.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://cryptocom-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://api-cryptoorg.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://cro-chain-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    grpc: [
      {
        address: "grpc.mainnet.crypto.org:443",
        provider: "cronos.org"
      },
      {
        address: "grpc-cryptoorgchain-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "cryptocom-grpc.polkachu.com:20290",
        provider: "Polkachu"
      },
      {
        address: "cryptocom-grpc.w3coins.io:20290",
        provider: "w3coins"
      },
      {
        address: "grpc-cryptoorg.cosmos-spaces.cloud:1160",
        provider: "Cosmos Spaces"
      },
      {
        address: "cro-chain-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ]
  },
  explorers: [
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/crypto-org",
      tx_page: "https://www.mintscan.io/crypto-org/transactions/${txHash}",
      account_page: "https://www.mintscan.io/crypto-org/accounts/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/cronos",
      tx_page: "https://ezstaking.app/cronos/txs/${txHash}",
      account_page: "https://ezstaking.app/cronos/account/${accountAddress}"
    },
    {
      kind: "cronos.org",
      url: "https://cronos-pos.org/explorer",
      tx_page: "https://cronos-pos.org/explorer/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/crypto-com-chain",
      tx_page: "https://ping.pub/crypto-com-chain/tx/${txHash}"
    }
  ],
  images: [
    {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cryptoorgchain/images/cronos.png"
    },
    {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cryptoorgchain/images/Cronos_POS_Chain_Colour.svg"
    },
    {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cronos/images/cronos.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cronos/images/cro.svg"
    }
  ]
};
var chain_default42 = info116;

// node_modules/chain-registry/esm/mainnet/cryptoorgchain/ibc.js
var info117 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-48",
      connection_id: "connection-23"
    },
    chain_2: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-65",
      connection_id: "connection-38"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-21",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1"
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-389",
      connection_id: "connection-342"
    },
    chain_2: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-735",
      connection_id: "connection-220"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-187",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-27",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-77",
      connection_id: "connection-65"
    },
    chain_2: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-1153",
      connection_id: "connection-277"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-40",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-61",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-1136",
      connection_id: "connection-260"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-85",
      connection_id: "connection-43"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-57",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-31",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-650",
      connection_id: "connection-197"
    },
    chain_2: {
      chain_name: "irisnet",
      client_id: "07-tendermint-32",
      connection_id: "connection-23"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-33",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-4",
      connection_id: "connection-5"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-61",
      connection_id: "connection-34"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-24",
      connection_id: "connection-17"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-732",
      connection_id: "connection-218"
    },
    chain_2: {
      chain_name: "regen",
      client_id: "07-tendermint-28",
      connection_id: "connection-26"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-25",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-63",
      connection_id: "connection-36"
    },
    chain_2: {
      chain_name: "sentinel",
      client_id: "07-tendermint-43",
      connection_id: "connection-28"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-19",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-1103",
      connection_id: "connection-239"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-20",
      connection_id: "connection-10"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-33",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-66",
      connection_id: "connection-39"
    },
    chain_2: {
      chain_name: "starname",
      client_id: "07-tendermint-16",
      connection_id: "connection-11"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-22",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  }
];
var ibc_default33 = info117;

// node_modules/chain-registry/esm/mainnet/cryptoorgchain/index.js
var assets42 = assets_default42;
var chain42 = chain_default42;
var ibc33 = ibc_default33;

// node_modules/chain-registry/esm/mainnet/cudos/assets.js
var info118 = {
  $schema: "../assetlist.schema.json",
  chain_name: "cudos",
  assets: [{
    description: "The native token of the Cudos blockchain",
    denom_units: [{
      denom: "acudos",
      exponent: 0,
      aliases: ["attocudos"]
    }, {
      denom: "cudos",
      exponent: 18
    }],
    base: "acudos",
    name: "Cudos",
    display: "cudos",
    symbol: "CUDOS",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cudos/images/cudos.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cudos/images/cudos.svg"
    },
    coingecko_id: "cudos",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cudos/images/cudos.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cudos/images/cudos.svg"
    }],
    socials: {
      website: "http://www.cudos.org",
      twitter: "https://twitter.com/CUDOS_"
    }
  }]
};
var assets_default43 = info118;

// node_modules/chain-registry/esm/mainnet/cudos/chain.js
var info119 = {
  $schema: "../chain.schema.json",
  chain_name: "cudos",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Cudos",
  chain_id: "cudos-1",
  bech32_prefix: "cudos",
  daemon_name: "cudos-noded",
  website: "https://www.cudos.org/",
  node_home: "$HOME/cudos-data",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "acudos",
      low_gas_price: 5e12,
      average_gas_price: 1e13,
      high_gas_price: 2e13
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "acudos"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cudos/images/cudos.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cudos/images/cudos.svg"
  },
  apis: {
    rpc: [
      {
        address: "http://mainnet-full-node-01.hosts.cudos.org:26657",
        provider: "cudo"
      },
      {
        address: "https://mainnet-full-node-02.hosts.cudos.org:36657",
        provider: "cudo"
      },
      {
        address: "https://cudos-rpc.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://cudos-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://cudos-rpc.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://cudos-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    rest: [
      {
        address: "http://mainnet-full-node-01.hosts.cudos.org:1317",
        provider: "cudo"
      },
      {
        address: "https://mainnet-full-node-02.hosts.cudos.org:31317",
        provider: "cudo"
      },
      {
        address: "https://cudos-api.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://cudos-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://cudos-api.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://cudos-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    grpc: [
      {
        address: "mainnet-full-node-01.hosts.cudos.org:9090",
        provider: "cudo"
      },
      {
        address: "cudos-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "cudos-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "cudos-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ]
  },
  explorers: [
    {
      kind: "bigdipper",
      url: "https://explorer.cudos.org/",
      tx_page: "https://explorer.cudos.org/transactions/${txHash}",
      account_page: "https://explorer.cudos.org/accounts/${accountAddress}"
    },
    {
      kind: "cudos-dashboard",
      url: "https://dashboard.cudos.org/",
      tx_page: "https://explorer.cudos.org/transactions/${txHash}",
      account_page: "https://explorer.cudos.org/accounts/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/cudos",
      tx_page: "https://www.mintscan.io/cudos/transactions/${txHash}",
      account_page: "https://www.mintscan.io/cudos/accounts/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/cudos",
      tx_page: "https://atomscan.com/cudos/transactions/${txHash}",
      account_page: "https://atomscan.com/cudos/accounts/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/cudos",
      tx_page: "https://ezstaking.app/cudos/txs/${txHash}",
      account_page: "https://ezstaking.app/cudos/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cudos/images/cudos.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cudos/images/cudos.svg"
  }]
};
var chain_default43 = info119;

// node_modules/chain-registry/esm/mainnet/cudos/ibc.js
var info120 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "cudos",
    client_id: "07-tendermint-2084",
    connection_id: "connection-1626"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-1",
    connection_id: "connection-1"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-298",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default34 = info120;

// node_modules/chain-registry/esm/mainnet/cudos/index.js
var assets43 = assets_default43;
var chain43 = chain_default43;
var ibc34 = ibc_default34;

// node_modules/chain-registry/esm/mainnet/decentr/assets.js
var info121 = {
  $schema: "../assetlist.schema.json",
  chain_name: "decentr",
  assets: [{
    description: "The native token of Decentr",
    denom_units: [{
      denom: "udec",
      exponent: 0
    }, {
      denom: "dec",
      exponent: 6
    }],
    base: "udec",
    name: "Decentr",
    display: "dec",
    symbol: "DEC",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/decentr/images/dec.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/decentr/images/dec.svg"
    },
    coingecko_id: "decentr",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/decentr/images/dec.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/decentr/images/dec.svg"
    }]
  }]
};
var assets_default44 = info121;

// node_modules/chain-registry/esm/mainnet/decentr/chain.js
var info122 = {
  $schema: "../chain.schema.json",
  chain_name: "decentr",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Decentr",
  chain_id: "mainnet-3",
  bech32_prefix: "decentr",
  daemon_name: "decentrd",
  node_home: "$HOME/.decentr",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "udec",
      fixed_min_gas_price: 0.025,
      low_gas_price: 0.025,
      average_gas_price: 0.025,
      high_gas_price: 0.025
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "udec"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/decentr/images/dec.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/decentr/images/dec.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://poseidon.mainnet.decentr.xyz",
        provider: "decentr"
      },
      {
        address: "https://rpc.decentr.chaintools.tech/",
        provider: "ChainTools"
      },
      {
        address: "https://decentr.rpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://decentr-rpc.ibs.team/",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://rpc-dcntr.nodine.id/",
        provider: "Nodine.ID"
      },
      {
        address: "https://rpc-decentr.mms.team/",
        provider: "MMS"
      }
    ],
    rest: [
      {
        address: "https://rest.mainnet.decentr.xyz",
        provider: "decentr"
      },
      {
        address: "https://decentr.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api.decentr.chaintools.tech/",
        provider: "ChainTools"
      },
      {
        address: "https://decentr-api.ibs.team/",
        provider: "Inter Blockchain Services"
      }
    ],
    grpc: [
      {
        address: "https://grpc-decentr.sxlzptprjkt.xyz:443",
        provider: "sxlzptprjkt | VALIDATOR"
      },
      {
        address: "decentr.grpc.m.stavr.tech:2060",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://grpc.decentr.hexnodes.co",
        provider: "Hexnodes"
      },
      {
        address: "https://grpc.decentr.nodexcapital.com:443",
        provider: "NodeX Validator"
      },
      {
        address: "grpc-decentr.mms.team:443",
        provider: "MMS"
      }
    ]
  },
  explorers: [
    {
      kind: "decentr.net",
      url: "https://explorer.decentr.net",
      tx_page: "https://explorer.decentr.net/transactions/${txHash}?networkId=mainnet"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/decentr/",
      tx_page: "https://ping.pub/decentr/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Decentr-Mainnet",
      tx_page: "https://explorer.stavr.tech/Decentr-Mainnet/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/decentr",
      tx_page: "https://atomscan.com/decentr/transactions/${txHash}",
      account_page: "https://atomscan.com/decentr/accounts/${accountAddress}"
    },
    {
      kind: "Nodine.ID",
      url: "https://explorer.co.id/decentr",
      tx_page: "https://explorer.co.id/decentr/tx/${txHash}"
    },
    {
      kind: "THE EXPLORER",
      url: "https://explorer.sxlzptprjkt.xyz/decentr",
      tx_page: "https://explorer.sxlzptprjkt.xyz/decentr/tx/${txHash}"
    },
    {
      kind: "hexskrt EXPLORER",
      url: "https://explorer.hexskrt.net/decentr",
      tx_page: "https://explorer.hexskrt.net/decentr/tx/${txHash}"
    },
    {
      kind: "NODEXPLORER",
      url: "https://explorer.nodexcapital.com/decentr",
      tx_page: "https://explorer.nodexcapital.com/decentr/tx/${txHash}"
    },
    {
      kind: "Explorer ComunityNode",
      url: "https://explorer.comunitynode.my.id/decentr",
      tx_page: "https://explorer.comunitynode.my.id/decentr/tx/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/decentr/images/dec.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/decentr/images/dec.svg"
  }]
};
var chain_default44 = info122;

// node_modules/chain-registry/esm/mainnet/decentr/ibc.js
var info123 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-38",
      connection_id: "connection-41"
    },
    chain_2: {
      chain_name: "decentr",
      client_id: "07-tendermint-21",
      connection_id: "connection-8"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "decentr",
      client_id: "07-tendermint-6",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1798",
      connection_id: "connection-1403"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-181",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "decentr",
      client_id: "07-tendermint-13",
      connection_id: "connection-5"
    },
    chain_2: {
      chain_name: "sentinel",
      client_id: "07-tendermint-103",
      connection_id: "connection-81"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-55",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "decentr",
      client_id: "07-tendermint-26",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-395",
      connection_id: "connection-385"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-315",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default35 = info123;

// node_modules/chain-registry/esm/mainnet/decentr/index.js
var assets44 = assets_default44;
var chain44 = chain_default44;
var ibc35 = ibc_default35;

// node_modules/chain-registry/esm/mainnet/desmos/assets.js
var info124 = {
  $schema: "../assetlist.schema.json",
  chain_name: "desmos",
  assets: [{
    description: "The native token of Desmos",
    denom_units: [{
      denom: "udsm",
      exponent: 0
    }, {
      denom: "dsm",
      exponent: 6
    }],
    base: "udsm",
    name: "Desmos",
    display: "dsm",
    symbol: "DSM",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/desmos/images/dsm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/desmos/images/dsm.svg"
    },
    coingecko_id: "desmos",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/desmos/images/dsm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/desmos/images/dsm.svg"
    }]
  }]
};
var assets_default45 = info124;

// node_modules/chain-registry/esm/mainnet/desmos/chain.js
var info125 = {
  $schema: "../chain.schema.json",
  chain_name: "desmos",
  status: "live",
  network_type: "mainnet",
  website: "https://desmos.network/",
  pretty_name: "Desmos",
  chain_id: "desmos-mainnet",
  bech32_prefix: "desmos",
  daemon_name: "desmos",
  node_home: "$HOME/.desmos",
  key_algos: ["secp256k1"],
  slip44: 852,
  fees: {
    fee_tokens: [{
      denom: "udsm",
      fixed_min_gas_price: 1e-3,
      low_gas_price: 0.01,
      average_gas_price: 0.03,
      high_gas_price: 0.05
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "udsm"
    }]
  },
  codebase: {
    cosmos_sdk_version: "desmos-labs/cosmos-sdk v0.47.10-desmos",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.45.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/desmos/images/dsm.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/desmos/images/dsm.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.mainnet.desmos.network",
        provider: "desmos"
      },
      {
        address: "https://desmos-rpc.ibs.team/",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://desmos-rpc.staketab.org:443",
        provider: "Staketab"
      },
      {
        address: "https://rpc.desmos.tcnetwork.io",
        provider: "TC Network"
      },
      {
        address: "https://rpc.desmos.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://desmos.declab.pro:26613",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "https://desmos-rpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    rest: [
      {
        address: "https://api.mainnet.desmos.network",
        provider: "desmos"
      },
      {
        address: "https://desmos-api.ibs.team/",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://desmos-rest.staketab.org",
        provider: "Staketab"
      },
      {
        address: "https://rest.desmos.tcnetwork.io",
        provider: "TC Network"
      },
      {
        address: "https://lcd.desmos.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://vidulum.declab.pro:443",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "https://desmos-api.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    grpc: [
      {
        address: "https://grpc-desmos.explorer.co.id",
        provider: "Nodine.ID"
      },
      {
        address: "services.staketab.com:9043",
        provider: "Staketab"
      },
      {
        address: "desmos.grpc.nodersteam.com:9121",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://grpc-desmos.sr20de.xyz",
        provider: "Sr20de"
      },
      {
        address: "https://grpc.desmos.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://vidulum.declab.pro:9009",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "desmos-grpc.noders.services:27090",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/desmos",
      tx_page: "https://ezstaking.app/desmos/txs/${txHash}",
      account_page: "https://ezstaking.app/desmos/account/${accountAddress}"
    },
    {
      kind: "bigdipper",
      url: "https://bigdipper.live/desmos",
      tx_page: "https://bigdipper.live/desmos/transactions/${txHash}",
      account_page: "https://bigdipper.live/desmos/accounts/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/desmos",
      tx_page: "https://www.mintscan.io/desmos/transactions/${txHash}",
      account_page: "https://www.mintscan.io/desmos/accounts/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/desmos",
      tx_page: "https://ping.pub/desmos/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/desmos",
      tx_page: "https://atomscan.com/desmos/transactions/${txHash}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/desmos",
      tx_page: "https://explorer.tcnetwork.io/desmos/transaction/${txHash}"
    },
    {
      kind: "Decloud Nodes Lab",
      url: "https://explorer.declab.pro/Desmos",
      tx_page: "https://explorer.declab.pro/Desmos/tx/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/desmos/images/dsm.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/desmos/images/dsm.svg"
  }]
};
var chain_default45 = info125;

// node_modules/chain-registry/esm/mainnet/desmos/ibc.js
var info126 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "desmos",
    client_id: "07-tendermint-6",
    connection_id: "connection-4"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-1726",
    connection_id: "connection-1315"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-2",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-135",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default36 = info126;

// node_modules/chain-registry/esm/mainnet/desmos/index.js
var assets45 = assets_default45;
var chain45 = chain_default45;
var ibc36 = ibc_default36;

// node_modules/chain-registry/esm/mainnet/dhealth/assets.js
var info127 = {
  $schema: "../assetlist.schema.json",
  chain_name: "dhealth",
  assets: [{
    description: "The native token of dHealth",
    extended_description: "dHealth Network is an Operating System for Web3 Healthcare. It provides Web3 components such as Decentralised Digital Identity, Digital Payment, and user-controlled data access to support dApps and business models at the intersection of healthcare and blockchain technology.",
    denom_units: [{
      denom: "udhp",
      exponent: 0
    }, {
      denom: "dhp",
      exponent: 6
    }],
    base: "udhp",
    name: "Digital Health Point",
    display: "dhp",
    symbol: "DHP",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dhealth/images/dhp.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dhealth/images/dhp.svg"
    },
    coingecko_id: "dhealth",
    socials: {
      website: "https://dhealth.com",
      twitter: "https://twitter.com/dhealth_network"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dhealth/images/dhp.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dhealth/images/dhp.svg"
    }]
  }]
};
var assets_default46 = info127;

// node_modules/chain-registry/esm/mainnet/dhealth/chain.js
var info128 = {
  $schema: "../chain.schema.json",
  chain_name: "dhealth",
  status: "live",
  network_type: "mainnet",
  website: "https://dhealth.com/",
  pretty_name: "dHealth",
  chain_id: "dhealth",
  bech32_prefix: "dh",
  daemon_name: "dhealthd",
  node_home: "$HOME/.dhealth",
  key_algos: ["secp256k1"],
  slip44: 10111,
  fees: {
    fee_tokens: [{
      denom: "udhp",
      fixed_min_gas_price: 0.01,
      low_gas_price: 0.025,
      average_gas_price: 0.03,
      high_gas_price: 0.035
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "udhp"
    }]
  },
  codebase: {
    cosmos_sdk_version: "cosmos/cosmos-sdk v0.47.4",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.41.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dhealth/images/dhp.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dhealth/images/dhp.svg"
  },
  apis: {
    rpc: [{
      address: "https://rpc.dhealth.com",
      provider: "dhealth"
    }, {
      address: "https://rpc.dhealth.nodestake.org",
      provider: "NodeStake"
    }],
    rest: [{
      address: "https://lcd.dhealth.com",
      provider: "dhealth"
    }, {
      address: "https://api.dhealth.nodestake.org",
      provider: "NodeStake"
    }],
    grpc: [{
      address: "https://grpc.dhealth.com:443",
      provider: "dhealth"
    }, {
      address: "https://grpc.dhealth.nodestake.org:443",
      provider: "NodeStake"
    }]
  },
  explorers: [{
    kind: "nodestake",
    url: "https://explorer.nodestake.org/dhealth",
    tx_page: "https://explorer.nodestake.org/dhealth/tx/${txHash}",
    account_page: "https://explorer.nodestake.org/dhealth/account/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dhealth/images/dhp.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dhealth/images/dhp.svg"
  }]
};
var chain_default46 = info128;

// node_modules/chain-registry/esm/mainnet/dhealth/ibc.js
var info129 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "dhealth",
    client_id: "07-tendermint-4",
    connection_id: "connection-9"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-3205",
    connection_id: "connection-2662"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-4",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-75030",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default37 = info129;

// node_modules/chain-registry/esm/mainnet/dhealth/index.js
var assets46 = assets_default46;
var chain46 = chain_default46;
var ibc37 = ibc_default37;

// node_modules/chain-registry/esm/mainnet/dig/assets.js
var info130 = {
  $schema: "../assetlist.schema.json",
  chain_name: "dig",
  assets: [{
    description: "Native token of Dig Chain",
    denom_units: [{
      denom: "udig",
      exponent: 0
    }, {
      denom: "dig",
      exponent: 6
    }],
    base: "udig",
    name: "Dig Chain",
    display: "dig",
    symbol: "DIG",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dig/images/dig.png"
    },
    coingecko_id: "dig-chain",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dig/images/dig.png"
    }]
  }]
};
var assets_default47 = info130;

// node_modules/chain-registry/esm/mainnet/dig/chain.js
var info131 = {
  $schema: "../chain.schema.json",
  chain_name: "dig",
  status: "live",
  network_type: "mainnet",
  website: "https://digchain.org/",
  pretty_name: "Dig Chain",
  chain_id: "dig-1",
  bech32_prefix: "dig",
  daemon_name: "digd",
  node_home: "$HOME/.dig",
  key_algos: ["secp256k1", "ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "udig",
      low_gas_price: 0.025,
      average_gas_price: 0.03,
      high_gas_price: 0.035
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "udig"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dig/images/dig.png"
  },
  apis: {
    rpc: [{
      address: "https://rpc-1-dig.notional.ventures"
    }, {
      address: "https://rpc-dig-ia.cosmosia.notional.ventures/",
      provider: "Notional"
    }],
    rest: [{
      address: "https://api-1-dig.notional.ventures"
    }, {
      address: "https://api-dig-ia.cosmosia.notional.ventures/",
      provider: "Notional"
    }],
    grpc: [{
      address: "grpc-dig-ia.cosmosia.notional.ventures:443",
      provider: "Notional"
    }]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://ping.pub/dig",
      tx_page: "https://ping.pub/dig/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/dig",
      tx_page: "https://atomscan.com/dig/transactions/${txHash}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/dig",
      tx_page: "https://explorer.tcnetwork.io/dig/transaction/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dig/images/dig.png"
  }]
};
var chain_default47 = info131;

// node_modules/chain-registry/esm/mainnet/dig/ibc.js
var info132 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "dig",
    client_id: "07-tendermint-17",
    connection_id: "connection-10"
  },
  chain_2: {
    chain_name: "juno",
    client_id: "07-tendermint-100",
    connection_id: "connection-62"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-2",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-37",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "dig",
    client_id: "07-tendermint-13",
    connection_id: "connection-8"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-1714",
    connection_id: "connection-1304"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-128",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default38 = info132;

// node_modules/chain-registry/esm/mainnet/dig/index.js
var assets47 = assets_default47;
var chain47 = chain_default47;
var ibc38 = ibc_default38;

// node_modules/chain-registry/esm/mainnet/doravota/assets.js
var info133 = {
  $schema: "../assetlist.schema.json",
  chain_name: "doravota",
  assets: [{
    description: "The native staking and governance token of the Theta testnet version of the Dora Vota.",
    denom_units: [{
      denom: "peaka",
      exponent: 0
    }, {
      denom: "DORA",
      exponent: 18
    }],
    base: "peaka",
    name: "Dora Vota",
    display: "DORA",
    symbol: "DORA",
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/doravota/images/dora.svg"
    },
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/doravota/images/dora.svg"
    }, {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/doravota/images/doravota.png"
    }]
  }]
};
var assets_default48 = info133;

// node_modules/chain-registry/esm/mainnet/doravota/chain.js
var info134 = {
  $schema: "../chain.schema.json",
  chain_name: "doravota",
  chain_id: "vota-ash",
  pretty_name: "Dora Vota",
  status: "live",
  network_type: "mainnet",
  bech32_prefix: "dora",
  daemon_name: "dorad",
  node_home: "$HOME/.dora",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "peaka",
      fixed_min_gas_price: 1e11,
      low_gas_price: 1e11,
      average_gas_price: 1e11,
      high_gas_price: 1e11
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "peaka"
    }]
  },
  codebase: {},
  apis: {
    rpc: [
      {
        address: "https://vota-rpc.dorafactory.org/",
        provider: "dorafactory"
      },
      {
        address: "https://m-dora.rpc.utsa.tech",
        provider: "lesnik | UTSA"
      },
      {
        address: "https://dora-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    rest: [
      {
        address: "https://vota-rest.dorafactory.org",
        provider: "dorafactory"
      },
      {
        address: "https://m-dora.api.utsa.tech",
        provider: "lesnik | UTSA"
      },
      {
        address: "https://dora-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    grpc: [{
      address: "vota-grpc.dorafactory.org:443",
      provider: "dorafactory"
    }, {
      address: "dora-grpc.publicnode.com:443",
      provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
    }]
  },
  explorers: [{
    kind: "Dora Vota Ping Pub",
    url: "https://vota-explorer.dorafactory.org",
    tx_page: "https://vota-explorer.dorafactory.org/doravota/tx/${txHash}"
  }, {
    kind: "lesnik | UTSA Ping Pub",
    url: "https://exp.utsa.tech/dora/staking",
    tx_page: "https://exp.utsa.tech/dora/tx/${txHash}"
  }]
};
var chain_default48 = info134;

// node_modules/chain-registry/esm/mainnet/doravota/ibc.js
var info135 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-183",
      connection_id: "connection-171"
    },
    chain_2: {
      chain_name: "doravota",
      client_id: "07-tendermint-17",
      connection_id: "connection-11"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-125",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-113",
      connection_id: "connection-106"
    },
    chain_2: {
      chain_name: "doravota",
      client_id: "07-tendermint-22",
      connection_id: "connection-28"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-146",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-12",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "doravota",
      client_id: "07-tendermint-12",
      connection_id: "connection-4"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1191",
      connection_id: "connection-920"
    },
    chain_2: {
      chain_name: "doravota",
      client_id: "07-tendermint-14",
      connection_id: "connection-8"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-750",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "doravota",
      client_id: "07-tendermint-16",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "dydx",
      client_id: "07-tendermint-15",
      connection_id: "connection-21"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "doravota",
      client_id: "07-tendermint-15",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "injective",
      client_id: "07-tendermint-245",
      connection_id: "connection-239"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-182",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "doravota",
      client_id: "07-tendermint-13",
      connection_id: "connection-5"
    },
    chain_2: {
      chain_name: "nolus",
      client_id: "07-tendermint-14",
      connection_id: "connection-12"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4092",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "doravota",
      client_id: "07-tendermint-0",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2959",
      connection_id: "connection-2454"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2694",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "doravota",
      client_id: "07-tendermint-21",
      connection_id: "connection-27"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-109",
      connection_id: "connection-153"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-64",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default39 = info135;

// node_modules/chain-registry/esm/mainnet/doravota/index.js
var assets48 = assets_default48;
var chain48 = chain_default48;
var ibc39 = ibc_default39;

// node_modules/chain-registry/esm/mainnet/dydx/assets.js
var info136 = {
  $schema: "../assetlist.schema.json",
  chain_name: "dydx",
  assets: [{
    description: "The native staking token of dYdX Protocol.",
    denom_units: [{
      denom: "adydx",
      exponent: 0
    }, {
      denom: "dydx",
      exponent: 18
    }],
    base: "adydx",
    name: "dYdX",
    display: "dydx",
    symbol: "DYDX",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.svg"
    },
    coingecko_id: "dydx-chain",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.svg"
    }, {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx-circle.svg",
      theme: {
        circle: true
      }
    }],
    socials: {
      website: "https://dydx.trade/",
      twitter: "https://twitter.com/dYdX"
    }
  }, {
    description: "Noble USDC on dYdX Protocol.",
    denom_units: [{
      denom: "ibc/8E27BA2D5493AF5636760E354E46004562C46AB7EC0CC4C1CA14E9E20E2545B5",
      exponent: 0
    }, {
      denom: "usdc",
      exponent: 6
    }],
    type_asset: "ics20",
    base: "ibc/8E27BA2D5493AF5636760E354E46004562C46AB7EC0CC4C1CA14E9E20E2545B5",
    name: "Noble USDC",
    display: "usdc",
    symbol: "USDC",
    traces: [{
      type: "ibc",
      counterparty: {
        chain_name: "noble",
        base_denom: "uusdc",
        channel_id: "channel-33"
      },
      chain: {
        channel_id: "channel-0",
        path: "transfer/channel-0/uusdc"
      }
    }],
    images: [{
      image_sync: {
        chain_name: "noble",
        base_denom: "uusdc"
      },
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
    }
  }]
};
var assets_default49 = info136;

// node_modules/chain-registry/esm/mainnet/dydx/chain.js
var info137 = {
  $schema: "../chain.schema.json",
  chain_name: "dydx",
  status: "live",
  website: "https://dydx.trade/",
  network_type: "mainnet",
  pretty_name: "dYdX Protocol",
  chain_id: "dydx-mainnet-1",
  bech32_prefix: "dydx",
  daemon_name: "dydxprotocold",
  node_home: "$HOME/.dydxprotocol",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "adydx",
      fixed_min_gas_price: 125e8,
      low_gas_price: 125e8,
      average_gas_price: 125e8,
      high_gas_price: 2e10
    }, {
      denom: "ibc/8E27BA2D5493AF5636760E354E46004562C46AB7EC0CC4C1CA14E9E20E2545B5",
      fixed_min_gas_price: 0.025,
      low_gas_price: 0.025,
      average_gas_price: 0.025,
      high_gas_price: 0.03
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "adydx"
    }]
  },
  codebase: {
    cosmos_sdk_version: "dydxprotocol/cosmos-sdk v0.50.6-0.20240517185527-7330926cd9ad"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.svg"
  },
  description: "Our goal is to build open source code that can power a first class product and trading experience.",
  apis: {
    rpc: [
      {
        address: "https://dydx-rpc.kingnodes.com:443",
        provider: "Kingnodes \u{1F451}"
      },
      {
        address: "https://dydx-dao-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://dydx-mainnet-full-rpc.public.blastapi.io",
        provider: "Bware Labs"
      },
      {
        address: "https://dydx-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://dydx-mainnet-rpc.autostake.com:443",
        provider: "AutoStake | StakeDrops"
      },
      {
        address: "https://rpc-dydx.ecostake.com:443",
        provider: "ecostake"
      },
      {
        address: "https://rpc.dydx.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "https://rpc-dydx.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://dydx-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://rpc-dydx.cros-nest.com:443",
        provider: "Crosnest"
      },
      {
        address: "https://dydx-rpc.enigma-validator.com",
        provider: "Enigma"
      },
      {
        address: "https://community.nuxian-node.ch:6797/dydx/trpc",
        provider: "PRO Delegators"
      },
      {
        address: "https://dydx-rpc.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://dydx.interstellar-lounge.org",
        provider: "Interstellar Lounge \u{1F378}"
      }
    ],
    rest: [
      {
        address: "https://community.nuxian-node.ch:6797/dydx/crpc",
        provider: "PRO Delegators"
      },
      {
        address: "https://dydx-dao-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://dydx-mainnet-full-lcd.public.blastapi.io",
        provider: "Bware Labs"
      },
      {
        address: "https://dydx-rest.kingnodes.com:443",
        provider: "Kingnodes \u{1F451}"
      },
      {
        address: "https://dydx-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://dydx-mainnet-lcd.autostake.com:443",
        provider: "AutoStake | StakeDrops"
      },
      {
        address: "https://rest-dydx.ecostake.com:443",
        provider: "ecostake"
      },
      {
        address: "https://api-dydx.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://api.dydx.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "https://dydx-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://rest-dydx.cros-nest.com:443",
        provider: "Crosnest"
      },
      {
        address: "https://dydx-lcd.enigma-validator.com",
        provider: "Enigma"
      },
      {
        address: "https://dydx-api.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://dydx-rest.interstellar-lounge.org",
        provider: "Interstellar Lounge \u{1F378}"
      }
    ],
    grpc: [
      {
        address: "dydx-dao-grpc-1.polkachu.com:23890",
        provider: "Polkachu (1)"
      },
      {
        address: "dydx-dao-grpc-2.polkachu.com:23890",
        provider: "Polkachu (2)"
      },
      {
        address: "dydx-dao-grpc-3.polkachu.com:23890",
        provider: "Polkachu (3)"
      },
      {
        address: "dydx-dao-grpc-4.polkachu.com:23890",
        provider: "Polkachu (4)"
      },
      {
        address: "dydx-dao-grpc-5.polkachu.com:23890",
        provider: "Polkachu (5)"
      },
      {
        address: "dydx-mainnet-full-grpc.public.blastapi.io:443",
        provider: "Bware Labs"
      },
      {
        address: "https://dydx-grpc.kingnodes.com:443",
        provider: "Kingnodes \u{1F451}"
      },
      {
        address: "https://dydx-grpc.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "dydx-mainnet-grpc.autostake.com:443",
        provider: "AutoStake | StakeDrops"
      },
      {
        address: "https://grpc.dydx.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "dydx.grpc.kjnodes.com:443",
        provider: "kjnodes"
      },
      {
        address: "grpc-dydx.cosmos-spaces.cloud:4990",
        provider: "Cosmos Spaces"
      },
      {
        address: "dydx-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "dydx-grpc.noders.services:37090",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/dydx",
      tx_page: "https://www.mintscan.io/dydx/txs/${txHash}",
      account_page: "https://www.mintscan.io/dydx/account/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/dydx",
      tx_page: "https://ezstaking.app/dydx/txs/${txHash}",
      account_page: "https://ezstaking.app/dydx/account/${accountAddress}"
    },
    {
      kind: "NodeStake",
      url: "https://explorer.nodestake.top/dydx/",
      tx_page: "https://explorer.nodestake.top/dydx/txs/${txHash}",
      account_page: "https://explorer.nodestake.top/dydx/account/${accountAddress}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/dydx",
      tx_page: "https://explorer.tcnetwork.io/dydx/transaction/${txHash}",
      account_page: "https://explorer.tcnetwork.io/dydx/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.svg"
  }]
};
var chain_default49 = info137;

// node_modules/chain-registry/esm/mainnet/dydx/ibc.js
var info138 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-38",
      connection_id: "connection-26"
    },
    chain_2: {
      chain_name: "dydx",
      client_id: "07-tendermint-14",
      connection_id: "connection-20"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-24",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "doravota",
      client_id: "07-tendermint-16",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "dydx",
      client_id: "07-tendermint-15",
      connection_id: "connection-21"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-17",
      connection_id: "connection-23"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-135",
      connection_id: "connection-81"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-107",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-7",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "kava",
      client_id: "07-tendermint-154",
      connection_id: "connection-195"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-137",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-5",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-158",
      connection_id: "connection-122"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-118",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-11",
      connection_id: "connection-17"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-72",
      connection_id: "connection-51"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-48",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-59",
      connection_id: "connection-57"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-33",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-3",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3009",
      connection_id: "connection-2500"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6787",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-4",
      connection_id: "connection-8"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-159",
      connection_id: "connection-197"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-131",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-133",
      connection_id: "connection-123"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-160",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-9",
      connection_id: "connection-14"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-390",
      connection_id: "connection-380"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-299",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-8",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-244",
      connection_id: "connection-208"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-118",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default40 = info138;

// node_modules/chain-registry/esm/mainnet/dydx/index.js
var assets49 = assets_default49;
var chain49 = chain_default49;
var ibc40 = ibc_default40;

// node_modules/chain-registry/esm/mainnet/dymension/assets.js
var info139 = {
  $schema: "../assetlist.schema.json",
  chain_name: "dymension",
  assets: [{
    description: "The native governance and staking token of the Dymension Hub",
    denom_units: [{
      denom: "adym",
      exponent: 0
    }, {
      denom: "dym",
      exponent: 18
    }],
    type_asset: "sdk.coin",
    base: "adym",
    name: "Dymension",
    display: "dym",
    symbol: "DYM",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dymension/images/dymension-logo.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dymension/images/dymension-logo.svg"
    },
    coingecko_id: "dymension",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dymension/images/dymension-logo.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dymension/images/dymension-logo.svg"
    }],
    socials: {
      website: "https://portal.dymension.xyz",
      twitter: "https://twitter.com/dymension"
    }
  }, {
    description: "The native token of Nim Network.",
    extended_description: "Nim Network is a highly-adoptable AI Gaming chain that will provide the ultimate ecosystem for exploration and development of games at the intersection of Web3 and AI.",
    denom_units: [{
      denom: "ibc/FB53D1684F155CBB86D9CE917807E42B59209EBE3AD3A92E15EF66586C073942",
      exponent: 0,
      aliases: ["anim"]
    }, {
      denom: "nim",
      exponent: 18
    }],
    type_asset: "ics20",
    base: "ibc/FB53D1684F155CBB86D9CE917807E42B59209EBE3AD3A92E15EF66586C073942",
    name: "Nim Network",
    display: "nim",
    symbol: "NIM",
    traces: [{
      type: "ibc",
      counterparty: {
        chain_name: "nim",
        base_denom: "anim",
        channel_id: "channel-0"
      },
      chain: {
        channel_id: "channel-49",
        path: "transfer/channel-49/anim"
      }
    }],
    images: [{
      image_sync: {
        chain_name: "nim",
        base_denom: "anim"
      },
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nim/images/nim.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nim/images/nim.svg"
    }],
    socials: {
      website: "https://nim.network/",
      twitter: "https://twitter.com/nim_network"
    },
    keywords: ["gaming", "AI"],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nim/images/nim.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nim/images/nim.svg"
    }
  }]
};
var assets_default50 = info139;

// node_modules/chain-registry/esm/mainnet/dymension/chain.js
var info140 = {
  $schema: "../chain.schema.json",
  chain_name: "dymension",
  status: "live",
  network_type: "mainnet",
  website: "https://portal.dymension.xyz",
  pretty_name: "Dymension Hub",
  chain_id: "dymension_1100-1",
  bech32_prefix: "dym",
  slip44: 60,
  node_home: "$HOME/.dymension",
  daemon_name: "dymd",
  fees: {
    fee_tokens: [{
      denom: "adym",
      fixed_min_gas_price: 5e9,
      low_gas_price: 5e9,
      average_gas_price: 5e9,
      high_gas_price: 2e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "adym"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dymension/images/dymension-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dymension/images/dymension-logo.svg"
  },
  description: "Dymension is a network of easily deployable and lightning fast modular blockchains called RollApps.",
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dymension/images/dymension-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dymension/images/dymension-logo.svg"
  }],
  codebase: {},
  apis: {
    rpc: [
      {
        address: "https://dym-m-rpc.agoranodes.com",
        provider: "AgoraNodes"
      },
      {
        address: "https://rpc.dymension.nodestake.org",
        provider: "NodeStake"
      },
      {
        address: "http://dymension.mainnet.rpc.noders.team:42657",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://dymension-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://dymension-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://dymension-rpc.kynraze.com",
        provider: "Kynraze"
      },
      {
        address: "https://m-dymension.rpc.utsa.tech",
        provider: "lesnik | UTSA"
      },
      {
        address: "https://rpc-dymension.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "https://dym.rpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://dym.rpc-archive.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc.dymension.hexnodes.co",
        provider: "Hexnodes"
      },
      {
        address: "https://dymension.rpc.kjnodes.com:443",
        provider: "kjnodes.com \u{1F984}"
      },
      {
        address: "https://dymension-rpc.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://dymension-rpc.takeshi.team",
        provider: "TAKESHI"
      },
      {
        address: "https://dymension-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://rpc.dymension.silentvalidator.com:443",
        provider: "silent"
      },
      {
        address: "https://rpc-dymension.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://community.nuxian-node.ch:6797/dymension/trpc",
        provider: "PRO Delegators"
      },
      {
        address: "https://dymension-rpc.enigma-validator.com",
        provider: "Enigma"
      },
      {
        address: "https://dymension-rpc.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://dymension.nodejumper.io:443",
        provider: "NODEJUMPER"
      },
      {
        address: "https://rpc-dymension.hoodrun.io:443",
        provider: "HoodRun"
      },
      {
        address: "https://dymension.0xwave.com:2053",
        provider: "Wave"
      },
      {
        address: "https://archive.rpc.dym.cumulo.com.es:443",
        provider: "Cumulo"
      },
      {
        address: "https://rpc.dymension.posthuman.digital",
        provider: "posthuman"
      },
      {
        address: "https://rpc.dymension.node75.org",
        provider: "Pro-Nodes75"
      },
      {
        address: "https://rpc.dymension.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://dymension-rpc.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://rpc.mainnet.dymension.aviaone.com",
        provider: "AVIAONE \u{1F7E2}"
      },
      {
        address: "https://rpc.archive.dymension.mainnet.dteam.tech:443",
        provider: "DTEAM"
      }
    ],
    rest: [
      {
        address: "https://dym-m-api.agoranodes.com",
        provider: "AgoraNodes"
      },
      {
        address: "https://api.dymension.nodestake.org",
        provider: "NodeStake"
      },
      {
        address: "http://dymension.mainnet.api.noders.team:42317",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://dymension-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://dymension-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://dymension-api.kynraze.com",
        provider: "Kynraze"
      },
      {
        address: "https://m-dymension.api.utsa.tech",
        provider: "lesnik | UTSA"
      },
      {
        address: "https://api-dymension.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "https://dymension.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://dym.api-archive.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://lcd.dymension.hexnodes.co",
        provider: "Hexnodes"
      },
      {
        address: "https://dymension.api.kjnodes.com:443",
        provider: "kjnodes.com \u{1F984}"
      },
      {
        address: "https://dymension-api.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://dymension-api.takeshi.team",
        provider: "TAKESHI"
      },
      {
        address: "https://dymension-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://api.dymension.silentvalidator.com:443",
        provider: "silent"
      },
      {
        address: "https://api-dymension.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://community.nuxian-node.ch:6797/dymension/crpc",
        provider: "PRO Delegators"
      },
      {
        address: "https://dymension-lcd.enigma-validator.com",
        provider: "Enigma"
      },
      {
        address: "https://dymension-api.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://dymension.nodejumper.io:1317",
        provider: "NODEJUMPER"
      },
      {
        address: "https://lcd-dymension.hoodrun.io",
        provider: "HoodRun"
      },
      {
        address: "https://dymension.0xwave.com",
        provider: "Wave"
      },
      {
        address: "https://api.dym.cumulo.com.es",
        provider: "Cumulo"
      },
      {
        address: "https://rest.dymension.posthuman.digital",
        provider: "posthuman"
      },
      {
        address: "https://api.dymension.node75.org",
        provider: "Pro-Nodes75"
      },
      {
        address: "https://lcd.dymension.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://dymension-api.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://api.mainnet.dymension.aviaone.com",
        provider: "AVIAONE \u{1F7E2}"
      },
      {
        address: "https://api.archive.dymension.mainnet.dteam.tech:443",
        provider: "DTEAM"
      }
    ],
    grpc: [
      {
        address: "https://dym-m-grpc.agoranodes.com",
        provider: "AgoraNodes"
      },
      {
        address: "grpc.dymension.nodestake.org:443",
        provider: "NodeStake"
      },
      {
        address: "dymension-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "dymension.mainnet.grpc.noders.team:42090",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://dymension-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "dymension-grpc.kynraze.com:77",
        provider: "Kynraze"
      },
      {
        address: "https://grpc-dymension.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "dymension.grpc.m.stavr.tech:7119",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "dymension.grpc.kjnodes.com:443",
        provider: "kjnodes.com \u{1F984}"
      },
      {
        address: "http://dymension-grpc.stakeandrelax.net:20590",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://dymension-grpc.takeshi.team",
        provider: "TAKESHI"
      },
      {
        address: "dymension-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "grpc.dymension.silentvalidator.com:443",
        provider: "silent"
      },
      {
        address: "https://grpc-dymension.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "dymension.nodejumper.io:9090",
        provider: "NODEJUMPER"
      },
      {
        address: "grpc-dymension.hoodrun.io:9095",
        provider: "HoodRun"
      },
      {
        address: "https://dymension.0xwave.com:2083",
        provider: "Wave"
      },
      {
        address: "grpc.dym.cumulo.com.es:443",
        provider: "Cumulo"
      },
      {
        address: "https://grpc.dymension.posthuman.digital",
        provider: "posthuman"
      },
      {
        address: "https://grpc.dymension.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "dymension-grpc.noders.services:12090",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://grpc.mainnet.dymension.aviaone.com:9092",
        provider: "AVIAONE \u{1F7E2}"
      },
      {
        address: "grpc.archive.dymension.mainnet.dteam.tech:29090",
        provider: "DTEAM"
      }
    ],
    "evm-http-jsonrpc": [
      {
        address: "https://dym-m-json.agoranodes.com",
        provider: "AgoraNodes"
      },
      {
        address: "https://dymension-jsonrpc.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://evm-dymension.hoodrun.io:8547",
        provider: "HoodRun"
      },
      {
        address: "https://dymension.0xwave.com:2087",
        provider: "Wave"
      },
      {
        address: "https://evm-rpc.dym.cumulo.com.es:443",
        provider: "Cumulo"
      },
      {
        address: "https://evm-rpc.dymension.node75.org",
        provider: "Pro-Nodes75"
      },
      {
        address: "https://evm-rpc.dymension.posthuman.digital",
        provider: "posthuman"
      },
      {
        address: "https://dymension-jsonrpc.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://evm.archive.dymension.mainnet.dteam.tech:443",
        provider: "DTEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/dymension",
      tx_page: "https://www.mintscan.io/dymension/tx/${txHash}",
      account_page: "https://www.mintscan.io/dymension/account/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/dymension",
      tx_page: "https://ezstaking.app/dymension/txs/${txHash}",
      account_page: "https://ezstaking.app/dymension/account/${accountAddress}"
    },
    {
      kind: "NodeStake",
      url: "https://explorer.nodestake.org/dymension",
      tx_page: "https://explorer.nodestake.org/dymension/tx/${txHash}",
      account_page: "https://explorer.nodestake.org/dymension/account/${accountAddress}"
    },
    {
      kind: "Kynraze",
      url: "https://explorer.kynraze.com/dymension",
      tx_page: "https://explorer.kynraze.com/dymension/tx/${txHash}",
      account_page: "https://explorer.kynraze.com/dymension/account/${accountAddress}"
    },
    {
      kind: "Nodeist Explorer",
      url: "https://explorer.ist/dymension",
      tx_page: "https://explorer.ist/dymension/tx/${txHash}",
      account_page: "https://explorer.ist/dymension/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Dymension-Mainnet",
      tx_page: "https://explorer.stavr.tech/Dymension-Mainnet/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Dymension-Mainnet/account/${accountAddress}"
    },
    {
      kind: "HoodScan",
      url: "https://hoodscan.io/dymension",
      tx_page: "https://hoodscan.io/dymension/transactions/${txHash}",
      account_page: "https://hoodscan.io/dymension/accounts/${accountAddress}"
    },
    {
      kind: "posthuman",
      url: "https://explorer.posthuman.digital/dymension",
      tx_page: "https://explorer.posthuman.digital/dymension/tx/${txHash}",
      account_page: "https://explorer.posthuman.digital/dymension/account/${accountAddress}"
    },
    {
      kind: "AVIAONE \u{1F7E2}",
      url: "https://mainnet.explorer.aviaone.com/dymension",
      tx_page: "https://mainnet.explorer.aviaone.com/dymension/tx/${txHash}",
      account_page: "https://mainnet.explorer.aviaone.com/dymension/account/${accountAddress}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/dymension",
      tx_page: "https://mainnet.whispernode.com/dymension/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/dymension/account/${accountAddress}"
    },
    {
      kind: "DTEAM | Explorer",
      url: "https://explorer.mainnet.dteam.tech/dymension",
      tx_page: "https://explorer.mainnet.dteam.tech/dymension/tx/${txHash}",
      account_page: "https://explorer.mainnet.dteam.tech/dymension/account/${accountAddress}"
    }
  ]
};
var chain_default50 = info140;

// node_modules/chain-registry/esm/mainnet/dymension/ibc.js
var info141 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-91",
      connection_id: "connection-89"
    },
    chain_2: {
      chain_name: "dymension",
      client_id: "07-tendermint-39",
      connection_id: "connection-30"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-123",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-45",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-197",
      connection_id: "connection-180"
    },
    chain_2: {
      chain_name: "dymension",
      client_id: "07-tendermint-7",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-138",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-82",
      connection_id: "connection-52"
    },
    chain_2: {
      chain_name: "dymension",
      client_id: "07-tendermint-6",
      connection_id: "connection-5"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-27",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1205",
      connection_id: "connection-933"
    },
    chain_2: {
      chain_name: "dymension",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-794",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dymension",
      client_id: "07-tendermint-31",
      connection_id: "connection-22"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-138",
      connection_id: "connection-85"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-109",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dymension",
      client_id: "07-tendermint-3",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "kava",
      client_id: "07-tendermint-162",
      connection_id: "connection-203"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-144",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dymension",
      client_id: "07-tendermint-17",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-169",
      connection_id: "connection-132"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-160",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dymension",
      client_id: "07-tendermint-16",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-82",
      connection_id: "connection-61"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-675",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dymension",
      client_id: "07-tendermint-44",
      connection_id: "connection-34"
    },
    chain_2: {
      chain_name: "nim",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-49",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dymension",
      client_id: "07-tendermint-14",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-79",
      connection_id: "connection-80"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-62",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dymension",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3086",
      connection_id: "connection-2566"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-19774",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dymension",
      client_id: "07-tendermint-29",
      connection_id: "connection-20"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-194",
      connection_id: "connection-189"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-35",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-130",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dymension",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-140",
      connection_id: "connection-131"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-197",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default41 = info141;

// node_modules/chain-registry/esm/mainnet/dymension/index.js
var assets50 = assets_default50;
var chain50 = chain_default50;
var ibc41 = ibc_default41;

// node_modules/chain-registry/esm/mainnet/dyson/assets.js
var info142 = {
  $schema: "../assetlist.schema.json",
  chain_name: "dyson",
  assets: [
    {
      description: "The native staking and governance token of the Dyson Protocol",
      denom_units: [{
        denom: "dys",
        exponent: 0
      }],
      base: "dys",
      name: "Dys",
      display: "dys",
      symbol: "DYS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dyson/images/dys.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dyson/images/dys.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dyson/images/dys.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dyson/images/dys.svg"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/13B2C536BB057AC79D5616B8EA1B9540EC1F2170718CAFF6F0083C966FFFED0B",
        exponent: 0,
        aliases: ["uosmo"]
      }, {
        denom: "osmo",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/13B2C536BB057AC79D5616B8EA1B9540EC1F2170718CAFF6F0083C966FFFED0B",
      name: "Osmosis",
      display: "osmo",
      description: "The native token of Osmosis",
      symbol: "OSMO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "uosmo",
          channel_id: "channel-526"
        },
        chain: {
          channel_id: "channel-2",
          path: "transfer/channel-2/uosmo"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "uosmo"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/9BF31153F7E37F687C75A2F310E7A4DB6E0512B065F709B5EB69FE828133AFAC",
        exponent: 0,
        aliases: ["wbtc-satoshi"]
      }, {
        denom: "wbtc",
        exponent: 8
      }],
      type_asset: "ics20",
      base: "ibc/9BF31153F7E37F687C75A2F310E7A4DB6E0512B065F709B5EB69FE828133AFAC",
      name: "Wrapped Bitcoin",
      display: "wbtc",
      symbol: "WBTC",
      description: "Wrapped Bitcoin on Axelar on Osmosis",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/D1542AA8762DB13087D8364F3EA6509FD6F009A34F00426AF9E4F9FA85CBBF1F",
          channel_id: "channel-526"
        },
        chain: {
          channel_id: "channel-2",
          path: "transfer/channel-2/transfer/channel-208/wbtc-satoshi"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/D1542AA8762DB13087D8364F3EA6509FD6F009A34F00426AF9E4F9FA85CBBF1F"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wbtc.axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wbtc.axl.svg"
      }, {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/wbtc.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wbtc.axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wbtc.axl.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/13DF61376C08483555C6D4C9203612086A1B23218EB5EBDBE609EEC7EFF2D82D",
        exponent: 0,
        aliases: ["uusdc"]
      }, {
        denom: "usdc",
        exponent: 6
      }],
      type_asset: "ics20",
      description: "Circle's stablecoin on Axelar on Osmosis",
      base: "ibc/13DF61376C08483555C6D4C9203612086A1B23218EB5EBDBE609EEC7EFF2D82D",
      name: "USD Coin",
      display: "usdc",
      symbol: "USDC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858",
          channel_id: "channel-526"
        },
        chain: {
          channel_id: "channel-2",
          path: "transfer/channel-2/transfer/channel-208/uusdc"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.axl.svg"
      }, {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.axl.svg"
      }
    }
  ]
};
var assets_default51 = info142;

// node_modules/chain-registry/esm/mainnet/dyson/chain.js
var info143 = {
  $schema: "../chain.schema.json",
  chain_name: "dyson",
  website: "https://dysonprotocol.com/",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Dyson Protocol",
  chain_id: "dyson-mainnet-01",
  bech32_prefix: "dys",
  node_home: "$HOME/.dyson",
  daemon_name: "dysond",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "dys",
      low_gas_price: 1e-4,
      average_gas_price: 2e-4,
      high_gas_price: 3e-4
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "dys"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dyson/images/dyson.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dyson/images/dyson.svg"
  },
  apis: {
    rpc: [{
      address: "https://dys-tm.dysonprotocol.com:443",
      provider: "dysonprotocol"
    }, {
      address: "https://dyson-rpc.cogwheel.zone:443",
      provider: "cogwheel"
    }],
    rest: [{
      address: "https://dys-api.dysonprotocol.com:443",
      provider: "dysonprotocol"
    }, {
      address: "https://dyson-api.cogwheel.zone:443",
      provider: "cogwheel"
    }],
    grpc: [{
      address: "dys-grpc.dyson.lol:443",
      provider: "lol"
    }, {
      address: "https://dyson-grpc.cogwheel.zone:443",
      provider: "cogwheel"
    }]
  },
  explorers: [{
    kind: "dysonprotocol",
    url: "https://explorer.dys.dysonprotocol.com/dyson/",
    tx_page: "https://explorer.dys.dysonprotocol.com/dyson/tx/${txHash}",
    account_page: "https://explorer.dys.dysonprotocol.com/dyson/account/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dyson/images/dyson.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dyson/images/dyson.svg"
  }]
};
var chain_default51 = info143;

// node_modules/chain-registry/esm/mainnet/dyson/ibc.js
var info144 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "dyson",
    client_id: "07-tendermint-2",
    connection_id: "connection-5"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2407",
    connection_id: "connection-1895"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-2",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-526",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default42 = info144;

// node_modules/chain-registry/esm/mainnet/dyson/index.js
var assets51 = assets_default51;
var chain51 = chain_default51;
var ibc42 = ibc_default42;

// node_modules/chain-registry/esm/mainnet/echelon/assets.js
var info145 = {
  $schema: "../assetlist.schema.json",
  chain_name: "echelon",
  assets: [{
    description: "Echelon - a scalable EVM on Cosmos, built on Proof-of-Stake with fast-finality that prioritizes interoperability and novel economics",
    denom_units: [{
      denom: "aechelon",
      exponent: 0
    }, {
      denom: "echelon",
      exponent: 18
    }],
    base: "aechelon",
    name: "Echelon",
    display: "echelon",
    symbol: "ECH",
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/echelon/images/ech.svg"
    },
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/echelon/images/ech.svg"
    }]
  }]
};
var assets_default52 = info145;

// node_modules/chain-registry/esm/mainnet/echelon/chain.js
var info146 = {
  $schema: "../chain.schema.json",
  chain_name: "echelon",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Echelon",
  chain_id: "echelon_3000-3",
  bech32_prefix: "echelon",
  node_home: "$HOME/.echelond",
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "aechelon",
      low_gas_price: 1e10,
      average_gas_price: 25e9,
      high_gas_price: 4e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "aechelon"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/echelon/images/logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/echelon/images/echelon.svg"
  },
  apis: {
    rpc: [{
      address: "https://ech01trpc.mindheartsoul.org",
      provider: "Mind Heart Soul"
    }, {
      address: "https://rpc.echjoker.lol",
      provider: "\u26A1 Echelon Joker \u269B \u{1F0CF}"
    }],
    rest: [{
      address: "https://ech01api.mindheartsoul.org",
      provider: "Mind Heart Soul"
    }, {
      address: "https://api.echjoker.lol",
      provider: "\u26A1 Echelon Joker \u269B \u{1F0CF}"
    }],
    grpc: [],
    "evm-http-jsonrpc": [{
      address: "https://ech01jrpc.mindheartsoul.org",
      provider: "Mind Heart Soul"
    }, {
      address: "https://jrpc.echjoker.lol",
      provider: "\u26A1 Echelon Joker \u269B \u{1F0CF}"
    }]
  },
  explorers: [
    {
      kind: "echelon",
      url: "https://app.ech.network/explorer",
      tx_page: "https://app.ech.network/explorer/tx/${txHash}"
    },
    {
      kind: "blockscout",
      url: "https://scout.ech.network",
      tx_page: "https://scout.ech.network/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/echelon",
      tx_page: "https://ping.pub/echelon/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/echelon",
      tx_page: "https://atomscan.com/echelon/transactions/${txHash}",
      account_page: "https://atomscan.com/echelon/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/echelon/images/logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/echelon/images/echelon.svg"
  }]
};
var chain_default52 = info146;

// node_modules/chain-registry/esm/mainnet/echelon/ibc.js
var info147 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "echelon",
    client_id: "07-tendermint-107",
    connection_id: "connection-29"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2268",
    connection_id: "connection-1760"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-11",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-403",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default43 = info147;

// node_modules/chain-registry/esm/mainnet/echelon/index.js
var assets52 = assets_default52;
var chain52 = chain_default52;
var ibc43 = ibc_default43;

// node_modules/chain-registry/esm/mainnet/emoney/assets.js
var info148 = {
  $schema: "../assetlist.schema.json",
  chain_name: "emoney",
  assets: [
    {
      description: "e-Money NGM staking token. In addition to earning staking rewards the token is bought back and burned based on e-Money stablecoin inflation.",
      denom_units: [{
        denom: "ungm",
        exponent: 0
      }, {
        denom: "ngm",
        exponent: 6
      }],
      base: "ungm",
      name: "e-Money",
      display: "ngm",
      symbol: "NGM",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/ngm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/ngm.svg"
      },
      coingecko_id: "e-money",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/ngm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/ngm.svg"
      }]
    },
    {
      description: "e-Money EUR stablecoin. Audited and backed by fiat EUR deposits and government bonds.",
      denom_units: [{
        denom: "eeur",
        exponent: 0
      }, {
        denom: "eur",
        exponent: 6
      }],
      base: "eeur",
      name: "e-Money EUR",
      display: "eur",
      symbol: "EEUR",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/eeur.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/eeur.svg"
      },
      coingecko_id: "e-money-eur",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/eeur.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/eeur.svg"
      }]
    },
    {
      description: "e-Money CHF stablecoin. Audited and backed by fiat CHF deposits and government bonds.",
      denom_units: [{
        denom: "echf",
        exponent: 0
      }, {
        denom: "chf",
        exponent: 6
      }],
      base: "echf",
      name: "e-Money CHF",
      display: "chf",
      symbol: "ECHF",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/echf.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/echf.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/echf.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/echf.svg"
      }]
    },
    {
      description: "e-Money NOK stablecoin. Audited and backed by fiat NOK deposits and government bonds.",
      denom_units: [{
        denom: "enok",
        exponent: 0
      }, {
        denom: "nok",
        exponent: 6
      }],
      base: "enok",
      name: "e-Money NOK",
      display: "nok",
      symbol: "ENOK",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/enok.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/enok.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/enok.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/enok.svg"
      }]
    },
    {
      description: "e-Money DKK stablecoin. Audited and backed by fiat DKK deposits and government bonds.",
      denom_units: [{
        denom: "edkk",
        exponent: 0
      }, {
        denom: "dkk",
        exponent: 6
      }],
      base: "edkk",
      name: "e-Money DKK",
      display: "dkk",
      symbol: "EDKK",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/edkk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/edkk.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/edkk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/edkk.svg"
      }]
    },
    {
      description: "e-Money SEK stablecoin. Audited and backed by fiat SEK deposits and government bonds.",
      denom_units: [{
        denom: "esek",
        exponent: 0
      }, {
        denom: "sek",
        exponent: 6
      }],
      base: "esek",
      name: "e-Money SEK",
      display: "sek",
      symbol: "ESEK",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/esek.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/esek.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/esek.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/esek.svg"
      }]
    }
  ]
};
var assets_default53 = info148;

// node_modules/chain-registry/esm/mainnet/emoney/chain.js
var info149 = {
  $schema: "../chain.schema.json",
  chain_name: "emoney",
  status: "live",
  network_type: "mainnet",
  pretty_name: "e-Money",
  chain_id: "emoney-3",
  bech32_prefix: "emoney",
  daemon_name: "emd",
  node_home: "$HOME/.emd",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [
      {
        denom: "ungm",
        low_gas_price: 1,
        average_gas_price: 1,
        high_gas_price: 1
      },
      {
        denom: "eeur",
        low_gas_price: 1,
        average_gas_price: 1,
        high_gas_price: 1
      },
      {
        denom: "echf",
        low_gas_price: 1,
        average_gas_price: 1,
        high_gas_price: 1
      },
      {
        denom: "enok",
        low_gas_price: 1,
        average_gas_price: 1,
        high_gas_price: 1
      },
      {
        denom: "esek",
        low_gas_price: 1,
        average_gas_price: 1,
        high_gas_price: 1
      },
      {
        denom: "edkk",
        low_gas_price: 1,
        average_gas_price: 1,
        high_gas_price: 1
      }
    ]
  },
  staking: {
    staking_tokens: [{
      denom: "ungm"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/ngm.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/ngm.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://emoney.validator.network",
        provider: "e-Money"
      },
      {
        address: "https://rpc-emoney-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://rpc.emoney.bh.rocks",
        provider: "BlockHunters \u{1F3AF}"
      }
    ],
    rest: [
      {
        address: "https://emoney.validator.network/api/",
        provider: "e-Money"
      },
      {
        address: "https://api-emoney-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://api.emoney.bh.rocks",
        provider: "BlockHunters \u{1F3AF}"
      }
    ],
    grpc: [{
      address: "grpc-emoney-ia.cosmosia.notional.ventures:443",
      provider: "Notional"
    }, {
      address: "emoney-mainnet-grpc.autostake.com:443",
      provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
    }]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/emoney",
      tx_page: "https://ezstaking.app/emoney/txs/${txHash}",
      account_page: "https://ezstaking.app/emoney/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/e-money",
      tx_page: "https://ping.pub/e-money/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/emoney",
      tx_page: "https://atomscan.com/emoney/transactions/${txHash}",
      account_page: "https://atomscan.com/emoney/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/ngm.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/ngm.svg"
  }]
};
var chain_default53 = info149;

// node_modules/chain-registry/esm/mainnet/emoney/ibc.js
var info150 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-432",
      connection_id: "connection-365"
    },
    chain_2: {
      chain_name: "emoney",
      client_id: "07-tendermint-8",
      connection_id: "connection-3"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-202",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "emoney",
      client_id: "07-tendermint-10",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "irisnet",
      client_id: "07-tendermint-46",
      connection_id: "connection-34"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "emoney",
      client_id: "07-tendermint-51",
      connection_id: "connection-20"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-24",
      connection_id: "connection-16"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "emoney",
      client_id: "07-tendermint-7",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1447",
      connection_id: "connection-1132"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  }
];
var ibc_default44 = info150;

// node_modules/chain-registry/esm/mainnet/emoney/index.js
var assets53 = assets_default53;
var chain53 = chain_default53;
var ibc44 = ibc_default44;

// node_modules/chain-registry/esm/mainnet/empowerchain/assets.js
var info151 = {
  $schema: "../assetlist.schema.json",
  chain_name: "empowerchain",
  assets: [{
    description: "The native staking and governance token of Empower.",
    denom_units: [{
      denom: "umpwr",
      exponent: 0
    }, {
      denom: "mpwr",
      exponent: 6
    }],
    base: "umpwr",
    name: "MPWR",
    display: "mpwr",
    symbol: "MPWR",
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/empowerchain/images/mpwr.svg"
    },
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/empowerchain/images/mpwr.svg"
    }]
  }]
};
var assets_default54 = info151;

// node_modules/chain-registry/esm/mainnet/empowerchain/chain.js
var info152 = {
  $schema: "../chain.schema.json",
  chain_name: "empowerchain",
  chain_id: "empowerchain-1",
  pretty_name: "EmpowerChain",
  status: "live",
  network_type: "mainnet",
  bech32_prefix: "empower",
  daemon_name: "empowerd",
  node_home: "$HOME/.empowerchain",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "umpwr",
      fixed_min_gas_price: 0,
      low_gas_price: 0.025,
      average_gas_price: 0.025,
      high_gas_price: 0.03
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "umpwr"
    }]
  },
  codebase: {
    cosmwasm_enabled: true,
    cosmwasm_version: "0.45"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc-empowerchain.ecostake.com:443",
        provider: "ecostake"
      },
      {
        address: "https://empowerchain-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://empower.rpc.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "http://empw.rpc.m.stavr.tech:22057",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc-empower.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://rpc-empowerchain.mzonder.com:443",
        provider: "MZONDER"
      },
      {
        address: "https://empower-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://rpc-empower.vinjan.xyz:443",
        provider: "vinjan"
      },
      {
        address: "https://rpc.empower.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://mainnet-empower-rpc.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://empower.rpc.stakevillage.net:443",
        provider: "Stake Village"
      },
      {
        address: "https://rpc.empowerchain.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://empower.declab.pro:26607",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "https://empower-rpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    rest: [
      {
        address: "https://rest-empowerchain.ecostake.com:443",
        provider: "ecostake"
      },
      {
        address: "https://empowerchain-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://empower.api.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "https://empw.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://empower-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://lcd-empower.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://api-empower.vinjan.xyz:443",
        provider: "vinjan"
      },
      {
        address: "https://api.empower.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://mainnet-empower-api.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://empower.api.stakevillage.net",
        provider: "Stake Village"
      },
      {
        address: "https://lcd.empowerchain.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://empower.declab.pro:443",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "https://empower-api.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    grpc: [
      {
        address: "empowerchain-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://empower.grpc.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "empower-grpc.w3coins.io:17390",
        provider: "w3coins"
      },
      {
        address: "grpc-empowerchain.mzonder.com:443",
        provider: "MZONDER"
      },
      {
        address: "http://empw.grpc.m.stavr.tech:9141",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "grpc-empower.vinjan.xyz",
        provider: "vinjan"
      },
      {
        address: "https://grpc.empower.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "empower.grpc.stakevillage.net:16890",
        provider: "Stake Village"
      },
      {
        address: "https://grpc.empowerchain.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://empower.declab.pro:9005",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "empower-grpc.noders.services:25090",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Empower-Mainnet",
      tx_page: "https://explorer.stavr.tech/Empower-Mainnet/txs/${txHash}",
      account_page: "https://explorer.stavr.tech/Empower-Mainnet/account/${accountAddress}"
    },
    {
      kind: "NodeStake Explorer",
      url: "https://explorer.nodestake.top/empower",
      tx_page: "https://explorer.nodestake.top/empower/tx/${txHash}",
      account_page: "https://explorer.nodestake.top/empower/account/{$accountAddress}"
    },
    {
      kind: "Stake Village",
      url: "https://exp.stakevillage.net/empower",
      tx_page: "https://exp.stakevillage.net/empower/tx/${txHash}",
      account_page: "https://exp.stakevillage.net/empower/account/${accountAddress}"
    },
    {
      kind: "Decloud Nodes Lab",
      url: "https://explorer.declab.pro/Empower",
      tx_page: "https://explorer.declab.pro/Empower/tx/${txHash}",
      account_page: "https://explorer.declab.pro/Empower/account/{$accountAddress}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/empowerchain",
      tx_page: "https://mainnet.whispernode.com/empowerchain/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/empowerchain/account/${accountAddress}"
    }
  ]
};
var chain_default54 = info152;

// node_modules/chain-registry/esm/mainnet/empowerchain/ibc.js
var info153 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-158",
      connection_id: "connection-142"
    },
    chain_2: {
      chain_name: "empowerchain",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-109",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1151",
      connection_id: "connection-872"
    },
    chain_2: {
      chain_name: "empowerchain",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-621",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "empowerchain",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2848",
      connection_id: "connection-2360"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1411",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default45 = info153;

// node_modules/chain-registry/esm/mainnet/empowerchain/index.js
var assets54 = assets_default54;
var chain54 = chain_default54;
var ibc45 = ibc_default45;

// node_modules/chain-registry/esm/mainnet/ethos/assets.js
var info154 = {
  $schema: "../assetlist.schema.json",
  chain_name: "ethos",
  assets: [{
    description: "The native token of Ethos",
    denom_units: [{
      denom: "aRYT",
      exponent: 0
    }, {
      denom: "RYT",
      exponent: 18
    }],
    base: "aRYT",
    name: "RYT",
    display: "RYT",
    symbol: "RYT",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/ethos/images/ethos.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/ethos/images/ethos.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/ethos/images/ethos.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/ethos/images/ethos.svg"
    }]
  }]
};
var assets_default55 = info154;

// node_modules/chain-registry/esm/mainnet/ethos/chain.js
var info155 = {
  $schema: "../chain.schema.json",
  chain_name: "ethos",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Ethos",
  chain_id: "ethos_7003-1",
  bech32_prefix: "ethos",
  daemon_name: "ethosd",
  node_home: "$HOME/.ethos",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "aRYT"
    }]
  },
  apis: {
    rpc: [{
      address: "https://ethos-rpc.provable.dev:443/",
      provider: "laurel.provable"
    }],
    rest: [{
      address: "https://ethos.provable.dev/rest/",
      provider: "laurel.provable"
    }],
    grpc: [{
      address: "ethos-grpc.provable.dev:443",
      provider: "laurel.provable"
    }],
    "evm-http-jsonrpc": [{
      address: "https://ethos-evm.provable.dev/",
      provider: "laurel.provable"
    }]
  },
  explorers: [],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/ethos/images/ethos.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/ethos/images/ethos.svg"
  },
  codebase: {},
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/ethos/images/ethos.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/ethos/images/ethos.svg"
  }]
};
var chain_default55 = info155;

// node_modules/chain-registry/esm/mainnet/ethos/index.js
var assets55 = assets_default55;
var chain55 = chain_default55;

// node_modules/chain-registry/esm/mainnet/evmos/assets.js
var info156 = {
  $schema: "../assetlist.schema.json",
  chain_name: "evmos",
  assets: [
    {
      description: "The native EVM, governance and staking token of the Evmos Hub",
      denom_units: [{
        denom: "aevmos",
        exponent: 0
      }, {
        denom: "evmos",
        exponent: 18
      }],
      base: "aevmos",
      name: "Evmos",
      display: "evmos",
      symbol: "EVMOS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.svg"
      },
      coingecko_id: "evmos",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.svg"
      }],
      socials: {
        website: "https://evmos.org/",
        twitter: "https://twitter.com/EvmosOrg"
      }
    },
    {
      description: "Tether USDt on Evmos",
      denom_units: [{
        denom: "ibc/95F4898F70B1E3765715808C57E955034419200A7BB6DDECBEAA5FD3AA3DF7D5",
        exponent: 0
      }, {
        denom: "usdt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/95F4898F70B1E3765715808C57E955034419200A7BB6DDECBEAA5FD3AA3DF7D5",
      name: "Tether USDt",
      display: "usdt",
      symbol: "USDt",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kava",
          base_denom: "erc20/tether/usdt",
          channel_id: "channel-117"
        },
        chain: {
          channel_id: "channel-83",
          path: "transfer/channel-83/erc20/tether/usdt"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "kava",
          base_denom: "erc20/tether/usdt"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      }
    },
    {
      description: "The token of Neokingdom DAO.",
      extended_description: "Neokingdom DAO wants to make employment fairer, by facilitating both web3 and real-world businesses to operate as Decentralized Autonomous Organizations (DAOs).",
      denom_units: [{
        denom: "erc20/0x655ecB57432CC1370f65e5dc2309588b71b473A9",
        exponent: 0
      }, {
        denom: "neok",
        exponent: 18
      }],
      base: "erc20/0x655ecB57432CC1370f65e5dc2309588b71b473A9",
      name: "Neokingdom DAO",
      display: "neok",
      symbol: "NEOK",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/neok.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/neok.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/neok.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/neok.svg"
      }],
      socials: {
        website: "https://www.neokingdom.org/",
        twitter: "https://twitter.com/NEOKingdomDAO"
      }
    },
    {
      description: "The legacy token of Teledisko DAO.",
      denom_units: [{
        denom: "erc20/0x1cFc8f1FE8D5668BAFF2724547EcDbd6f013a280",
        exponent: 0
      }, {
        denom: "berlin-legacy",
        exponent: 18
      }],
      base: "erc20/0x1cFc8f1FE8D5668BAFF2724547EcDbd6f013a280",
      name: "Teledisko DAO - Legacy",
      display: "berlin-legacy",
      symbol: "BERLIN-legacy",
      type_asset: "erc20",
      address: "0x1cFc8f1FE8D5668BAFF2724547EcDbd6f013a280",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/berlin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/berlin.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/berlin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/berlin.svg"
      }]
    },
    {
      description: "The token of Crowdpunk DAO",
      denom_units: [{
        denom: "erc20/0xfbf4318d24a93753f11d365a6dcf8b830e98ab0f",
        exponent: 0
      }, {
        denom: "crowdp",
        exponent: 18
      }],
      base: "erc20/0xfbf4318d24a93753f11d365a6dcf8b830e98ab0f",
      name: "Crowdpunk DAO",
      display: "crowdp",
      address: "0xfbf4318d24a93753f11d365a6dcf8b830e98ab0f",
      symbol: "CROWDP",
      type_asset: "erc20",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/crowdp.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/crowdp.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/crowdp.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/crowdp.svg"
      }]
    }
  ]
};
var assets_default56 = info156;

// node_modules/chain-registry/esm/mainnet/evmos/chain.js
var info157 = {
  $schema: "../chain.schema.json",
  chain_name: "evmos",
  status: "live",
  network_type: "mainnet",
  website: "https://evmos.org/",
  pretty_name: "Evmos",
  chain_id: "evmos_9001-2",
  bech32_prefix: "evmos",
  node_home: "$HOME/.evmosd",
  daemon_name: "evmosd",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "aevmos",
      fixed_min_gas_price: 25e7,
      low_gas_price: 2e10,
      average_gas_price: 25e9,
      high_gas_price: 4e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "aevmos"
    }]
  },
  codebase: {
    cosmos_sdk_version: "evmos/cosmos-sdk v0.47.5-evmos.2"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.svg"
  },
  description: "Developers use Evmos as the Ethereum Canary Chain to deploy applications of the future. Get all the functionalities of Ethereum with the power of IBC and Interchain composability.",
  apis: {
    rpc: [
      {
        address: "https://rpc-evmos.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://evmos-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://tendermint.bd.evmos.org:26657",
        provider: "Blockdaemon"
      },
      {
        address: "https://rpc-evmos-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "https://rpc.evmos.testnet.run",
        provider: "TestNetRun"
      },
      {
        address: "https://rpc.evmos.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://rpc.evmos.chaintools.tech/",
        provider: "ChainTools"
      },
      {
        address: "https://evmos-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://rpc.evmos.silentvalidator.com/",
        provider: "silent"
      },
      {
        address: "https://rpc.evmos.tcnetwork.io",
        provider: "TC Network"
      },
      {
        address: "https://evmos.rpc.stakin-nodes.com",
        provider: "Stakin"
      },
      {
        address: "https://rpc-evmos.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "https://evmos-rpc.validatrium.club",
        provider: "Validatrium"
      },
      {
        address: "https://evmos-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://rpc-evmos-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://evmos-rpc.theamsolutions.info",
        provider: "AM Solutions"
      },
      {
        address: "https://rpc-evmos.validavia.me",
        provider: "Validavia"
      },
      {
        address: "https://evmos-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://evmos-rpc.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://evmos.rpc.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "https://evmos-rpc.antrixy.org/",
        provider: "Antrix Validators"
      },
      {
        address: "https://evmos-mainnet.rpc.stakevillage.net:443",
        provider: "Stake Village"
      },
      {
        address: "https://rpc.evmos.validatus.com",
        provider: "Validatus"
      },
      {
        address: "https://rpc.evmos.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://rpc.evmos.citizenweb3.com:443",
        provider: "Citizen Web3"
      }
    ],
    rest: [
      {
        address: "https://rest.bd.evmos.org:1317",
        provider: "Blockdaemon"
      },
      {
        address: "https://evmos-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://api-evmos-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://api.evmos.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://evmos-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://api.evmos.silentvalidator.com/",
        provider: "silent"
      },
      {
        address: "https://rest.evmos.tcnetwork.io",
        provider: "TC Network"
      },
      {
        address: "https://evmos.rest.stakin-nodes.com",
        provider: "Stakin"
      },
      {
        address: "https://rest-evmos.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "https://evmos-api.validatrium.club",
        provider: "Validatrium"
      },
      {
        address: "https://rest-evmos.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://evmos-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://api-evmos-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://evmos-api.theamsolutions.info",
        provider: "AM Solutions"
      },
      {
        address: "https://lcd-evmos.validavia.me",
        provider: "Validavia"
      },
      {
        address: "https://evmos-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://evmos-api.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://evmos.api.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "https://evmos-rest.antrixy.org/",
        provider: "Antrix Validators"
      },
      {
        address: "https://evmos-mainnet.api.stakevillage.net",
        provider: "Stake Village"
      },
      {
        address: "https://api.evmos.validatus.com",
        provider: "Validatus"
      },
      {
        address: "https://lcd.evmos.bronbro.io:443",
        provider: "Bro_n_Bro"
      }
    ],
    grpc: [
      {
        address: "grpc.bd.evmos.org:9090",
        provider: "evmos.org"
      },
      {
        address: "grpc-evmos-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "evmos-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "grpc.evmos.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "grpc-evmos.cosmos-spaces.cloud:1190",
        provider: "Cosmos Spaces"
      },
      {
        address: "evmos.grpcui.chaintools.host:443",
        provider: "ChainTools"
      },
      {
        address: "evmos-grpc.polkachu.com:13490",
        provider: "Polkachu"
      },
      {
        address: "evmos.grpc.stakin-nodes.com:443",
        provider: "Stakin"
      },
      {
        address: "evmos-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "evmos-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "grpc-evmos-01.stakeflow.io:1702",
        provider: "Stakeflow"
      },
      {
        address: "https://evmos-grpc.theamsolutions.info ",
        provider: "AM Solutions"
      },
      {
        address: "evmos-grpc.w3coins.io:13490",
        provider: "w3coins"
      },
      {
        address: "grpc-evmos.mms.team:443",
        provider: "MMS"
      },
      {
        address: "evmos-grpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "evmos.grpc.liveraven.net:443",
        provider: "LiveRaveN"
      },
      {
        address: "https://evmos-grpc.antrixy.org/",
        provider: "Antrix Validators"
      },
      {
        address: "evmos-mainnet.grpc.stakevillage.net:16990",
        provider: "Stake Village"
      },
      {
        address: "grpc.evmos.validatus.com:443",
        provider: "Validatus"
      },
      {
        address: "https://grpc.evmos.bronbro.io:443",
        provider: "Bro_n_Bro"
      }
    ],
    "evm-http-jsonrpc": [
      {
        address: "https://eth.bd.evmos.org:8545",
        provider: "Blockdaemon"
      },
      {
        address: "https://jsonrpc-evmos-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://evmos-json-rpc.stakely.io",
        provider: "Stakely"
      },
      {
        address: "https://jsonrpc.evmos.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://json-rpc.evmos.bh.rocks",
        provider: "BlockHunters"
      },
      {
        address: "https://evmos-json-rpc.agoranodes.com",
        provider: "AgoraNodes"
      },
      {
        address: "https://evm-rpc.evmos.silentvalidator.com/",
        provider: "silent"
      },
      {
        address: "https://json-rpc.evmos.tcnetwork.io",
        provider: "TC Network"
      },
      {
        address: "https://evmosevm.rpc.stakin-nodes.com",
        provider: "Stakin"
      },
      {
        address: "https://evmos-evm.publicnode.com",
        provider: "Allnodes.com \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://evmos-jsonrpc.theamsolutions.info",
        provider: "AM Solutions"
      },
      {
        address: "https://jsonrpc-evmos.mms.team",
        provider: "MMS"
      },
      {
        address: "https://evmos-jsonrpc.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://evmos.jsonrpc.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "https://evmos.json.antrixy.org",
        provider: "Antrix Validators"
      },
      {
        address: "https://evmos-mainnet.jsonrpc.stakevillage.net",
        provider: "Stake Village"
      },
      {
        address: "https://json-rpc.evmos.validatus.com",
        provider: "Validatus"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/evmos",
      tx_page: "https://ezstaking.app/evmos/txs/${txHash}",
      account_page: "https://ezstaking.app/evmos/account/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/evmos",
      tx_page: "https://www.mintscan.io/evmos/transactions/${txHash}",
      account_page: "https://www.mintscan.io/evmos/accounts/${accountAddress}"
    },
    {
      kind: "blockscout",
      url: "https://evm.evmos.org",
      tx_page: "https://evm.evmos.org/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/evmos",
      tx_page: "https://ping.pub/evmos/tx/${txHash}"
    },
    {
      kind: "explorers.guru",
      url: "https://evmos.explorers.guru",
      tx_page: "https://evmos.explorers.guru/transaction/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/evmos",
      tx_page: "https://atomscan.com/evmos/transactions/${txHash}",
      account_page: "https://atomscan.com/evmos/accounts/${accountAddress}"
    },
    {
      kind: "tcnetwork",
      url: "https://evmos.tcnetwork.io",
      tx_page: "https://evmos.tcnetwork.io/transaction/${txHash}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/evmos",
      account_page: "https://stakeflow.io/evmos/accounts/${accountAddress}"
    },
    {
      kind: "Stake Village",
      url: "https://exp.stakevillage.net/evmos",
      tx_page: "https://exp.stakevillage.net/evmos/tx/${txHash}",
      account_page: "https://exp.stakevillage.net/evmos/accounts/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/evmos",
      tx_page: "https://explorer.stavr.tech/evmos/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/evmos/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.svg"
  }]
};
var chain_default56 = info157;

// node_modules/chain-registry/esm/mainnet/evmos/ibc.js
var info158 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-18",
      connection_id: "connection-16"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-97",
      connection_id: "connection-55"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-40",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-72",
      connection_id: "connection-66"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-116",
      connection_id: "connection-70"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-57",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-85",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-50",
      connection_id: "connection-31"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-69",
      connection_id: "connection-27"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-22",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-21",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "carbon",
      client_id: "07-tendermint-11",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-73",
      connection_id: "connection-29"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "demex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-79",
      connection_id: "connection-49"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-134",
      connection_id: "connection-80"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-26",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-106",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-26",
      connection_id: "connection-14"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-111",
      connection_id: "connection-66"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-82",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-9",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-117",
      connection_id: "connection-71"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-87",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-620",
      connection_id: "connection-480"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-3",
      connection_id: "connection-3"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-292",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-12",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-38",
      connection_id: "connection-15"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-1136",
      connection_id: "connection-260"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-85",
      connection_id: "connection-43"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-57",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-31",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-17",
      connection_id: "connection-23"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-135",
      connection_id: "connection-81"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-107",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dymension",
      client_id: "07-tendermint-31",
      connection_id: "connection-22"
    },
    chain_2: {
      chain_name: "evmos",
      client_id: "07-tendermint-138",
      connection_id: "connection-85"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-109",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-119",
      connection_id: "connection-77"
    },
    chain_2: {
      chain_name: "gateway",
      client_id: "07-tendermint-10",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-94",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-17",
      connection_id: "connection-11"
    },
    chain_2: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-108",
      connection_id: "connection-106"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-65",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-19",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "injective",
      client_id: "07-tendermint-112",
      connection_id: "connection-92"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-83",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-113",
      connection_id: "connection-67"
    },
    chain_2: {
      chain_name: "kava",
      client_id: "07-tendermint-120",
      connection_id: "connection-157"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-83",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-117",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-53",
      connection_id: "connection-21"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-25",
      connection_id: "connection-19"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-106",
      connection_id: "connection-63"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-12",
      connection_id: "connection-19"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-64",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1840",
      connection_id: "connection-1440"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-204",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-50",
      connection_id: "connection-19"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-42",
      connection_id: "connection-24"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-41",
      connection_id: "connection-17"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-173",
      connection_id: "connection-104"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-46",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-77",
      connection_id: "connection-33"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-8",
      connection_id: "connection-7"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-25",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-88",
      connection_id: "connection-46"
    },
    chain_2: {
      chain_name: "tgrade",
      client_id: "07-tendermint-8",
      connection_id: "connection-11"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-34",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default46 = info158;

// node_modules/chain-registry/esm/mainnet/evmos/index.js
var assets56 = assets_default56;
var chain56 = chain_default56;
var ibc46 = ibc_default46;

// node_modules/chain-registry/esm/mainnet/fetchhub/assets.js
var info159 = {
  $schema: "../assetlist.schema.json",
  chain_name: "fetchhub",
  assets: [{
    description: "The native staking and governance token of the Fetch Hub.",
    denom_units: [{
      denom: "afet",
      exponent: 0
    }, {
      denom: "fet",
      exponent: 18
    }],
    base: "afet",
    name: "fetch-ai",
    display: "fet",
    symbol: "FET",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/fet.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/fet.svg"
    },
    coingecko_id: "fetch-ai",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/fet.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/fet.svg"
    }]
  }, {
    description: "The MOBX coin rewards the use of eco-friendly micromobility transportation.",
    denom_units: [{
      denom: "nanomobx",
      exponent: 0
    }, {
      denom: "mobx",
      exponent: 9
    }],
    base: "nanomobx",
    name: "MOBIX",
    display: "mobx",
    symbol: "MOBX",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/mobx.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/mobx.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/mobx.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/mobx.svg"
    }]
  }]
};
var assets_default57 = info159;

// node_modules/chain-registry/esm/mainnet/fetchhub/chain.js
var info160 = {
  $schema: "../chain.schema.json",
  chain_name: "fetchhub",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Fetch.ai",
  chain_id: "fetchhub-4",
  bech32_prefix: "fetch",
  daemon_name: "fetchd",
  node_home: "$HOME/.fetchd",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "afet",
      low_gas_price: 0.025,
      average_gas_price: 0.025,
      high_gas_price: 0.035
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "afet"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/fet.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/fet.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc-fetchhub.fetch.ai:443",
        provider: "fetch.ai"
      },
      {
        address: "https://rpc-fetchhub-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://fetch-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://fetchai-rpc.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://fetch-rpc.antrixy.org",
        provider: "Antrix"
      },
      {
        address: "https://rpc-fetch.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "https://fetchhub-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://fetch-rpc.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://fetch-rpc.cosmosrescue.com",
        provider: "cosmosrescue"
      },
      {
        address: "https://fetch-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://fetch-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://fetch-rpc.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://public.stakewolle.com/cosmos/fetchhub/rpc",
        provider: "Stakewolle"
      },
      {
        address: "https://fetch.rpc.nodeshub.online:443",
        provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705"
      },
      {
        address: "https://rpc.fetchhub-4.fetch.aviaone.com",
        provider: "AVIAONE \u{1F7E2}"
      }
    ],
    rest: [
      {
        address: "https://rest-fetchhub.fetch.ai",
        provider: "fetch.ai"
      },
      {
        address: "https://api-fetchhub-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://fetch-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://fetchai-api.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://fetch-rest.antrixy.org",
        provider: "Antrix"
      },
      {
        address: "https://fetchhub-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rest-fetch.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "https://fetch-api.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://fetch-api.cosmosrescue.com",
        provider: "cosmosrescue"
      },
      {
        address: "https://fetch-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://fetch-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://fetch-api.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://public.stakewolle.com/cosmos/fetchhub/rest",
        provider: "Stakewolle"
      },
      {
        address: "https://fetch.api.nodeshub.online:443",
        provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705"
      },
      {
        address: "https://api.fetchhub-4.fetch.aviaone.com/",
        provider: "AVIAONE \u{1F7E2}"
      }
    ],
    grpc: [
      {
        address: "grpc-fetchhub.fetch.ai:443",
        provider: "fetch.ai"
      },
      {
        address: "grpc-fetchhub-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "fetch-grpc.polkachu.com:15290",
        provider: "Polkachu"
      },
      {
        address: "fetchhub-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "fetch-grpc.teasel.org:443",
        provider: "\u{1D5E7}\u{1D5F2}\u{1D5EE}\u{1D600}\u{1D5F2}\u{1D5F9}"
      },
      {
        address: "fetch-grpc.antrixy.org:443",
        provider: "Antrix"
      },
      {
        address: "fetch-grpc.cosmosrescue.com:9090",
        provider: "cosmosrescue"
      },
      {
        address: "fetch-grpc.w3coins.io:15290",
        provider: "w3coins"
      },
      {
        address: "fetch-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "fetch.grpc.nodeshub.online",
        provider: "Nodes Hub"
      },
      {
        address: "grpc.fetchhub-4.fetch.aviaone.com:9094",
        provider: "AVIAONE \u{1F7E2}"
      }
    ]
  },
  explorers: [
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/fetchai",
      tx_page: "https://www.mintscan.io/fetchai/transactions/${txHash}",
      account_page: "https://www.mintscan.io/fetchai/accounts/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/fetchhub",
      tx_page: "https://ezstaking.app/fetchhub/txs/${txHash}",
      account_page: "https://ezstaking.app/fetchhub/account/${accountAddress}"
    },
    {
      kind: "bigdipper",
      url: "https://explore-fetchhub.fetch.ai",
      tx_page: "https://explore-fetchhub.fetch.ai/transactions/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/fetchhub",
      tx_page: "https://ping.pub/fetchhub/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/fetchai",
      tx_page: "https://atomscan.com/fetchai/transactions/${txHash}",
      account_page: "https://atomscan.com/fetchai/accounts/${accountAddress}"
    },
    {
      kind: "bigdipper",
      url: "https://fetch-explorer.teasel.org",
      tx_page: "https://fetch-explorer.teasel.org/transactions/${txHash}"
    },
    {
      kind: "azoyalabs",
      url: "https://fetchstation.azoyalabs.com/mainnet",
      tx_page: "https://fetchstation.azoyalabs.com/mainnet/explorer/transactions/${txHash}",
      account_page: "https://fetchstation.azoyalabs.com/mainnet/explorer/address/${accountAddress}"
    },
    {
      kind: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705",
      url: "https://explorer.nodeshub.online/fetchhub/",
      tx_page: "https://explorer.nodeshub.online/fetchhub/tx/${txHash}",
      account_page: "https://explorer.nodeshub.online/fetchhub/accounts/${accountAddress}"
    },
    {
      kind: "Blockchain Explorer by AVIAONE \u{1F7E2}",
      url: "https://mainnet.explorer.aviaone.com/fetchhub",
      tx_page: "https://mainnet.explorer.aviaone.com/fetchhub/tx/${txHash}",
      account_page: "https://mainnet.explorer.aviaone.com/fetchhub/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/fet.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/fet.svg"
  }]
};
var chain_default57 = info160;

// node_modules/chain-registry/esm/mainnet/fetchhub/ibc.js
var info161 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "fetchhub",
    client_id: "07-tendermint-10",
    connection_id: "connection-10"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-1913",
    connection_id: "connection-1490"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-10",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-229",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default47 = info161;

// node_modules/chain-registry/esm/mainnet/fetchhub/index.js
var assets57 = assets_default57;
var chain57 = chain_default57;
var ibc47 = ibc_default47;

// node_modules/chain-registry/esm/mainnet/finschia/assets.js
var info162 = {
  $schema: "../assetlist.schema.json",
  chain_name: "finschia",
  assets: [{
    description: "The native token of Finschia",
    denom_units: [{
      denom: "cony",
      exponent: 0
    }, {
      denom: "fnsa",
      exponent: 6
    }],
    type_asset: "sdk.coin",
    base: "cony",
    name: "Finschia",
    display: "fnsa",
    symbol: "FNSA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/finschia/images/fnsa.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/finschia/images/fnsa.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/finschia/images/fnsa.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/finschia/images/fnsa.svg"
    }],
    coingecko_id: "link",
    keywords: ["staking"]
  }]
};
var assets_default58 = info162;

// node_modules/chain-registry/esm/mainnet/finschia/chain.js
var info163 = {
  $schema: "../chain.schema.json",
  chain_name: "finschia",
  chain_id: "finschia-2",
  website: "https://www.finschia.io/",
  pretty_name: "Finschia",
  status: "live",
  network_type: "mainnet",
  bech32_prefix: "link",
  daemon_name: "fnsad",
  node_home: "$HOME/.finschia",
  key_algos: ["secp256k1"],
  slip44: 438,
  fees: {
    fee_tokens: [{
      denom: "cony",
      fixed_min_gas_price: 0.015,
      low_gas_price: 0.015,
      average_gas_price: 0.015,
      high_gas_price: 0.015
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "cony"
    }],
    lock_duration: {
      time: "604800s"
    }
  },
  codebase: {
    cosmos_sdk_version: "github.com/Finschia/finschia-sdk@v0.48.1",
    cosmwasm_enabled: true,
    cosmwasm_version: "github.com/Finschia/wasmd@v0.2.0"
  },
  description: "Finschia (formerly LINE Blockchain Mainnet) aims to build a sustainable token model and create token demand to become a blockchain with 1 billion users.",
  apis: {
    rpc: [{
      address: "https://finschia-rpc.finschia.io"
    }],
    rest: [{
      address: "https://finschia-api.finschia.io"
    }],
    grpc: [{
      address: "finschia-grpc.finschia.io:443"
    }]
  },
  explorers: [{
    kind: "mintscan",
    url: "https://www.mintscan.io/finschia",
    tx_page: "https://www.mintscan.io/finschia/tx/${txHash}",
    account_page: "https://www.mintscan.io/finschia/address/${accountAddress}"
  }, {
    kind: "ezstaking",
    url: "https://ezstaking.app/finschia",
    tx_page: "https://ezstaking.app/finschia/txs/${txHash}",
    account_page: "https://ezstaking.app/finschia/account/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/finschia/images/fnsa.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/finschia/images/fnsa.svg"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/finschia/images/fnsa.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/finschia/images/fnsa.svg"
  }
};
var chain_default58 = info163;

// node_modules/chain-registry/esm/mainnet/finschia/index.js
var assets58 = assets_default58;
var chain58 = chain_default58;

// node_modules/chain-registry/esm/mainnet/firmachain/assets.js
var info164 = {
  $schema: "../assetlist.schema.json",
  chain_name: "firmachain",
  assets: [{
    description: "The native token of FirmaChain",
    denom_units: [{
      denom: "ufct",
      exponent: 0
    }, {
      denom: "fct",
      exponent: 6
    }],
    base: "ufct",
    name: "FirmaChain",
    display: "fct",
    symbol: "FCT",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/firmachain/images/fct.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/firmachain/images/fct.svg"
    },
    coingecko_id: "firmachain",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/firmachain/images/fct.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/firmachain/images/fct.svg"
    }]
  }]
};
var assets_default59 = info164;

// node_modules/chain-registry/esm/mainnet/firmachain/chain.js
var info165 = {
  $schema: "../chain.schema.json",
  chain_name: "firmachain",
  status: "live",
  network_type: "mainnet",
  website: "https://firmachain.org/",
  pretty_name: "FirmaChain",
  chain_id: "colosseum-1",
  bech32_prefix: "firma",
  slip44: 7777777,
  daemon_name: "firmachaind",
  node_home: "$HOME/.firmachain",
  key_algos: ["secp256k1"],
  fees: {
    fee_tokens: [{
      denom: "ufct",
      fixed_min_gas_price: 0.1
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ufct"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/firmachain/images/fct.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/firmachain/images/fct.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://lcd-mainnet.firmachain.dev:26657",
        provider: "FirmaChain"
      },
      {
        address: "https://firma.rpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc.firmachain.chaintools.tech/",
        provider: "ChainTools"
      },
      {
        address: "https://firmachain-rpc.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://firmachain-rpc.ramuchi.tech",
        provider: "ramuchi.tech"
      },
      {
        address: "https://firmachain.rpc.nodeshub.online:443",
        provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705"
      }
    ],
    rest: [
      {
        address: "https://lcd-mainnet.firmachain.dev:1317",
        provider: "FirmaChain"
      },
      {
        address: "https://firma.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api.firmachain.chaintools.tech/",
        provider: "ChainTools"
      },
      {
        address: "https://firmachain-api.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://firmachain-api.ramuchi.tech",
        provider: "ramuchi.tech"
      },
      {
        address: "https://firmachain.api.nodeshub.online:443",
        provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705"
      }
    ],
    grpc: [
      {
        address: "firmachain-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "firma.grpc.m.stavr.tech:2030",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://firmachain-grpc.ramuchi.tech:1390",
        provider: "ramuchi.tech"
      },
      {
        address: "firmachain.grpc.nodeshub.online",
        provider: "Nodes Hub"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/firmachain",
      tx_page: "https://ezstaking.app/firmachain/txs/${txHash}",
      account_page: "https://ezstaking.app/firmachain/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Firmachain-M",
      tx_page: "https://explorer.stavr.tech/Firmachain-M/txs/${txHash}",
      account_page: "https://explorer.stavr.tech/Firmachain-M/account/${accountAddress}"
    },
    {
      kind: "bigdipper",
      url: "https://explorer.firmachain.dev",
      tx_page: "https://explorer.firmachain.dev/transactions/${txHash}"
    },
    {
      kind: "explorer.ChainTools",
      url: "https://explorer.chaintools.tech/firmachain",
      tx_page: "https://explorer.chaintools.tech/firmachain/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/firmachain",
      tx_page: "https://atomscan.com/firmachain/transactions/${txHash}",
      account_page: "https://atomscan.com/firmachain/accounts/${accountAddress}"
    },
    {
      kind: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705",
      url: "https://explorer.nodeshub.online/firmachain/",
      tx_page: "https://explorer.nodeshub.online/firmachain/tx/${txHash}",
      account_page: "https://explorer.nodeshub.online/firmachain/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/firmachain/images/fct.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/firmachain/images/fct.svg"
  }]
};
var chain_default59 = info165;

// node_modules/chain-registry/esm/mainnet/firmachain/index.js
var assets59 = assets_default59;
var chain59 = chain_default59;

// node_modules/chain-registry/esm/mainnet/furya/assets.js
var info166 = {
  $schema: "../assetlist.schema.json",
  chain_name: "furya",
  assets: [{
    description: "The native token of Furya",
    denom_units: [{
      denom: "ufury",
      exponent: 0
    }, {
      denom: "fury",
      exponent: 6
    }],
    base: "ufury",
    name: "Furya",
    display: "fury",
    symbol: "FURY",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/furya/images/fury.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/furya/images/fury.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/furya/images/fury.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/furya/images/fury.svg"
    }],
    coingecko_id: "fanfury",
    keywords: ["gaming", "staking"],
    socials: {
      twitter: "https://twitter.com/furyachain"
    }
  }]
};
var assets_default60 = info166;

// node_modules/chain-registry/esm/mainnet/furya/chain.js
var info167 = {
  $schema: "../chain.schema.json",
  chain_name: "furya",
  status: "live",
  network_type: "mainnet",
  website: "https://furya.xyz/",
  pretty_name: "furya",
  chain_id: "furya-1",
  daemon_name: "furyad",
  node_home: "$HOME/.furyad",
  bech32_prefix: "furya",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ufury",
      low_gas_price: 0.1,
      average_gas_price: 0.25,
      high_gas_price: 0.5
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ufury"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/furya/images/chain.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/furya/images/chain.svg"
  },
  apis: {
    rpc: [{
      address: "https://furya-rpc.synergynodes.com",
      provider: "synergynodes"
    }, {
      address: "https://furya.rpc.nodeshub.online:443",
      provider: "nodeshub"
    }],
    rest: [{
      address: "https://furya.api.nodeshub.online",
      provider: "synergynodes"
    }, {
      address: "https://furya.api.nodeshub.online:443",
      provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705"
    }],
    grpc: [{
      address: "https://furya.grpc.nodeshub.online",
      provider: "Nodes Hub"
    }]
  },
  explorers: [{
    kind: "Furya Explorer",
    url: "https://explorer.furya.network/furya-1/",
    tx_page: "https://explorer.furya.network/furya-1/tx/${txHash}",
    account_page: "https://explorer.furya.network/furya-1/account/${accountAddress}"
  }, {
    kind: "Nodeshub Explorer",
    url: "https://explorer.nodeshub.online/furya",
    tx_page: "https://explorer.nodeshub.online/furya/txs/${txHash}",
    account_page: "https://explorer.nodeshub.online/furya/account/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/furya/images/chain.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/furya/images/chain.svg"
  }]
};
var chain_default60 = info167;

// node_modules/chain-registry/esm/mainnet/furya/ibc.js
var info168 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "furya",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-501",
      connection_id: "connection-505"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-417",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "furya",
      client_id: "07-tendermint-1",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-160",
      connection_id: "connection-123"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-119",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "furya",
      client_id: "07-tendermint-5",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-67",
      connection_id: "connection-64"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-42",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "furya",
      client_id: "07-tendermint-10",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3201",
      connection_id: "connection-2658"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-74222",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "furya",
      client_id: "07-tendermint-14",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-422",
      connection_id: "connection-436"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-495",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default48 = info168;

// node_modules/chain-registry/esm/mainnet/furya/index.js
var assets60 = assets_default60;
var chain60 = chain_default60;
var ibc48 = ibc_default48;

// node_modules/chain-registry/esm/mainnet/fxcore/assets.js
var info169 = {
  $schema: "../assetlist.schema.json",
  chain_name: "fxcore",
  assets: [{
    description: "The native staking token of the Function X",
    extended_description: "FX coin is the native token on the Function X ecosystem. It is currently utilized as a governance token as well as a gas token on f(x)Core and f(x)EVM. The subnets that are built on the Function X ecosystem can also choose to utilize FX as their gas token.",
    denom_units: [{
      denom: "FX",
      exponent: 0
    }, {
      denom: "WFX",
      exponent: 18
    }],
    base: "FX",
    name: "Function X",
    display: "WFX",
    symbol: "FX",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fxcore/images/fx.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fxcore/images/fx.svg"
    },
    coingecko_id: "fx-coin",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fxcore/images/fx.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fxcore/images/fx.svg"
    }],
    socials: {
      website: "https://functionx.io",
      twitter: "https://x.com/functionx_io"
    }
  }, {
    description: "The cross chain token of the Function X",
    extended_description: "PUNDIX token is the native token that functions within the Pundi X ecosystem, including PundiX Chain and XPOS. PUNDIX has several core use cases, including:\n- Payment for goods and services from merchants through XPOS\n- Gas Fee on PundiX\xA0Chain\n- Listing tokens in the XPOS\n- Merchant payments for loyalty programs and ads",
    denom_units: [{
      denom: "eth0x0FD10b9899882a6f2fcb5c371E17e70FdEe00C38",
      exponent: 0
    }, {
      denom: "PUNDIX",
      exponent: 18
    }],
    base: "eth0x0FD10b9899882a6f2fcb5c371E17e70FdEe00C38",
    display: "PUNDIX",
    name: "Pundi X Token",
    symbol: "PUNDIX",
    traces: [{
      type: "bridge",
      counterparty: {
        chain_name: "ethereum",
        base_denom: "0x0FD10b9899882a6f2fcb5c371E17e70FdEe00C38",
        contract: "0x0FD10b9899882a6f2fcb5c371E17e70FdEe00C38"
      },
      provider: "Function X"
    }],
    images: [{
      image_sync: {
        chain_name: "ethereum",
        base_denom: "0x0FD10b9899882a6f2fcb5c371E17e70FdEe00C38"
      },
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/pundi-x-token-logo.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/pundi-x-token-logo.svg"
    }],
    socials: {
      website: "https://pundix.com",
      twitter: "https://x.com/PundiXLabs"
    }
  }]
};
var assets_default61 = info169;

// node_modules/chain-registry/esm/mainnet/fxcore/chain.js
var info170 = {
  $schema: "../chain.schema.json",
  chain_name: "fxcore",
  chain_id: "fxcore",
  website: "https://functionx.io",
  pretty_name: "f(x)Core",
  status: "live",
  network_type: "mainnet",
  bech32_prefix: "fx",
  daemon_name: "fxcored",
  node_home: "$HOME/.fxcore",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "FX",
      fixed_min_gas_price: 4e12,
      low_gas_price: 4e12,
      average_gas_price: 42e11,
      high_gas_price: 5e12
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "FX"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.46"
  },
  apis: {
    rpc: [{
      address: "https://fx-json.functionx.io",
      provider: "Function X"
    }, {
      address: "https://functionx.rpc.nodeshub.online:443",
      provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705"
    }],
    rest: [{
      address: "https://fx-rest.functionx.io",
      provider: "Function X"
    }, {
      address: "https://functionx.api.nodeshub.online:443",
      provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705"
    }],
    grpc: [
      {
        address: "https://fx-grpc.functionx.io",
        provider: "Function X"
      },
      {
        address: "https://fx-grpc.portfolio-x.xyz:9090",
        provider: "Portfolio X"
      },
      {
        address: "functionx.grpc.nodeshub.online",
        provider: "Nodes Hub"
      }
    ],
    "evm-http-jsonrpc": [{
      address: "https://fx-web3.functionx.io",
      provider: "Function X"
    }]
  },
  explorers: [
    {
      kind: "starscan",
      url: "https://starscan.io",
      tx_page: "https://starscan.io/fxcore/tx/${txHash}",
      account_page: "https://starscan.io/fxcore/address/${accountAddress}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/fx",
      tx_page: "https://explorer.tcnetwork.io/fx/transaction/${txHash}",
      account_page: "https://explorer.tcnetwork.io/fx/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/fxcore",
      tx_page: "https://ping.pub/fxcore/tx/${txHash}"
    },
    {
      kind: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705",
      url: "https://explorer.nodeshub.online/fxcore/",
      tx_page: "https://explorer.nodeshub.online/fxcore/tx/${txHash}",
      account_page: "https://explorer.nodeshub.online/fxcore/accounts/${accountAddress}"
    }
  ]
};
var chain_default61 = info170;

// node_modules/chain-registry/esm/mainnet/fxcore/ibc.js
var info171 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-188",
      connection_id: "connection-166"
    },
    chain_2: {
      chain_name: "fxcore",
      client_id: "07-tendermint-24",
      connection_id: "connection-23"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-128",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-20",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1141",
      connection_id: "connection-829"
    },
    chain_2: {
      chain_name: "fxcore",
      client_id: "07-tendermint-13",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-585",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "fxcore",
      client_id: "07-tendermint-23",
      connection_id: "connection-22"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2961",
      connection_id: "connection-2456"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-19",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2716",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "fxcore",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "pundix",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default49 = info171;

// node_modules/chain-registry/esm/mainnet/fxcore/index.js
var assets61 = assets_default61;
var chain61 = chain_default61;
var ibc49 = ibc_default49;

// node_modules/chain-registry/esm/mainnet/galaxy/assets.js
var info172 = {
  $schema: "../assetlist.schema.json",
  chain_name: "galaxy",
  assets: [{
    description: "GLX is the staking token of the Galaxy Chain",
    denom_units: [{
      denom: "uglx",
      exponent: 0
    }, {
      denom: "glx",
      exponent: 6
    }],
    base: "uglx",
    name: "Galaxy",
    display: "glx",
    symbol: "GLX",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/galaxy/images/glx.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/galaxy/images/glx.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/galaxy/images/glx.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/galaxy/images/glx.svg"
    }]
  }]
};
var assets_default62 = info172;

// node_modules/chain-registry/esm/mainnet/galaxy/chain.js
var info173 = {
  $schema: "../chain.schema.json",
  chain_name: "galaxy",
  status: "live",
  network_type: "mainnet",
  website: "https://galaxychain.zone/",
  pretty_name: "Galaxy",
  chain_id: "galaxy-1",
  bech32_prefix: "galaxy",
  daemon_name: "galaxyd",
  node_home: "$HOME/.galaxy",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uglx",
      low_gas_price: 0.025,
      average_gas_price: 0.025,
      high_gas_price: 0.035
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uglx"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/galaxy/images/glx.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/galaxy/images/glx.svg"
  },
  apis: {
    rpc: [],
    rest: [],
    grpc: []
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://explorer.postcapitalist.io/Galaxy",
    tx_page: "https://explorer.postcapitalist.io/Galaxy/tx/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/galaxy/images/glx.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/galaxy/images/glx.svg"
  }]
};
var chain_default62 = info173;

// node_modules/chain-registry/esm/mainnet/galaxy/ibc.js
var info174 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "galaxy",
    client_id: "07-tendermint-0",
    connection_id: "connection-0"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-1928",
    connection_id: "connection-1500"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-236",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default50 = info174;

// node_modules/chain-registry/esm/mainnet/galaxy/index.js
var assets62 = assets_default62;
var chain62 = chain_default62;
var ibc50 = ibc_default50;

// node_modules/chain-registry/esm/mainnet/gateway/assets.js
var info175 = {
  $schema: "../assetlist.schema.json",
  chain_name: "gateway",
  assets: [
    {
      description: "The native fee token of Gateway.",
      denom_units: [{
        denom: "utest",
        exponent: 0
      }, {
        denom: "test",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      base: "utest",
      name: "Test",
      display: "test",
      symbol: "TEST"
    },
    {
      description: "the native staking token of Gateway.",
      denom_units: [{
        denom: "uworm",
        exponent: 0
      }, {
        denom: "worm",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      base: "uworm",
      name: "Worm",
      display: "worm",
      symbol: "WORM"
    },
    {
      description: "Sui (Wormhole), SUI, factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/46YEtoSN1AcwgGSRoWruoS6bnVh8XpMp5aQTpKohCJYh",
      denom_units: [{
        denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/46YEtoSN1AcwgGSRoWruoS6bnVh8XpMp5aQTpKohCJYh",
        exponent: 0
      }, {
        denom: "wormhole/46YEtoSN1AcwgGSRoWruoS6bnVh8XpMp5aQTpKohCJYh/8",
        exponent: 8
      }],
      address: "wormhole19hlynxzedrlqv99v6qscww7d3crhl86qtd0vprpltg5g9xx6jk9q6ya33y",
      base: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/46YEtoSN1AcwgGSRoWruoS6bnVh8XpMp5aQTpKohCJYh",
      display: "wormhole/46YEtoSN1AcwgGSRoWruoS6bnVh8XpMp5aQTpKohCJYh/8",
      name: "Sui (Wormhole)",
      symbol: "SUI",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "sui",
          base_denom: "0x2::sui::SUI"
        },
        provider: "Wormhole"
      }],
      images: [{
        image_sync: {
          chain_name: "sui",
          base_denom: "0x2::sui::SUI"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/sui/images/sui.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/sui/images/sui.svg"
      }
    },
    {
      description: "Wrapped Ether (Wormhole), WETH, factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5BWqpR48Lubd55szM5i62zK7TFkddckhbT48yy6mNbDp",
      denom_units: [{
        denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5BWqpR48Lubd55szM5i62zK7TFkddckhbT48yy6mNbDp",
        exponent: 0
      }, {
        denom: "wormhole/5BWqpR48Lubd55szM5i62zK7TFkddckhbT48yy6mNbDp/8",
        exponent: 8
      }],
      address: "wormhole18csycs4vm6varkp00apuqlsm7v4twg8jsljk8wfdd7cghr7g4rtslwqndm",
      base: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5BWqpR48Lubd55szM5i62zK7TFkddckhbT48yy6mNbDp",
      display: "wormhole/5BWqpR48Lubd55szM5i62zK7TFkddckhbT48yy6mNbDp/8",
      name: "Wrapped Ether (Wormhole)",
      symbol: "WETH",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
        },
        provider: "Wormhole"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.svg"
      }]
    },
    {
      description: "Wrapped liquid staked Ether 2.0 (Wormhole), wstETH, factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5TSQTEhJ5Q6r1YqCmCxTRSPiV2pGx5rZUQf6g2XH4e1b",
      denom_units: [{
        denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5TSQTEhJ5Q6r1YqCmCxTRSPiV2pGx5rZUQf6g2XH4e1b",
        exponent: 0
      }, {
        denom: "wormhole/5TSQTEhJ5Q6r1YqCmCxTRSPiV2pGx5rZUQf6g2XH4e1b/8",
        exponent: 8
      }],
      address: "wormhole1gg6f95cymcfrfzhpek7cf5wl53t5kng52cd2m0krgdlu8k58vd8qezy8pt",
      base: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5TSQTEhJ5Q6r1YqCmCxTRSPiV2pGx5rZUQf6g2XH4e1b",
      display: "wormhole/5TSQTEhJ5Q6r1YqCmCxTRSPiV2pGx5rZUQf6g2XH4e1b/8",
      name: "Wrapped liquid staked Ether 2.0 (Wormhole)",
      symbol: "wstETH",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0"
        },
        provider: "Wormhole"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wsteth.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wsteth.svg"
      }
    },
    {
      description: "Aptos Coin (Wormhole), APT, factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5wS2fGojbL9RhGEAeQBdkHPUAciYDxjDTMYvdf9aDn2r",
      denom_units: [{
        denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5wS2fGojbL9RhGEAeQBdkHPUAciYDxjDTMYvdf9aDn2r",
        exponent: 0
      }, {
        denom: "wormhole/5wS2fGojbL9RhGEAeQBdkHPUAciYDxjDTMYvdf9aDn2r/8",
        exponent: 8
      }],
      address: "wormhole1f9sxjn0qu8xylcpzlvnhrefnatndqxnrajfrnr5h97hegnmsdqhsh6juc0",
      base: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5wS2fGojbL9RhGEAeQBdkHPUAciYDxjDTMYvdf9aDn2r",
      display: "wormhole/5wS2fGojbL9RhGEAeQBdkHPUAciYDxjDTMYvdf9aDn2r/8",
      name: "Aptos Coin (Wormhole)",
      symbol: "APT",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "aptos",
          base_denom: "0x1::aptos_coin::AptosCoin"
        },
        provider: "Wormhole"
      }],
      images: [{
        image_sync: {
          chain_name: "aptos",
          base_denom: "0x1::aptos_coin::AptosCoin"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/aptos/images/aptos.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/aptos/images/aptos.svg"
      }
    },
    {
      description: "Tether USD (Wormhole), USDT, factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/8iuAc6DSeLvi2JDUtwJxLytsZT8R19itXebZsNReLLNi",
      denom_units: [{
        denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/8iuAc6DSeLvi2JDUtwJxLytsZT8R19itXebZsNReLLNi",
        exponent: 0
      }, {
        denom: "wormhole/8iuAc6DSeLvi2JDUtwJxLytsZT8R19itXebZsNReLLNi/6",
        exponent: 6
      }],
      address: "wormhole1w27ekqvvtzfanfxnkw4jx2f8gdfeqwd3drkee3e64xat6phwjg0savgmhw",
      base: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/8iuAc6DSeLvi2JDUtwJxLytsZT8R19itXebZsNReLLNi",
      display: "wormhole/8iuAc6DSeLvi2JDUtwJxLytsZT8R19itXebZsNReLLNi/6",
      name: "Tether USD (Wormhole)",
      symbol: "USDT",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7"
        },
        provider: "Wormhole"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      }
    },
    {
      description: "Wrapped SOL (Wormhole), SOL, factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/8sYgCzLRJC3J7qPn2bNbx6PiGcarhyx8rBhVaNnfvHCA",
      denom_units: [{
        denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/8sYgCzLRJC3J7qPn2bNbx6PiGcarhyx8rBhVaNnfvHCA",
        exponent: 0
      }, {
        denom: "wormhole/8sYgCzLRJC3J7qPn2bNbx6PiGcarhyx8rBhVaNnfvHCA/8",
        exponent: 8
      }],
      address: "wormhole1wn625s4jcmvk0szpl85rj5azkfc6suyvf75q6vrddscjdphtve8sca0pvl",
      base: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/8sYgCzLRJC3J7qPn2bNbx6PiGcarhyx8rBhVaNnfvHCA",
      display: "wormhole/8sYgCzLRJC3J7qPn2bNbx6PiGcarhyx8rBhVaNnfvHCA/8",
      name: "Wrapped SOL (Wormhole)",
      symbol: "SOL",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "solana",
          base_denom: "So11111111111111111111111111111111111111112"
        },
        provider: "Wormhole"
      }],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "So11111111111111111111111111111111111111112"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/sol.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/sol.svg"
      }
    },
    {
      description: "Bonk (Wormhole), Bonk, factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/95mnwzvJZJ3fKz77xfGN2nR5to9pZmH8YNvaxgLgw5AR",
      denom_units: [{
        denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/95mnwzvJZJ3fKz77xfGN2nR5to9pZmH8YNvaxgLgw5AR",
        exponent: 0
      }, {
        denom: "wormhole/95mnwzvJZJ3fKz77xfGN2nR5to9pZmH8YNvaxgLgw5AR/5",
        exponent: 5
      }],
      address: "wormhole10qt8wg0n7z740ssvf3urmvgtjhxpyp74hxqvqt7z226gykuus7eq9mpu8u",
      base: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/95mnwzvJZJ3fKz77xfGN2nR5to9pZmH8YNvaxgLgw5AR",
      display: "wormhole/95mnwzvJZJ3fKz77xfGN2nR5to9pZmH8YNvaxgLgw5AR/5",
      name: "Bonk (Wormhole)",
      symbol: "Bonk",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "solana",
          base_denom: "DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263"
        },
        provider: "Wormhole"
      }],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/bonk.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/bonk.png"
      }
    },
    {
      description: "Wrapped BTC (Wormhole), WBTC, factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/BGkuAcga2WArUghF8L6kt6uCAhAzrxmn1QcbQqi5r5bd",
      denom_units: [{
        denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/BGkuAcga2WArUghF8L6kt6uCAhAzrxmn1QcbQqi5r5bd",
        exponent: 0
      }, {
        denom: "wormhole/BGkuAcga2WArUghF8L6kt6uCAhAzrxmn1QcbQqi5r5bd/8",
        exponent: 8
      }],
      address: "wormhole1nz0r0au8aj6dc00wmm3ufy4g4k86rjzlr8wkf92cktdlps5lgfcqxnx9yk",
      base: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/BGkuAcga2WArUghF8L6kt6uCAhAzrxmn1QcbQqi5r5bd",
      display: "wormhole/BGkuAcga2WArUghF8L6kt6uCAhAzrxmn1QcbQqi5r5bd/8",
      name: "Wrapped BTC (Wormhole)",
      symbol: "WBTC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599"
        },
        provider: "Wormhole"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.svg"
      }
    },
    {
      description: "tBTC v2 (Wormhole), tBTC, factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/BhqTYfQogyt7jX7cx7x8uHEQP1x9fdtdBZtK4Swghgpw",
      denom_units: [{
        denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/BhqTYfQogyt7jX7cx7x8uHEQP1x9fdtdBZtK4Swghgpw",
        exponent: 0
      }, {
        denom: "wormhole/BhqTYfQogyt7jX7cx7x8uHEQP1x9fdtdBZtK4Swghgpw/8",
        exponent: 8
      }],
      address: "wormhole1nu9wf9dw384attnpu0pwfet5fajn05w2ex4r07mghvk3xcwrt2yq5uutp5",
      base: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/BhqTYfQogyt7jX7cx7x8uHEQP1x9fdtdBZtK4Swghgpw",
      display: "wormhole/BhqTYfQogyt7jX7cx7x8uHEQP1x9fdtdBZtK4Swghgpw/8",
      name: "tBTC v2 (Wormhole)",
      symbol: "tBTC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x18084fba666a33d37592fa2633fd49a74dd93a88"
        },
        provider: "Wormhole"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x18084fba666a33d37592fa2633fd49a74dd93a88"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/tbtc.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/tbtc.svg"
      }
    },
    {
      description: "Dai Stablecoin (Wormhole), DAI, factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/EKiMEqDnPKokFGcSXDvGMk6Gt1BJ6BC7BDZzTmEpWLH1",
      denom_units: [{
        denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/EKiMEqDnPKokFGcSXDvGMk6Gt1BJ6BC7BDZzTmEpWLH1",
        exponent: 0
      }, {
        denom: "wormhole/EKiMEqDnPKokFGcSXDvGMk6Gt1BJ6BC7BDZzTmEpWLH1/8",
        exponent: 8
      }],
      address: "wormhole1chejx4qqtvwxy6684yrsmf6pylancxqhk3vsmtleg5ta3zrffljqfscg87",
      base: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/EKiMEqDnPKokFGcSXDvGMk6Gt1BJ6BC7BDZzTmEpWLH1",
      display: "wormhole/EKiMEqDnPKokFGcSXDvGMk6Gt1BJ6BC7BDZzTmEpWLH1/8",
      name: "Dai Stablecoin (Wormhole)",
      symbol: "DAI",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x6b175474e89094c44da98b954eedeac495271d0f"
        },
        provider: "Wormhole"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x6b175474e89094c44da98b954eedeac495271d0f"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/dai.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/dai.svg"
      }
    },
    {
      description: "USD Coin (Wormhole), USDC, factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/GGh9Ufn1SeDGrhzEkMyRKt5568VbbxZK2yvWNsd6PbXt",
      denom_units: [{
        denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/GGh9Ufn1SeDGrhzEkMyRKt5568VbbxZK2yvWNsd6PbXt",
        exponent: 0
      }, {
        denom: "wormhole/GGh9Ufn1SeDGrhzEkMyRKt5568VbbxZK2yvWNsd6PbXt/6",
        exponent: 6
      }],
      address: "wormhole1utjx3594tlvfw4375esgu72wa4sdgf0q7x4ye27husf5kvuzp5rsr72gdq",
      base: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/GGh9Ufn1SeDGrhzEkMyRKt5568VbbxZK2yvWNsd6PbXt",
      display: "wormhole/GGh9Ufn1SeDGrhzEkMyRKt5568VbbxZK2yvWNsd6PbXt/6",
      name: "USD Coin (Wormhole)",
      symbol: "USDC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
        },
        provider: "Wormhole"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }
    },
    {
      description: "Avalanche USD Coin (Wormhole), Avalanche USDC, factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5ZLmAZpcbaP4EGyihSmpfwryzDr84h51tboV392BCjW4",
      denom_units: [{
        denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5ZLmAZpcbaP4EGyihSmpfwryzDr84h51tboV392BCjW4",
        exponent: 0
      }, {
        denom: "wormhole/5ZLmAZpcbaP4EGyihSmpfwryzDr84h51tboV392BCjW4/6",
        exponent: 6
      }],
      address: "wormhole1utjx3594tlvfw4375esgu72wa4sdgf0q7x4ye27husf5kvuzp5rsr72gdq",
      base: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5ZLmAZpcbaP4EGyihSmpfwryzDr84h51tboV392BCjW4",
      display: "wormhole/5ZLmAZpcbaP4EGyihSmpfwryzDr84h51tboV392BCjW4/6",
      name: "Avalanche USD Coin (Wormhole)",
      symbol: "avalanche.USDC.wh",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "avalanche",
          base_denom: "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
        },
        provider: "Wormhole"
      }],
      images: [{
        image_sync: {
          chain_name: "avalanche",
          base_denom: "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }
    },
    {
      description: "Pyth Network (Wormhole), PYTH, factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/B8ohBnfisop27exk2gtNABJyYjLwQA7ogrp5uNzvZCoy",
      denom_units: [{
        denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/B8ohBnfisop27exk2gtNABJyYjLwQA7ogrp5uNzvZCoy",
        exponent: 0,
        aliases: ["HZ1JovNiVvGrGNiiYvEozEVgZ58xaU3RKwX8eACQBCt3"]
      }, {
        denom: "wormhole/B8ohBnfisop27exk2gtNABJyYjLwQA7ogrp5uNzvZCoy/6",
        exponent: 6,
        aliases: ["pyth"]
      }],
      address: "wormhole1utjx3594tlvfw4375esgu72wa4sdgf0q7x4ye27husf5kvuzp5rsr72gdq",
      base: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/B8ohBnfisop27exk2gtNABJyYjLwQA7ogrp5uNzvZCoy",
      display: "wormhole/B8ohBnfisop27exk2gtNABJyYjLwQA7ogrp5uNzvZCoy/6",
      name: "Pyth Network",
      symbol: "PYTH",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "solana",
          base_denom: "HZ1JovNiVvGrGNiiYvEozEVgZ58xaU3RKwX8eACQBCt3"
        },
        provider: "Wormhole"
      }],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "HZ1JovNiVvGrGNiiYvEozEVgZ58xaU3RKwX8eACQBCt3"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/pyth.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/pyth.svg"
      }
    },
    {
      description: "Solana USD Coin (Wormhole), Solana USDC, factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/HJk1XMDRNUbRrpKkNZYui7SwWDMjXZAsySzqgyNcQoU3",
      denom_units: [{
        denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/HJk1XMDRNUbRrpKkNZYui7SwWDMjXZAsySzqgyNcQoU3",
        exponent: 0
      }, {
        denom: "wormhole/HJk1XMDRNUbRrpKkNZYui7SwWDMjXZAsySzqgyNcQoU3/6",
        exponent: 6
      }],
      base: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/HJk1XMDRNUbRrpKkNZYui7SwWDMjXZAsySzqgyNcQoU3",
      display: "wormhole/HJk1XMDRNUbRrpKkNZYui7SwWDMjXZAsySzqgyNcQoU3/6",
      name: "Solana USD Coin (Wormhole)",
      symbol: "solana.USDC.wh",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "solana",
          base_denom: "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"
        },
        provider: "Wormhole"
      }],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }
    },
    {
      description: "Basket (Wormhole), BSKT, factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/bqqqpqsxzelp2hdfd4cgmxr6ekpatlj8yt2eghk52vst",
      denom_units: [{
        denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/bqqqpqsxzelp2hdfd4cgmxr6ekpatlj8yt2eghk52vst",
        exponent: 0,
        aliases: ["6gnCPhXtLnUD76HjQuSYPENLSZdG8RvDB1pTLM5aLSJA", "wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/bqqqpqsxzelp2hdfd4cgmxr6ekpatlj8yt2eghk52vst"]
      }, {
        denom: "wormhole/bqqqpqsxzelp2hdfd4cgmxr6ekpatlj8yt2eghk52vst/5",
        exponent: 5,
        aliases: ["bskt"]
      }],
      address: "wormhole15rantn6k68twp4wmsljtk9uu9a0e5rt7g66fdfkvrsr24hj6je7qat93e6",
      base: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/bqqqpqsxzelp2hdfd4cgmxr6ekpatlj8yt2eghk52vst",
      display: "wormhole/bqqqpqsxzelp2hdfd4cgmxr6ekpatlj8yt2eghk52vst/5",
      name: "Basket",
      symbol: "BSKT",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "solana",
          base_denom: "6gnCPhXtLnUD76HjQuSYPENLSZdG8RvDB1pTLM5aLSJA"
        },
        provider: "Wormhole"
      }],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "6gnCPhXtLnUD76HjQuSYPENLSZdG8RvDB1pTLM5aLSJA"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/bskt.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/bskt.png"
      }
    },
    {
      description: "W is the native token powering the Wormhole interoperability platform.",
      type_asset: "sdk.coin",
      address: "wormhole1zecpd6puhcpgqgkjtwr59cc8cj3v89c5jkx0vr26fcclhhv7pmfqsuurzm",
      denom_units: [{
        denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/2Wb6ueMFc9WLc2eyYVha6qnwHKbwzUXdooXsg6XXVvos",
        exponent: 0
      }, {
        denom: "w",
        exponent: 6
      }],
      base: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/2Wb6ueMFc9WLc2eyYVha6qnwHKbwzUXdooXsg6XXVvos",
      name: "Wormhole Token",
      display: "w",
      symbol: "W",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "solana",
          base_denom: "85VBFQZC9TZkfaptBWjvUw7YbZjy52A6mjtPGjstQAmQ"
        },
        provider: "Wormhole"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/w.png"
      },
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "85VBFQZC9TZkfaptBWjvUw7YbZjy52A6mjtPGjstQAmQ"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/w.png"
      }]
    }
  ]
};
var assets_default63 = info175;

// node_modules/chain-registry/esm/mainnet/gateway/chain.js
var info176 = {
  $schema: "../chain.schema.json",
  chain_name: "gateway",
  status: "live",
  network_type: "mainnet",
  website: "https://wormhole.com",
  pretty_name: "Wormhole Gateway",
  chain_id: "wormchain",
  bech32_prefix: "wormhole",
  daemon_name: "wormchaind",
  node_home: "$HOME/.wormchaind",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "utest",
      fixed_min_gas_price: 0,
      low_gas_price: 0,
      average_gas_price: 0,
      high_gas_price: 0
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uworm"
    }]
  },
  codebase: {
    cosmos_sdk_version: "github.com/wormhole-foundation/cosmos-sdk@v0.45.9-wormhole-2",
    cosmwasm_enabled: true,
    cosmwasm_version: "github.com/wormhole-foundation/wasmd@v0.30.0-wormchain-2"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gateway/images/gateway_logo.png",
    theme: {
      primary_color_hex: "#0F0C48"
    }
  }, {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gateway/images/gateway_logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gateway/images/wormhole_logo.svg"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gateway/images/gateway_logo.png"
  },
  apis: {
    rpc: [{
      address: "https://tncnt-eu-wormchain-main-01.rpc.p2p.world/",
      provider: "P2P"
    }, {
      address: "https://wormchain-rpc.quickapi.com/",
      provider: "ChainLayer"
    }],
    rest: [{
      address: "https://tncnt-eu-wormchain-main-01.rpc.p2p.world/lcd/",
      provider: "P2P"
    }, {
      address: "https://wormchain-lcd.quickapi.com/",
      provider: "ChainLayer"
    }],
    grpc: [{
      address: "tncnt-eu-wormchain-main-01-grpc.rpc.p2p.world:80",
      provider: "P2P"
    }]
  },
  explorers: [{
    kind: "bigdipper",
    url: "https://bigdipper.live/wormhole",
    tx_page: "https://bigdipper.live/wormhole/transactions/${txHash}",
    account_page: "https://bigdipper.live/wormhole/accounts/${accountAddress}"
  }],
  keywords: ["bridge"]
};
var chain_default63 = info176;

// node_modules/chain-registry/esm/mainnet/gateway/ibc.js
var info177 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-119",
      connection_id: "connection-77"
    },
    chain_2: {
      chain_name: "gateway",
      client_id: "07-tendermint-10",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-94",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gateway",
      client_id: "07-tendermint-18",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "injective",
      client_id: "07-tendermint-248",
      connection_id: "connection-241"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-183",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gateway",
      client_id: "07-tendermint-13",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-153",
      connection_id: "connection-117"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-113",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gateway",
      client_id: "07-tendermint-8",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2927",
      connection_id: "connection-2424"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2186",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gateway",
      client_id: "07-tendermint-16",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-354",
      connection_id: "connection-290"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-278",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default51 = info177;

// node_modules/chain-registry/esm/mainnet/gateway/index.js
var assets63 = assets_default63;
var chain63 = chain_default63;
var ibc51 = ibc_default51;

// node_modules/chain-registry/esm/mainnet/genesisl1/assets.js
var info178 = {
  $schema: "../assetlist.schema.json",
  chain_name: "genesisl1",
  assets: [{
    description: "L1 coin is the GenesisL1 blockchain utility, governance and EVM token",
    denom_units: [{
      denom: "el1",
      exponent: 0
    }, {
      denom: "l1",
      exponent: 18
    }],
    base: "el1",
    name: "GenesisL1",
    display: "l1",
    symbol: "L1",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/genesisl1/images/l1.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/genesisl1/images/l1.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/genesisl1/images/l1.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/genesisl1/images/l1.svg"
    }]
  }]
};
var assets_default64 = info178;

// node_modules/chain-registry/esm/mainnet/genesisl1/chain.js
var info179 = {
  $schema: "../chain.schema.json",
  chain_name: "genesisl1",
  status: "live",
  network_type: "mainnet",
  pretty_name: "GenesisL1",
  chain_id: "genesis_29-2",
  bech32_prefix: "genesis",
  daemon_name: "genesisd",
  node_home: "$HOME/.genesis",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "el1",
      low_gas_price: 51e9,
      average_gas_price: 52e9,
      high_gas_price: 53e9
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "el1"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.46.15"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/genesisl1/images/l1.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/genesisl1/images/l1.svg"
  },
  apis: {
    rpc: [{
      address: "https://26657.genesisl1.org",
      provider: "GenesisL1"
    }],
    rest: [{
      address: "https://api.genesisl1.org",
      provider: "GenesisL1"
    }, {
      address: "https://1317.genesisl1.org",
      provider: "GenesisL1"
    }],
    "evm-http-jsonrpc": [{
      address: "https://rpc.genesisl1.org",
      provider: "GenesisL1"
    }]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://ping.pub/genesisL1",
      tx_page: "https://ping.pub/genesisL1/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://exp.utsa.tech/genesis",
      tx_page: "https://exp.utsa.tech/genesis/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Genesisl1",
      tx_page: "https://explorer.stavr.tech/Genesisl1/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Genesisl1/accounts/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/genesisl1",
      tx_page: "https://atomscan.com/genesisl1/transactions/${txHash}",
      account_page: "https://atomscan.com/genesisl1/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/genesisl1/images/l1.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/genesisl1/images/l1.svg"
  }]
};
var chain_default64 = info179;

// node_modules/chain-registry/esm/mainnet/genesisl1/ibc.js
var info180 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "genesisl1",
    client_id: "07-tendermint-1",
    connection_id: "connection-1"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-1983",
    connection_id: "connection-1539"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-253",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default52 = info180;

// node_modules/chain-registry/esm/mainnet/genesisl1/index.js
var assets64 = assets_default64;
var chain64 = chain_default64;
var ibc52 = ibc_default52;

// node_modules/chain-registry/esm/mainnet/gitopia/assets.js
var info181 = {
  $schema: "../assetlist.schema.json",
  chain_name: "gitopia",
  assets: [{
    description: "The native token of Gitopia",
    denom_units: [{
      denom: "ulore",
      exponent: 0
    }, {
      denom: "LORE",
      exponent: 6
    }],
    base: "ulore",
    name: "LORE",
    display: "LORE",
    symbol: "LORE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gitopia/images/lore.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gitopia/images/lore.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gitopia/images/lore.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gitopia/images/lore.svg"
    }, {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gitopia/images/gitopia.png"
    }],
    coingecko_id: "gitopia",
    socials: {
      website: "https://gitopia.com/",
      twitter: "https://twitter.com/gitopiaDAO"
    }
  }]
};
var assets_default65 = info181;

// node_modules/chain-registry/esm/mainnet/gitopia/chain.js
var info182 = {
  $schema: "../chain.schema.json",
  chain_name: "gitopia",
  status: "live",
  website: "https://gitopia.com/",
  network_type: "mainnet",
  pretty_name: "Gitopia",
  chain_id: "gitopia",
  bech32_prefix: "gitopia",
  daemon_name: "gitopiad",
  node_home: "$HOME/.gitopia",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ulore",
      fixed_min_gas_price: 1e-3,
      low_gas_price: 12e-4,
      average_gas_price: 16e-4,
      high_gas_price: 24e-4
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ulore"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "v0.46.13"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gitopia/images/gitopia.png"
  }],
  description: "Gitopia is the next-generation Code Collaboration Platform fuelled by a decentralized network and interactive token economy. It is designed to optimize the open-source software development process through collaboration, transparency, and incentivization.",
  apis: {
    rpc: [
      {
        address: "https://gitopia-rpc.polkachu.com:443",
        provider: "polkachu"
      },
      {
        address: "https://gitopia-rpc.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc.gitopia.nodestake.top:443",
        provider: "nodestake"
      },
      {
        address: "https://gitopia-rpc.staketab.org:443",
        provider: "Staketab"
      },
      {
        address: "https://gitopia-rpc.ibs.team:443",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://m-gitopia.rpc.utsa.tech",
        provider: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}"
      },
      {
        address: "http://gitopia.rpc.m.stavr.tech:51057",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://gitopia-rpc.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://rpc-gitopia.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://gitopia.rpc.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "https://gitopia-rpc.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://rpc.gitopia.silentvalidator.com",
        provider: "silent"
      },
      {
        address: "https://gitopia-rpc.ramuchi.tech",
        provider: "ramuchi.tech"
      },
      {
        address: "https://rpc-gitopia.mzonder.com",
        provider: "MZONDER"
      },
      {
        address: "https://gitopia.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://rpc.gitopia.sgtstake.com",
        provider: "SGTstake"
      },
      {
        address: "https://mainnet-gitopia-rpc.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://rpc.gitopia.roomit.xyz",
        provider: "RoomIT"
      },
      {
        address: "https://gitopia.rpc.moonbridge.team",
        provider: "Moonbridge"
      },
      {
        address: "https://gitopia-rpc.stakeangle.com",
        provider: "StakeAngle"
      },
      {
        address: "https://gitopia.rpc.m.anode.team",
        provider: "AlxVoy \u26A1 ANODE.TEAM"
      },
      {
        address: "https://gitopia.rpc.stakevillage.net",
        provider: "Stake Village"
      },
      {
        address: "https://gitopia-rpc.enigma-validator.com/",
        provider: "Enigma"
      },
      {
        address: "https://rpc.gitopia.tcnetwork.io/",
        provider: "TC Network"
      },
      {
        address: "https://gitopia.nodejumper.io:443",
        provider: "NODEJUMPER"
      },
      {
        address: "https://rpc.gitopia.stakeup.tech/",
        provider: "StakeUp"
      },
      {
        address: "https://gitopia-mainnet.rpc.l0vd.com:443",
        provider: "L0vd.com \u2764\uFE0F"
      },
      {
        address: "https://gitopia-rpc.tothemars.network:443",
        provider: "ToTheMars"
      },
      {
        address: "https://gitopia.declab.pro:26625",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "https://gitopia-rpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    rest: [
      {
        address: "https://gitopia-api.polkachu.com:443",
        provider: "polkachu"
      },
      {
        address: "https://gitopia-api.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://api.gitopia.nodestake.top:443",
        provider: "nodestake"
      },
      {
        address: "https://gitopia-rest.staketab.org",
        provider: "Staketab"
      },
      {
        address: "https://gitopia-mainnet-lcd.autostake.com:443",
        provider: "autostake"
      },
      {
        address: "https://gitopia-api.ibs.team:443",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://m-gitopia.api.utsa.tech",
        provider: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}"
      },
      {
        address: "https://gitopia.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://gitopia-api.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://lcd-gitopia.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://gitopia.api.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "https://gitopia-api.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://api.gitopia.silentvalidator.com",
        provider: "silent"
      },
      {
        address: "https://gitopia-api.ramuchi.tech",
        provider: "ramuchi.tech"
      },
      {
        address: "https://api-gitopia.mzonder.com",
        provider: "MZONDER"
      },
      {
        address: "https://gitopia.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://api.gitopia.sgtstake.com/",
        provider: "SGTstake"
      },
      {
        address: "https://mainnet-gitopia-api.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://api.gitopia.roomit.xyz",
        provider: "RoomIT"
      },
      {
        address: "https://gitopia.api.moonbridge.team",
        provider: "Moonbridge"
      },
      {
        address: "http://gitopia-rpc.stakeangle.com:41317",
        provider: "StakeAngle"
      },
      {
        address: "https://gitopia.api.m.anode.team",
        provider: "AlxVoy \u26A1 ANODE.TEAM"
      },
      {
        address: "https://gitopia.api.stakevillage.net",
        provider: "Stake Village"
      },
      {
        address: "https://gitopia-lcd.enigma-validator.com/",
        provider: "Enigma"
      },
      {
        address: "https://rest.gitopia.tcnetwork.io/",
        provider: "TC Network"
      },
      {
        address: "https://gitopia.nodejumper.io:1317",
        provider: "NODEJUMPER"
      },
      {
        address: "https://api.gitopia.stakeup.tech/",
        provider: "StakeUp"
      },
      {
        address: "https://gitopia-mainnet.api.l0vd.com:443",
        provider: "L0vd.com \u2764\uFE0F"
      },
      {
        address: "https://gitopia-api.tothemars.network:443",
        provider: "ToTheMars"
      },
      {
        address: "https://gitopia.declab.pro:443",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "https://gitopia-api.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    grpc: [
      {
        address: "grpc.gitopia.indonode.net:26090",
        provider: "indonode"
      },
      {
        address: "gitopia.grpc.nodersteam.com:9201",
        provider: "[NODERS]TEAM"
      },
      {
        address: "gitopia-grpc.polkachu.com:11390",
        provider: "polkachu"
      },
      {
        address: "services.staketab.com:9410",
        provider: "Staketab"
      },
      {
        address: "https://gitopia-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://grpc.gitopia.nodestake.top:443",
        provider: "nodestake"
      },
      {
        address: "https://grpc-gitopia.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "http://gitopia.grpc.m.stavr.tech:5123",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "gitopia-grpc.genznodes.dev:33090",
        provider: "genznodes"
      },
      {
        address: "https://grpc.gitopia.hexnodes.co:16090",
        provider: "Hexnodes"
      },
      {
        address: "https://gitopia.grpc.liveraven.net:443",
        provider: "LiveRaveN"
      },
      {
        address: "https://grpc.gitopia.indonode.net:26090",
        provider: "Indonode"
      },
      {
        address: "gitopia-grpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "grpc.gitopia.silentvalidator.com:443",
        provider: "silent"
      },
      {
        address: "https://gitopia-grpc.ramuchi.tech:16001",
        provider: "ramuchi.tech"
      },
      {
        address: "grpc-gitopia.mzonder.com:443",
        provider: "MZONDER"
      },
      {
        address: "gitopia.grpc.kjnodes.com:14190",
        provider: "kjnodes"
      },
      {
        address: "grpc.gitopia.roomit.xyz:8443",
        provider: "RoomIT"
      },
      {
        address: "https://gitopia.grpc.moonbridge.team",
        provider: "Moonbridge"
      },
      {
        address: "http://gitopia-rpc.stakeangle.com:41390",
        provider: "StakeAngle"
      },
      {
        address: "https://gitopia.grpc.m.anode.team",
        provider: "AlxVoy \u26A1 ANODE.TEAM"
      },
      {
        address: "https://grpc.gitopia.sbgid.com",
        provider: "kokos"
      },
      {
        address: "mainnet-gitopia-grpc.konsortech.xyz:38090",
        provider: "KonsorTech"
      },
      {
        address: "gitopia.grpc.stakevillage.net:14190",
        provider: "Stake Village"
      },
      {
        address: "gitopia.nodejumper.io:9090",
        provider: "NODEJUMPER"
      },
      {
        address: "grpc.gitopia.stakeup.tech:443",
        provider: "StakeUp"
      },
      {
        address: "gitopia-mainnet.grpc.l0vd.com:80",
        provider: "L0vd.com \u2764\uFE0F"
      },
      {
        address: "gitopia-grpc.tothemars.network:21190",
        provider: "ToTheMars"
      },
      {
        address: "https://gitopia.declab.pro:9017",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "gitopia-grpc.noders.services:19090",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://ping.pub/gitopia",
      tx_page: "https://ping.pub/gitopia/tx/${txHash}",
      account_page: "https://ping.pub/gitopia/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Gitopia-M",
      tx_page: "https://explorer.stavr.tech/Gitopia-M/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Gitopia-M/account/${accountAddress}"
    },
    {
      kind: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}",
      url: "https://exp.utsa.tech/gitopia",
      tx_page: "https://exp.utsa.tech/gitopia/tx/${txHash}",
      account_page: "https://exp.utsa.tech/gitopia/account/${accountAddress}"
    },
    {
      kind: "Nodeist",
      url: "https://exp.nodeist.net/gitopia",
      tx_page: "https://exp.nodeist.net/gitopia/tx/${txHash}",
      account_page: "https://exp.nodeist.net/gitopia/account/${accountAddress}"
    },
    {
      kind: "Stake-Take",
      url: "https://explorer.stake-take.com/gitopia",
      tx_page: "https://explorer.stake-take.com/gitopia/tx/${txHash}",
      account_page: "https://explorer.stake-take.com/gitopia/account/${accountAddress}"
    },
    {
      kind: "NODEXPLORER",
      url: "https://explorer.nodexcapital.com/gitopia",
      tx_page: "https://explorer.nodexcapital.com/gitopia/tx/${txHash}",
      account_page: "https://explorer.nodexcapital.com/gitopia/account/${accountAddress}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/gitopia",
      tx_page: "https://explorer.tcnetwork.io/gitopia/transaction/${txHash}",
      account_page: "https://explorer.tcnetwork.io/gitopia/account/${accountAddress}"
    },
    {
      kind: "NodeStake",
      url: "https://explorer.nodestake.top/gitopia",
      tx_page: "https://explorer.nodestake.top/gitopia/tx/${txHash}",
      account_page: "https://explorer.nodestake.top/gitopia/account/${accountAddress}"
    },
    {
      kind: "RoomIT",
      url: "https://explorer.tendermint.roomit.xyz/gitopia",
      tx_page: "https://explorer.tendermint.roomit.xyz/gitopia/transaction/${txHash}",
      account_page: "https://explorer.tendermint.roomit.xyz/gitopia/account/${accountAddress}"
    },
    {
      kind: "Moonbridge",
      url: "https://explorer.moonbridge.team/gitopia",
      tx_page: "https://explorer.moonbridge.team/gitopia/tx/${txHash}",
      account_page: "https://explorer.moonbridge.team/gitopia/account/${accountAddress}"
    },
    {
      kind: "KonsorTech",
      url: "https://explorer.konsortech.xyz/gitopia",
      tx_page: "https://explorer.konsortech.xyz/gitopia/tx/${txHash}",
      account_page: "https://explorer.konsortech.xyz/gitopia/account/${accountAddress}"
    },
    {
      kind: "Stake Village",
      url: "https://exp.stakevillage.net/gitopia",
      tx_page: "https://exp.stakevillage.net/gitopia/tx/${txHash}",
      account_page: "https://exp.stakevillage.net/gitopia/account/${accountAddress}"
    },
    {
      kind: "AlxVoy \u26A1 ANODE.TEAM",
      url: "https://main.anode.team/gitopia",
      tx_page: "https://main.anode.team/gitopia/tx/${txHash}",
      account_page: "https://main.anode.team/gitopia/account/${accountAddress}"
    },
    {
      kind: "L0vd.com \u2764\uFE0F",
      url: "https://chain-services.l0vd.com/mainnets/gitopia",
      tx_page: "https://chain-services.l0vd.com/mainnets/gitopia/tx/${txHash}",
      account_page: "https://chain-services.l0vd.com/mainnets/gitopia/account/${accountAddress}"
    },
    {
      kind: "ToTheMars",
      url: "https://explorer.tothemars.network/gitopia",
      tx_page: "https://explorer.tothemars.network/gitopia/tx/${txHash}",
      account_page: "https://explorer.tothemars.network/gitopia/account/${accountAddress}"
    },
    {
      kind: "Decloud Nodes Lab",
      url: "https://explorer.declab.pro/Gitopia",
      tx_page: "https://explorer.declab.pro/Gitopia/tx/${txHash}",
      account_page: "https://explorer.declab.pro/Gitopia/account/${accountAddress}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/gitopia",
      tx_page: "https://mainnet.whispernode.com/gitopia/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/gitopia/account/${accountAddress}"
    }
  ],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gitopia/images/gitopia.png"
  }
};
var chain_default65 = info182;

// node_modules/chain-registry/esm/mainnet/gitopia/ibc.js
var info183 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "gitopia",
    client_id: "07-tendermint-0",
    connection_id: "connection-0"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2787",
    connection_id: "connection-2287"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-781",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default53 = info183;

// node_modules/chain-registry/esm/mainnet/gitopia/index.js
var assets65 = assets_default65;
var chain65 = chain_default65;
var ibc53 = ibc_default53;

// node_modules/chain-registry/esm/mainnet/govgen/assets.js
var info184 = {
  $schema: "../assetlist.schema.json",
  chain_name: "govgen",
  assets: [{
    description: "The native staking and governance token of GovGen",
    denom_units: [{
      denom: "ugovgen",
      exponent: 0
    }, {
      denom: "govgen",
      exponent: 6
    }],
    base: "ugovgen",
    name: "GovGen",
    display: "govgen",
    symbol: "GOVGEN",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/govgen/images/govgen.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/govgen/images/govgen.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/govgen/images/govgen.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/govgen/images/govgen.svg"
    }]
  }]
};
var assets_default66 = info184;

// node_modules/chain-registry/esm/mainnet/govgen/chain.js
var info185 = {
  $schema: "../chain.schema.json",
  chain_name: "govgen",
  chain_id: "govgen-1",
  website: "https://govgen.io/",
  pretty_name: "GovGen",
  status: "live",
  network_type: "mainnet",
  bech32_prefix: "govgen",
  daemon_name: "govgend",
  node_home: "$HOME/.govgen",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ugovgen",
      fixed_min_gas_price: 1e-3,
      low_gas_price: 6e-3,
      average_gas_price: 6e-3,
      high_gas_price: 9e-3
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ugovgen"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.45.16"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/govgen/images/govgen.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/govgen/images/govgen.svg"
  },
  description: "GovGen is a governance-only chain separate from the proposed AtomOne hub chain. GovGen aims to gauge the sentiment of those who voted \u201CNO\u201D or \u201CNO_WITH_VETO\u201D on Cosmos Hub proposal 848 regarding the potential future of AtomOne. Through the native, non-transferable GOVGEN governance-only token, this community can come together to discuss, debate, submit proposals, and help shape the future of AtomOne in a fully decentralized community-driven initiative.",
  apis: {
    rpc: [
      {
        address: "https://rpc.govgen.io:443",
        provider: "AllInBits"
      },
      {
        address: "https://rpc-govgen.sg-1.online/",
        provider: "SG-1"
      },
      {
        address: "https://govgen.rpc.nodeshub.online:443",
        provider: "Nodes Hub"
      },
      {
        address: "https://govgen-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://rpc.govgen.posthuman.digital:443",
        provider: "posthuman"
      },
      {
        address: "https://rpc-govgen.kewrnode.com/",
        provider: "Kewr Node"
      }
    ],
    rest: [
      {
        address: "https://api.govgen.io/",
        provider: "AllInBits"
      },
      {
        address: "https://api-govgen.sg-1.online/",
        provider: "SG-1"
      },
      {
        address: "https://govgen.api.nodeshub.online/",
        provider: "Nodes Hub"
      },
      {
        address: "https://govgen-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://rest.govgen.posthuman.digital:443",
        provider: "posthuman"
      },
      {
        address: "https://rest-govgen.kewrnode.com/",
        provider: "Kewr Node"
      }
    ],
    grpc: [
      {
        address: "govgen-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://govgen.grpc.nodeshub.online:443",
        provider: "Nodes Hub"
      },
      {
        address: "https://grpc.govgen.posthuman.digital:443",
        provider: "posthuman"
      }
    ]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://explorer.govgen.io/",
      tx_page: "https://explorer.govgen.io/govgen/tx/${txHash}",
      account_page: "https://explorer.govgen.io/govgen/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://explorer.nodeshub.online/govgen",
      tx_page: "https://explorer.nodeshub.online/govgen/tx/${txHash}",
      account_page: "https://explorer.nodeshub.online/govgen/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://explorer.equinoxdao.xyz/govgen",
      tx_page: "https://explorer.equinoxdao.xyz/govgen/tx/${txHash}",
      account_page: "https://explorer.equinoxdao.xyz/govgen/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://test.explorer.ist/govgen",
      tx_page: "https://test.explorer.ist/govgen/tx/${txHash}",
      account_page: "https://test.explorer.ist/govgen/account/${accountAddress}"
    },
    {
      kind: "posthuman",
      url: "https://explorer.posthuman.digital/govgen",
      tx_page: "https://explorer.posthuman.digital/govgen/tx/${txHash}",
      account_page: "https://explorer.posthuman.digital/govgen/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/govgen/images/govgen.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/govgen/images/govgen.svg"
  }]
};
var chain_default66 = info185;

// node_modules/chain-registry/esm/mainnet/govgen/index.js
var assets66 = assets_default66;
var chain66 = chain_default66;

// node_modules/chain-registry/esm/mainnet/gravitybridge/assets.js
var info186 = {
  $schema: "../assetlist.schema.json",
  chain_name: "gravitybridge",
  assets: [
    {
      description: "The native token of Gravity Bridge",
      denom_units: [{
        denom: "ugraviton",
        exponent: 0
      }, {
        denom: "graviton",
        exponent: 6
      }],
      base: "ugraviton",
      name: "Graviton",
      display: "graviton",
      symbol: "GRAV",
      coingecko_id: "graviton",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gravitybridge/images/grav.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gravitybridge/images/grav.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gravitybridge/images/grav.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gravitybridge/images/grav.svg"
      }],
      socials: {
        website: "https://www.gravitybridge.net/",
        twitter: "https://twitter.com/gravity_bridge"
      }
    },
    {
      description: "pSTAKE is a liquid staking protocol unlocking the liquidity of staked assets.",
      denom_units: [{
        denom: "gravity0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006",
        exponent: 0
      }, {
        denom: "pstake",
        exponent: 18
      }],
      base: "gravity0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006",
      name: "pSTAKE Finance",
      display: "pstake",
      symbol: "PSTAKE",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "persistence",
          base_denom: "uxprt"
        },
        provider: "Persistence"
      }, {
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006"
        },
        provider: "Gravity Bridge"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/pstake.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/pstake.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/pstake.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/pstake.svg"
      }]
    },
    {
      description: "Gravity Bridge WETH",
      denom_units: [{
        denom: "gravity0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
        exponent: 0
      }, {
        denom: "gweth",
        exponent: 18
      }],
      base: "gravity0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
      name: "Wrapped Ethereum",
      display: "gweth",
      symbol: "WETH",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/weth.svg"
      },
      traces: [{
        type: "wrapped",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "wei"
        },
        provider: "Ethereum"
      }, {
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
        },
        provider: "Gravity Bridge"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/weth.svg"
      }]
    },
    {
      description: "Gravity Bridge USDC",
      denom_units: [{
        denom: "gravity0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
        exponent: 0
      }, {
        denom: "gusdc",
        exponent: 6
      }],
      base: "gravity0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
      name: "USD Coin",
      display: "gusdc",
      symbol: "USDC",
      coingecko_id: "gravity-bridge-usdc",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "forex",
          base_denom: "USD"
        },
        provider: "Circle"
      }, {
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
        },
        provider: "Gravity Bridge"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    },
    {
      description: "Gravity Bridge USDT",
      denom_units: [{
        denom: "gravity0xdAC17F958D2ee523a2206206994597C13D831ec7",
        exponent: 0
      }, {
        denom: "gusdt",
        exponent: 6
      }],
      base: "gravity0xdAC17F958D2ee523a2206206994597C13D831ec7",
      name: "Tether USD",
      display: "gusdt",
      symbol: "USDT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      },
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "forex",
          base_denom: "USD"
        },
        provider: "Tether"
      }, {
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7"
        },
        provider: "Gravity Bridge"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }]
    },
    {
      description: "Gravity Bridge WBTC",
      denom_units: [{
        denom: "gravity0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",
        exponent: 0
      }, {
        denom: "gwbtc",
        exponent: 8
      }],
      base: "gravity0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",
      name: "Wrapped Bitcoin",
      display: "gwbtc",
      symbol: "WBTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.svg"
      },
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "bitcoin",
          base_denom: "sat"
        },
        provider: "BitGo, Kyber, and Ren"
      }, {
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599"
        },
        provider: "Gravity Bridge"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.svg"
      }]
    },
    {
      description: "Gravity Bridge DAI",
      denom_units: [{
        denom: "gravity0x6B175474E89094C44Da98b954EedeAC495271d0F",
        exponent: 0
      }, {
        denom: "gdai",
        exponent: 18
      }],
      base: "gravity0x6B175474E89094C44Da98b954EedeAC495271d0F",
      name: "Dai Stablecoin",
      display: "gdai",
      symbol: "DAI",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/dai.svg"
      },
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "forex",
          base_denom: "USD"
        },
        provider: "MakerDAO"
      }, {
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x6b175474e89094c44da98b954eedeac495271d0f"
        },
        provider: "Gravity Bridge"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x6b175474e89094c44da98b954eedeac495271d0f"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/dai.svg"
      }]
    },
    {
      description: "Gravity Bridge sDAI",
      denom_units: [{
        denom: "gravity0x83F20F44975D03b1b09e64809B757c47f942BEeA",
        exponent: 0
      }, {
        denom: "gsdai",
        exponent: 18
      }],
      base: "gravity0x83F20F44975D03b1b09e64809B757c47f942BEeA",
      name: "Savings Dai",
      display: "gsdai",
      symbol: "sDAI",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sdai.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sdai.svg"
      },
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x83F20F44975D03b1b09e64809B757c47f942BEeA"
        },
        provider: "Gravity Bridge"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x83F20F44975D03b1b09e64809B757c47f942BEeA"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sdai.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sdai.svg"
      }]
    },
    {
      description: "Gravity Bridge OCC",
      denom_units: [{
        denom: "gravity0x2F109021aFe75B949429fe30523Ee7C0D5B27207",
        exponent: 0
      }, {
        denom: "gocc",
        exponent: 18
      }],
      base: "gravity0x2F109021aFe75B949429fe30523Ee7C0D5B27207",
      name: "OccamFi",
      display: "gocc",
      symbol: "OCC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/occamfi.png"
      },
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x2F109021aFe75B949429fe30523Ee7C0D5B27207"
        },
        provider: "Gravity Bridge"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x2F109021aFe75B949429fe30523Ee7C0D5B27207"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/occamfi.png"
      }]
    },
    {
      description: "The PAGE token is used for actions in the PageDAO NFT literary ecosystem and for DAO governance.",
      denom_units: [{
        denom: "gravity0x60e683C6514Edd5F758A55b6f393BeBBAfaA8d5e",
        exponent: 0
      }, {
        denom: "page",
        exponent: 8
      }],
      base: "gravity0x60e683C6514Edd5F758A55b6f393BeBBAfaA8d5e",
      name: "Page",
      display: "page",
      symbol: "PAGE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/page.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/page.svg"
      },
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x60e683C6514Edd5F758A55b6f393BeBBAfaA8d5e"
        },
        provider: "Gravity Bridge"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x60e683C6514Edd5F758A55b6f393BeBBAfaA8d5e"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/page.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/page.svg"
      }]
    },
    {
      description: "Gravity Bridge Paxos Gold",
      denom_units: [{
        denom: "gravity0x45804880De22913dAFE09f4980848ECE6EcbAf78",
        exponent: 0
      }, {
        denom: "gpaxg",
        exponent: 18
      }],
      base: "gravity0x45804880De22913dAFE09f4980848ECE6EcbAf78",
      name: "Paxos Gold",
      display: "gpaxg",
      symbol: "PAXG",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/paxg.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/paxg.svg"
      },
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x45804880De22913dAFE09f4980848ECE6EcbAf78"
        },
        provider: "Gravity Bridge"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x45804880De22913dAFE09f4980848ECE6EcbAf78"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/paxg.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/paxg.svg"
      }]
    }
  ]
};
var assets_default67 = info186;

// node_modules/chain-registry/esm/mainnet/gravitybridge/chain.js
var info187 = {
  $schema: "../chain.schema.json",
  chain_name: "gravitybridge",
  status: "live",
  network_type: "mainnet",
  website: "https://www.gravitybridge.net/",
  pretty_name: "Gravity Bridge",
  chain_id: "gravity-bridge-3",
  bech32_prefix: "gravity",
  daemon_name: "gravity",
  node_home: "$HOME/.gravity",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [
      {
        denom: "ugraviton",
        fixed_min_gas_price: 0,
        low_gas_price: 0,
        average_gas_price: 0,
        high_gas_price: 0.035
      },
      {
        denom: "gravity0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
        low_gas_price: 2e-4,
        average_gas_price: 5e-4,
        high_gas_price: 8e-4
      },
      {
        denom: "gravity0xdAC17F958D2ee523a2206206994597C13D831ec7",
        low_gas_price: 2e-4,
        average_gas_price: 5e-4,
        high_gas_price: 8e-4
      }
    ]
  },
  staking: {
    staking_tokens: [{
      denom: "ugraviton"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gravitybridge/images/grav.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gravitybridge/images/grav.svg"
  },
  description: "An open, decentralized bridge that unlocks the power of interoperability & liquidity between blockchain ecosystems.",
  apis: {
    rpc: [
      {
        address: "https://gravitychain.io:26657",
        provider: "althea"
      },
      {
        address: "http://gravity-bridge-1-08.nodes.amhost.net:26657",
        provider: "amhost"
      },
      {
        address: "https://gravity-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://rpc-gravitybridge-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://gravitybridge-rpc.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc.gravity.bh.rocks/",
        provider: "BlockHunters \u{1F3AF}"
      },
      {
        address: "https://gravity-rpc.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://gravity-rpc.ramuchi.tech",
        provider: "ramuchi.tech"
      },
      {
        address: "https://rpc-gravity-bridge-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://gravity-rpc.staketab.org:443",
        provider: "Staketab"
      },
      {
        address: "https://gravity-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://rpc.g-bridge.bronbro.io:443",
        provider: "Bro_n_Bro"
      }
    ],
    rest: [
      {
        address: "https://gravitychain.io:1317",
        provider: "althea"
      },
      {
        address: "https://api-gravitybridge-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://gravity-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://gravitybridge-api.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://api.gravity.bh.rocks/",
        provider: "BlockHunters \u{1F3AF}"
      },
      {
        address: "https://gravity-api.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://gravity-api.ramuchi.tech",
        provider: "ramuchi.tech"
      },
      {
        address: "https://api-gravity-bridge-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://gravity-rest.staketab.org",
        provider: "Staketab"
      },
      {
        address: "https://gravity-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://lcd.g-bridge.bronbro.io:443",
        provider: "Bro_n_Bro"
      }
    ],
    grpc: [
      {
        address: "gravity-bridge-1-08.nodes.amhost.net:9090",
        provider: "amhost"
      },
      {
        address: "grpc-gravitybridge-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "gravity-grpc.polkachu.com:14290",
        provider: "Polkachu"
      },
      {
        address: "gravitybridge-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://gravity-grpc.ramuchi.tech:10090",
        provider: "ramuchi.tech"
      },
      {
        address: "grpc-gravity-bridge-01.stakeflow.io:1302",
        provider: "Stakeflow"
      },
      {
        address: "services.staketab.com:9017",
        provider: "Staketab"
      },
      {
        address: "gravity-grpc.w3coins.io:14290",
        provider: "w3coins"
      },
      {
        address: "https://grpc.g-bridge.bronbro.io:443",
        provider: "Bro_n_Bro"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/gravitybridge",
      tx_page: "https://ezstaking.app/gravitybridge/txs/${txHash}",
      account_page: "https://ezstaking.app/gravitybridge/account/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/gravity-bridge",
      tx_page: "https://www.mintscan.io/gravity-bridge/transactions/${txHash}",
      account_page: "https://www.mintscan.io/gravity-bridge/accounts/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/gravity-bridge",
      tx_page: "https://ping.pub/gravity-bridge/tx/${txHash}"
    },
    {
      kind: "explorers.guru",
      url: "https://gravity.explorers.guru",
      tx_page: "https://gravity.explorers.guru/transaction/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/gravity-bridge",
      tx_page: "https://atomscan.com/gravity-bridge/transactions/${txHash}",
      account_page: "https://atomscan.com/gravity-bridge/accounts/${accountAddress}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/gravitybridge",
      tx_page: "https://explorer.tcnetwork.io/gravitybridge/transaction/${txHash}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/gravity-bridge",
      account_page: "https://stakeflow.io/gravity-bridge/accounts/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/GravityBridge",
      tx_page: "https://explorer.stavr.tech/GravityBridge/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/GravityBridge/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gravitybridge/images/grav.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gravitybridge/images/grav.svg"
  }]
};
var chain_default67 = info187;

// node_modules/chain-registry/esm/mainnet/gravitybridge/ibc.js
var info188 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-7",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-201",
      connection_id: "connection-175"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-106",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-4",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-173",
      connection_id: "connection-154"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-91",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-40",
      connection_id: "connection-43"
    },
    chain_2: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-424",
      connection_id: "connection-406"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-38",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-145",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cheqd",
      client_id: "07-tendermint-13",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-64",
      connection_id: "connection-74"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-43",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-8",
      connection_id: "connection-8"
    },
    chain_2: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-421",
      connection_id: "connection-399"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-142",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-4",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-100",
      connection_id: "connection-102"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-62",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-17",
      connection_id: "connection-11"
    },
    chain_2: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-108",
      connection_id: "connection-106"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-65",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-192",
      connection_id: "connection-163"
    },
    chain_2: {
      chain_name: "haqq",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-100",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-225",
      connection_id: "connection-189"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-69",
      connection_id: "connection-45"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-107",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-50",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-33",
      connection_id: "connection-44"
    },
    chain_2: {
      chain_name: "nyx",
      client_id: "07-tendermint-1",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-13",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1737",
      connection_id: "connection-1340"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-144",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-39",
      connection_id: "connection-50"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-51",
      connection_id: "connection-49"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-24",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-38",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-195",
      connection_id: "connection-165"
    },
    chain_2: {
      chain_name: "planq",
      client_id: "07-tendermint-1",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-102",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-140",
      connection_id: "connection-139"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-40",
      connection_id: "connection-23"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-79",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-150",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-148",
        port_id: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-190",
      connection_id: "connection-161"
    },
    chain_2: {
      chain_name: "unification",
      client_id: "07-tendermint-4",
      connection_id: "connection-4"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-98",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default54 = info188;

// node_modules/chain-registry/esm/mainnet/gravitybridge/index.js
var assets67 = assets_default67;
var chain67 = chain_default67;
var ibc54 = ibc_default54;

// node_modules/chain-registry/esm/mainnet/haqq/assets.js
var info189 = {
  $schema: "../assetlist.schema.json",
  chain_name: "haqq",
  assets: [{
    description: "The native EVM, governance and staking token of the Haqq Network",
    denom_units: [{
      denom: "aISLM",
      exponent: 0
    }, {
      denom: "ISLM",
      exponent: 18
    }],
    base: "aISLM",
    name: "Islamic Coin",
    display: "ISLM",
    symbol: "ISLM",
    coingecko_id: "islamic-coin",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/haqq/images/islm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/haqq/images/islm.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/haqq/images/islm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/haqq/images/islm.svg"
    }]
  }]
};
var assets_default68 = info189;

// node_modules/chain-registry/esm/mainnet/haqq/chain.js
var info190 = {
  $schema: "../chain.schema.json",
  chain_name: "haqq",
  status: "live",
  network_type: "mainnet",
  website: "https://haqq.network/",
  pretty_name: "Haqq Network",
  chain_id: "haqq_11235-1",
  bech32_prefix: "haqq",
  node_home: "$HOME/.haqqd",
  daemon_name: "haqqd",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "aISLM",
      fixed_min_gas_price: 25e7,
      low_gas_price: 2e10,
      average_gas_price: 25e9,
      high_gas_price: 4e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "aISLM"
    }]
  },
  codebase: {
    cosmos_sdk_version: "evmos/cosmos-sdk v0.47.8-evmos"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/haqq/images/haqq.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/haqq/images/haqq.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.tm.haqq.network",
        provider: "Haqq"
      },
      {
        address: "https://rpc.haqq.sh",
        provider: "kioqq"
      },
      {
        address: "https://rpc.haqq.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://haqq-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://haqq-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc-haqq.sr20de.xyz:443",
        provider: "Sr20de"
      },
      {
        address: "https://haqq-rpc.palamar.io",
        provider: "Palamar"
      },
      {
        address: "https://haqq-rpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    rest: [
      {
        address: "https://rest.cosmos.haqq.network",
        provider: "Haqq"
      },
      {
        address: "https://sdk.haqq.sh",
        provider: "kioqq"
      },
      {
        address: "https://api.haqq.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://haqq-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://haqq-api.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://mainnet-haqq-api.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://api-haqq.sr20de.xyz",
        provider: "Sr20de"
      },
      {
        address: "https://haqq-api.palamar.io",
        provider: "Palamar"
      },
      {
        address: "https://haqq-api.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    grpc: [
      {
        address: "https://grpc.cosmos.haqq.network",
        provider: "Haqq"
      },
      {
        address: "grpc.haqq.sh:443",
        provider: "kioqq"
      },
      {
        address: "haqq.grpc.nodersteam.com:9191",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://grpc.haqq.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "haqq-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://haqq-grpc.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "mainnet-haqq-grpc.konsortech.xyz:11090",
        provider: "KonsorTech"
      },
      {
        address: "https://grpc-haqq.sr20de.xyz",
        provider: "Sr20de"
      },
      {
        address: "haqq-grpc.palamar.io:443",
        provider: "Palamar"
      },
      {
        address: "haqq-grpc.noders.services:14090",
        provider: "[NODERS]TEAM"
      }
    ],
    "evm-http-jsonrpc": [
      {
        address: "https://rpc.eth.haqq.network",
        provider: "Haqq"
      },
      {
        address: "https://evm.haqq.sh",
        provider: "kioqq"
      },
      {
        address: "https://jsonrpc.haqq.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://haqq-evm.publicnode.com",
        provider: "Allnodes.com \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://haqq-jsonrpc.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://mainnet-haqq-evm.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://evm-haqq.sr20de.xyz",
        provider: "Sr20de"
      },
      {
        address: "https://haqq-jsonrpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "blockscout",
      url: "https://explorer.haqq.network",
      tx_page: "https://explorer.haqq.network/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/haqq",
      tx_page: "https://ping.pub/haqq/tx/${txHash}"
    },
    {
      kind: "explorers.guru",
      url: "https://haqq.explorers.guru",
      tx_page: "https://haqq.explorers.guru/transaction/${txHash}"
    },
    {
      kind: "NodeStake Explorer",
      url: "https://explorer.nodestake.top/haqq",
      tx_page: "https://explorer.nodestake.top/haqq/tx/${txHash}"
    },
    {
      kind: "KonsorTech Explorer",
      url: "https://explorer.konsortech.xyz/haqq",
      tx_page: "https://explorer.konsortech.xyz/haqq/tx/${txHash}"
    },
    {
      kind: "Palamar Explorer",
      url: "https://explorer.palamar.io/haqq",
      tx_page: "https://explorer.palamar.io/haqq/tx/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/haqq/images/haqq.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/haqq/images/haqq.svg"
  }]
};
var chain_default68 = info190;

// node_modules/chain-registry/esm/mainnet/haqq/ibc.js
var info191 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-162",
      connection_id: "connection-148"
    },
    chain_2: {
      chain_name: "haqq",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-113",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1153",
      connection_id: "connection-874"
    },
    chain_2: {
      chain_name: "haqq",
      client_id: "07-tendermint-2",
      connection_id: "connection-3"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-632",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-192",
      connection_id: "connection-163"
    },
    chain_2: {
      chain_name: "haqq",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-100",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "haqq",
      client_id: "07-tendermint-5",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "kava",
      client_id: "07-tendermint-149",
      connection_id: "connection-193"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-135",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "haqq",
      client_id: "07-tendermint-4",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-58",
      connection_id: "connection-56"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-32",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "haqq",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2871",
      connection_id: "connection-2388"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1575",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "haqq",
      client_id: "07-tendermint-6",
      connection_id: "connection-8"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-143",
      connection_id: "connection-143"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-240",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default55 = info191;

// node_modules/chain-registry/esm/mainnet/haqq/index.js
var assets68 = assets_default68;
var chain68 = chain_default68;
var ibc55 = ibc_default55;

// node_modules/chain-registry/esm/mainnet/heli/assets.js
var info192 = {
  $schema: "../assetlist.schema.json",
  chain_name: "heli",
  assets: [{
    description: "The native token of HeliChain",
    denom_units: [{
      denom: "uheli",
      exponent: 0
    }, {
      denom: "heli",
      exponent: 6
    }],
    base: "uheli",
    name: "Heli",
    display: "heli",
    symbol: "HELI",
    coingecko_id: "helichain",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/heli/images/heli.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/heli/images/heli.svg"
    }]
  }]
};
var assets_default69 = info192;

// node_modules/chain-registry/esm/mainnet/heli/chain.js
var info193 = {
  $schema: "../chain.schema.json",
  chain_name: "heli",
  status: "live",
  network_type: "mainnet",
  website: "https://helichain.com/",
  pretty_name: "HeliChain",
  chain_id: "helichain",
  bech32_prefix: "heli",
  daemon_name: "helichaind",
  node_home: "$HOME/.helichain",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uheli",
      fixed_min_gas_price: 1e-3,
      low_gas_price: 1e-3,
      average_gas_price: 2e-3,
      high_gas_price: 25e-4
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uheli"
    }],
    lock_duration: {
      time: "1209600s"
    }
  },
  codebase: {
    cosmos_sdk_version: "0.47.4",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.41.0"
  },
  apis: {
    rpc: [{
      address: "https://rpc.helichain.com/",
      provider: "HeliChain"
    }],
    rest: [{
      address: "https://lcd.helichain.com/",
      provider: "HeliChain"
    }]
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://explorer.helichain.com/Helichain",
    tx_page: "https://explorer.helichain.com/Helichain/tx/${txHash}",
    account_page: "https://explorer.helichain.com/Helichain/account/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/heli/images/heli.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/heli/images/heli.svg"
  }]
};
var chain_default69 = info193;

// node_modules/chain-registry/esm/mainnet/heli/index.js
var assets69 = assets_default69;
var chain69 = chain_default69;

// node_modules/chain-registry/esm/mainnet/highbury/assets.js
var info194 = {
  $schema: "../assetlist.schema.json",
  chain_name: "highbury",
  assets: [
    {
      description: "The native staking and governance token of the Blackfury ecosystem",
      denom_units: [{
        denom: "ufury",
        exponent: 0
      }, {
        denom: "fury",
        exponent: 6
      }],
      base: "ufury",
      name: "Fury",
      display: "fury",
      symbol: "FURY",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/highbury/images/fury.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/highbury/images/fury.svg"
      },
      coingecko_id: "fanfury",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/highbury/images/fury.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/highbury/images/fury.svg"
      }]
    },
    {
      description: "Governance token of Jinx Wallet and Fury Lend Protocol",
      denom_units: [{
        denom: "jinx",
        exponent: 0
      }, {
        denom: "JINX",
        exponent: 6
      }],
      base: "jinx",
      name: "Jinx",
      display: "JINX",
      symbol: "JINX",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/highbury/images/jinx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/highbury/images/jinx.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/highbury/images/jinx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/highbury/images/jinx.svg"
      }]
    },
    {
      description: "Governance token of Fury Swap Protocol",
      denom_units: [{
        denom: "jinxy",
        exponent: 0
      }, {
        denom: "JINXY",
        exponent: 6
      }],
      base: "jinxy",
      name: "Jinxy",
      display: "JINXY",
      symbol: "JINXy",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/highbury/images/jinxy.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/highbury/images/jinxy.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/highbury/images/jinxy.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/highbury/images/jinxy.svg"
      }]
    }
  ]
};
var assets_default70 = info194;

// node_modules/chain-registry/esm/mainnet/highbury/chain.js
var info195 = {
  $schema: "../chain.schema.json",
  chain_name: "highbury",
  status: "live",
  network_type: "mainnet",
  website: "https://www.fury.black/",
  pretty_name: "Highbury",
  chain_id: "highbury_710-1",
  bech32_prefix: "fury",
  daemon_name: "fury",
  node_home: "$HOME/.fury",
  slip44: 459,
  alternative_slip44s: [710],
  fees: {
    fee_tokens: [{
      denom: "ufury",
      low_gas_price: 0.05,
      average_gas_price: 0.1,
      high_gas_price: 0.25
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ufury"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/highbury/images/fury.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/highbury/images/fury.svg"
  },
  apis: {
    rpc: [{
      address: "https://gridiron.furya.io",
      provider: "fanfury"
    }],
    rest: [{
      address: "https://api-mainnet.furya.io/",
      provider: "fanfury"
    }],
    grpc: [{
      address: "api-mainnet.furya.io:9090",
      provider: "fanfury"
    }],
    "evm-http-jsonrpc": [{
      address: "https://rest.furya.io/",
      provider: "fanfury"
    }]
  },
  explorers: [{
    kind: "pingpub",
    url: "https://explorer.furya.wtf/",
    tx_page: "https://www.explorer.furya.wtf//txs/${txHash}",
    account_page: "https://explorer.furya.wtf//account/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/highbury/images/fury.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/highbury/images/fury.svg"
  }]
};
var chain_default70 = info195;

// node_modules/chain-registry/esm/mainnet/highbury/index.js
var assets70 = assets_default70;
var chain70 = chain_default70;

// node_modules/chain-registry/esm/mainnet/humans/assets.js
var info196 = {
  $schema: "../assetlist.schema.json",
  chain_name: "humans",
  assets: [{
    description: "The native staking and governance token of Humans.ai.",
    denom_units: [{
      denom: "aheart",
      exponent: 0
    }, {
      denom: "heart",
      exponent: 18
    }],
    base: "aheart",
    name: "HEART",
    display: "heart",
    symbol: "HEART",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/humans/images/heart-dark-mode.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/humans/images/heart-dark-mode.svg"
    },
    coingecko_id: "humans-ai",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/humans/images/heart-dark-mode.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/humans/images/heart-dark-mode.svg",
      theme: {
        dark_mode: true
      }
    }],
    socials: {
      website: "https://humans.ai/",
      twitter: "https://twitter.com/humansdotai"
    }
  }]
};
var assets_default71 = info196;

// node_modules/chain-registry/esm/mainnet/humans/chain.js
var info197 = {
  $schema: "../chain.schema.json",
  chain_name: "humans",
  status: "live",
  network_type: "mainnet",
  website: "https://humans.ai/",
  pretty_name: "Humans.ai",
  chain_id: "humans_1089-1",
  bech32_prefix: "human",
  node_home: "$HOME/.humansd",
  daemon_name: "humansd",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "aheart",
      fixed_min_gas_price: 25e7,
      low_gas_price: 8e10,
      average_gas_price: 1e11,
      high_gas_price: 16e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "aheart"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.46.11"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/humans/images/heart-dark-mode.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/humans/images/heart-dark-mode.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.humans.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://humans.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://humans.rpc.nodeshub.online",
        provider: "NodesHub"
      },
      {
        address: "https://humans-mainnet-rpc.itrocket.net",
        provider: "itrocket"
      },
      {
        address: "https://humans-rpc.staketab.org:443",
        provider: "Staketab"
      },
      {
        address: "https://rpc-humansai.thenop.io:443",
        provider: "TheNOP.io"
      },
      {
        address: "https://humans-rpc.stakeangle.com/",
        provider: "StakeAngle"
      },
      {
        address: "https://humans-rpc.anyvalid.com:26627",
        provider: "AnyValid"
      },
      {
        address: "https://mainnet-humans-rpc.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "http://135.181.75.235:13657",
        provider: "PPNV Service"
      },
      {
        address: "https://rpc.humans-mainnet.stake-take.com/",
        provider: "Stake-Take"
      },
      {
        address: "https://rpc.humans.posthuman.digital",
        provider: "posthuman"
      },
      {
        address: "https://humans-rpc.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://humans-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      }
    ],
    rest: [
      {
        address: "https://api.humans.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://humans.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://humans.api.nodeshub.online",
        provider: "NodesHub"
      },
      {
        address: "https://humans-mainnet-api.itrocket.net",
        provider: "itrocket"
      },
      {
        address: "https://humans-rest.staketab.org",
        provider: "Staketab"
      },
      {
        address: "https://api-humansai.thenop.io:443",
        provider: "TheNOP.io"
      },
      {
        address: "http://humans-rpc.stakeangle.com:41417",
        provider: "StakeAngle"
      },
      {
        address: "https://mainnet-humans-api.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "http://135.181.75.235:13317",
        provider: "PPNV Service"
      },
      {
        address: "https://api.humans-mainnet.stake-take.com/",
        provider: "Stake-Take"
      },
      {
        address: "https://rest.humans.posthuman.digital",
        provider: "posthuman"
      },
      {
        address: "https://humans-api.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://humans-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      }
    ],
    grpc: [
      {
        address: "https://grpc.humans.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "https://humans.grpc.kjnodes.com/",
        provider: "kjnodes"
      },
      {
        address: "https://grpc-humans.nodeist.net/",
        provider: "Nodeist"
      },
      {
        address: "humans-mainnet-grpc.itrocket.net:17090",
        provider: "itrocket"
      },
      {
        address: "http://humans-rpc.stakeangle.com:41490/",
        provider: "Staketab"
      },
      {
        address: "humans.grpc.nodersteam.com:9221",
        provider: "[NODERS]TEAM"
      },
      {
        address: "http://135.181.75.235:13090",
        provider: "PPNV Service"
      },
      {
        address: "https://grpc-humans.cosmos-spaces.cloud:1190",
        provider: "StakePool"
      },
      {
        address: "humans-grpc.noders.services:21090",
        provider: "[NODERS]TEAM"
      },
      {
        address: "humans-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      }
    ],
    "evm-http-jsonrpc": [
      {
        address: "https://jsonrpc.humans.nodestake.top/",
        provider: "NodeStake"
      },
      {
        address: "https://humans-mainnet-evm.itrocket.net",
        provider: "itrocket"
      },
      {
        address: "https://humans-evm-rpc.staketab.org:443",
        provider: "Staketab"
      },
      {
        address: "https://evm.humans.stakepool.dev.br",
        provider: "Stakepool"
      },
      {
        address: "https://mainnet-humans-evm.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://evm.humans.posthuman.digital",
        provider: "posthuman"
      },
      {
        address: "https://humans-jsonrpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "mintscan",
      url: "https://mintscan.io/humans",
      tx_page: "https://www.mintscan.io/humans/tx/${txHash}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/humans",
      tx_page: "https://ezstaking.app/humans/txs/${txHash}",
      account_page: "https://ezstaking.app/humans/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/humans",
      tx_page: "https://ping.pub/humans/tx/${txHash}"
    },
    {
      kind: "explorers.guru",
      url: "https://humans.explorers.guru",
      tx_page: "https://humans.explorers.guru/transaction/${txHash}"
    },
    {
      kind: "exploreme",
      url: "https://humansai.exploreme.pro/",
      tx_page: "https://humans.exploreme.pro/transaction/${txHash}"
    },
    {
      kind: "itrocket",
      url: "https://mainnet.itrocket.net/humans/staking",
      tx_page: "https://mainnet.itrocket.net/humans/tx/${txHash}",
      account_page: "https://mainnet.itrocket.net/humans/account/${accountAddress}"
    },
    {
      kind: "posthuman",
      url: "https://explorer.posthuman.digital/humans",
      tx_page: "https://explorer.posthuman.digital/humans/tx/${txHash}",
      account_page: "https://explorer.posthuman.digital/humans/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/humans/images/heart-dark-mode.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/humans/images/heart-dark-mode.svg"
  }]
};
var chain_default71 = info197;

// node_modules/chain-registry/esm/mainnet/humans/ibc.js
var info198 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "humans",
    client_id: "07-tendermint-13",
    connection_id: "connection-4"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-3091",
    connection_id: "connection-2570"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-4",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-20082",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default56 = info198;

// node_modules/chain-registry/esm/mainnet/humans/index.js
var assets71 = assets_default71;
var chain71 = chain_default71;
var ibc56 = ibc_default56;

// node_modules/chain-registry/esm/mainnet/idep/assets.js
var info199 = {
  $schema: "../assetlist.schema.json",
  chain_name: "idep",
  assets: [{
    description: "The native token of IDEP chain",
    denom_units: [{
      denom: "IDEP",
      exponent: 6,
      aliases: []
    }, {
      denom: "idep",
      exponent: 0,
      aliases: []
    }],
    base: "idep",
    name: "IDEP",
    display: "IDEP",
    symbol: "IDEP",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/idep/images/idep.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/idep/images/idep.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/idep/images/idep.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/idep/images/idep.svg"
    }]
  }]
};
var assets_default72 = info199;

// node_modules/chain-registry/esm/mainnet/idep/chain.js
var info200 = {
  $schema: "../chain.schema.json",
  chain_name: "idep",
  status: "live",
  network_type: "mainnet",
  website: "https://www.idep.network/",
  pretty_name: "IDEP",
  chain_id: "Antora",
  bech32_prefix: "idep",
  daemon_name: "idep",
  node_home: "$HOME/.ion",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "idep",
      fixed_min_gas_price: 0
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/idep/images/idep.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/idep/images/idep.svg"
  },
  apis: {
    rpc: [],
    rest: [],
    grpc: [{
      address: "idep-grpc.lavenderfive.com:443",
      provider: "Lavender.Five Nodes \u{1F41D}"
    }]
  },
  explorers: [
    {
      kind: "chadscan",
      url: "https://chadscan.com",
      tx_page: "https://chadscan.com/transactions/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/idep",
      tx_page: "https://atomscan.com/idep/transactions/${txHash}",
      account_page: "https://atomscan.com/idep/accounts/${accountAddress}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/idep",
      tx_page: "https://explorer.tcnetwork.io/idep/transaction/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/idep/images/idep.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/idep/images/idep.svg"
  }]
};
var chain_default72 = info200;

// node_modules/chain-registry/esm/mainnet/idep/index.js
var assets72 = assets_default72;
var chain72 = chain_default72;

// node_modules/chain-registry/esm/mainnet/impacthub/assets.js
var info201 = {
  $schema: "../assetlist.schema.json",
  chain_name: "impacthub",
  assets: [{
    description: "The native token of IXO Chain",
    denom_units: [{
      denom: "uixo",
      exponent: 0
    }, {
      denom: "ixo",
      exponent: 6
    }],
    base: "uixo",
    name: "IXO",
    display: "ixo",
    symbol: "IXO",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.svg"
    },
    coingecko_id: "ixo",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.svg"
    }]
  }]
};
var assets_default73 = info201;

// node_modules/chain-registry/esm/mainnet/impacthub/chain.js
var info202 = {
  $schema: "../chain.schema.json",
  chain_name: "impacthub",
  status: "live",
  network_type: "mainnet",
  website: "https://www.ixo.world/",
  pretty_name: "Impacts Hub",
  chain_id: "ixo-5",
  bech32_prefix: "ixo",
  daemon_name: "ixod",
  node_home: "$HOME/.ixod",
  key_algos: ["secp256k1", "ed25519"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uixo",
      fixed_min_gas_price: 0.025,
      low_gas_price: 0.025,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uixo"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.45.16"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://proxies.sifchain.finance/api/impacthub-3/rpc",
        provider: "sifchain"
      },
      {
        address: "https://impacthub.ixo.world/rpc/",
        provider: "ixoworld"
      },
      {
        address: "https://ixo.rpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc-ixo-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://impacthub-rpc.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://ixo-rpc.ibs.team",
        provider: "Inter Blockchain Services"
      }
    ],
    rest: [
      {
        address: "https://proxies.sifchain.finance/api/impacthub-3/rest",
        provider: "sifchain"
      },
      {
        address: "https://impacthub.ixo.world/rest/",
        provider: "ixoworld"
      },
      {
        address: "https://ixo.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api-ixo-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://impacthub-api.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://ixo-api.ibs.team",
        provider: "Inter Blockchain Services"
      }
    ],
    grpc: [
      {
        address: "grpc-ixo-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "ixo.grpc.m.stavr.tech:2010",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "impacthub-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/ixo",
      tx_page: "https://ezstaking.app/ixo/txs/${txHash}",
      account_page: "https://ezstaking.app/ixo/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/IXO-Mainnet",
      tx_page: "https://explorer.stavr.tech/IXO-Mainnet/txs/${txHash}",
      account_page: "https://explorer.stavr.tech/IXO-Mainnet/account/${accountAddress}"
    },
    {
      kind: "bigdipper",
      url: "https://blockscan.ixo.world",
      tx_page: "https://blockscan.ixo.world/transactions/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/ixo",
      tx_page: "https://ping.pub/ixo/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/ixo",
      tx_page: "https://atomscan.com/ixo/transactions/${txHash}",
      account_page: "https://atomscan.com/ixo/accounts/${accountAddress}"
    },
    {
      kind: "Mintscan",
      url: "https://www.mintscan.io/ixo",
      tx_page: "https://www.mintscan.io/ixo/transactions/${txHash}",
      account_page: "https://www.mintscan.io/ixo/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.svg"
  }]
};
var chain_default73 = info202;

// node_modules/chain-registry/esm/mainnet/impacthub/ibc.js
var info203 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-168",
      connection_id: "connection-150"
    },
    chain_2: {
      chain_name: "impacthub",
      client_id: "07-tendermint-54",
      connection_id: "connection-40"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-114",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-434",
      connection_id: "connection-368"
    },
    chain_2: {
      chain_name: "impacthub",
      client_id: "07-tendermint-9",
      connection_id: "connection-9"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-204",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "impacthub",
      client_id: "07-tendermint-59",
      connection_id: "connection-43"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-20",
      connection_id: "connection-29"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-26",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "impacthub",
      client_id: "07-tendermint-12",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1451",
      connection_id: "connection-1137"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-38",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "impacthub",
      client_id: "07-tendermint-25",
      connection_id: "connection-25"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-39",
      connection_id: "connection-18"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  }
];
var ibc_default57 = info203;

// node_modules/chain-registry/esm/mainnet/impacthub/index.js
var assets73 = assets_default73;
var chain73 = chain_default73;
var ibc57 = ibc_default57;

// node_modules/chain-registry/esm/mainnet/imversed/assets.js
var info204 = {
  $schema: "../assetlist.schema.json",
  chain_name: "imversed",
  assets: [{
    description: "The native EVM, governance and staking token of the Imversed",
    denom_units: [{
      denom: "aimv",
      exponent: 0
    }, {
      denom: "imv",
      exponent: 18
    }],
    base: "aimv",
    name: "IMV",
    display: "imv",
    symbol: "IMV",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/imversed/images/imversed.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/imversed/images/imversed.svg"
    },
    coingecko_id: "imv",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/imversed/images/imversed.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/imversed/images/imversed.svg"
    }]
  }]
};
var assets_default74 = info204;

// node_modules/chain-registry/esm/mainnet/imversed/chain.js
var info205 = {
  $schema: "../chain.schema.json",
  chain_name: "imversed",
  status: "live",
  network_type: "mainnet",
  website: "https://imversed.network/",
  pretty_name: "Imversed",
  chain_id: "imversed_5555555-1",
  bech32_prefix: "imv",
  daemon_name: "imversed",
  node_home: "$HOME/.imversed",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "aimv",
      fixed_min_gas_price: 25e7,
      low_gas_price: 2e10,
      average_gas_price: 25e9,
      high_gas_price: 4e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "aimv"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/imversed/images/imversed.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/imversed/images/imversed.svg"
  },
  apis: {
    rpc: [],
    rest: [],
    grpc: [{
      address: "grpc.imversed.network:443",
      provider: "imversed"
    }],
    "evm-http-jsonrpc": [{
      address: "https://jsonrpc.imversed.network:443",
      provider: "imversed"
    }]
  },
  explorers: [{
    kind: "blockscout",
    url: "https://txe.imversed.network/",
    tx_page: "https://txe.imversed.network/tx/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/imversed/images/imversed.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/imversed/images/imversed.svg"
  }]
};
var chain_default74 = info205;

// node_modules/chain-registry/esm/mainnet/imversed/ibc.js
var info206 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "imversed",
    client_id: "07-tendermint-1",
    connection_id: "connection-1"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2366",
    connection_id: "connection-1866"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-517",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default58 = info206;

// node_modules/chain-registry/esm/mainnet/imversed/index.js
var assets74 = assets_default74;
var chain74 = chain_default74;
var ibc58 = ibc_default58;

// node_modules/chain-registry/esm/mainnet/injective/assets.js
var info207 = {
  $schema: "../assetlist.schema.json",
  chain_name: "injective",
  assets: [
    {
      description: "The INJ token is the native governance token for the Injective chain.",
      denom_units: [{
        denom: "inj",
        exponent: 0
      }, {
        denom: "INJ",
        exponent: 18
      }],
      base: "inj",
      name: "Injective",
      display: "INJ",
      symbol: "INJ",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.svg"
      },
      coingecko_id: "injective-protocol",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.svg"
      }],
      socials: {
        website: "https://injective.com/",
        twitter: "https://twitter.com/Injective_"
      }
    },
    {
      description: "Tether USDt on Injective",
      denom_units: [{
        denom: "ibc/4ABBEF4C8926DDDB320AE5188CFD63267ABBCEFC0583E4AE05D6E5AA2401DDAB",
        exponent: 0
      }, {
        denom: "usdt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/4ABBEF4C8926DDDB320AE5188CFD63267ABBCEFC0583E4AE05D6E5AA2401DDAB",
      name: "Tether USDt",
      display: "usdt",
      symbol: "USDt",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kava",
          base_denom: "erc20/tether/usdt",
          channel_id: "channel-122"
        },
        chain: {
          channel_id: "channel-143",
          path: "transfer/channel-143/erc20/tether/usdt"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "kava",
          base_denom: "erc20/tether/usdt"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      }
    },
    {
      description: "ERIS liquid staked INJ",
      denom_units: [{
        denom: "factory/inj1cdwt8g7nxgtg2k4fn8sj363mh9ahkw2qt0vrnc/ampINJ",
        exponent: 0
      }, {
        denom: "ampINJ",
        exponent: 6
      }],
      base: "factory/inj1cdwt8g7nxgtg2k4fn8sj363mh9ahkw2qt0vrnc/ampINJ",
      name: "ERIS Amplified INJ",
      display: "ampINJ",
      symbol: "ampINJ",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/ampinj.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/ampinj.png"
      }]
    },
    {
      description: "$AUTISM exists to celebrate autism as a superior biological tech stack for a changing world",
      denom_units: [{
        denom: "factory/inj14lf8xm6fcvlggpa7guxzjqwjmtr24gnvf56hvz/autism",
        exponent: 0
      }, {
        denom: "autism",
        exponent: 6
      }],
      base: "factory/inj14lf8xm6fcvlggpa7guxzjqwjmtr24gnvf56hvz/autism",
      name: "Autism",
      display: "autism",
      symbol: "AUTISM",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/autism.png"
      },
      coingecko_id: "autism",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/autism.png"
      }]
    },
    {
      description: "The first meme coin on Injective. It\u2019s a dog, but he has nunchucks",
      extended_description: "$NINJA is the premier meme coin on Injective. There is no formal roadmap and no promises made, but NINJAs are builders and masters of surprise. For all intents and purposes, the coin is completely useless, until it's not. And the dog, he has nunchucks.",
      denom_units: [{
        denom: "factory/inj1xtel2knkt8hmc9dnzpjz6kdmacgcfmlv5f308w/ninja",
        exponent: 0
      }, {
        denom: "NINJA",
        exponent: 6
      }],
      base: "factory/inj1xtel2knkt8hmc9dnzpjz6kdmacgcfmlv5f308w/ninja",
      name: "Dog wif nunchucks",
      display: "NINJA",
      symbol: "NINJA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/ninja.png"
      },
      coingecko_id: "dog-wif-nuchucks",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/ninja.png",
        theme: {
          primary_color_hex: "#00468E",
          background_color_hex: "#00468E",
          circle: true
        }
      }],
      socials: {
        website: "https://www.dogwifnunchucks.com/",
        twitter: "https://x.com/dogwifnunchucks"
      }
    },
    {
      description: "The $WGMI Token - We Gonna Make It. Are you ready?",
      denom_units: [{
        denom: "factory/inj1rmjzj9fn47kdmfk4f3z39qr6czexxe0yjyc546/WGMI",
        exponent: 0
      }, {
        denom: "WGMI",
        exponent: 6
      }],
      base: "factory/inj1rmjzj9fn47kdmfk4f3z39qr6czexxe0yjyc546/WGMI",
      name: "WGMI",
      display: "WGMI",
      symbol: "WGMI",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/wgmi.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/wgmi.png"
      }]
    },
    {
      description: "The first memecoin on osmosis.",
      denom_units: [{
        denom: "ibc/DD648F5D3CDA56D0D8D8820CF703D246B9FC4007725D8B38D23A21FF1A1477E3",
        exponent: 0
      }, {
        denom: "WOSMO",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/DD648F5D3CDA56D0D8D8820CF703D246B9FC4007725D8B38D23A21FF1A1477E3",
      name: "Wosmo",
      display: "WOSMO",
      symbol: "WOSMO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3/WOSMO",
          channel_id: "channel-122"
        },
        chain: {
          channel_id: "channel-8",
          path: "transfer/channel-8/factory/osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3/WOSMO"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3/WOSMO"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wosmo.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wosmo.png"
      }
    },
    {
      description: "GLTO-ERC20 on injective",
      denom_units: [{
        denom: "peggy0xd73175f9eb15eee81745d367ae59309Ca2ceb5e2",
        exponent: 0
      }, {
        denom: "glto",
        exponent: 6
      }],
      base: "peggy0xd73175f9eb15eee81745d367ae59309Ca2ceb5e2",
      name: "Gelotto",
      display: "glto",
      symbol: "GLTO",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xd73175f9eb15eee81745d367ae59309Ca2ceb5e2"
        },
        provider: "Peggy"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xd73175f9eb15eee81745d367ae59309Ca2ceb5e2"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.svg"
      },
      socials: {
        website: "https://gelotto.io/",
        twitter: "https://twitter.com/Gelotto2"
      }
    },
    {
      description: "Hava Coin is the lifeblood of the Cosmos & Injective networks, rewarding builders and welcoming supporters.",
      denom_units: [{
        denom: "factory/inj1h0ypsdtjfcjynqu3m75z2zwwz5mmrj8rtk2g52/uhava",
        exponent: 0
      }, {
        denom: "hava",
        exponent: 6
      }],
      base: "factory/inj1h0ypsdtjfcjynqu3m75z2zwwz5mmrj8rtk2g52/uhava",
      name: "Hava Coin",
      display: "hava",
      symbol: "HAVA",
      coingecko_id: "hava-coin",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/hava.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/hava.png"
      }],
      socials: {
        website: "https://havacoin.xyz/",
        twitter: "https://twitter.com/Hava_Coin"
      }
    },
    {
      description: "A clan of 11y bad kids crafting chaos on the Cosmos eco. One bad memecoin to rule them all  $BADKID. Airdropped to Badkids NFT holders and $STARS stakers. It's so bad, your wallet's throwing a tantrum for it.",
      denom_units: [{
        denom: "ibc/A0C5AD197FECAF6636F589071338DC7ECD6B0809CD3A5AB131EAAA5395E7E5E8",
        exponent: 0
      }, {
        denom: "BADKID",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/A0C5AD197FECAF6636F589071338DC7ECD6B0809CD3A5AB131EAAA5395E7E5E8",
      name: "Badkid",
      display: "BADKID",
      symbol: "BADKID",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "factory/osmo10n8rv8npx870l69248hnp6djy6pll2yuzzn9x8/BADKID",
          channel_id: "channel-122"
        },
        chain: {
          channel_id: "channel-8",
          path: "transfer/channel-8/factory/osmo10n8rv8npx870l69248hnp6djy6pll2yuzzn9x8/BADKID"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "factory/osmo10n8rv8npx870l69248hnp6djy6pll2yuzzn9x8/BADKID"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/badkid.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/badkid.png"
      }
    },
    {
      description: "The second meme coin on Injective.",
      denom_units: [{
        denom: "inj1sudjgsyhufqu95yp7rqad3g78ws8g6htf32h88",
        exponent: 0
      }, {
        denom: "NINPO",
        exponent: 6
      }],
      base: "inj1sudjgsyhufqu95yp7rqad3g78ws8g6htf32h88",
      name: "Ninpo",
      display: "NINPO",
      symbol: "NINPO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/ninpo.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/ninpo.png"
      }]
    },
    {
      description: "JUDO is a very futuristic meme token.",
      denom_units: [{
        denom: "inj16ukv8g2jcmml7gykxn5ws8ykhxjkugl4zhft5h",
        exponent: 0
      }, {
        denom: "JUDO",
        exponent: 6
      }],
      base: "inj16ukv8g2jcmml7gykxn5ws8ykhxjkugl4zhft5h",
      name: "Judo",
      display: "JUDO",
      symbol: "JUDO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/judo.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/judo.png"
      }]
    },
    {
      description: "BEAST-ERC20 on injective",
      denom_units: [{
        denom: "peggy0xA4426666addBE8c4985377d36683D17FB40c31Be",
        exponent: 0
      }, {
        denom: "beast",
        exponent: 6
      }],
      base: "peggy0xA4426666addBE8c4985377d36683D17FB40c31Be",
      name: "Gelotto BEAST",
      display: "beast",
      symbol: "BEAST",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xA4426666addBE8c4985377d36683D17FB40c31Be"
        },
        provider: "Peggy"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xA4426666addBE8c4985377d36683D17FB40c31Be"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/beast.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/beast.png"
      },
      socials: {
        website: "https://gelotto.io/",
        twitter: "https://twitter.com/Gelotto2"
      }
    },
    {
      description: "Astroport is a neutral marketplace where anyone, from anywhere in the galaxy, can dock to trade their wares.",
      denom_units: [{
        denom: "ibc/063F4461F7317CFF10F50AB044E44932D22AAD84FA7107082744946E6DB7B7A8",
        exponent: 0,
        aliases: ["uastro"]
      }, {
        denom: "astro",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/063F4461F7317CFF10F50AB044E44932D22AAD84FA7107082744946E6DB7B7A8",
      name: "Astroport token",
      display: "astro",
      symbol: "ASTRO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "neutron",
          base_denom: "factory/neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07/astro",
          channel_id: "channel-60"
        },
        chain: {
          channel_id: "channel-177",
          path: "transfer/channel-177/factory/neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07/astro"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "neutron",
          base_denom: "factory/neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07/astro"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.svg"
      }
    },
    {
      description: "A receipt token for lent INJ issued by the Neptune Protocol.",
      denom_units: [{
        denom: "inj1rmzufd7h09sqfrre5dtvu5d09ta7c0t4jzkr2f",
        exponent: 0
      }, {
        denom: "nINJ",
        exponent: 18
      }],
      base: "inj1rmzufd7h09sqfrre5dtvu5d09ta7c0t4jzkr2f",
      name: "Neptune Receipt INJ",
      display: "nINJ",
      symbol: "nINJ",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/ninj.png"
      }]
    },
    {
      description: "A receipt token for lent ATOM issued by the Neptune Protocol.",
      denom_units: [{
        denom: "inj16jf4qkcarp3lan4wl2qkrelf4kduvvujwg0780",
        exponent: 0
      }, {
        denom: "nATOM",
        exponent: 6
      }],
      base: "inj16jf4qkcarp3lan4wl2qkrelf4kduvvujwg0780",
      name: "Neptune Receipt ATOM",
      display: "nATOM",
      symbol: "nATOM",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/natom.png"
      }]
    },
    {
      description: "A receipt token for lent WETH issued by the Neptune Protocol.",
      denom_units: [{
        denom: "inj1kehk5nvreklhylx22p3x0yjydfsz9fv3fvg5xt",
        exponent: 0
      }, {
        denom: "nWETH",
        exponent: 18
      }],
      base: "inj1kehk5nvreklhylx22p3x0yjydfsz9fv3fvg5xt",
      name: "Neptune Receipt WETH",
      display: "nWETH",
      symbol: "nWETH",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/nweth.png"
      }]
    },
    {
      description: "A receipt token for lent USDT issued by the Neptune Protocol.",
      denom_units: [{
        denom: "inj1cy9hes20vww2yr6crvs75gxy5hpycya2hmjg9s",
        exponent: 0
      }, {
        denom: "nUSDT",
        exponent: 6
      }],
      base: "inj1cy9hes20vww2yr6crvs75gxy5hpycya2hmjg9s",
      name: "Neptune Receipt USDT",
      display: "nUSDT",
      symbol: "nUSDT",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/nusdt.png"
      }]
    },
    {
      description: "A receipt token for lent TIA issued by the Neptune Protocol.",
      denom_units: [{
        denom: "inj1fzquxxxam59z6fzewy2hvvreeh3m04x83zg4vv",
        exponent: 0
      }, {
        denom: "nTIA",
        exponent: 6
      }],
      base: "inj1fzquxxxam59z6fzewy2hvvreeh3m04x83zg4vv",
      name: "Neptune Receipt TIA",
      display: "nTIA",
      symbol: "nTIA",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/ntia.png"
      }]
    },
    {
      description: "Ninja Blaze Token",
      denom_units: [{
        denom: "ibc/1011E4D6D4800DA9B8F21D7C207C0B0C18E54E614A8576037F066B775210709D",
        exponent: 0,
        aliases: ["uNBZ"]
      }, {
        denom: "NBZ",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/1011E4D6D4800DA9B8F21D7C207C0B0C18E54E614A8576037F066B775210709D",
      name: "Ninja Blaze Token",
      display: "NBZ",
      symbol: "NBZ",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "neutron",
          base_denom: "factory/neutron1a6ydq8urdj0gkvjw9e9e5y9r5ce2qegm9m4xufpt96kcm60kmuass0mqq4/nbz",
          channel_id: "channel-60"
        },
        chain: {
          channel_id: "channel-177",
          path: "transfer/channel-177/factory/neutron1a6ydq8urdj0gkvjw9e9e5y9r5ce2qegm9m4xufpt96kcm60kmuass0mqq4/nbz"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "neutron",
          base_denom: "factory/neutron1a6ydq8urdj0gkvjw9e9e5y9r5ce2qegm9m4xufpt96kcm60kmuass0mqq4/nbz"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/NBZ.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/NBZ.png"
      }
    },
    {
      description: "Talis governance token",
      denom_units: [{
        denom: "factory/inj1maeyvxfamtn8lfyxpjca8kuvauuf2qeu6gtxm3/Talis",
        exponent: 0
      }, {
        denom: "Talis",
        exponent: 6
      }],
      base: "factory/inj1maeyvxfamtn8lfyxpjca8kuvauuf2qeu6gtxm3/Talis",
      name: "Talis Token",
      display: "Talis",
      symbol: "TALIS",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/talis.png"
      }],
      socials: {
        website: "https://talis.art/",
        twitter: "https://twitter.com/ProtocolTalis"
      }
    },
    {
      description: "Talis revenue sharing token",
      denom_units: [{
        denom: "factory/inj1maeyvxfamtn8lfyxpjca8kuvauuf2qeu6gtxm3/xTalis",
        exponent: 0
      }, {
        denom: "xTalis",
        exponent: 6
      }],
      base: "factory/inj1maeyvxfamtn8lfyxpjca8kuvauuf2qeu6gtxm3/xTalis",
      name: "xTalis Token",
      display: "xTalis",
      symbol: "XTALIS",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/xtalis.png"
      }],
      socials: {
        website: "https://talis.art/",
        twitter: "https://twitter.com/ProtocolTalis"
      }
    }
  ]
};
var assets_default75 = info207;

// node_modules/chain-registry/esm/mainnet/injective/chain.js
var info208 = {
  $schema: "../chain.schema.json",
  chain_name: "injective",
  status: "live",
  network_type: "mainnet",
  website: "https://injective.com/",
  pretty_name: "Injective",
  chain_id: "injective-1",
  bech32_prefix: "inj",
  extra_codecs: ["injective"],
  slip44: 60,
  daemon_name: "injectived",
  node_home: "$HOME/.injectived",
  fees: {
    fee_tokens: [{
      denom: "inj",
      fixed_min_gas_price: 16e7,
      low_gas_price: 5e8,
      average_gas_price: 7e8,
      high_gas_price: 9e8
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "inj"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.svg"
  },
  description: "Injective\u2019s mission is to create a truly free and inclusive financial system through decentralization.",
  apis: {
    rpc: [
      {
        address: "https://6d0ff611-9009-4bd1-a7a7-acec7c70d454.injective-1.mesa-rpc.newmetric.xyz",
        provider: "NewMetric"
      },
      {
        address: "https://rpc.injective.goldenratiostaking.net",
        provider: "Golden Ratio Staking"
      },
      {
        address: "https://injective-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://injective-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc-injective-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://injective-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rpc-injective.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://rpc-injective-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://injective-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://injective-rpc.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://public.stakewolle.com/cosmos/injective/rpc",
        provider: "Stakewolle"
      },
      {
        address: "https://rpc.injective.bronbro.io/",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://injective-rpc.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://rpc-injective.ecostake.com",
        provider: "ecostake"
      }
    ],
    rest: [
      {
        address: "https://6d0ff611-9009-4bd1-a7a7-acec7c70d454.injective-1.mesa-rest.newmetric.xyz",
        provider: "NewMetric"
      },
      {
        address: "https://api-injective-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://injective-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://injective-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://lcd-injective.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://api-injective-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://rest.injective.goldenratiostaking.net",
        provider: "Golden Ratio Staking"
      },
      {
        address: "https://injective-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "injective-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://injective-api.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://public.stakewolle.com/cosmos/injective/rest",
        provider: "Stakewolle"
      },
      {
        address: "https://lcd.injective.bronbro.io/",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://injective-api.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://rest-injective.ecostake.com",
        provider: "ecostake"
      }
    ],
    grpc: [
      {
        address: "6d0ff611-9009-4bd1-a7a7-acec7c70d454.injective-1.mesa-grpc.newmetric.xyz:80",
        provider: "NewMetric"
      },
      {
        address: "grpc-injective-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "injective-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "injective-grpc.polkachu.com:14390",
        provider: "Polkachu"
      },
      {
        address: "injective-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "grpc-injective.cosmos-spaces.cloud:9900",
        provider: "Cosmos Spaces"
      },
      {
        address: "grpc.injective.posthuman.digital:80",
        provider: "POSTHUMAN \uA74F DVS"
      },
      {
        address: "grpc-injective.architectnodes.com:1443",
        provider: "Architect Nodes"
      },
      {
        address: "grpc-injective-01.stakeflow.io:2102",
        provider: "Stakeflow"
      },
      {
        address: "injective-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "injective-grpc.w3coins.io:14390",
        provider: "w3coins"
      },
      {
        address: "grpc-injective.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "grpc.injective.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "injective-grpc.noders.services:33090",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/injective",
      tx_page: "https://ezstaking.app/injective/txs/${txHash}",
      account_page: "https://ezstaking.app/injective/account/${accountAddress}"
    },
    {
      kind: "injectiveprotocol",
      url: "https://explorer.injective.network/",
      tx_page: "https://explorer.injective.network/transaction/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/injective",
      tx_page: "https://ping.pub/injective/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/injective",
      tx_page: "https://atomscan.com/injective/transactions/${txHash}",
      account_page: "https://atomscan.com/injective/accounts/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/injective",
      tx_page: "https://www.mintscan.io/injective/transactions/${txHash}",
      account_page: "https://www.mintscan.io/injective/accounts/${accountAddress}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/injective",
      account_page: "https://stakeflow.io/injective/accounts/${accountAddress}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/injective",
      tx_page: "https://mainnet.whispernode.com/injective/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/injective/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.svg"
  }]
};
var chain_default75 = info208;

// node_modules/chain-registry/esm/mainnet/injective/ibc.js
var info209 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "andromeda",
      client_id: "07-tendermint-16",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "injective",
      client_id: "07-tendermint-250",
      connection_id: "connection-244"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-213",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-37",
      connection_id: "connection-20"
    },
    chain_2: {
      chain_name: "injective",
      client_id: "07-tendermint-113",
      connection_id: "connection-93"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-84",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-28",
      connection_id: "connection-6"
    },
    chain_2: {
      chain_name: "injective",
      client_id: "07-tendermint-226",
      connection_id: "connection-210"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-152",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-123",
      connection_id: "connection-45"
    },
    chain_2: {
      chain_name: "injective",
      client_id: "07-tendermint-207",
      connection_id: "connection-191"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-29",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-145",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-470",
      connection_id: "connection-388"
    },
    chain_2: {
      chain_name: "injective",
      client_id: "07-tendermint-5",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-220",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-26",
      connection_id: "connection-29"
    },
    chain_2: {
      chain_name: "injective",
      client_id: "07-tendermint-132",
      connection_id: "connection-105"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-90",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "doravota",
      client_id: "07-tendermint-15",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "injective",
      client_id: "07-tendermint-245",
      connection_id: "connection-239"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-182",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-19",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "injective",
      client_id: "07-tendermint-112",
      connection_id: "connection-92"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-83",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gateway",
      client_id: "07-tendermint-18",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "injective",
      client_id: "07-tendermint-248",
      connection_id: "connection-241"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-183",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-205",
      connection_id: "connection-189"
    },
    chain_2: {
      chain_name: "kava",
      client_id: "07-tendermint-130",
      connection_id: "connection-166"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-143",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-122",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-144",
      connection_id: "connection-116"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-77",
      connection_id: "connection-53"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-98",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-54",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-154",
      connection_id: "connection-123"
    },
    chain_2: {
      chain_name: "migaloo",
      client_id: "07-tendermint-5",
      connection_id: "connection-8"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-102",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-233",
      connection_id: "connection-220"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-78",
      connection_id: "connection-58"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-177",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-60",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-212",
      connection_id: "connection-195"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-57",
      connection_id: "connection-55"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-148",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-31",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-201",
      connection_id: "connection-184"
    },
    chain_2: {
      chain_name: "nois",
      client_id: "07-tendermint-13",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-138",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-140",
        port_id: "wasm.inj1w9g3sk7lk8k0pdtctygupt6f3te7x4thvzz57a"
      },
      chain_2: {
        channel_id: "channel-20",
        port_id: "wasm.nois1acyc05v6fgcdgj88nmz2t40aex9nlnptqpwp5hf8hwg7rhce9uuqgqz5wp"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-253",
      connection_id: "connection-245"
    },
    chain_2: {
      chain_name: "odin",
      client_id: "07-tendermint-122",
      connection_id: "connection-85"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-214",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-65",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-211",
      connection_id: "connection-194"
    },
    chain_2: {
      chain_name: "oraichain",
      client_id: "07-tendermint-105",
      connection_id: "connection-82"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-147",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-146",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "oraidex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-19",
      connection_id: "connection-14"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1703",
      connection_id: "connection-1298"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-122",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-110",
      connection_id: "connection-91"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-57",
      connection_id: "connection-53"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-82",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-41",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-267",
      connection_id: "connection-268"
    },
    chain_2: {
      chain_name: "pryzm",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-284",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-97",
      connection_id: "connection-83"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-22",
      connection_id: "connection-8"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-88",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-135",
      connection_id: "connection-108"
    },
    chain_2: {
      chain_name: "sommelier",
      client_id: "07-tendermint-4",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-93",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-131",
      connection_id: "connection-103"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-2",
      connection_id: "connection-3"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-89",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-216",
      connection_id: "connection-202"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-369",
      connection_id: "connection-311"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-151",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-255",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-229",
      connection_id: "connection-217"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-243",
      connection_id: "connection-206"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-159",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-116",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-197",
      connection_id: "connection-182"
    },
    chain_2: {
      chain_name: "xpla",
      client_id: "07-tendermint-6",
      connection_id: "connection-12"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-137",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default59 = info209;

// node_modules/chain-registry/esm/mainnet/injective/index.js
var assets75 = assets_default75;
var chain75 = chain_default75;
var ibc59 = ibc_default59;

// node_modules/chain-registry/esm/mainnet/irisnet/assets.js
var info210 = {
  $schema: "../assetlist.schema.json",
  chain_name: "irisnet",
  assets: [{
    description: "The IRIS token is the native governance token for the IrisNet chain.",
    denom_units: [{
      denom: "uiris",
      exponent: 0
    }, {
      denom: "iris",
      exponent: 6
    }],
    base: "uiris",
    name: "IRISnet",
    display: "iris",
    symbol: "IRIS",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/irisnet/images/iris.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/irisnet/images/iris.svg"
    },
    coingecko_id: "iris-network",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/irisnet/images/iris.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/irisnet/images/iris.svg"
    }]
  }]
};
var assets_default76 = info210;

// node_modules/chain-registry/esm/mainnet/irisnet/chain.js
var info211 = {
  $schema: "../chain.schema.json",
  chain_name: "irisnet",
  status: "live",
  network_type: "mainnet",
  pretty_name: "IRISnet",
  chain_id: "irishub-1",
  bech32_prefix: "iaa",
  daemon_name: "iris",
  node_home: "$HOME/.iris",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uiris",
      low_gas_price: 0.2,
      average_gas_price: 0.3,
      high_gas_price: 0.4
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uiris"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/irisnet/images/iris.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/irisnet/images/iris.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc-irisnet-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://rpc-irisnet-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://irisnet-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://iris-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://iris-rpc.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://mainnet-iris-rpc.konsortech.xyz",
        provider: "KonsorTech"
      }
    ],
    rest: [
      {
        address: "https://api-irisnet-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://api-irisnet-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://irisnet-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://iris-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://iris-api.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://mainnet-iris-api.konsortech.xyz",
        provider: "KonsorTech"
      }
    ],
    grpc: [
      {
        address: "grpc-irisnet-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "grpc-irisnet-01.stakeflow.io:1902",
        provider: "Stakeflow"
      },
      {
        address: "irisnet-grpc.w3coins.io:22690",
        provider: "w3coins"
      },
      {
        address: "iris-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "iris.grpc.kjnodes.com:443",
        provider: "kjnodes"
      },
      {
        address: "https://grpc-irisnet.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "iris-mainnet.grpc.l0vd.com:80",
        provider: "L0vd.com \u2764\uFE0F"
      },
      {
        address: "mainnet-iris.konsortech.xyz:30090",
        provider: "KonsorTech"
      }
    ],
    "evm-http-jsonrpc": [{
      address: "https://iris-evm.publicnode.com",
      provider: "Allnodes.com \u26A1\uFE0F Nodes & Staking"
    }, {
      address: "https://mainnet-iris-evm.konsortech.xyz",
      provider: "KonsorTech"
    }]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/irisnet",
      tx_page: "https://ezstaking.app/irisnet/txs/${txHash}",
      account_page: "https://ezstaking.app/irisnet/account/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/iris",
      tx_page: "https://www.mintscan.io/iris/transactions/${txHash}",
      account_page: "https://www.mintscan.io/iris/accounts/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/iris-network",
      tx_page: "https://ping.pub/iris-network/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/iris-network",
      tx_page: "https://atomscan.com/iris-network/transactions/${txHash}",
      account_page: "https://atomscan.com/iris-network/accounts/${accountAddress}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/irisnet",
      account_page: "https://stakeflow.io/irisnet/accounts/${accountAddress}"
    },
    {
      kind: "Nodeist Explorer",
      url: "https://exp.nodeist.net/iris",
      tx_page: "https://exp.nodeist.net/iris/tx/${txHash}"
    },
    {
      kind: "L0vd.com \u2764\uFE0F",
      url: "https://explorers.l0vd.com/iris-mainnet",
      tx_page: "https://explorers.l0vd.com/iris-mainnet/tx/${txHash}"
    },
    {
      kind: "KonsorTech",
      url: "https://explorer.konsortech.xyz/iris",
      tx_page: "https://explorer.konsortech.xyz/iris/tx/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/irisnet/images/iris.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/irisnet/images/iris.svg"
  }]
};
var chain_default76 = info211;

// node_modules/chain-registry/esm/mainnet/irisnet/ibc.js
var info212 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-44",
      connection_id: "connection-19"
    },
    chain_2: {
      chain_name: "irisnet",
      client_id: "07-tendermint-23",
      connection_id: "connection-16"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "carbon",
      client_id: "07-tendermint-53",
      connection_id: "connection-30"
    },
    chain_2: {
      chain_name: "irisnet",
      client_id: "07-tendermint-151",
      connection_id: "connection-114"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-28",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-68",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "demex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-384",
      connection_id: "connection-338"
    },
    chain_2: {
      chain_name: "irisnet",
      client_id: "07-tendermint-31",
      connection_id: "connection-22"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-182",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-67",
      connection_id: "connection-61"
    },
    chain_2: {
      chain_name: "irisnet",
      client_id: "07-tendermint-86",
      connection_id: "connection-70"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-650",
      connection_id: "connection-197"
    },
    chain_2: {
      chain_name: "irisnet",
      client_id: "07-tendermint-32",
      connection_id: "connection-23"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "emoney",
      client_id: "07-tendermint-10",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "irisnet",
      client_id: "07-tendermint-46",
      connection_id: "connection-34"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "irisnet",
      client_id: "07-tendermint-5",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-5",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "irisnet",
      client_id: "07-tendermint-34",
      connection_id: "connection-25"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-31",
      connection_id: "connection-25"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-19",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "irisnet",
      client_id: "07-tendermint-35",
      connection_id: "connection-26"
    },
    chain_2: {
      chain_name: "regen",
      client_id: "07-tendermint-25",
      connection_id: "connection-22"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-16",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "irisnet",
      client_id: "07-tendermint-36",
      connection_id: "connection-28"
    },
    chain_2: {
      chain_name: "sentinel",
      client_id: "07-tendermint-54",
      connection_id: "connection-30"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "irisnet",
      client_id: "07-tendermint-42",
      connection_id: "connection-30"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-19",
      connection_id: "connection-9"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-19",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "irisnet",
      client_id: "07-tendermint-63",
      connection_id: "connection-44"
    },
    chain_2: {
      chain_name: "stafihub",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-33",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "irisnet",
      client_id: "07-tendermint-44",
      connection_id: "connection-32"
    },
    chain_2: {
      chain_name: "starname",
      client_id: "07-tendermint-41",
      connection_id: "connection-27"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-21",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "irisnet",
      client_id: "07-tendermint-93",
      connection_id: "connection-72"
    },
    chain_2: {
      chain_name: "uptick",
      client_id: "07-tendermint-8",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-39",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1"
    }]
  }
];
var ibc_default60 = info212;

// node_modules/chain-registry/esm/mainnet/irisnet/index.js
var assets76 = assets_default76;
var chain76 = chain_default76;
var ibc60 = ibc_default60;

// node_modules/chain-registry/esm/mainnet/jackal/assets.js
var info213 = {
  $schema: "../assetlist.schema.json",
  chain_name: "jackal",
  assets: [{
    description: "The native staking and governance token of Jackal.",
    denom_units: [{
      denom: "ujkl",
      exponent: 0
    }, {
      denom: "jkl",
      exponent: 6
    }],
    base: "ujkl",
    name: "Jackal",
    display: "jkl",
    symbol: "JKL",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/jackal/images/jkl.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/jackal/images/jkl.svg"
    },
    coingecko_id: "jackal-protocol",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/jackal/images/jkl.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/jackal/images/jkl.svg"
    }]
  }]
};
var assets_default77 = info213;

// node_modules/chain-registry/esm/mainnet/jackal/chain.js
var info214 = {
  $schema: "../chain.schema.json",
  chain_name: "jackal",
  chain_id: "jackal-1",
  website: "https://jackalprotocol.com",
  pretty_name: "Jackal",
  status: "live",
  network_type: "mainnet",
  bech32_prefix: "jkl",
  daemon_name: "canined",
  node_home: "$HOME/.canine",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ujkl",
      fixed_min_gas_price: 0,
      low_gas_price: 2e-3,
      average_gas_price: 2e-3,
      high_gas_price: 0.02
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ujkl"
    }]
  },
  codebase: {
    cosmwasm_enabled: true
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/jackal/images/jkl.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/jackal/images/jkl.svg"
  },
  apis: {
    wss: [{
      address: "wss://jackal-rpc.agoranodes.com",
      provider: "AgoraNodes"
    }],
    rpc: [
      {
        address: "https://rpc.jackalprotocol.com",
        provider: "Jackal Labs"
      },
      {
        address: "https://jackal-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "http://jkl.rpc.m.stavr.tech:11127",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://jackal.rpc.bccnodes.com",
        provider: "BccNodes"
      },
      {
        address: "https://rpc.jackal.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://rpc-jackal.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "https://jackal-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://m-jackal.rpc.utsa.tech",
        provider: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}"
      },
      {
        address: "https://rpc-jackal.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://jackal-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://jackal.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://jackal.rpc.silknodes.io",
        provider: "Silk Nodes"
      },
      {
        address: "https://jackal.rpc.skynodejs.net",
        provider: "skynodejs"
      },
      {
        address: "https://public.stakewolle.com/cosmos/jackal/rpc",
        provider: "Stakewolle"
      },
      {
        address: "https://rpc.jackal.silentvalidator.com",
        provider: "silent"
      },
      {
        address: "https://rpc.jackal.mathnodes.com",
        provider: "MathNodes"
      },
      {
        address: "https://jackal-rpc.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://jackal-rpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    rest: [
      {
        address: "https://api.jackalprotocol.com",
        provider: "Jackal Labs"
      },
      {
        address: "https://jackal-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://jkl.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api.jackal.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://api-jackal.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "https://jackal-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://m-jackal.api.utsa.tech",
        provider: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}"
      },
      {
        address: "https://jackal-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://lcd-jackal.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://jackal.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://jackal.api.silknodes.io",
        provider: "Silk Nodes"
      },
      {
        address: "https://jackal.api.skynodejs.net",
        provider: "skynodejs"
      },
      {
        address: "https://public.stakewolle.com/cosmos/jackal/rest",
        provider: "Stakewolle"
      },
      {
        address: "https://api.jackal.silentvalidator.com",
        provider: "silent"
      },
      {
        address: "https://api.jackal.mathnodes.com",
        provider: "MathNodes"
      },
      {
        address: "https://jackal-api.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://jackal-api.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    grpc: [
      {
        address: "grpc.jackalprotocol.com:443",
        provider: "Jackal Labs"
      },
      {
        address: "jackal.grpc.bccnodes.com:9490",
        provider: "BccNodes"
      },
      {
        address: "jackal.grpc.nodersteam.com:9990",
        provider: "[NODERS]TEAM"
      },
      {
        address: "jackal-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "grpc.jackal.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "jackal-grpc.polkachu.com:17590",
        provider: "Polkachu"
      },
      {
        address: "http://jkl.grpc.m.stavr.tech:5013",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "jackal-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "jackal.grpc.kjnodes.com:13790",
        provider: "kjnodes"
      },
      {
        address: "https://jackal.grpc.skynodejs.net",
        provider: "skynodejs"
      },
      {
        address: "grpc.jackal.silentvalidator.com:443",
        provider: "silent"
      },
      {
        address: "jackal-grpc.noders.services:26090",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://ping.pub/jackal",
      tx_page: "https://ping.pub/jackal/tx/${txHash}"
    },
    {
      kind: "NodeStake",
      url: "https://explorer.nodestake.top/jackal",
      tx_page: "https://explorer.nodestake.top/jackal/tx/${txHash}"
    },
    {
      kind: "BccNodes",
      url: "https://explorer.bccnodes.com/jackal",
      tx_page: "https://explorer.bccnodes.com/jackal/tx/${txHash}"
    },
    {
      kind: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}",
      url: "https://exp.utsa.tech/jackal",
      tx_page: "https://exp.utsa.tech/jackal/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/jackal",
      tx_page: "https://explorer.stavr.tech/jackal/tx/${txHash}"
    },
    {
      kind: "Nodeist Explorer",
      url: "https://exp.nodeist.net/jackal",
      tx_page: "https://exp.nodeist.net/jackal/tx/${txHash}"
    },
    {
      kind: "Big Dipper",
      url: "https://bigdipper.live/jackal",
      tx_page: "https://bigdipper.live/jackal/transactions/${txHash}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/jackal",
      tx_page: "https://mainnet.whispernode.com/jackal/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/jackal/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/jackal/images/jkl.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/jackal/images/jkl.svg"
  }]
};
var chain_default77 = info214;

// node_modules/chain-registry/esm/mainnet/jackal/ibc.js
var info215 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-17",
      connection_id: "connection-18"
    },
    chain_2: {
      chain_name: "jackal",
      client_id: "07-tendermint-61",
      connection_id: "connection-50"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-41",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }],
    operators: [{
      chain_1: {
        address: "archway16l5ls4ajah6hethh374tpgn42r5q4sqeuw8udj"
      },
      chain_2: {
        address: "jkl134a4es94hjqqej732cymf0w3988zh3c4yuqtf8"
      },
      memo: "by AM Solutions | https://www.theamsolutions.info",
      name: "AM Solutions",
      discord_handle: "AlexeyM#5409"
    }, {
      chain_1: {
        address: "archway1nms20r7jzaa4ms9exv90ckl2xfn0rd3rmqh7zm"
      },
      chain_2: {
        address: "jkl1nms20r7jzaa4ms9exv90ckl2xfn0rd3rh49t3n"
      },
      memo: "Relayed by NodeStake",
      name: "NodeStake",
      discord_handle: "nodestake"
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-69",
      connection_id: "connection-178"
    },
    chain_2: {
      chain_name: "jackal",
      client_id: "07-tendermint-69",
      connection_id: "connection-57"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-137",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-49",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-111",
      connection_id: "connection-97"
    },
    chain_2: {
      chain_name: "jackal",
      client_id: "07-tendermint-56",
      connection_id: "connection-46"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-63",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-38",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "jackal",
      client_id: "07-tendermint-57",
      connection_id: "connection-47"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-139",
      connection_id: "connection-105"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-39",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-94",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "jackal",
      client_id: "07-tendermint-2",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2273",
      connection_id: "connection-1762"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-412",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "jackal",
      client_id: "07-tendermint-6",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-124",
      connection_id: "connection-94"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-62",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  }
];
var ibc_default61 = info215;

// node_modules/chain-registry/esm/mainnet/jackal/index.js
var assets77 = assets_default77;
var chain77 = chain_default77;
var ibc61 = ibc_default61;

// node_modules/chain-registry/esm/mainnet/joltify/assets.js
var info216 = {
  $schema: "../assetlist.schema.json",
  chain_name: "joltify",
  assets: [
    {
      description: "The native staking and governance token of Joltify",
      extended_description: "Joltify is the First EVM compatible game-changing L1 Public Chain built on the Cosmos SDK for Real-World Assets (RWA) and Beyond.",
      denom_units: [{
        denom: "ujolt",
        exponent: 0
      }, {
        denom: "jolt",
        exponent: 6
      }],
      base: "ujolt",
      name: "Joltify",
      display: "jolt",
      symbol: "JOLT",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/joltify/images/jolt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/joltify/images/jolt.svg"
      }],
      coingecko_id: "joltify",
      keywords: ["staking"],
      socials: {
        website: "https://www.joltify.io/",
        twitter: "https://twitter.com/joltify_finance"
      }
    },
    {
      description: "The native staking and governance token of the Cosmos Hub.",
      denom_units: [{
        denom: "ibc/9117A26BA81E29FA4F78F57DC2BD90CD3D26848101BA880445F119B22A1E254E",
        exponent: 0,
        aliases: ["uatom"]
      }, {
        denom: "atom",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/9117A26BA81E29FA4F78F57DC2BD90CD3D26848101BA880445F119B22A1E254E",
      name: "Cosmos Hub",
      display: "atom",
      symbol: "ATOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "cosmoshub",
          base_denom: "uatom",
          channel_id: "channel-866"
        },
        chain: {
          channel_id: "channel-2",
          path: "transfer/channel-2/uatom"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "cosmoshub",
          base_denom: "uatom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }]
    },
    {
      description: "USDC is a fully collateralized US Dollar stablecoin developed by CENTRE, the open source project with Circle being the first of several forthcoming issuers.",
      denom_units: [{
        denom: "ibc/65D0BEC6DAD96C7F5043D1E54E54B6BB5D5B3AEC3FF6CEBB75B9E059F3580EA3",
        exponent: 0,
        aliases: ["uusdc"]
      }, {
        denom: "usdc",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/65D0BEC6DAD96C7F5043D1E54E54B6BB5D5B3AEC3FF6CEBB75B9E059F3580EA3",
      name: "USDC",
      display: "usdc",
      symbol: "USDC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "noble",
          base_denom: "uusdc",
          channel_id: "channel-81"
        },
        chain: {
          channel_id: "channel-1",
          path: "transfer/channel-1/uusdc"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "noble",
          base_denom: "uusdc"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
      }]
    }
  ]
};
var assets_default78 = info216;

// node_modules/chain-registry/esm/mainnet/joltify/chain.js
var info217 = {
  $schema: "../chain.schema.json",
  chain_name: "joltify",
  status: "live",
  network_type: "mainnet",
  website: "https://www.joltify.io/",
  pretty_name: "Joltify",
  chain_id: "joltify_1729-1",
  bech32_prefix: "jolt",
  daemon_name: "jolt",
  node_home: "$HOME/.joltify",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ujolt",
      low_gas_price: 0,
      average_gas_price: 0,
      high_gas_price: 0
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ujolt"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.47.5",
    cosmwasm_enabled: false
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/joltify/images/jolt.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/joltify/images/jolt.svg"
  }],
  description: "Joltify is the First EVM compatible game-changing L1 Public Chain built on the Cosmos SDK for Real-World Assets (RWA) and Beyond.",
  apis: {
    rpc: [{
      address: "https://rpc.joltify.io",
      provider: "joltify"
    }],
    rest: [{
      address: "https://lcd.joltify.io/",
      provider: "joltify"
    }],
    grpc: [{
      address: "grpc.joltify.io:443",
      provider: "joltify"
    }],
    "evm-http-jsonrpc": [{
      address: "https://evm.joltify.io/",
      provider: "joltify"
    }]
  },
  explorers: [{
    kind: "big dipper",
    url: "https://explorer.joltify.io/joltify",
    tx_page: "https://explorer.joltify.io/joltify/transactions/${txHash}",
    account_page: "https://explorer.joltify.io/joltify/accounts/${accountAddress}"
  }],
  keywords: ["rwa", "lending"]
};
var chain_default78 = info217;

// node_modules/chain-registry/esm/mainnet/joltify/ibc.js
var info218 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "cosmoshub",
    client_id: "07-tendermint-1307",
    connection_id: "connection-1041"
  },
  chain_2: {
    chain_name: "joltify",
    client_id: "07-tendermint-3",
    connection_id: "connection-2"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-866",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-2",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "joltify",
    client_id: "07-tendermint-4",
    connection_id: "connection-1"
  },
  chain_2: {
    chain_name: "noble",
    client_id: "07-tendermint-102",
    connection_id: "connection-94"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-81",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default62 = info218;

// node_modules/chain-registry/esm/mainnet/joltify/index.js
var assets78 = assets_default78;
var chain78 = chain_default78;
var ibc62 = ibc_default62;

// node_modules/chain-registry/esm/mainnet/juno/assets.js
var info219 = {
  $schema: "../assetlist.schema.json",
  chain_name: "juno",
  assets: [
    {
      description: "The native token of JUNO Chain",
      denom_units: [{
        denom: "ujuno",
        exponent: 0
      }, {
        denom: "juno",
        exponent: 6
      }],
      base: "ujuno",
      name: "Juno",
      display: "juno",
      symbol: "JUNO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.svg"
      },
      coingecko_id: "juno-network",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.svg"
      }],
      socials: {
        website: "https://junonetwork.io/",
        twitter: "https://twitter.com/JunoNetwork"
      }
    },
    {
      denom_units: [{
        denom: "ibc/C4CFF46FD6DE35CA4CF4CE031E643C8FDC9BA4B99AE598E9B0ED98FE3A2319F9",
        exponent: 0
      }, {
        denom: "atom",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/C4CFF46FD6DE35CA4CF4CE031E643C8FDC9BA4B99AE598E9B0ED98FE3A2319F9",
      name: "ATOM on Juno",
      display: "atom",
      symbol: "ATOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "cosmoshub",
          base_denom: "uatom",
          channel_id: "channel-207"
        },
        chain: {
          channel_id: "channel-1",
          path: "transfer/channel-1/uatom"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "cosmoshub",
          base_denom: "uatom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }
    },
    {
      description: "The native token cw20 for Neta on Juno Chain",
      type_asset: "cw20",
      address: "juno168ctmpyppk90d34p3jjy658zf5a5l3w8wk35wht6ccqj4mr0yv8s4j5awr",
      denom_units: [{
        denom: "cw20:juno168ctmpyppk90d34p3jjy658zf5a5l3w8wk35wht6ccqj4mr0yv8s4j5awr",
        exponent: 0
      }, {
        denom: "neta",
        exponent: 6
      }],
      base: "cw20:juno168ctmpyppk90d34p3jjy658zf5a5l3w8wk35wht6ccqj4mr0yv8s4j5awr",
      name: "Neta",
      display: "neta",
      symbol: "NETA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/neta.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/neta.svg"
      },
      coingecko_id: "neta",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/neta.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/neta.svg"
      }]
    },
    {
      description: "The native token cw20 for Marble DAO on Juno Chain",
      type_asset: "cw20",
      address: "juno1g2g7ucurum66d42g8k5twk34yegdq8c82858gz0tq2fc75zy7khssgnhjl",
      denom_units: [{
        denom: "cw20:juno1g2g7ucurum66d42g8k5twk34yegdq8c82858gz0tq2fc75zy7khssgnhjl",
        exponent: 0
      }, {
        denom: "marble",
        exponent: 3
      }],
      base: "cw20:juno1g2g7ucurum66d42g8k5twk34yegdq8c82858gz0tq2fc75zy7khssgnhjl",
      name: "Marble",
      display: "marble",
      symbol: "MARBLE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/marble.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/marble.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/marble.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/marble.svg"
      }]
    },
    {
      description: "Hope Galaxy is an NFT collection based on its own native Token $HOPE, a cw20 token on Juno chain.",
      type_asset: "cw20",
      address: "juno1re3x67ppxap48ygndmrc7har2cnc7tcxtm9nplcas4v0gc3wnmvs3s807z",
      denom_units: [{
        denom: "cw20:juno1re3x67ppxap48ygndmrc7har2cnc7tcxtm9nplcas4v0gc3wnmvs3s807z",
        exponent: 0
      }, {
        denom: "hope",
        exponent: 6
      }],
      base: "cw20:juno1re3x67ppxap48ygndmrc7har2cnc7tcxtm9nplcas4v0gc3wnmvs3s807z",
      name: "Hope Galaxy",
      display: "hope",
      symbol: "HOPE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hope.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hope.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hope.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hope.svg"
      }]
    },
    {
      description: "Racoon aims to simplify accessibility to AI, NFTs and Gambling on the Cosmos Ecosystem",
      type_asset: "cw20",
      address: "juno1r4pzw8f9z0sypct5l9j906d47z998ulwvhvqe5xdwgy8wf84583sxwh0pa",
      denom_units: [{
        denom: "cw20:juno1r4pzw8f9z0sypct5l9j906d47z998ulwvhvqe5xdwgy8wf84583sxwh0pa",
        exponent: 0
      }, {
        denom: "rac",
        exponent: 6
      }],
      base: "cw20:juno1r4pzw8f9z0sypct5l9j906d47z998ulwvhvqe5xdwgy8wf84583sxwh0pa",
      name: "Racoon",
      display: "rac",
      symbol: "RAC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/rac.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/rac.svg"
      },
      coingecko_id: "racoon",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/rac.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/rac.svg"
      }]
    },
    {
      description: "The native token of Marble DEX on Juno Chain",
      type_asset: "cw20",
      address: "juno1y9rf7ql6ffwkv02hsgd4yruz23pn4w97p75e2slsnkm0mnamhzysvqnxaq",
      denom_units: [{
        denom: "cw20:juno1y9rf7ql6ffwkv02hsgd4yruz23pn4w97p75e2slsnkm0mnamhzysvqnxaq",
        exponent: 0
      }, {
        denom: "block",
        exponent: 6
      }],
      base: "cw20:juno1y9rf7ql6ffwkv02hsgd4yruz23pn4w97p75e2slsnkm0mnamhzysvqnxaq",
      name: "Block",
      display: "block",
      symbol: "BLOCK",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/block.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/block.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/block.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/block.svg"
      }]
    },
    {
      description: "The DAO token to build consensus among Hong Kong People",
      type_asset: "cw20",
      address: "juno1tdjwrqmnztn2j3sj2ln9xnyps5hs48q3ddwjrz7jpv6mskappjys5czd49",
      denom_units: [{
        denom: "cw20:juno1tdjwrqmnztn2j3sj2ln9xnyps5hs48q3ddwjrz7jpv6mskappjys5czd49",
        exponent: 0,
        aliases: ["dhk"]
      }],
      base: "cw20:juno1tdjwrqmnztn2j3sj2ln9xnyps5hs48q3ddwjrz7jpv6mskappjys5czd49",
      name: "DHK",
      display: "dhk",
      symbol: "DHK",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/dhk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/dhk.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/dhk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/dhk.svg"
      }]
    },
    {
      description: "Token governance for Junoswap",
      type_asset: "cw20",
      address: "juno15u3dt79t6sxxa3x3kpkhzsy56edaa5a66wvt3kxmukqjz2sx0hes5sn38g",
      denom_units: [{
        denom: "cw20:juno15u3dt79t6sxxa3x3kpkhzsy56edaa5a66wvt3kxmukqjz2sx0hes5sn38g",
        exponent: 0
      }, {
        denom: "raw",
        exponent: 6
      }],
      base: "cw20:juno15u3dt79t6sxxa3x3kpkhzsy56edaa5a66wvt3kxmukqjz2sx0hes5sn38g",
      name: "JunoSwap",
      display: "raw",
      symbol: "RAW",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/raw.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/raw.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/raw.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/raw.svg"
      }]
    },
    {
      description: "Profit sharing token for Another.Software validator. Hold and receive dividends from Another.Software validator commissions!",
      type_asset: "cw20",
      address: "juno17wzaxtfdw5em7lc94yed4ylgjme63eh73lm3lutp2rhcxttyvpwsypjm4w",
      denom_units: [{
        denom: "cw20:juno17wzaxtfdw5em7lc94yed4ylgjme63eh73lm3lutp2rhcxttyvpwsypjm4w",
        exponent: 0
      }, {
        denom: "asvt",
        exponent: 6
      }],
      base: "cw20:juno17wzaxtfdw5em7lc94yed4ylgjme63eh73lm3lutp2rhcxttyvpwsypjm4w",
      name: "Another.Software Validator Token",
      display: "asvt",
      symbol: "ASVT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/asvt.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/asvt.png"
      }]
    },
    {
      description: "IBC HNS is HNS, coin of Handshake, decentralized root namesystem, but wrapped to cosmos for IBC support by Another.Software through Juno network.",
      type_asset: "cw20",
      address: "juno1ur4jx0sxchdevahep7fwq28yk4tqsrhshdtylz46yka3uf6kky5qllqp4k",
      denom_units: [{
        denom: "cw20:juno1ur4jx0sxchdevahep7fwq28yk4tqsrhshdtylz46yka3uf6kky5qllqp4k",
        exponent: 0
      }, {
        denom: "hns",
        exponent: 6
      }],
      base: "cw20:juno1ur4jx0sxchdevahep7fwq28yk4tqsrhshdtylz46yka3uf6kky5qllqp4k",
      name: "IBC HNS (Handshake)",
      display: "hns",
      symbol: "HNS",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hns.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hns.svg"
      }]
    },
    {
      description: "DAO dedicated to building tools on the Juno Network",
      type_asset: "cw20",
      address: "juno1n7n7d5088qlzlj37e9mgmkhx6dfgtvt02hqxq66lcap4dxnzdhwqfmgng3",
      denom_units: [{
        denom: "cw20:juno1n7n7d5088qlzlj37e9mgmkhx6dfgtvt02hqxq66lcap4dxnzdhwqfmgng3",
        exponent: 0
      }, {
        denom: "joe",
        exponent: 6
      }],
      base: "cw20:juno1n7n7d5088qlzlj37e9mgmkhx6dfgtvt02hqxq66lcap4dxnzdhwqfmgng3",
      name: "JoeDAO",
      display: "joe",
      symbol: "JOE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/joe.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/joe.png"
      }]
    },
    {
      description: "Governance Token for Digital Land Acquisition DAO",
      type_asset: "cw20",
      address: "juno1sfwye65qxcfsc837gu5qcprcz7w49gkv3wnat04764ld76hy3arqs779tr",
      denom_units: [{
        denom: "cw20:juno1sfwye65qxcfsc837gu5qcprcz7w49gkv3wnat04764ld76hy3arqs779tr",
        exponent: 0
      }, {
        denom: "dla",
        exponent: 6
      }],
      base: "cw20:juno1sfwye65qxcfsc837gu5qcprcz7w49gkv3wnat04764ld76hy3arqs779tr",
      name: "Digital Land Acquisition DAO",
      display: "dla",
      symbol: "DLA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/dla.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/dla.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/dla.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/dla.svg"
      }]
    },
    {
      description: "DeFi gaming platform built on Juno",
      type_asset: "cw20",
      address: "juno1j0a9ymgngasfn3l5me8qpd53l5zlm9wurfdk7r65s5mg6tkxal3qpgf5se",
      denom_units: [{
        denom: "cw20:juno1j0a9ymgngasfn3l5me8qpd53l5zlm9wurfdk7r65s5mg6tkxal3qpgf5se",
        exponent: 0
      }, {
        denom: "glto",
        exponent: 6
      }],
      base: "cw20:juno1j0a9ymgngasfn3l5me8qpd53l5zlm9wurfdk7r65s5mg6tkxal3qpgf5se",
      name: "Gelotto",
      display: "glto",
      symbol: "GLTO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.svg"
      }]
    },
    {
      description: "Gelotto Year 1 Grand Prize Token",
      type_asset: "cw20",
      address: "juno1gz8cf86zr4vw9cjcyyv432vgdaecvr9n254d3uwwkx9rermekddsxzageh",
      denom_units: [{
        denom: "cw20:juno1gz8cf86zr4vw9cjcyyv432vgdaecvr9n254d3uwwkx9rermekddsxzageh",
        exponent: 0
      }, {
        denom: "gkey",
        exponent: 6
      }],
      base: "cw20:juno1gz8cf86zr4vw9cjcyyv432vgdaecvr9n254d3uwwkx9rermekddsxzageh",
      name: "GKey",
      display: "gkey",
      symbol: "GKEY",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/gkey.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/gkey.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/gkey.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/gkey.svg"
      }]
    },
    {
      description: "The native token cw20 for BlackHole on Juno Chain",
      type_asset: "cw20",
      address: "juno1t46z6hg8vvsena7sue0vg6w85ljar3cundplkre9sz0skeqkap9sxyyy6m",
      denom_units: [{
        denom: "cw20:juno1t46z6hg8vvsena7sue0vg6w85ljar3cundplkre9sz0skeqkap9sxyyy6m",
        exponent: 0
      }, {
        denom: "hole",
        exponent: 6
      }],
      base: "cw20:juno1t46z6hg8vvsena7sue0vg6w85ljar3cundplkre9sz0skeqkap9sxyyy6m",
      name: "BlackHole",
      display: "hole",
      symbol: "HOLE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hole.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hole.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hole.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hole.svg"
      }]
    },
    {
      description: "Staking derivative seJUNO for staked JUNO",
      type_asset: "cw20",
      address: "juno1dd0k0um5rqncfueza62w9sentdfh3ec4nw4aq4lk5hkjl63vljqscth9gv",
      denom_units: [{
        denom: "cw20:juno1dd0k0um5rqncfueza62w9sentdfh3ec4nw4aq4lk5hkjl63vljqscth9gv",
        exponent: 0
      }, {
        denom: "sejuno",
        exponent: 6
      }],
      base: "cw20:juno1dd0k0um5rqncfueza62w9sentdfh3ec4nw4aq4lk5hkjl63vljqscth9gv",
      name: "StakeEasy seJUNO",
      display: "sejuno",
      symbol: "SEJUNO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sejuno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sejuno.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sejuno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sejuno.svg"
      }]
    },
    {
      description: "Staking derivative bJUNO for staked JUNO",
      type_asset: "cw20",
      address: "juno1wwnhkagvcd3tjz6f8vsdsw5plqnw8qy2aj3rrhqr2axvktzv9q2qz8jxn3",
      denom_units: [{
        denom: "cw20:juno1wwnhkagvcd3tjz6f8vsdsw5plqnw8qy2aj3rrhqr2axvktzv9q2qz8jxn3",
        exponent: 0
      }, {
        denom: "bjuno",
        exponent: 6
      }],
      base: "cw20:juno1wwnhkagvcd3tjz6f8vsdsw5plqnw8qy2aj3rrhqr2axvktzv9q2qz8jxn3",
      name: "StakeEasy bJUNO",
      display: "bjuno",
      symbol: "BJUNO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/bjuno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/bjuno.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/bjuno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/bjuno.svg"
      }]
    },
    {
      description: "Solarbank DAO Governance Token for speeding up the shift to renewable and green energy",
      type_asset: "cw20",
      address: "juno159q8t5g02744lxq8lfmcn6f78qqulq9wn3y9w7lxjgkz4e0a6kvsfvapse",
      denom_units: [{
        denom: "cw20:juno159q8t5g02744lxq8lfmcn6f78qqulq9wn3y9w7lxjgkz4e0a6kvsfvapse",
        exponent: 0
      }, {
        denom: "solar",
        exponent: 6
      }],
      base: "cw20:juno159q8t5g02744lxq8lfmcn6f78qqulq9wn3y9w7lxjgkz4e0a6kvsfvapse",
      name: "Solarbank DAO",
      display: "solar",
      symbol: "SOLAR",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/solar.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/solar.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/solar.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/solar.svg"
      }]
    },
    {
      description: "StakeEasy governance token",
      type_asset: "cw20",
      address: "juno19rqljkh95gh40s7qdx40ksx3zq5tm4qsmsrdz9smw668x9zdr3lqtg33mf",
      denom_units: [{
        denom: "cw20:juno19rqljkh95gh40s7qdx40ksx3zq5tm4qsmsrdz9smw668x9zdr3lqtg33mf",
        exponent: 0
      }, {
        denom: "seasy",
        exponent: 6
      }],
      base: "cw20:juno19rqljkh95gh40s7qdx40ksx3zq5tm4qsmsrdz9smw668x9zdr3lqtg33mf",
      name: "StakeEasy SEASY",
      display: "seasy",
      symbol: "SEASY",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/seasy.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/seasy.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/seasy.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/seasy.svg"
      }]
    },
    {
      description: "The native token cw20 for MuseDAO on Juno Chain",
      type_asset: "cw20",
      address: "juno1p8x807f6h222ur0vssqy3qk6mcpa40gw2pchquz5atl935t7kvyq894ne3",
      denom_units: [{
        denom: "cw20:juno1p8x807f6h222ur0vssqy3qk6mcpa40gw2pchquz5atl935t7kvyq894ne3",
        exponent: 0
      }, {
        denom: "muse",
        exponent: 6
      }],
      base: "cw20:juno1p8x807f6h222ur0vssqy3qk6mcpa40gw2pchquz5atl935t7kvyq894ne3",
      name: "MuseDAO",
      display: "muse",
      symbol: "MUSE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/muse.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/muse.png"
      }]
    },
    {
      description: "The native token cw20 for Loop Finance on Juno Chain",
      type_asset: "cw20",
      address: "juno1qsrercqegvs4ye0yqg93knv73ye5dc3prqwd6jcdcuj8ggp6w0us66deup",
      denom_units: [{
        denom: "cw20:juno1qsrercqegvs4ye0yqg93knv73ye5dc3prqwd6jcdcuj8ggp6w0us66deup",
        exponent: 0
      }, {
        denom: "loop",
        exponent: 6
      }],
      base: "cw20:juno1qsrercqegvs4ye0yqg93knv73ye5dc3prqwd6jcdcuj8ggp6w0us66deup",
      name: "Loop Finance",
      display: "loop",
      symbol: "LOOP",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/loop.png"
      },
      coingecko_id: "loop",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/loop.png"
      }]
    },
    {
      description: "The deprecated cw20 token for Fanfury on Juno Chain",
      type_asset: "cw20",
      address: "juno1cltgm8v842gu54srmejewghnd6uqa26lzkpa635wzra9m9xuudkqa2gtcz",
      denom_units: [{
        denom: "cw20:juno1cltgm8v842gu54srmejewghnd6uqa26lzkpa635wzra9m9xuudkqa2gtcz",
        exponent: 0
      }, {
        denom: "fury",
        exponent: 6
      }],
      base: "cw20:juno1cltgm8v842gu54srmejewghnd6uqa26lzkpa635wzra9m9xuudkqa2gtcz",
      name: "FURY.legacy",
      display: "fury",
      symbol: "FURY.legacy",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/fanfury.png"
      },
      coingecko_id: "fanfury",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/fanfury.png"
      }]
    },
    {
      description: "The native token cw20 for PHMN on Juno Chain",
      extended_description: "$PHMN is the governance token of a distributed validator. Similar to PoS chains, each holder possesses voting rights proportionate to the number of locked tokens. PHMN holders can govern the POSTHUMAN validator via DAODAO. For instance, decisions such as diversifying the treasury, updating the validator's commission rate, or exiting the network are determined by the PHMN community.",
      type_asset: "cw20",
      address: "juno1rws84uz7969aaa7pej303udhlkt3j9ca0l3egpcae98jwak9quzq8szn2l",
      denom_units: [{
        denom: "cw20:juno1rws84uz7969aaa7pej303udhlkt3j9ca0l3egpcae98jwak9quzq8szn2l",
        exponent: 0
      }, {
        denom: "phmn",
        exponent: 6
      }],
      base: "cw20:juno1rws84uz7969aaa7pej303udhlkt3j9ca0l3egpcae98jwak9quzq8szn2l",
      name: "POSTHUMAN",
      display: "phmn",
      symbol: "PHMN",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/phmn.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/phmn.svg"
      },
      coingecko_id: "posthuman",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/phmn.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/phmn.svg"
      }],
      socials: {
        website: "https://posthuman.digital/",
        twitter: "https://twitter.com/POSTHUMAN_DVS"
      }
    },
    {
      description: "The native token cw20 for Hopers on Juno Chain",
      type_asset: "cw20",
      address: "juno1u45shlp0q4gcckvsj06ss4xuvsu0z24a0d0vr9ce6r24pht4e5xq7q995n",
      denom_units: [{
        denom: "cw20:juno1u45shlp0q4gcckvsj06ss4xuvsu0z24a0d0vr9ce6r24pht4e5xq7q995n",
        exponent: 0
      }, {
        denom: "hopers",
        exponent: 6
      }],
      base: "cw20:juno1u45shlp0q4gcckvsj06ss4xuvsu0z24a0d0vr9ce6r24pht4e5xq7q995n",
      name: "Hopers",
      display: "hopers",
      symbol: "HOPERS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hopers.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hopers.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hopers.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hopers.svg"
      }]
    },
    {
      description: "RED",
      type_asset: "cw20",
      address: "juno1g647t78y2ulqlm3lss8rs3d0spzd0teuwhdvnqn92tr79yltk9dq2h24za",
      denom_units: [{
        denom: "cw20:juno1g647t78y2ulqlm3lss8rs3d0spzd0teuwhdvnqn92tr79yltk9dq2h24za",
        exponent: 0
      }, {
        denom: "red",
        exponent: 6
      }],
      base: "cw20:juno1g647t78y2ulqlm3lss8rs3d0spzd0teuwhdvnqn92tr79yltk9dq2h24za",
      name: "Red",
      display: "red",
      symbol: "RED",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/red.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/red.png"
      }]
    },
    {
      description: "BLUE",
      type_asset: "cw20",
      address: "juno14q8kk464fafql2fwmlsgvgcdl6h2csqpzv4hr025fmcvgjahpess32k0j7",
      denom_units: [{
        denom: "cw20:juno14q8kk464fafql2fwmlsgvgcdl6h2csqpzv4hr025fmcvgjahpess32k0j7",
        exponent: 0
      }, {
        denom: "blue",
        exponent: 6
      }],
      base: "cw20:juno14q8kk464fafql2fwmlsgvgcdl6h2csqpzv4hr025fmcvgjahpess32k0j7",
      name: "Blue",
      display: "blue",
      symbol: "BLUE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/blue.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/blue.png"
      }]
    },
    {
      description: "WYND DAO Governance Token",
      type_asset: "cw20",
      address: "juno1mkw83sv6c7sjdvsaplrzc8yaes9l42p4mhy0ssuxjnyzl87c9eps7ce3m9",
      denom_units: [{
        denom: "cw20:juno1mkw83sv6c7sjdvsaplrzc8yaes9l42p4mhy0ssuxjnyzl87c9eps7ce3m9",
        exponent: 0
      }, {
        denom: "wynd",
        exponent: 6
      }],
      base: "cw20:juno1mkw83sv6c7sjdvsaplrzc8yaes9l42p4mhy0ssuxjnyzl87c9eps7ce3m9",
      name: "Wynd DAO Governance Token",
      display: "wynd",
      symbol: "WYND",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/wynd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/wynd.svg"
      },
      coingecko_id: "wynd",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/wynd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/wynd.svg"
      }]
    },
    {
      description: "Bored APE IBC club token",
      type_asset: "cw20",
      address: "juno1s2dp05rspeuzzpzyzdchk262szehrtfpz847uvf98cnwh53ulx4qg20qwj",
      denom_units: [{
        denom: "cw20:juno1s2dp05rspeuzzpzyzdchk262szehrtfpz847uvf98cnwh53ulx4qg20qwj",
        exponent: 0
      }, {
        denom: "banana",
        exponent: 6
      }],
      base: "cw20:juno1s2dp05rspeuzzpzyzdchk262szehrtfpz847uvf98cnwh53ulx4qg20qwj",
      name: "Banana Token",
      display: "banana",
      symbol: "BANANA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/banana.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/banana.png"
      }]
    },
    {
      description: "nRide Token",
      type_asset: "cw20",
      address: "juno1qmlchtmjpvu0cr7u0tad2pq8838h6farrrjzp39eqa9xswg7teussrswlq",
      denom_units: [{
        denom: "cw20:juno1qmlchtmjpvu0cr7u0tad2pq8838h6farrrjzp39eqa9xswg7teussrswlq",
        exponent: 0
      }, {
        denom: "nride",
        exponent: 6
      }],
      base: "cw20:juno1qmlchtmjpvu0cr7u0tad2pq8838h6farrrjzp39eqa9xswg7teussrswlq",
      name: "nRide Token",
      display: "nride",
      symbol: "NRIDE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/nride.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/nride.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/nride.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/nride.svg"
      }]
    },
    {
      description: "Signal Art and Gaming on Juno",
      type_asset: "cw20",
      address: "juno14lycavan8gvpjn97aapzvwmsj8kyrvf644p05r0hu79namyj3ens87650k",
      denom_units: [{
        denom: "cw20:juno14lycavan8gvpjn97aapzvwmsj8kyrvf644p05r0hu79namyj3ens87650k",
        exponent: 0
      }, {
        denom: "sgnl",
        exponent: 6
      }],
      base: "cw20:juno14lycavan8gvpjn97aapzvwmsj8kyrvf644p05r0hu79namyj3ens87650k",
      name: "Signal",
      display: "sgnl",
      symbol: "SGNL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sgnl.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sgnl.png"
      }]
    },
    {
      description: "Governance and utility token for the Jun\xF8 Apes NFT platform on Juno",
      type_asset: "cw20",
      address: "juno1zkwveux7y6fmsr88atf3cyffx96p0c96qr8tgcsj7vfnhx7sal3s3zu3ps",
      denom_units: [{
        denom: "cw20:juno1zkwveux7y6fmsr88atf3cyffx96p0c96qr8tgcsj7vfnhx7sal3s3zu3ps",
        exponent: 0
      }, {
        denom: "jape",
        exponent: 6
      }],
      base: "cw20:juno1zkwveux7y6fmsr88atf3cyffx96p0c96qr8tgcsj7vfnhx7sal3s3zu3ps",
      name: "Jun\xF8 Apes",
      display: "jape",
      symbol: "JAPE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/jape.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/jape.png"
      }]
    },
    {
      description: "A community meme token with a fantasy fiction storyline and comic based NFTs on Juno",
      type_asset: "cw20",
      address: "juno12wxyvtqe76x2a5jj6ckp2hfq8v32m6rvyyxwwufl2tksqvkt7whqczv6pa",
      denom_units: [{
        denom: "cw20:juno12wxyvtqe76x2a5jj6ckp2hfq8v32m6rvyyxwwufl2tksqvkt7whqczv6pa",
        exponent: 0
      }, {
        denom: "catom",
        exponent: 6
      }],
      base: "cw20:juno12wxyvtqe76x2a5jj6ckp2hfq8v32m6rvyyxwwufl2tksqvkt7whqczv6pa",
      name: "Catom",
      display: "catom",
      symbol: "CATOM",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/catom.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/catom.png"
      }]
    },
    {
      description: "Utility token of Howl.social, an on chain micro-blogging platform on Juno",
      type_asset: "cw20",
      address: "juno1g0wuyu2f49ncf94r65278puxzclf5arse9f3kvffxyv4se4vgdmsk4dvqz",
      denom_units: [{
        denom: "cw20:juno1g0wuyu2f49ncf94r65278puxzclf5arse9f3kvffxyv4se4vgdmsk4dvqz",
        exponent: 0
      }, {
        denom: "howl",
        exponent: 6
      }],
      base: "cw20:juno1g0wuyu2f49ncf94r65278puxzclf5arse9f3kvffxyv4se4vgdmsk4dvqz",
      name: "Howl",
      display: "howl",
      symbol: "HOWL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/howl.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/howl.png"
      }]
    },
    {
      description: "Inspired by Bonk. A community project to celebrate the settlers of JunoNetwork.",
      type_asset: "cw20",
      address: "juno1u8cr3hcjvfkzxcaacv9q75uw9hwjmn8pucc93pmy6yvkzz79kh3qncca8x",
      denom_units: [{
        denom: "cw20:juno1u8cr3hcjvfkzxcaacv9q75uw9hwjmn8pucc93pmy6yvkzz79kh3qncca8x",
        exponent: 0
      }, {
        denom: "fox",
        exponent: 6
      }],
      base: "cw20:juno1u8cr3hcjvfkzxcaacv9q75uw9hwjmn8pucc93pmy6yvkzz79kh3qncca8x",
      name: "Juno Fox",
      display: "fox",
      symbol: "FOX",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/fox.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/fox.png"
      }]
    },
    {
      description: "Evmos Guardians governance token.",
      type_asset: "cw20",
      address: "juno1xekkh27punj0uxruv3gvuydyt856fax0nu750xns99t2qcxp7xmsqwhfma",
      denom_units: [{
        denom: "cw20:juno1xekkh27punj0uxruv3gvuydyt856fax0nu750xns99t2qcxp7xmsqwhfma",
        exponent: 0
      }, {
        denom: "grdn",
        exponent: 6
      }],
      base: "cw20:juno1xekkh27punj0uxruv3gvuydyt856fax0nu750xns99t2qcxp7xmsqwhfma",
      name: "Guardian",
      display: "grdn",
      symbol: "GRDN",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/guardian.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/guardian.png"
      }]
    },
    {
      description: "Mini Punks Token",
      type_asset: "cw20",
      address: "juno166heaxlyntd33a5euh4rrz26svhean4klzw594esmd02l4atan6sazy2my",
      denom_units: [{
        denom: "cw20:juno166heaxlyntd33a5euh4rrz26svhean4klzw594esmd02l4atan6sazy2my",
        exponent: 0
      }, {
        denom: "mnpu",
        exponent: 6
      }],
      base: "cw20:juno166heaxlyntd33a5euh4rrz26svhean4klzw594esmd02l4atan6sazy2my",
      name: "Mini Punks",
      display: "mnpu",
      symbol: "MNPU",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/mnpu.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/mnpu.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/mnpu.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/mnpu.svg"
      }]
    },
    {
      description: "Kleomedes Token",
      extended_description: "Kleomedes is an infrastructure provider that self-hosts nodes that validate IBC networks. We are active in supporting the chains we validate through providing infrastructure support in the form of RPC endpoints and relayers.\n\nAs a DAO, we have a community of delegators who are active in the discussion of governance on all the chains we validate. We are one of the only validators in the Cosmos Ecosystem that places 100% of profits under the control of DAO governance.\n\nWe support innovation in the Cosmos Ecosystem by funding and supporting projects that we believe, support the growth and decentralization of the networks we validate.",
      type_asset: "cw20",
      address: "juno10gthz5ufgrpuk5cscve2f0hjp56wgp90psqxcrqlg4m9mcu9dh8q4864xy",
      denom_units: [{
        denom: "cw20:juno10gthz5ufgrpuk5cscve2f0hjp56wgp90psqxcrqlg4m9mcu9dh8q4864xy",
        exponent: 0
      }, {
        denom: "kleo",
        exponent: 6
      }],
      base: "cw20:juno10gthz5ufgrpuk5cscve2f0hjp56wgp90psqxcrqlg4m9mcu9dh8q4864xy",
      name: "Kleomedes",
      display: "kleo",
      symbol: "KLEO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/kleomedes.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/kleomedes.png"
      }]
    },
    {
      description: "Sikoba Governance Token",
      type_asset: "cw20",
      address: "juno1qqwf3lkfjhp77yja7gmg3y95pda0e5xctqrdhf3wvwdd79flagvqfgrgxp",
      denom_units: [{
        denom: "cw20:juno1qqwf3lkfjhp77yja7gmg3y95pda0e5xctqrdhf3wvwdd79flagvqfgrgxp",
        exponent: 0
      }, {
        denom: "sikoba",
        exponent: 6
      }],
      base: "cw20:juno1qqwf3lkfjhp77yja7gmg3y95pda0e5xctqrdhf3wvwdd79flagvqfgrgxp",
      name: "Sikoba Token",
      display: "sikoba",
      symbol: "SKOJ",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sikoba.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sikoba.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sikoba.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sikoba.svg"
      }]
    },
    {
      description: "Shiba Cosmos",
      type_asset: "cw20",
      address: "juno1x5qt47rw84c4k6xvvywtrd40p8gxjt8wnmlahlqg07qevah3f8lqwxfs7z",
      denom_units: [{
        denom: "cw20:juno1x5qt47rw84c4k6xvvywtrd40p8gxjt8wnmlahlqg07qevah3f8lqwxfs7z",
        exponent: 0
      }, {
        denom: "shibac",
        exponent: 6
      }],
      base: "cw20:juno1x5qt47rw84c4k6xvvywtrd40p8gxjt8wnmlahlqg07qevah3f8lqwxfs7z",
      name: "ShibaCosmos",
      display: "shibac",
      symbol: "SHIBAC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/shibacosmos.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/shibacosmos.png"
      }]
    },
    {
      description: "Celestims",
      type_asset: "cw20",
      address: "juno1ngww7zxak55fql42wmyqrr4rhzpne24hhs4p3w4cwhcdgqgr3hxsmzl9zg",
      denom_units: [{
        denom: "cw20:juno1ngww7zxak55fql42wmyqrr4rhzpne24hhs4p3w4cwhcdgqgr3hxsmzl9zg",
        exponent: 0
      }, {
        denom: "clst",
        exponent: 6
      }],
      base: "cw20:juno1ngww7zxak55fql42wmyqrr4rhzpne24hhs4p3w4cwhcdgqgr3hxsmzl9zg",
      name: "Celestims",
      display: "clst",
      symbol: "CLST",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/celestims.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/celestims.png"
      }]
    },
    {
      description: "A revolutionary DAO created to bring clean drinking water to men, women, and children worldwide. We hope you join us on our journey!",
      type_asset: "cw20",
      address: "juno1m4h8q4p305wgy7vkux0w6e5ylhqll3s6pmadhxkhqtuwd5wlxhxs8xklsw",
      denom_units: [{
        denom: "cw20:juno1m4h8q4p305wgy7vkux0w6e5ylhqll3s6pmadhxkhqtuwd5wlxhxs8xklsw",
        exponent: 0
      }, {
        denom: "watr",
        exponent: 6
      }],
      base: "cw20:juno1m4h8q4p305wgy7vkux0w6e5ylhqll3s6pmadhxkhqtuwd5wlxhxs8xklsw",
      name: "WATR",
      display: "watr",
      symbol: "WATR",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/watr.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/watr.png"
      }]
    },
    {
      description: "An innovative DAO dedicated to housing the most vulnerable",
      type_asset: "cw20",
      address: "juno1ju8k8sqwsqu5k6umrypmtyqu2wqcpnrkf4w4mntvl0javt4nma7s8lzgss",
      denom_units: [{
        denom: "cw20:juno1ju8k8sqwsqu5k6umrypmtyqu2wqcpnrkf4w4mntvl0javt4nma7s8lzgss",
        exponent: 0
      }, {
        denom: "casa",
        exponent: 6
      }],
      base: "cw20:juno1ju8k8sqwsqu5k6umrypmtyqu2wqcpnrkf4w4mntvl0javt4nma7s8lzgss",
      name: "Casa",
      display: "casa",
      symbol: "CASA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/casa.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/casa.png"
      }]
    },
    {
      description: "Social Impact DAO providing showers, meals, and vehicles to the homeless",
      type_asset: "cw20",
      address: "juno1j4ux0f6gt7e82z7jdpm25v4g2gts880ap64rdwa49989wzhd0dfqed6vqm",
      denom_units: [{
        denom: "cw20:juno1j4ux0f6gt7e82z7jdpm25v4g2gts880ap64rdwa49989wzhd0dfqed6vqm",
        exponent: 0
      }, {
        denom: "summit",
        exponent: 6
      }],
      base: "cw20:juno1j4ux0f6gt7e82z7jdpm25v4g2gts880ap64rdwa49989wzhd0dfqed6vqm",
      name: "Summit",
      display: "summit",
      symbol: "SUMMIT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/summit.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/summit.png"
      }]
    },
    {
      description: "Social Impact DAO dedicated to combatting food insecurity and malnutrition",
      type_asset: "cw20",
      address: "juno13ca2g36ng6etcfhr9qxx352uw2n5e92np54thfkm3w3nzlhsgvwsjaqlyq",
      denom_units: [{
        denom: "cw20:juno13ca2g36ng6etcfhr9qxx352uw2n5e92np54thfkm3w3nzlhsgvwsjaqlyq",
        exponent: 0
      }, {
        denom: "manna",
        exponent: 6
      }],
      base: "cw20:juno13ca2g36ng6etcfhr9qxx352uw2n5e92np54thfkm3w3nzlhsgvwsjaqlyq",
      name: "Manna",
      display: "manna",
      symbol: "MANNA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/manna.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/manna.png"
      }]
    },
    {
      description: "Social Impact DAO focused on youth empowerment",
      type_asset: "cw20",
      address: "juno12etxwkxvms0uy9ak8g3pyq6a53myukufdnx82pakzmjmpm77a0ksr9gs5v",
      denom_units: [{
        denom: "cw20:juno12etxwkxvms0uy9ak8g3pyq6a53myukufdnx82pakzmjmpm77a0ksr9gs5v",
        exponent: 0
      }, {
        denom: "empwr",
        exponent: 6
      }],
      base: "cw20:juno12etxwkxvms0uy9ak8g3pyq6a53myukufdnx82pakzmjmpm77a0ksr9gs5v",
      name: "EMPWR",
      display: "empwr",
      symbol: "EMPWR",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/empwr.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/empwr.png"
      }]
    },
    {
      description: "Join us in fighting against world hunger",
      type_asset: "cw20",
      address: "juno1525fuspletvzykpgr2atxpymu9le4mghd7qq4a4u23uwqzc2f3fq7fmafd",
      denom_units: [{
        denom: "cw20:juno1525fuspletvzykpgr2atxpymu9le4mghd7qq4a4u23uwqzc2f3fq7fmafd",
        exponent: 0
      }, {
        denom: "middle",
        exponent: 6
      }],
      base: "cw20:juno1525fuspletvzykpgr2atxpymu9le4mghd7qq4a4u23uwqzc2f3fq7fmafd",
      name: "Middle",
      display: "middle",
      symbol: "MIDDLE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/middle.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/middle.png"
      }]
    },
    {
      description: "Social Impact DAO taking a wholistic approach to helping abused and mentally ill women and children",
      type_asset: "cw20",
      address: "juno17703kcxtsg37hryxnestejyyycuv5yyvnghp2e7w0kqvafnnyetsgzq62w",
      denom_units: [{
        denom: "cw20:juno17703kcxtsg37hryxnestejyyycuv5yyvnghp2e7w0kqvafnnyetsgzq62w",
        exponent: 0
      }, {
        denom: "sunset",
        exponent: 6
      }],
      base: "cw20:juno17703kcxtsg37hryxnestejyyycuv5yyvnghp2e7w0kqvafnnyetsgzq62w",
      name: "Sunset",
      display: "sunset",
      symbol: "SUNSET",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sunset.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sunset.png"
      }]
    },
    {
      description: "Social Impact DAO dedicated to helping restore and protect our environment",
      type_asset: "cw20",
      address: "juno1uu3rxu7w7fpfj4sl4xpxppgymk57mzdzn6kg7492jdxh5dwk7d2qq9429e",
      denom_units: [{
        denom: "cw20:juno1uu3rxu7w7fpfj4sl4xpxppgymk57mzdzn6kg7492jdxh5dwk7d2qq9429e",
        exponent: 0
      }, {
        denom: "tree",
        exponent: 6
      }],
      base: "cw20:juno1uu3rxu7w7fpfj4sl4xpxppgymk57mzdzn6kg7492jdxh5dwk7d2qq9429e",
      name: "Living Tree",
      display: "tree",
      symbol: "TREE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/livingtree.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/livingtree.png"
      }]
    },
    {
      description: "Evmos Guardians' Invaders DAO token.",
      type_asset: "cw20",
      address: "juno1jwdy7v4egw36pd84aeks3ww6n8k7zhsumd4ac8q5lts83ppxueus4626e8",
      denom_units: [{
        denom: "cw20:juno1jwdy7v4egw36pd84aeks3ww6n8k7zhsumd4ac8q5lts83ppxueus4626e8",
        exponent: 0
      }, {
        denom: "invdrs",
        exponent: 6
      }],
      base: "cw20:juno1jwdy7v4egw36pd84aeks3ww6n8k7zhsumd4ac8q5lts83ppxueus4626e8",
      name: "Invaders",
      display: "invdrs",
      symbol: "INVDRS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/invdrs.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/invdrs.png"
      }]
    },
    {
      description: "Apemos",
      type_asset: "cw20",
      address: "juno1jrr0tuuzxrrwcg6hgeqhw5wqpck2y55734e7zcrp745aardlp0qqg8jz06",
      denom_units: [{
        denom: "cw20:juno1jrr0tuuzxrrwcg6hgeqhw5wqpck2y55734e7zcrp745aardlp0qqg8jz06",
        exponent: 0
      }, {
        denom: "apemos",
        exponent: 6
      }],
      base: "cw20:juno1jrr0tuuzxrrwcg6hgeqhw5wqpck2y55734e7zcrp745aardlp0qqg8jz06",
      name: "Apemos",
      display: "apemos",
      symbol: "APEMOS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/apemos.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/apemos.png"
      }]
    },
    {
      description: "The First Doge on Osmosis",
      type_asset: "cw20",
      address: "juno1ytymtllllsp3hfmndvcp802p2xmy5s8m59ufel8xv9ahyxyfs4hs4kd4je",
      denom_units: [{
        denom: "cw20:juno1ytymtllllsp3hfmndvcp802p2xmy5s8m59ufel8xv9ahyxyfs4hs4kd4je",
        exponent: 0
      }, {
        denom: "osdoge",
        exponent: 6
      }],
      base: "cw20:juno1ytymtllllsp3hfmndvcp802p2xmy5s8m59ufel8xv9ahyxyfs4hs4kd4je",
      name: "Osmosis Doge",
      display: "osdoge",
      symbol: "OSDOGE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/osdoge.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/osdoge.png"
      }]
    },
    {
      description: "Doge Apr",
      type_asset: "cw20",
      address: "juno1k2ruzzvvwwtwny6gq6kcwyfhkzahaunp685wmz4hafplduekj98q9hgs6d",
      denom_units: [{
        denom: "cw20:juno1k2ruzzvvwwtwny6gq6kcwyfhkzahaunp685wmz4hafplduekj98q9hgs6d",
        exponent: 0
      }, {
        denom: "doga",
        exponent: 6
      }],
      base: "cw20:juno1k2ruzzvvwwtwny6gq6kcwyfhkzahaunp685wmz4hafplduekj98q9hgs6d",
      name: "Doge Apr",
      display: "doga",
      symbol: "DOGA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/doga.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/doga.png"
      }]
    },
    {
      description: "Osmo Pepe",
      type_asset: "cw20",
      address: "juno1zqrj3ta4u7ylv0wqzd8t8q3jrr9rdmn43zuzp9zemeunecnhy8fss778g7",
      denom_units: [{
        denom: "cw20:juno1zqrj3ta4u7ylv0wqzd8t8q3jrr9rdmn43zuzp9zemeunecnhy8fss778g7",
        exponent: 0
      }, {
        denom: "pepe",
        exponent: 6
      }],
      base: "cw20:juno1zqrj3ta4u7ylv0wqzd8t8q3jrr9rdmn43zuzp9zemeunecnhy8fss778g7",
      name: "Osmo Pepe",
      display: "pepe",
      symbol: "PEPE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/pepe.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/pepe.png"
      }]
    },
    {
      description: "Catmos",
      type_asset: "cw20",
      address: "juno1f5datjdse3mdgrapwuzs3prl7pvxxht48ns6calnn0t77v2s9l8s0qu488",
      denom_units: [{
        denom: "cw20:juno1f5datjdse3mdgrapwuzs3prl7pvxxht48ns6calnn0t77v2s9l8s0qu488",
        exponent: 0
      }, {
        denom: "catmos",
        exponent: 6
      }],
      base: "cw20:juno1f5datjdse3mdgrapwuzs3prl7pvxxht48ns6calnn0t77v2s9l8s0qu488",
      name: "Catmos",
      display: "catmos",
      symbol: "CATMOS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/catmos.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/catmos.png"
      }]
    },
    {
      description: "Spacer",
      type_asset: "cw20",
      address: "juno1dyyf7pxeassxvftf570krv7fdf5r8e4r04mp99h0mllsqzp3rs4q7y8yqg",
      denom_units: [{
        denom: "cw20:juno1dyyf7pxeassxvftf570krv7fdf5r8e4r04mp99h0mllsqzp3rs4q7y8yqg",
        exponent: 0
      }, {
        denom: "spacer",
        exponent: 6
      }],
      base: "cw20:juno1dyyf7pxeassxvftf570krv7fdf5r8e4r04mp99h0mllsqzp3rs4q7y8yqg",
      name: "Spacer",
      display: "spacer",
      symbol: "SPACER",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/spacer.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/spacer.png"
      }]
    },
    {
      description: "Light: LumenX community DAO treasury token",
      type_asset: "cw20",
      address: "juno1dpany8c0lj526lsa02sldv7shzvnw5dt5ues72rk35hd69rrydxqeraz8l",
      denom_units: [{
        denom: "cw20:juno1dpany8c0lj526lsa02sldv7shzvnw5dt5ues72rk35hd69rrydxqeraz8l",
        exponent: 0
      }, {
        denom: "light",
        exponent: 9
      }],
      base: "cw20:juno1dpany8c0lj526lsa02sldv7shzvnw5dt5ues72rk35hd69rrydxqeraz8l",
      name: "LIGHT",
      display: "light",
      symbol: "LIGHT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/light.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/light.png"
      }]
    },
    {
      description: "Mille: the 1000th token on osmosis",
      type_asset: "cw20",
      address: "juno1llg7q2d5dqlrqzh5dxv8c7kzzjszld34s5vktqmlmaaxqjssz43sxyhq0d",
      denom_units: [{
        denom: "cw20:juno1llg7q2d5dqlrqzh5dxv8c7kzzjszld34s5vktqmlmaaxqjssz43sxyhq0d",
        exponent: 0
      }, {
        denom: "mile",
        exponent: 6
      }],
      base: "cw20:juno1llg7q2d5dqlrqzh5dxv8c7kzzjszld34s5vktqmlmaaxqjssz43sxyhq0d",
      name: "Mille",
      display: "mile",
      symbol: "MILE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/mille.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/mille.png"
      }]
    },
    {
      description: "Void",
      type_asset: "cw20",
      address: "juno1lpvx3mv2a6ddzfjc7zzz2v2cm5gqgqf0hx67hc5p5qwn7hz4cdjsnznhu8",
      denom_units: [{
        denom: "cw20:juno1lpvx3mv2a6ddzfjc7zzz2v2cm5gqgqf0hx67hc5p5qwn7hz4cdjsnznhu8",
        exponent: 0
      }, {
        denom: "void",
        exponent: 6
      }],
      base: "cw20:juno1lpvx3mv2a6ddzfjc7zzz2v2cm5gqgqf0hx67hc5p5qwn7hz4cdjsnznhu8",
      name: "Void",
      display: "void",
      symbol: "VOID",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/void.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/void.png"
      }]
    },
    {
      description: "Silica",
      type_asset: "cw20",
      address: "juno10vgf2u03ufcf25tspgn05l7j3tfg0j63ljgpffy98t697m5r5hmqaw95ux",
      denom_units: [{
        denom: "cw20:juno10vgf2u03ufcf25tspgn05l7j3tfg0j63ljgpffy98t697m5r5hmqaw95ux",
        exponent: 0
      }, {
        denom: "silica",
        exponent: 6
      }],
      base: "cw20:juno10vgf2u03ufcf25tspgn05l7j3tfg0j63ljgpffy98t697m5r5hmqaw95ux",
      name: "Silica",
      display: "silica",
      symbol: "SLCA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/silica.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/silica.png"
      }]
    },
    {
      description: "Pepec",
      type_asset: "cw20",
      address: "juno1epxnvge53c4hkcmqzlxryw5fp7eae2utyk6ehjcfpwajwp48km3sgxsh9k",
      denom_units: [{
        denom: "cw20:juno1epxnvge53c4hkcmqzlxryw5fp7eae2utyk6ehjcfpwajwp48km3sgxsh9k",
        exponent: 0
      }, {
        denom: "pepec",
        exponent: 6
      }],
      base: "cw20:juno1epxnvge53c4hkcmqzlxryw5fp7eae2utyk6ehjcfpwajwp48km3sgxsh9k",
      name: "Pepec",
      display: "pepec",
      symbol: "PEPEC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/pepec.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/pepec.png"
      }]
    },
    {
      description: "Palantin",
      type_asset: "cw20",
      address: "juno15au4k2jgwd0jnchy0fkg3lm00fpt7jt0j2duuzradn2q7sega2dszyn5pp",
      denom_units: [{
        denom: "cw20:juno15au4k2jgwd0jnchy0fkg3lm00fpt7jt0j2duuzradn2q7sega2dszyn5pp",
        exponent: 0
      }, {
        denom: "pltn",
        exponent: 6
      }],
      base: "cw20:juno15au4k2jgwd0jnchy0fkg3lm00fpt7jt0j2duuzradn2q7sega2dszyn5pp",
      name: "Palantin",
      display: "pltn",
      symbol: "PLTN",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/pltn.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/pltn.png"
      }]
    },
    {
      description: "Propose. Vote. Build.",
      type_asset: "cw20",
      address: "juno12mcwmd6wqhledkjsurlfqtc8j0pedvxlcxw3gs4kh2qf808ehehsen8nmw",
      denom_units: [{
        denom: "cw20:juno12mcwmd6wqhledkjsurlfqtc8j0pedvxlcxw3gs4kh2qf808ehehsen8nmw",
        exponent: 0
      }, {
        denom: "yfd",
        exponent: 6
      }],
      base: "cw20:juno12mcwmd6wqhledkjsurlfqtc8j0pedvxlcxw3gs4kh2qf808ehehsen8nmw",
      name: "Y-Foundry DAO",
      display: "yfd",
      symbol: "YFD",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/yfd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/yfd.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/yfd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/yfd.svg"
      }]
    },
    {
      denom_units: [{
        denom: "factory/juno1qly4zcmzr2gyxtze5yt9chv2srczwwunppxjfh/NEXX",
        exponent: 0
      }, {
        denom: "nexx",
        exponent: 6
      }],
      address: "juno1qly4zcmzr2gyxtze5yt9chv2srczwwunppxjfh",
      base: "factory/juno1qly4zcmzr2gyxtze5yt9chv2srczwwunppxjfh/NEXX",
      name: "NEXX GEN AI",
      display: "nexx",
      symbol: "NEXX",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/nexx.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/nexx.png"
      }]
    },
    {
      denom_units: [{
        denom: "factory/juno1u805lv20qc6jy7c3ttre7nct6uyl20pfky5r7e/DGL",
        exponent: 0
      }, {
        denom: "dgl",
        exponent: 6
      }],
      address: "juno1u805lv20qc6jy7c3ttre7nct6uyl20pfky5r7e",
      base: "factory/juno1u805lv20qc6jy7c3ttre7nct6uyl20pfky5r7e/DGL",
      name: "Licorice",
      display: "dgl",
      symbol: "DGL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/dgl.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/dgl.png"
      }]
    },
    {
      description: "ERIS liquid staked JUNO",
      type_asset: "cw20",
      address: "juno1a0khag6cfzu5lrwazmyndjgvlsuk7g4vn9jd8ceym8f4jf6v2l9q6d348a",
      denom_units: [{
        denom: "cw20:juno1a0khag6cfzu5lrwazmyndjgvlsuk7g4vn9jd8ceym8f4jf6v2l9q6d348a",
        exponent: 0
      }, {
        denom: "ampJUNO",
        exponent: 6
      }],
      base: "cw20:juno1a0khag6cfzu5lrwazmyndjgvlsuk7g4vn9jd8ceym8f4jf6v2l9q6d348a",
      name: "ERIS Amplified JUNO",
      display: "ampJUNO",
      symbol: "ampJUNO",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/ampjuno.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/ampjuno.svg"
      }]
    },
    {
      description: "BITS - Native token of Bitswift Cash",
      type_asset: "cw20",
      address: "juno14fz92ehqt37e096xr95kmy8nc0kz803uezxtg4fwx7agjjma86sqm8mg3h",
      denom_units: [{
        denom: "cw20:juno14fz92ehqt37e096xr95kmy8nc0kz803uezxtg4fwx7agjjma86sqm8mg3h",
        exponent: 0
      }, {
        denom: "bits",
        exponent: 8
      }],
      base: "cw20:juno14fz92ehqt37e096xr95kmy8nc0kz803uezxtg4fwx7agjjma86sqm8mg3h",
      name: "BITS",
      display: "bits",
      symbol: "BITS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/bits.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/bits.png"
      }]
    },
    {
      description: "The least memeable memecoin in existence. The cats have had their day, it's time for $POIL coin to take reign.",
      type_asset: "cw20",
      address: "juno13epyeat7ef0k7q6kllmyvc8zpfd9xm7cqjrgtk0qkgrk7n5mjfmq8979jw",
      denom_units: [{
        denom: "cw20:juno13epyeat7ef0k7q6kllmyvc8zpfd9xm7cqjrgtk0qkgrk7n5mjfmq8979jw",
        exponent: 0
      }, {
        denom: "poil",
        exponent: 6
      }],
      base: "cw20:juno13epyeat7ef0k7q6kllmyvc8zpfd9xm7cqjrgtk0qkgrk7n5mjfmq8979jw",
      name: "POIL",
      display: "poil",
      symbol: "POIL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/poil.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/poil.png"
      }]
    },
    {
      description: "Minerva was one of the main goddesses worshiped by the Roman Pagans and is a goddess from Roman Mythology.",
      type_asset: "cw20",
      address: "juno1h86ut5aevlxuuxrra6wy3dfq6e39zkzzv9eelz678jr6amxlc4gsx46j82",
      denom_units: [{
        denom: "cw20:juno1h86ut5aevlxuuxrra6wy3dfq6e39zkzzv9eelz678jr6amxlc4gsx46j82",
        exponent: 0
      }, {
        denom: "minerva",
        exponent: 6
      }],
      base: "cw20:juno1h86ut5aevlxuuxrra6wy3dfq6e39zkzzv9eelz678jr6amxlc4gsx46j82",
      name: "MINERVA",
      display: "minerva",
      symbol: "MRVA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/minerva.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/minerva.png"
      }]
    },
    {
      description: "In Roman mythology, Juno (Latin: Iuno; pronounced [[Help:Pronunciation|[\u02C8ju\u02D0no\u02D0]]]) was the protector and advisor of the state.",
      type_asset: "cw20",
      address: "juno13c57ssxvlzefsj4v5spdz4m9r6c6s2far5npvmc9en7nz02xqjyqne40gk",
      denom_units: [{
        denom: "cw20:juno13c57ssxvlzefsj4v5spdz4m9r6c6s2far5npvmc9en7nz02xqjyqne40gk",
        exponent: 0
      }, {
        denom: "luno",
        exponent: 6
      }],
      base: "cw20:juno13c57ssxvlzefsj4v5spdz4m9r6c6s2far5npvmc9en7nz02xqjyqne40gk",
      name: "LUNO",
      display: "luno",
      symbol: "LUNO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/luno.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/luno.png"
      }]
    },
    {
      description: "ATEN is NETA.",
      type_asset: "cw20",
      address: "juno1elpg96tju8a32vzn25u6asvscajjm4000589z0zthhvks28ajypqzurl7r",
      denom_units: [{
        denom: "cw20:juno1elpg96tju8a32vzn25u6asvscajjm4000589z0zthhvks28ajypqzurl7r",
        exponent: 0
      }, {
        denom: "aten",
        exponent: 6
      }],
      base: "cw20:juno1elpg96tju8a32vzn25u6asvscajjm4000589z0zthhvks28ajypqzurl7r",
      name: "ATEN",
      display: "aten",
      symbol: "ATEN",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/aten.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/aten.png"
      }]
    },
    {
      description: "HERA is the goddess of marriage in Greek mythology.",
      type_asset: "cw20",
      address: "juno1dtd45vxvv080v9x7hffysnmvrqm6ysecjdnvafqul28646hm04xs9gheh0",
      denom_units: [{
        denom: "cw20:juno1dtd45vxvv080v9x7hffysnmvrqm6ysecjdnvafqul28646hm04xs9gheh0",
        exponent: 0
      }, {
        denom: "hera",
        exponent: 6
      }],
      base: "cw20:juno1dtd45vxvv080v9x7hffysnmvrqm6ysecjdnvafqul28646hm04xs9gheh0",
      name: "HERA",
      display: "hera",
      symbol: "HERA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hera.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hera.png"
      }]
    },
    {
      description: "BackBone Labs Liquid Staked JUNO",
      type_asset: "cw20",
      address: "juno1mvkgcr5uce2rnpzr4qrzf50hx4qreuwzlt7fzsjrhjud3xnjmttq5mkh2m",
      denom_units: [{
        denom: "cw20:juno1mvkgcr5uce2rnpzr4qrzf50hx4qreuwzlt7fzsjrhjud3xnjmttq5mkh2m",
        exponent: 0
      }, {
        denom: "bJUNO",
        exponent: 6
      }],
      base: "cw20:juno1mvkgcr5uce2rnpzr4qrzf50hx4qreuwzlt7fzsjrhjud3xnjmttq5mkh2m",
      name: "BackBone Labs Liquid Staked JUNO",
      display: "bJUNO",
      symbol: "bJUNO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/bJUNO-bbl.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/bJUNO-bbl.png"
      }],
      coingecko_id: "backbone-labs-staked-juno"
    },
    {
      type_asset: "ics20",
      description: "USD Coin on Juno",
      denom_units: [{
        denom: "ibc/4A482FA914A4B9B05801ED81C33713899F322B24F76A06F4B8FE872485EA22FF",
        exponent: 0,
        aliases: ["uusdc", "microusdc"]
      }, {
        denom: "usdc",
        exponent: 6
      }],
      base: "ibc/4A482FA914A4B9B05801ED81C33713899F322B24F76A06F4B8FE872485EA22FF",
      name: "USD Coin",
      display: "usdc",
      symbol: "USDC",
      coingecko_id: "usd-coin",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
      },
      images: [{
        image_sync: {
          chain_name: "noble",
          base_denom: "uusdc"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
      }],
      traces: [{
        type: "ibc",
        counterparty: {
          channel_id: "channel-3",
          base_denom: "uusdc",
          chain_name: "noble"
        },
        chain: {
          channel_id: "channel-224",
          path: "transfer/channel-224/uusdc"
        }
      }]
    },
    {
      denom_units: [{
        denom: "ibc/F0C440C8040E2FCCAC621D32D3A00D9B347C989D52CE869A91CB34D07B0021D2",
        exponent: 0,
        aliases: ["factory/migaloo1d0uma9qzcts4fzt7ml39xp44aut5k6qyjfzz4asalnecppppr3rsl52vvv/rstk"]
      }, {
        denom: "rstk",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/F0C440C8040E2FCCAC621D32D3A00D9B347C989D52CE869A91CB34D07B0021D2",
      name: "Restake DAO Token",
      display: "rstk",
      symbol: "RSTK",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1d0uma9qzcts4fzt7ml39xp44aut5k6qyjfzz4asalnecppppr3rsl52vvv/rstk",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-210",
          path: "transfer/channel-210/factory/migaloo1d0uma9qzcts4fzt7ml39xp44aut5k6qyjfzz4asalnecppppr3rsl52vvv/rstk"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1d0uma9qzcts4fzt7ml39xp44aut5k6qyjfzz4asalnecppppr3rsl52vvv/rstk"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.svg"
      }
    },
    {
      denom_units: [{
        denom: "factory/juno1h6y8tkceau4d8zyv5aa0fwdj2pa2y0gz2hx0tq/uwind",
        exponent: 0
      }, {
        denom: "wind",
        exponent: 6
      }],
      address: "juno1h6y8tkceau4d8zyv5aa0fwdj2pa2y0gz2hx0tq",
      base: "factory/juno1h6y8tkceau4d8zyv5aa0fwdj2pa2y0gz2hx0tq/uwind",
      name: "Wind Token",
      display: "wind",
      symbol: "WIND",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/wind.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/wind.png"
      }]
    },
    {
      description: "Airdrop For All [AFA - New Name on Cosmos Ecosystem, A4A - Old Name on TurtleNetwork] is a token from turtleNetwork towards cosmos ecosystem.",
      type_asset: "cw20",
      address: "juno1spjes0smg5yp40dl7gqyw0h8rn03tnmve06dd2m5acwgh6tlx86swha3xg",
      denom_units: [{
        denom: "cw20:juno1spjes0smg5yp40dl7gqyw0h8rn03tnmve06dd2m5acwgh6tlx86swha3xg",
        exponent: 0
      }],
      base: "cw20:juno1spjes0smg5yp40dl7gqyw0h8rn03tnmve06dd2m5acwgh6tlx86swha3xg",
      name: "Airdrop For All",
      display: "cw20:juno1spjes0smg5yp40dl7gqyw0h8rn03tnmve06dd2m5acwgh6tlx86swha3xg",
      symbol: "AFA",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/afa.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/afa.png"
      }
    },
    {
      description: "The token for the Arena DAO",
      type_asset: "sdk.coin",
      address: "juno12dgadj3wwv5jn0ec7tw5cgvq526nn4gnt2tujlmd57p2ra6k87esl36r9k",
      denom_units: [{
        denom: "factory/juno1vwmnqk0vyxc96qgffrure4nqxupjrql0zut8s02hadgp0n79r8xq5xdsxy/ARENA",
        exponent: 0
      }, {
        denom: "arena",
        exponent: 6
      }],
      base: "factory/juno1vwmnqk0vyxc96qgffrure4nqxupjrql0zut8s02hadgp0n79r8xq5xdsxy/ARENA",
      name: "Arena Token",
      display: "arena",
      symbol: "ARENA",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/arena.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/arena.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/arena.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/arena.svg"
      }
    }
  ]
};
var assets_default79 = info219;

// node_modules/chain-registry/esm/mainnet/juno/chain.js
var info220 = {
  $schema: "../chain.schema.json",
  chain_name: "juno",
  status: "live",
  network_type: "mainnet",
  website: "https://www.junonetwork.io/",
  pretty_name: "Juno",
  chain_id: "juno-1",
  bech32_prefix: "juno",
  daemon_name: "junod",
  node_home: "$HOME/.juno",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ujuno",
      fixed_min_gas_price: 0.075,
      low_gas_price: 0.075,
      average_gas_price: 0.1,
      high_gas_price: 0.125
    }, {
      denom: "ibc/C4CFF46FD6DE35CA4CF4CE031E643C8FDC9BA4B99AE598E9B0ED98FE3A2319F9",
      fixed_min_gas_price: 3e-3,
      low_gas_price: 3e-3,
      average_gas_price: 35e-4,
      high_gas_price: 4e-3
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ujuno"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.47.11-0.20240417094812-f556fd956fb1",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.45.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.svg"
  },
  description: "Juno is a completely community owned and operated smart contract platform.",
  apis: {
    rpc: [
      {
        address: "https://rpc-juno.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://rpc-juno.itastakers.com",
        provider: "itastakers"
      },
      {
        address: "http://juno.rpc.m.stavr.tech:1067",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc-juno.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://juno-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://juno-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc-juno.pupmos.network",
        provider: "PUPM\xD8S"
      },
      {
        address: "https://rpc-juno.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://rpc-juno-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://rpc.juno.chaintools.tech/",
        provider: "ChainTools"
      },
      {
        address: "https://juno-rpc.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://juno-rpc.icycro.org",
        provider: "IcyCRO \u{1F9CA}"
      },
      {
        address: "https://rpc.juno.bh.rocks",
        provider: "BlockHunters \u{1F3AF}"
      },
      {
        address: "https://juno-rpc.kingnodes.com",
        provider: "kingnodes \u{1F451}"
      },
      {
        address: "https://juno-rpc.reece.sh",
        provider: "Reecepbcups"
      },
      {
        address: "https://juno-rpc.stakeandrelax.net",
        provider: "Stake&Relax Validator \u{1F9A5}"
      },
      {
        address: "https://rpc-juno.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "https://rpc-juno-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://rpc-juno.validavia.me",
        provider: "Validavia"
      },
      {
        address: "https://juno-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://juno-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://juno-rpc.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://rpc-juno.mainnet.validatrium.club:443",
        provider: "Validatrium"
      },
      {
        address: "https://juno-rpc.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://rpc.juno.validatus.com",
        provider: "Validatus"
      },
      {
        address: "https://rpc.juno.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://juno-rpc.cogwheel.zone",
        provider: "Cogwheel"
      },
      {
        address: "https://juno.declab.pro:26610",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "https://juno.rpc.nodeshub.online:443",
        provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705"
      }
    ],
    rest: [
      {
        address: "https://lcd-juno.itastakers.com",
        provider: "itastakers"
      },
      {
        address: "https://rest-juno.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://juno-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://juno.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api-juno.pupmos.network",
        provider: "PUPM\xD8S"
      },
      {
        address: "https://api-juno-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://api.juno.chaintools.tech/",
        provider: "ChainTools"
      },
      {
        address: "https://juno-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://api-juno.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://juno-api.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://api.juno.bh.rocks",
        provider: "BlockHunters \u{1F3AF}"
      },
      {
        address: "https://juno-rest.kingnodes.com",
        provider: "kingnodes \u{1F451}"
      },
      {
        address: "https://juno-api.stakeandrelax.net",
        provider: "Stake&Relax Validator \u{1F9A5}"
      },
      {
        address: "https://rest-juno.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "https://api-juno-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://lcd-juno.validavia.me",
        provider: "Validavia"
      },
      {
        address: "https://juno-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://juno-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://juno-api.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://lcd-juno.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://juno-api.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://api.juno.validatus.com",
        provider: "Validatus"
      },
      {
        address: "https://lcd.juno.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://juno-api.cogwheel.zone",
        provider: "Cogwheel"
      },
      {
        address: "https://juno.declab.pro:443",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "https://juno.api.nodeshub.online:443",
        provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705"
      }
    ],
    grpc: [
      {
        address: "grpc-juno-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "juno-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "juno-grpc.polkachu.com:12690",
        provider: "Polkachu"
      },
      {
        address: "http://juno.grpc.m.stavr.tech:504",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://juno-grpc.kingnodes.com:443",
        provider: "kingnodes \u{1F451}"
      },
      {
        address: "grpc-juno.cosmos-spaces.cloud:4830",
        provider: "Cosmos Spaces"
      },
      {
        address: "http://juno-grpc.stakeandrelax.net:12690",
        provider: "Stake&Relax Validator \u{1F9A5}"
      },
      {
        address: "grpc-juno.architectnodes.com:1443",
        provider: "Architect Nodes"
      },
      {
        address: "juno-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "http://167.235.211.168:9091",
        provider: "CommunityStaking"
      },
      {
        address: "grpc-juno-01.stakeflow.io:2302",
        provider: "Stakeflow"
      },
      {
        address: "juno-grpc.w3coins.io:12690",
        provider: "w3coins"
      },
      {
        address: "juno-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "juno-grpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "138.201.21.121:24990",
        provider: "Validatrium"
      },
      {
        address: "juno-grpc.stakeandrelax.net:12690",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "grpc.juno.validatus.com",
        provider: "Validatus"
      },
      {
        address: "https://grpc.juno.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "juno-grpc.cogwheel.zone:443",
        provider: "Cogwheel"
      },
      {
        address: "https://juno.declab.pro:9007",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "https://juno.grpc.nodeshub.online",
        provider: "Nodes Hub"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/juno",
      tx_page: "https://ezstaking.app/juno/txs/${txHash}",
      account_page: "https://ezstaking.app/juno/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/juno",
      tx_page: "https://ping.pub/juno/tx/${txHash}"
    },
    {
      kind: "explorers.guru",
      url: "https://juno.explorers.guru",
      tx_page: "https://juno.explorers.guru/transaction/${txHash}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/juno",
      tx_page: "https://www.mintscan.io/juno/transactions/${txHash}",
      account_page: "https://www.mintscan.io/juno/accounts/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/juno",
      tx_page: "https://atomscan.com/juno/transactions/${txHash}",
      account_page: "https://atomscan.com/juno/accounts/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/juno",
      tx_page: "https://explorer.stavr.tech/juno/transactions/${txHash}",
      account_page: "https://explorer.stavr.tech/juno/accounts/${accountAddress}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/juno",
      tx_page: "https://explorer.tcnetwork.io/juno/transaction/${txHash}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/juno",
      account_page: "https://stakeflow.io/juno/accounts/${accountAddress}"
    },
    {
      kind: "Decloud Nodes Lab",
      url: "https://explorer.declab.pro/Juno",
      tx_page: "https://explorer.declab.pro/Juno/tx/${txHash}"
    },
    {
      kind: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705",
      url: "https://explorer.nodeshub.online/juno/",
      tx_page: "https://explorer.nodeshub.online/juno/tx/${txHash}",
      account_page: "https://explorer.nodeshub.online/juno/accounts/${accountAddress}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/juno",
      tx_page: "https://mainnet.whispernode.com/juno/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/juno/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.svg"
  }]
};
var chain_default79 = info220;

// node_modules/chain-registry/esm/mainnet/juno/ibc.js
var info221 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-84",
      connection_id: "connection-58"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-80",
      connection_id: "connection-47"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-35",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-29",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-18",
      connection_id: "connection-19"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-387",
      connection_id: "connection-379"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-290",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "assetmantle",
      client_id: "07-tendermint-22",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-167",
      connection_id: "connection-113"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-83",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-25",
      connection_id: "connection-14"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-150",
      connection_id: "connection-97"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-71",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bitcanna",
      client_id: "07-tendermint-12",
      connection_id: "connection-11"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-110",
      connection_id: "connection-70"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-50",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bitsong",
      client_id: "07-tendermint-9",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-33",
      connection_id: "connection-26"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "chihuahua",
      client_id: "07-tendermint-54",
      connection_id: "connection-30"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-79",
      connection_id: "connection-46"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-28",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "comdex",
      client_id: "07-tendermint-30",
      connection_id: "connection-19"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-92",
      connection_id: "connection-55"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-30",
      connection_id: "connection-15"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-382",
      connection_id: "connection-376"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-280",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-439",
      connection_id: "connection-372"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-207",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-5",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-160",
      connection_id: "connection-107"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-81",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dig",
      client_id: "07-tendermint-17",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-100",
      connection_id: "connection-62"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "emoney",
      client_id: "07-tendermint-51",
      connection_id: "connection-20"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-24",
      connection_id: "connection-16"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "furya",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "juno",
      client_id: "07-tendermint-501",
      connection_id: "connection-505"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-417",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-198",
      connection_id: "connection-140"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-2",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-87",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-300",
      connection_id: "connection-270"
    },
    chain_2: {
      chain_name: "mars",
      client_id: "07-tendermint-11",
      connection_id: "connection-7"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-209",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-310",
      connection_id: "connection-282"
    },
    chain_2: {
      chain_name: "migaloo",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-210",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-557",
      connection_id: "connection-524"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-97",
      connection_id: "connection-71"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-548",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4328",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-334",
      connection_id: "connection-322"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-3",
      connection_id: "connection-8"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-224",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-335",
      connection_id: "connection-325"
    },
    chain_2: {
      chain_name: "nois",
      client_id: "07-tendermint-1",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-225",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-243",
        port_id: "wasm.juno1qr84ktm57q5t02u04ddk5r8s79axdzglad6tfdd9g2xgt4hkh6jsgeq9x2"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "wasm.nois1acyc05v6fgcdgj88nmz2t40aex9nlnptqpwp5hf8hwg7rhce9uuqgqz5wp"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-314",
      connection_id: "connection-285"
    },
    chain_2: {
      chain_name: "okexchain",
      client_id: "07-tendermint-122",
      connection_id: "connection-92"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-212",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-52",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1457",
      connection_id: "connection-1142"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-42",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }, {
      chain_1: {
        channel_id: "channel-47",
        port_id: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn"
      },
      chain_2: {
        channel_id: "channel-169",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-89",
      connection_id: "connection-51"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-49",
      connection_id: "connection-48"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-33",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-318",
      connection_id: "connection-309"
    },
    chain_2: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-17",
      connection_id: "connection-10"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-215",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-22",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1"
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-108",
      connection_id: "connection-68"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-23",
      connection_id: "connection-9"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-48",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-163",
        port_id: "transfer",
        client_id: "07-tendermint-108",
        connection_id: "connection-68"
      },
      chain_2: {
        channel_id: "channel-45",
        port_id: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4",
        client_id: "07-tendermint-23",
        connection_id: "connection-9"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-9",
      connection_id: "connection-8"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-37",
      connection_id: "connection-17"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-44",
      connection_id: "connection-30"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-13",
      connection_id: "connection-11"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-20",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-263",
      connection_id: "connection-205"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-31",
      connection_id: "connection-19"
    },
    channels: [
      {
        chain_1: {
          channel_id: "channel-139",
          port_id: "transfer"
        },
        chain_2: {
          channel_id: "channel-24",
          port_id: "transfer"
        },
        ordering: "unordered",
        version: "ics20-1",
        tags: {
          status: "live",
          preferred: true
        }
      },
      {
        chain_1: {
          channel_id: "channel-202",
          port_id: "icahost"
        },
        chain_2: {
          channel_id: "channel-48",
          port_id: "icacontroller-juno-1.DELEGATION"
        },
        ordering: "ordered",
        version: "ics27-1",
        tags: {
          status: "live",
          preferred: true,
          properties: "liquid staking"
        }
      },
      {
        chain_1: {
          channel_id: "channel-143",
          port_id: "icahost"
        },
        chain_2: {
          channel_id: "channel-26",
          port_id: "icacontroller-juno-1.FEE"
        },
        ordering: "ordered",
        version: "ics27-1",
        tags: {
          status: "live",
          preferred: true,
          properties: "liquid staking"
        }
      },
      {
        chain_1: {
          channel_id: "channel-142",
          port_id: "icahost"
        },
        chain_2: {
          channel_id: "channel-27",
          port_id: "icacontroller-juno-1.WITHDRAWAL"
        },
        ordering: "ordered",
        version: "ics27-1",
        tags: {
          status: "live",
          preferred: true,
          properties: "liquid staking"
        }
      },
      {
        chain_1: {
          channel_id: "channel-140",
          port_id: "icahost"
        },
        chain_2: {
          channel_id: "channel-28",
          port_id: "icacontroller-juno-1.REDEMPTION"
        },
        ordering: "ordered",
        version: "ics27-1",
        tags: {
          status: "live",
          preferred: true,
          properties: "liquid staking"
        }
      }
    ]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-63",
      connection_id: "connection-43"
    },
    chain_2: {
      chain_name: "terra",
      client_id: "07-tendermint-32",
      connection_id: "connection-34"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-27",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-20",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-185",
      connection_id: "connection-128"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-3",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-86",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default63 = info221;

// node_modules/chain-registry/esm/mainnet/juno/index.js
var assets79 = assets_default79;
var chain79 = chain_default79;
var ibc63 = ibc_default63;

// node_modules/chain-registry/esm/mainnet/kava/assets.js
var info222 = {
  $schema: "../assetlist.schema.json",
  chain_name: "kava",
  assets: [
    {
      description: "The native staking and governance token of Kava",
      extended_description: "The native staking and governance token of Kava\n\nKava is a Layer-1 blockchain that combines the speed and interoperability of Cosmos with the developer power of Ethereum.\n\nThe Kava Network uses a developer-optimized co-chain architecture. The Ethereum Co-Chain enables support for EVM smart contracts while the Cosmos Co-Chain enables the lightning-fast Tendermint consensus engine and the Inter Blockchain Communication Protocol (IBC).\n\nThe two co-chains are connected by a translator module that enables them to interoperate seamlessly, bringing the two most used blockchain development environments together in a single, scalable network.\n\nThe Kava Network features a native governance and utility token, KAVA, that can be staked by validators or delegated to validator nodes. Stakers and delegators earn 37.5% of all KAVA emissions as a reward for securing the network. Kava stakers also have voting rights in network governance proposals.",
      denom_units: [{
        denom: "ukava",
        exponent: 0
      }, {
        denom: "kava",
        exponent: 6
      }],
      base: "ukava",
      name: "Kava",
      display: "kava",
      symbol: "KAVA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/kava.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/kava.svg"
      },
      coingecko_id: "kava",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/kava.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/kava.svg"
      }],
      socials: {
        website: "https://www.kava.io/",
        twitter: "https://twitter.com/KAVA_CHAIN"
      }
    },
    {
      description: "Governance token of Kava Lend Protocol",
      denom_units: [{
        denom: "hard",
        exponent: 0
      }, {
        denom: "HARD",
        exponent: 6
      }],
      base: "hard",
      name: "Kava Hard",
      display: "HARD",
      symbol: "HARD",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/hard.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/hard.svg"
      },
      coingecko_id: "kava-lend",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/hard.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/hard.svg"
      }]
    },
    {
      description: "Governance token of Kava Swap Protocol",
      denom_units: [{
        denom: "swp",
        exponent: 0
      }, {
        denom: "SWP",
        exponent: 6
      }],
      base: "swp",
      name: "Kava Swap",
      display: "SWP",
      symbol: "SWP",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/swp.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/swp.svg"
      },
      coingecko_id: "kava-swap",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/swp.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/swp.svg"
      }]
    },
    {
      description: "The native stablecoin of Kava",
      denom_units: [{
        denom: "usdx",
        exponent: 0
      }, {
        denom: "USDX",
        exponent: 6
      }],
      base: "usdx",
      name: "Kava USDX",
      display: "USDX",
      symbol: "USDX",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/usdx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/usdx.svg"
      },
      coingecko_id: "usdx",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/usdx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/usdx.svg"
      }]
    },
    {
      denom_units: [{
        denom: "erc20/tether/usdt",
        exponent: 0
      }, {
        denom: "usdt",
        exponent: 6
      }],
      base: "erc20/tether/usdt",
      name: "Tether USD",
      display: "usdt",
      symbol: "USDT",
      coingecko_id: "tether",
      traces: [{
        type: "additional-mintage",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7"
        },
        provider: "Tether"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      }
    }
  ]
};
var assets_default80 = info222;

// node_modules/chain-registry/esm/mainnet/kava/chain.js
var info223 = {
  $schema: "../chain.schema.json",
  chain_name: "kava",
  status: "live",
  network_type: "mainnet",
  website: "https://www.kava.io/",
  pretty_name: "Kava",
  chain_id: "kava_2222-10",
  bech32_prefix: "kava",
  daemon_name: "kava",
  node_home: "$HOME/.kava",
  slip44: 459,
  alternative_slip44s: [118],
  fees: {
    fee_tokens: [{
      denom: "ukava",
      low_gas_price: 0.05,
      average_gas_price: 0.1,
      high_gas_price: 0.25
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ukava"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/kava.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/kava.svg"
  },
  description: "Kava is a decentralized blockchain that combines the speed and interoperability of Cosmos with the developer power of Ethereum.",
  apis: {
    rpc: [
      {
        address: "https://rpc.data.kava.io",
        provider: "kava"
      },
      {
        address: "https://kava-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://rpc-kava-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://kava-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://kava-rpc.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://rpc-kava-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://kava-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    rest: [
      {
        address: "https://api.data.kava.io/",
        provider: "kava"
      },
      {
        address: "https://api-kava-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://kava-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://kava-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://kava-api.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://api-kava-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://kava-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    grpc: [
      {
        address: "grpc.data.kava.io:443",
        provider: "kava"
      },
      {
        address: "grpc-kava-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "kava-grpc.polkachu.com:13990",
        provider: "Polkachu"
      },
      {
        address: "kava-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "grpc-kava-01.stakeflow.io:1202",
        provider: "Stakeflow"
      },
      {
        address: "kava-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    "evm-http-jsonrpc": [
      {
        address: "https://evm.kava.io/",
        provider: "kava"
      },
      {
        address: "https://kava-evm.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://kava.api.onfinality.io/public",
        provider: "OnFinality"
      }
    ]
  },
  explorers: [
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/kava",
      tx_page: "https://www.mintscan.io/kava/transactions/${txHash}",
      account_page: "https://www.mintscan.io/kava/accounts/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/kava",
      tx_page: "https://ezstaking.app/kava/txs/${txHash}",
      account_page: "https://ezstaking.app/kava/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/kava",
      tx_page: "https://ping.pub/kava/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/kava",
      tx_page: "https://atomscan.com/kava/transactions/${txHash}",
      account_page: "https://atomscan.com/kava/accounts/${accountAddress}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/kava",
      account_page: "https://stakeflow.io/kava/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/kava.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/kava.svg"
  }]
};
var chain_default80 = info223;

// node_modules/chain-registry/esm/mainnet/kava/ibc.js
var info224 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "aura",
      client_id: "07-tendermint-26",
      connection_id: "connection-15"
    },
    chain_2: {
      chain_name: "kava",
      client_id: "07-tendermint-133",
      connection_id: "connection-168"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-124",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-49",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "kava",
      client_id: "07-tendermint-158",
      connection_id: "connection-198"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-140",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-29",
      connection_id: "connection-20"
    },
    chain_2: {
      chain_name: "kava",
      client_id: "07-tendermint-160",
      connection_id: "connection-200"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-142",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-557",
      connection_id: "connection-460"
    },
    chain_2: {
      chain_name: "kava",
      client_id: "07-tendermint-1",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-277",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cronos",
      client_id: "07-tendermint-33",
      connection_id: "connection-17"
    },
    chain_2: {
      chain_name: "kava",
      client_id: "07-tendermint-134",
      connection_id: "connection-169"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-125",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-7",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "kava",
      client_id: "07-tendermint-154",
      connection_id: "connection-195"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-137",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dymension",
      client_id: "07-tendermint-3",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "kava",
      client_id: "07-tendermint-162",
      connection_id: "connection-203"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-144",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-113",
      connection_id: "connection-67"
    },
    chain_2: {
      chain_name: "kava",
      client_id: "07-tendermint-120",
      connection_id: "connection-157"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-83",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-117",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "haqq",
      client_id: "07-tendermint-5",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "kava",
      client_id: "07-tendermint-149",
      connection_id: "connection-193"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-135",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-205",
      connection_id: "connection-189"
    },
    chain_2: {
      chain_name: "kava",
      client_id: "07-tendermint-130",
      connection_id: "connection-166"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-143",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-122",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kava",
      client_id: "07-tendermint-119",
      connection_id: "connection-156"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-140",
      connection_id: "connection-106"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-116",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-95",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kava",
      client_id: "07-tendermint-125",
      connection_id: "connection-162"
    },
    chain_2: {
      chain_name: "migaloo",
      client_id: "07-tendermint-90",
      connection_id: "connection-73"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-120",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-48",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kava",
      client_id: "07-tendermint-151",
      connection_id: "connection-194"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-54",
      connection_id: "connection-37"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-136",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kava",
      client_id: "07-tendermint-163",
      connection_id: "connection-204"
    },
    chain_2: {
      chain_name: "onex",
      client_id: "07-tendermint-1",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-145",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kava",
      client_id: "07-tendermint-2",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1735",
      connection_id: "connection-1328"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-143",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kava",
      client_id: "07-tendermint-148",
      connection_id: "connection-189"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-156",
      connection_id: "connection-195"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-134",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-129",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kava",
      client_id: "07-tendermint-146",
      connection_id: "connection-181"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-38",
      connection_id: "connection-33"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-132",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kava",
      client_id: "07-tendermint-156",
      connection_id: "connection-196"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-386",
      connection_id: "connection-362"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-138",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-272",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kava",
      client_id: "07-tendermint-124",
      connection_id: "connection-160"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-229",
      connection_id: "connection-191"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-119",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-98",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  }
];
var ibc_default64 = info224;

// node_modules/chain-registry/esm/mainnet/kava/index.js
var assets80 = assets_default80;
var chain80 = chain_default80;
var ibc64 = ibc_default64;

// node_modules/chain-registry/esm/mainnet/kichain/assets.js
var info225 = {
  $schema: "../assetlist.schema.json",
  chain_name: "kichain",
  assets: [{
    description: "The native token of Ki Chain",
    denom_units: [{
      denom: "uxki",
      exponent: 0
    }, {
      denom: "xki",
      exponent: 6
    }],
    base: "uxki",
    name: "Ki",
    display: "xki",
    symbol: "XKI",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/xki.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/xki.svg"
    },
    coingecko_id: "ki",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/xki.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/xki.svg"
    }]
  }, {
    description: "ELEVENPARIS loyalty token on KiChain",
    type_asset: "cw20",
    address: "ki1dt3lk455ed360pna38fkhqn0p8y44qndsr77qu73ghyaz2zv4whq83mwdy",
    denom_units: [{
      denom: "cw20:ki1dt3lk455ed360pna38fkhqn0p8y44qndsr77qu73ghyaz2zv4whq83mwdy",
      exponent: 0
    }, {
      denom: "lvn",
      exponent: 6
    }],
    base: "cw20:ki1dt3lk455ed360pna38fkhqn0p8y44qndsr77qu73ghyaz2zv4whq83mwdy",
    name: "LVN",
    display: "lvn",
    symbol: "LVN",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/lvn.png"
    },
    coingecko_id: "lvn",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/lvn.png"
    }]
  }]
};
var assets_default81 = info225;

// node_modules/chain-registry/esm/mainnet/kichain/chain.js
var info226 = {
  $schema: "../chain.schema.json",
  chain_name: "kichain",
  status: "live",
  network_type: "mainnet",
  website: "https://foundation.ki/",
  pretty_name: "Ki",
  chain_id: "kichain-2",
  bech32_prefix: "ki",
  daemon_name: "kid",
  node_home: "$HOME/.kid",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uxki",
      fixed_min_gas_price: 0.025,
      low_gas_price: 0.025,
      average_gas_price: 0.03,
      high_gas_price: 0.05
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uxki"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/xki.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/xki.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc-mainnet.blockchain.ki",
        provider: "kifoundation"
      },
      {
        address: "https://kichain-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://rpc-kichain-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://kichain-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rpc.kichain.chaintools.tech/",
        provider: "ChainTools"
      },
      {
        address: "https://kichain-rpc.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "http://ki-chain.statesync.nodersteam.com:14657",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://ki-rpc.ibs.team/",
        provider: "Inter Blockchain Services"
      }
    ],
    rest: [
      {
        address: "https://api-mainnet.blockchain.ki",
        provider: "kifoundation"
      },
      {
        address: "https://api-kichain-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://kichain.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api.kichain.chaintools.tech/",
        provider: "ChainTools"
      },
      {
        address: "https://kichain-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "http://ki-chain.api.nodersteam.com:14017",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://kichain-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://kichain-api.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://ki-api.ibs.team/",
        provider: "Inter Blockchain Services"
      }
    ],
    grpc: [
      {
        address: "grpc-kichain-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "kichain-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "ki-chain.grpc.nodersteam.com:9410",
        provider: "[NODERS]TEAM"
      },
      {
        address: "kichain-grpc.polkachu.com:13590",
        provider: "Polkachu"
      },
      {
        address: "kichain-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/kichain",
      tx_page: "https://ezstaking.app/kichain/txs/${txHash}",
      account_page: "https://ezstaking.app/kichain/account/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/ki-chain",
      tx_page: "https://www.mintscan.io/ki-chain/txs/${txHash}",
      account_page: "https://www.mintscan.io/ki-chain/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Kichain-Mainnet",
      tx_page: "https://explorer.stavr.tech/Kichain-Mainnet/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/kichain",
      tx_page: "https://ping.pub/kichain/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/ki-chain",
      tx_page: "https://atomscan.com/ki-chain/transactions/${txHash}",
      account_page: "https://atomscan.com/ki-chain/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/xki.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/xki.svg"
  }]
};
var chain_default81 = info226;

// node_modules/chain-registry/esm/mainnet/kichain/ibc.js
var info227 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "cosmoshub",
    client_id: "07-tendermint-475",
    connection_id: "connection-392"
  },
  chain_2: {
    chain_name: "kichain",
    client_id: "07-tendermint-6",
    connection_id: "connection-1"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-223",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "kichain",
    client_id: "07-tendermint-4",
    connection_id: "connection-0"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-1564",
    connection_id: "connection-1225"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-77",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }, {
    chain_1: {
      channel_id: "channel-18",
      port_id: "wasm.ki1hzz0s0ucrhdp6tue2lxk3c03nj6f60qy463we7lgx0wudd72ctmsd9kgha"
    },
    chain_2: {
      channel_id: "channel-261",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default65 = info227;

// node_modules/chain-registry/esm/mainnet/kichain/index.js
var assets81 = assets_default81;
var chain81 = chain_default81;
var ibc65 = ibc_default65;

// node_modules/chain-registry/esm/mainnet/konstellation/assets.js
var info228 = {
  $schema: "../assetlist.schema.json",
  chain_name: "konstellation",
  assets: [{
    description: "The native token of Konstellation Network",
    denom_units: [{
      denom: "udarc",
      exponent: 0
    }, {
      denom: "darc",
      exponent: 6
    }],
    base: "udarc",
    name: "DARC",
    display: "darc",
    symbol: "DARC",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/konstellation/images/darc.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/konstellation/images/darc.svg"
    },
    coingecko_id: "darcmatter-coin",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/konstellation/images/darc.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/konstellation/images/darc.svg"
    }]
  }]
};
var assets_default82 = info228;

// node_modules/chain-registry/esm/mainnet/konstellation/chain.js
var info229 = {
  $schema: "../chain.schema.json",
  chain_name: "konstellation",
  status: "live",
  network_type: "mainnet",
  website: "https://konstellation.tech/",
  pretty_name: "Konstellation",
  chain_id: "darchub",
  bech32_prefix: "darc",
  daemon_name: "knstld",
  node_home: "$HOME/.knstld",
  slip44: 118,
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/konstellation/images/Konstellation-dark.png"
  },
  fees: {
    fee_tokens: [{
      denom: "udarc",
      fixed_min_gas_price: 0,
      low_gas_price: 1e-4,
      average_gas_price: 1e-3,
      high_gas_price: 0.01
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "udarc"
    }]
  },
  apis: {
    rpc: [{
      address: "https://rpc-konstellation-ia.cosmosia.notional.ventures/",
      provider: "Notional"
    }, {
      address: "https://konstellation-rpc.stakerhouse.com",
      provider: "StakerHouse"
    }],
    rest: [{
      address: "https://api-konstellation-ia.cosmosia.notional.ventures/",
      provider: "Notional"
    }, {
      address: "https://konstellation-rest.stakerhouse.com",
      provider: "StakerHouse"
    }],
    grpc: [
      {
        address: "grpc-konstellation-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "konstellation-grpc.polkachu.com:13390",
        provider: "Polkachu"
      },
      {
        address: "konstellation-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "konstellation-grpc.stakerhouse.com:443",
        provider: "StakerHouse"
      }
    ]
  },
  explorers: [{
    kind: "konstellation",
    url: "https://explorer.konstellation.tech/",
    tx_page: "https://explorer.konstellation.tech/tx/${txHash}"
  }, {
    kind: "cosmotracker",
    url: "https://cosmotracker.com/konstellation",
    tx_page: "https://cosmotracker.com/konstellation/tx/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/konstellation/images/Konstellation-dark.png"
  }]
};
var chain_default82 = info229;

// node_modules/chain-registry/esm/mainnet/konstellation/ibc.js
var info230 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "konstellation",
    client_id: "07-tendermint-1",
    connection_id: "connection-0"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-1778",
    connection_id: "connection-1384"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-171",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default66 = info230;

// node_modules/chain-registry/esm/mainnet/konstellation/index.js
var assets82 = assets_default82;
var chain82 = chain_default82;
var ibc66 = ibc_default66;

// node_modules/chain-registry/esm/mainnet/kujira/assets.js
var info231 = {
  $schema: "../assetlist.schema.json",
  chain_name: "kujira",
  assets: [
    {
      description: "The native staking and governance token of the Kujira chain.",
      denom_units: [{
        denom: "ukuji",
        exponent: 0
      }, {
        denom: "kuji",
        exponent: 6
      }],
      base: "ukuji",
      name: "Kujira",
      display: "kuji",
      symbol: "KUJI",
      coingecko_id: "kujira",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kuji.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kuji.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kuji.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kuji.svg"
      }],
      socials: {
        website: "https://kujira.network/",
        twitter: "https://twitter.com/TeamKujira"
      }
    },
    {
      description: "The native over-collateralized stablecoin from the Kujira chain.",
      denom_units: [{
        denom: "factory/kujira1qk00h5atutpsv900x202pxx42npjr9thg58dnqpa72f2p7m2luase444a7/uusk",
        exponent: 0
      }, {
        denom: "usk",
        exponent: 6
      }],
      base: "factory/kujira1qk00h5atutpsv900x202pxx42npjr9thg58dnqpa72f2p7m2luase444a7/uusk",
      name: "USK",
      display: "usk",
      symbol: "USK",
      coingecko_id: "usk",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/usk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/usk.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/usk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/usk.svg"
      }]
    },
    {
      description: "Quark's auto-compounding KUJI derivative",
      denom_units: [{
        denom: "factory/kujira1m96ucsfpt2yy72w09z2rxjdj38y5qd8lqx5jtggnejmdua2ynpnsxyvjex/urcpt",
        exponent: 0
      }, {
        denom: "qcKUJI",
        exponent: 6
      }],
      base: "factory/kujira1m96ucsfpt2yy72w09z2rxjdj38y5qd8lqx5jtggnejmdua2ynpnsxyvjex/urcpt",
      name: "qcKUJI",
      display: "qcKUJI",
      symbol: "qcKUJI",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/qckuji.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/qckuji.svg"
      }]
    },
    {
      description: "ampKUJI",
      denom_units: [{
        denom: "factory/kujira1n3fr5f56r2ce0s37wdvwrk98yhhq3unnxgcqus8nzsfxvllk0yxquurqty/ampKUJI",
        exponent: 0
      }, {
        denom: "ampKUJI",
        exponent: 6
      }],
      base: "factory/kujira1n3fr5f56r2ce0s37wdvwrk98yhhq3unnxgcqus8nzsfxvllk0yxquurqty/ampKUJI",
      name: "ampKUJI",
      display: "ampKUJI",
      symbol: "ampKUJI",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/ampkuji.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/ampkuji.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/ampkuji.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/ampkuji.svg"
      }]
    },
    {
      description: "MantaDAO Governance Token",
      denom_units: [{
        denom: "factory/kujira1643jxg8wasy5cfcn7xm8rd742yeazcksqlg4d7/umnta",
        exponent: 0
      }, {
        denom: "mnta",
        exponent: 6
      }],
      base: "factory/kujira1643jxg8wasy5cfcn7xm8rd742yeazcksqlg4d7/umnta",
      name: "MantaDAO",
      display: "mnta",
      symbol: "MNTA",
      coingecko_id: "mantadao",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/mnta.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/mnta.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/mnta.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/mnta.svg"
      }]
    },
    {
      description: "Quark's auto-compounding MNTA derivative",
      denom_units: [{
        denom: "factory/kujira1qzu3up50auxhqyzfq56znuj8n38q2ra7daaf9ef7vg8gu66jh4fqd2wd2y/urcpt",
        exponent: 0
      }, {
        denom: "qcMNTA",
        exponent: 6
      }],
      base: "factory/kujira1qzu3up50auxhqyzfq56znuj8n38q2ra7daaf9ef7vg8gu66jh4fqd2wd2y/urcpt",
      name: "qcMNTA",
      display: "qcMNTA",
      symbol: "qcMNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/qcmnta.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/qcmnta.svg"
      }]
    },
    {
      description: "ERIS Liquid Staked MNTA",
      denom_units: [{
        denom: "factory/kujira175yatpvkpgw07w0chhzuks3zrrae9z9g2y6r7u5pzqesyau4x9eqqyv0rr/ampMNTA",
        exponent: 0
      }, {
        denom: "ampMNTA",
        exponent: 6
      }],
      base: "factory/kujira175yatpvkpgw07w0chhzuks3zrrae9z9g2y6r7u5pzqesyau4x9eqqyv0rr/ampMNTA",
      name: "ERIS Amplified MNTA",
      display: "ampMNTA",
      symbol: "ampMNTA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/ampmnta.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/ampmnta.png"
      }]
    },
    {
      description: "The content house of Kujira",
      denom_units: [{
        denom: "factory/kujira12cjjeytrqcj25uv349thltcygnp9k0kukpct0e/uwink",
        exponent: 0
      }, {
        denom: "wink",
        exponent: 6
      }],
      base: "factory/kujira12cjjeytrqcj25uv349thltcygnp9k0kukpct0e/uwink",
      name: "WINK",
      display: "wink",
      symbol: "WINK",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/wink.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/wink.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/wink.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/wink.svg"
      }]
    },
    {
      description: "Blend Token",
      denom_units: [{
        denom: "factory/kujira1slueerjz7mx9jp45u3y0rjwtvhcf8a68wf2mjt/ublend",
        exponent: 0
      }, {
        denom: "blend",
        exponent: 6
      }],
      base: "factory/kujira1slueerjz7mx9jp45u3y0rjwtvhcf8a68wf2mjt/ublend",
      name: "BLEND",
      display: "blend",
      symbol: "BLEND",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/blend.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/blend.svg"
      }]
    },
    {
      description: "Tether USDt on Kujira",
      denom_units: [{
        denom: "ibc/20014F963CC9E6488B299622F87B60C6DE71632864859EC08B4753478DAB2BB8",
        exponent: 0
      }, {
        denom: "usdt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/20014F963CC9E6488B299622F87B60C6DE71632864859EC08B4753478DAB2BB8",
      name: "Tether USD",
      display: "usdt",
      symbol: "USDT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kava",
          base_denom: "erc20/tether/usdt",
          channel_id: "channel-116"
        },
        chain: {
          channel_id: "channel-95",
          path: "transfer/channel-95/erc20/tether/usdt"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "kava",
          base_denom: "erc20/tether/usdt"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      }
    },
    {
      description: "The staking and governance token of Fuzion",
      denom_units: [{
        denom: "factory/kujira1sc6a0347cc5q3k890jj0pf3ylx2s38rh4sza4t/ufuzn",
        exponent: 0
      }, {
        denom: "fuzn",
        exponent: 6
      }],
      base: "factory/kujira1sc6a0347cc5q3k890jj0pf3ylx2s38rh4sza4t/ufuzn",
      name: "Fuzion",
      display: "fuzn",
      symbol: "FUZN",
      coingecko_id: "fuzion",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/fuzion.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/fuzion.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/fuzion.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/fuzion.svg"
      }]
    },
    {
      description: "The receipt token of Fuzion",
      denom_units: [{
        denom: "factory/kujira1sc6a0347cc5q3k890jj0pf3ylx2s38rh4sza4t/urfuzn",
        exponent: 0
      }, {
        denom: "rfuzn",
        exponent: 6
      }],
      base: "factory/kujira1sc6a0347cc5q3k890jj0pf3ylx2s38rh4sza4t/urfuzn",
      name: "Fuzion Receipt",
      display: "rfuzn",
      symbol: "rFUZN",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/fuzionr.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/fuzionr.png"
      }]
    },
    {
      description: "The yield token of Fuzion",
      denom_units: [{
        denom: "factory/kujira1sc6a0347cc5q3k890jj0pf3ylx2s38rh4sza4t/uyfuzn",
        exponent: 0
      }, {
        denom: "yfuzn",
        exponent: 6
      }],
      base: "factory/kujira1sc6a0347cc5q3k890jj0pf3ylx2s38rh4sza4t/uyfuzn",
      name: "Fuzion Yield",
      display: "yfuzn",
      symbol: "yFUZN",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/fuziony.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/fuziony.svg"
      }]
    },
    {
      description: "Quark's auto-compounding FUZN derivative",
      denom_units: [{
        denom: "factory/kujira1l04ged98c7a7s9tllu62ld09ztylwf442qgm4thfgmadrvngeumsz4zrh2/urcpt",
        exponent: 0
      }, {
        denom: "qcFUZN",
        exponent: 6
      }],
      base: "factory/kujira1l04ged98c7a7s9tllu62ld09ztylwf442qgm4thfgmadrvngeumsz4zrh2/urcpt",
      name: "qcFUZN",
      display: "qcFUZN",
      symbol: "qcFUZN",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/qcfuzn.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/qcfuzn.svg"
      }]
    },
    {
      description: "Quark's auto-compounding AQLA derivative",
      denom_units: [{
        denom: "factory/kujira1d9fmsgvu3yvvppvqech2s3dhrqdm5ukngcf82ghcl70edfpwcrlsu6yr0u/urcpt",
        exponent: 0
      }, {
        denom: "qcAQLA",
        exponent: 6
      }],
      traces: [{
        type: "liquid-stake",
        counterparty: {
          base_denom: "factory/kujira1xe0awk5planmtsmjel5xtx2hzhqdw5p8z66yqd/uaqla",
          chain_name: "kujira"
        },
        provider: "Quark Protocol",
        chain: {
          contract: "kujira1d9fmsgvu3yvvppvqech2s3dhrqdm5ukngcf82ghcl70edfpwcrlsu6yr0u"
        }
      }],
      base: "factory/kujira1d9fmsgvu3yvvppvqech2s3dhrqdm5ukngcf82ghcl70edfpwcrlsu6yr0u/urcpt",
      name: "qcAQLA",
      display: "qcAQLA",
      symbol: "qcAQLA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/qcaqla.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/qcaqla.svg"
      }]
    },
    {
      description: "The Aqualibre project's token",
      denom_units: [{
        denom: "factory/kujira1xe0awk5planmtsmjel5xtx2hzhqdw5p8z66yqd/uaqla",
        exponent: 0
      }, {
        denom: "AQLA",
        exponent: 6
      }],
      base: "factory/kujira1xe0awk5planmtsmjel5xtx2hzhqdw5p8z66yqd/uaqla",
      name: "AQLA",
      display: "AQLA",
      symbol: "AQLA",
      coingecko_id: "aqualibre",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/aqla.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/aqla.svg"
      }]
    },
    {
      description: "The Revenue & Governance token of Unstake.fi",
      denom_units: [{
        denom: "factory/kujira1aaudpfr9y23lt9d45hrmskphpdfaq9ajxd3ukh/unstk",
        exponent: 0
      }, {
        denom: "nstk",
        exponent: 6
      }],
      base: "factory/kujira1aaudpfr9y23lt9d45hrmskphpdfaq9ajxd3ukh/unstk",
      name: "Unstake Fi",
      display: "nstk",
      symbol: "NSTK",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/nstk.svg"
      },
      coingecko_id: "unstake-fi",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/nstk.svg"
      }]
    },
    {
      description: "Local Money",
      denom_units: [{
        denom: "factory/kujira1swkuyt08z74n5jl7zr6hx0ru5sa2yev5v896p6/local",
        exponent: 0
      }, {
        denom: "local",
        exponent: 6
      }],
      base: "factory/kujira1swkuyt08z74n5jl7zr6hx0ru5sa2yev5v896p6/local",
      name: "LOCAL",
      display: "local",
      symbol: "LOCAL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/local.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/local.png"
      }]
    },
    {
      description: "Food for whales",
      denom_units: [{
        denom: "factory/kujira166ysf07ze5suazfzj0r05tv8amk2yn8zvsfuu7/uplnk",
        exponent: 0
      }, {
        denom: "PLNK",
        exponent: 6
      }],
      base: "factory/kujira166ysf07ze5suazfzj0r05tv8amk2yn8zvsfuu7/uplnk",
      name: "Plankton",
      display: "PLNK",
      symbol: "PLNK",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/PLNK_drk.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/PLNK_drk.png"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/E5CA126979E2FFB4C70C072F8094D07ECF27773B37623AD2BF7582AD0726F0F3",
        exponent: 0
      }, {
        denom: "sol",
        exponent: 8
      }],
      base: "ibc/E5CA126979E2FFB4C70C072F8094D07ECF27773B37623AD2BF7582AD0726F0F3",
      name: "Wormhole Solana",
      display: "sol",
      symbol: "whSOL",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "gateway",
          base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/8sYgCzLRJC3J7qPn2bNbx6PiGcarhyx8rBhVaNnfvHCA",
          channel_id: "channel-9"
        },
        chain: {
          channel_id: "channel-113",
          path: "transfer/channel-113/factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/8sYgCzLRJC3J7qPn2bNbx6PiGcarhyx8rBhVaNnfvHCA"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "gateway",
          base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/8sYgCzLRJC3J7qPn2bNbx6PiGcarhyx8rBhVaNnfvHCA"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/sol.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/sol.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/F3AA7EF362EC5E791FE78A0F4CCC69FEE1F9A7485EB1A8CAB3F6601C00522F10",
        exponent: 0
      }, {
        denom: "evmos",
        exponent: 18
      }],
      base: "ibc/F3AA7EF362EC5E791FE78A0F4CCC69FEE1F9A7485EB1A8CAB3F6601C00522F10",
      name: "Evmos",
      display: "evmos",
      symbol: "EVMOS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "evmos",
          base_denom: "aevmos",
          channel_id: "channel-18"
        },
        chain: {
          channel_id: "channel-23",
          path: "transfer/channel-23/aevmos"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "evmos",
          base_denom: "aevmos"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/004EBF085BBED1029326D56BE8A2E67C08CECE670A94AC1947DF413EF5130EB2",
        exponent: 0
      }, {
        denom: "avax",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/004EBF085BBED1029326D56BE8A2E67C08CECE670A94AC1947DF413EF5130EB2",
      name: "Axelar Wrapped AVAX",
      display: "avax",
      symbol: "wAVAX",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "axelar",
          base_denom: "wavax-wei",
          channel_id: "channel-14"
        },
        chain: {
          channel_id: "channel-9",
          path: "transfer/channel-9/wavax-wei"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "wavax-wei"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/wavax.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/wavax.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/FE98AAD68F02F03565E9FA39A5E627946699B2B07115889ED812D8BA639576A9",
        exponent: 0
      }, {
        denom: "usdc",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/FE98AAD68F02F03565E9FA39A5E627946699B2B07115889ED812D8BA639576A9",
      name: "Noble USD Coin",
      display: "usdc",
      symbol: "USDC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "noble",
          base_denom: "uusdc",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-62",
          path: "transfer/channel-62/uusdc"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "noble",
          base_denom: "uusdc"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/47BD209179859CDE4A2806763D7189B6E6FE13A17880FE2B42DE1E6C1E329E23",
        exponent: 0
      }, {
        denom: "osmo",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/47BD209179859CDE4A2806763D7189B6E6FE13A17880FE2B42DE1E6C1E329E23",
      name: "Osmosis",
      display: "osmo",
      symbol: "OSMO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "uosmo",
          channel_id: "channel-259"
        },
        chain: {
          channel_id: "channel-3",
          path: "transfer/channel-3/uosmo"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "uosmo"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/295548A78785A1007F232DE286149A6FF512F180AF5657780FC89C009E2C348F",
        exponent: 0
      }, {
        denom: "usdc",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/295548A78785A1007F232DE286149A6FF512F180AF5657780FC89C009E2C348F",
      name: "Axelar USD Coin",
      display: "usdc",
      symbol: "axlUSDC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "axelar",
          base_denom: "uusdc",
          channel_id: "channel-14"
        },
        chain: {
          channel_id: "channel-9",
          path: "transfer/channel-9/uusdc"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "uusdc"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/3607EB5B5E64DD1C0E12E07F077FF470D5BC4706AFCBC98FE1BA960E5AE4CE07",
        exponent: 0
      }, {
        denom: "cmdx",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/3607EB5B5E64DD1C0E12E07F077FF470D5BC4706AFCBC98FE1BA960E5AE4CE07",
      name: "Comdex",
      display: "cmdx",
      symbol: "CMDX",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "comdex",
          base_denom: "ucmdx",
          channel_id: "channel-31"
        },
        chain: {
          channel_id: "channel-18",
          path: "transfer/channel-18/ucmdx"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "comdex",
          base_denom: "ucmdx"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmdx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmdx.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmdx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmdx.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/EFF323CC632EC4F747C61BCE238A758EFDB7699C3226565F7C20DA06509D59A5",
        exponent: 0
      }, {
        denom: "juno",
        exponent: 6
      }],
      base: "ibc/EFF323CC632EC4F747C61BCE238A758EFDB7699C3226565F7C20DA06509D59A5",
      name: "Juno",
      display: "juno",
      symbol: "JUNO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "juno",
          base_denom: "ujuno",
          channel_id: "channel-87"
        },
        chain: {
          channel_id: "channel-1",
          path: "transfer/channel-1/ujuno"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "ujuno"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/1B38805B1C75352B28169284F96DF56BDEBD9E8FAC005BDCC8CF0378C82AA8E7",
        exponent: 0
      }, {
        denom: "weth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/1B38805B1C75352B28169284F96DF56BDEBD9E8FAC005BDCC8CF0378C82AA8E7",
      name: "Axelar Wrapped Ether",
      display: "weth",
      symbol: "wETH",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "axelar",
          base_denom: "weth-wei",
          channel_id: "channel-14"
        },
        chain: {
          channel_id: "channel-9",
          path: "transfer/channel-9/weth-wei"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "weth-wei"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/weth.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/weth.png"
      }
    },
    {
      denom_units: [{
        denom: "ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2",
        exponent: 0
      }, {
        denom: "atom",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2",
      name: "Cosmos Hub Atom",
      display: "atom",
      symbol: "ATOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "cosmoshub",
          base_denom: "uatom",
          channel_id: "channel-343"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/uatom"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "cosmoshub",
          base_denom: "uatom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/DA59C009A0B3B95E0549E6BF7B075C8239285989FF457A8EDDBB56F10B2A6986",
        exponent: 0
      }, {
        denom: "luna",
        exponent: 6
      }],
      base: "ibc/DA59C009A0B3B95E0549E6BF7B075C8239285989FF457A8EDDBB56F10B2A6986",
      name: "Luna",
      display: "luna",
      symbol: "LUNA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "terra2",
          base_denom: "uluna",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-5",
          path: "transfer/channel-5/uluna"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "terra2",
          base_denom: "uluna"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/4F393C3FCA4190C0A6756CE7F6D897D5D1BE57D6CCB80D0BC87393566A7B6602",
        exponent: 0
      }, {
        denom: "stars",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/4F393C3FCA4190C0A6756CE7F6D897D5D1BE57D6CCB80D0BC87393566A7B6602",
      name: "Stargaze",
      display: "stars",
      symbol: "STARS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "stargaze",
          base_denom: "ustars",
          channel_id: "channel-49"
        },
        chain: {
          channel_id: "channel-7",
          path: "transfer/channel-7/ustars"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "stargaze",
          base_denom: "ustars"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/A358D7F19237777AF6D8AD0E0F53268F8B18AE8A53ED318095C14D6D7F3B2DB5",
        exponent: 0
      }, {
        denom: "scrt",
        exponent: 6
      }],
      base: "ibc/A358D7F19237777AF6D8AD0E0F53268F8B18AE8A53ED318095C14D6D7F3B2DB5",
      name: "Secret Network",
      display: "scrt",
      symbol: "SCRT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "secretnetwork",
          base_denom: "uscrt",
          channel_id: "channel-22"
        },
        chain: {
          channel_id: "channel-10",
          path: "transfer/channel-10/uscrt"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "secretnetwork",
          base_denom: "uscrt"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/086C1B2E9E611F23D3C9159C858D3F4C6A911D348DFB916A11AE306A865A77A8",
        exponent: 0,
        aliases: ["stk/uatom"]
      }, {
        denom: "stkatom",
        exponent: 6,
        aliases: ["stk/atom"]
      }],
      type_asset: "ics20",
      base: "ibc/086C1B2E9E611F23D3C9159C858D3F4C6A911D348DFB916A11AE306A865A77A8",
      name: "PSTAKE staked ATOM",
      display: "stkatom",
      symbol: "stkATOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "persistence",
          base_denom: "stk/uatom",
          channel_id: "channel-152"
        },
        chain: {
          channel_id: "channel-158",
          path: "transfer/channel-158/stk/uatom"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "persistence",
          base_denom: "stk/uatom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.svg"
      }
    },
    {
      description: "BackBone Labs Liquid Staked KUJI",
      denom_units: [{
        denom: "factory/kujira15e8q5wzlk5k38gjxlhse3vu6vqnafysncx2ltexd6y9gx50vuj2qpt7dgv/boneKuji",
        exponent: 0
      }, {
        denom: "bKUJI",
        exponent: 6
      }],
      base: "factory/kujira15e8q5wzlk5k38gjxlhse3vu6vqnafysncx2ltexd6y9gx50vuj2qpt7dgv/boneKuji",
      name: "BackBone Labs Liquid Staked KUJI",
      display: "bKUJI",
      symbol: "bKUJI",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bKUJI.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bKUJI.png"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/82B298F9E74A9A211C55C67C7AB0C790836BD43672D5DD830F7AE2C5D010AD7D",
        exponent: 0,
        aliases: ["factory/migaloo1d0uma9qzcts4fzt7ml39xp44aut5k6qyjfzz4asalnecppppr3rsl52vvv/rstk"]
      }, {
        denom: "rstk",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/82B298F9E74A9A211C55C67C7AB0C790836BD43672D5DD830F7AE2C5D010AD7D",
      name: "Restake DAO Token",
      display: "rstk",
      symbol: "RSTK",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1d0uma9qzcts4fzt7ml39xp44aut5k6qyjfzz4asalnecppppr3rsl52vvv/rstk",
          channel_id: "channel-8"
        },
        chain: {
          channel_id: "channel-58",
          path: "transfer/channel-58/factory/migaloo1d0uma9qzcts4fzt7ml39xp44aut5k6qyjfzz4asalnecppppr3rsl52vvv/rstk"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1d0uma9qzcts4fzt7ml39xp44aut5k6qyjfzz4asalnecppppr3rsl52vvv/rstk"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.svg"
      }
    },
    {
      description: "Ghost Vault USK",
      denom_units: [{
        denom: "factory/kujira1w4yaama77v53fp0f9343t9w2f932z526vj970n2jv5055a7gt92sxgwypf/urcpt",
        exponent: 0
      }, {
        denom: "xusk",
        exponent: 6
      }],
      base: "factory/kujira1w4yaama77v53fp0f9343t9w2f932z526vj970n2jv5055a7gt92sxgwypf/urcpt",
      name: "Ghost Vault USK",
      display: "xusk",
      symbol: "xUSK",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/xusk.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/xusk.png"
      }]
    },
    {
      description: "Ghost Vault MNTA",
      denom_units: [{
        denom: "factory/kujira1ya42knfcsvy6eztegsn3hz7zpjvhzn05ge85xa2dy2zrjeul9hnspp3c06/urcpt",
        exponent: 0
      }, {
        denom: "xmnta",
        exponent: 6
      }],
      base: "factory/kujira1ya42knfcsvy6eztegsn3hz7zpjvhzn05ge85xa2dy2zrjeul9hnspp3c06/urcpt",
      name: "Ghost Vault MNTA",
      display: "xmnta",
      symbol: "xMNTA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/xmnta.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/xmnta.png"
      }]
    },
    {
      description: "Stride staked ATOM",
      denom_units: [{
        denom: "ibc/0306D6B66EAA2EDBB7EAD23C0EC9DDFC69BB43E80B398035E90FBCFEF3FD1A87",
        exponent: 0
      }, {
        denom: "statom",
        exponent: 6
      }],
      base: "ibc/0306D6B66EAA2EDBB7EAD23C0EC9DDFC69BB43E80B398035E90FBCFEF3FD1A87",
      name: "stATOM",
      display: "statom",
      symbol: "stATOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "stride",
          base_denom: "stuatom",
          channel_id: "channel-8"
        },
        chain: {
          channel_id: "channel-32",
          path: "transfer/channel-32/stuatom"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stride",
          base_denom: "stuatom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.svg"
      }]
    },
    {
      description: "Axelar Bridged wBTC",
      denom_units: [{
        denom: "ibc/301DAF9CB0A9E247CD478533EF0E21F48FF8118C4A51F77C8BC3EB70E5566DBC",
        exponent: 0
      }, {
        denom: "wbtc.axl",
        exponent: 6
      }],
      base: "ibc/301DAF9CB0A9E247CD478533EF0E21F48FF8118C4A51F77C8BC3EB70E5566DBC",
      name: "Axelar Bridged wBTC",
      display: "wbtc.axl",
      symbol: "wBTC.axl",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "axelar",
          base_denom: "wbtc-satoshi",
          channel_id: "channel-14"
        },
        chain: {
          channel_id: "channel-32",
          path: "transfer/channel-9/wbtc-satoshi"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/wbtc.png"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "wbtc-satoshi"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/wbtc.png"
      }]
    },
    {
      description: "Stride staked OSMO",
      denom_units: [{
        denom: "ibc/F97BDCE220CCB52139C73066E36C45EC7EDCEEF1DAFF891A34F4FBA195A2E6E8",
        exponent: 0
      }, {
        denom: "stosmo",
        exponent: 6
      }],
      base: "ibc/F97BDCE220CCB52139C73066E36C45EC7EDCEEF1DAFF891A34F4FBA195A2E6E8",
      name: "Stride staked OSMO",
      display: "stosmo",
      symbol: "stOSMO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "stride",
          base_denom: "stuosmo",
          channel_id: "channel-8"
        },
        chain: {
          channel_id: "channel-32",
          path: "transfer/channel-32/uosmo"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stride",
          base_denom: "stuosmo"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.svg"
      }]
    },
    {
      description: "LP Bow: DOT.axl-MNTA",
      denom_units: [{
        denom: "factory/kujira10qyzrqaza0f593cmnl4sc3p3nhqqakn9j56d899u723pznxpn8us6cypuw/ulp",
        exponent: 0
      }, {
        denom: "lp-dot-mnta",
        exponent: 6
      }],
      base: "factory/kujira10qyzrqaza0f593cmnl4sc3p3nhqqakn9j56d899u723pznxpn8us6cypuw/ulp",
      name: "LP Bow: DOT.axl-MNTA",
      display: "lp-dot-mnta",
      symbol: "LP DOT.axl-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: SHD-MNTA",
      denom_units: [{
        denom: "factory/kujira12tpc335t72qtrjh64ccdydzsr9qtswkqn72cyvfj4d5hmtgynphsv4xjtu/ulp",
        exponent: 0
      }, {
        denom: "lp-shd-mnta",
        exponent: 6
      }],
      base: "factory/kujira12tpc335t72qtrjh64ccdydzsr9qtswkqn72cyvfj4d5hmtgynphsv4xjtu/ulp",
      name: "LP Bow: SHD-MNTA",
      display: "lp-shd-mnta",
      symbol: "LP SHD-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: DYDX-MNTA",
      denom_units: [{
        denom: "factory/kujira13g2eelkf9q4md4xx52ylqvlgpccn50f2vyu05eazufd2g4jatmhq2425pq/ulp",
        exponent: 0
      }, {
        denom: "lp-dydx-mnta",
        exponent: 6
      }],
      base: "factory/kujira13g2eelkf9q4md4xx52ylqvlgpccn50f2vyu05eazufd2g4jatmhq2425pq/ulp",
      name: "LP Bow: DYDX-MNTA",
      display: "lp-dydx-mnta",
      symbol: "LP DYDX-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: wAVAX.axl-MNTA",
      denom_units: [{
        denom: "factory/kujira15pk8c09vcsgsdq4xlh2qfqxtu2r8pgdy7nggkqj8p3h2phke80pqwnvtzk/ulp",
        exponent: 0
      }, {
        denom: "lp-wavax-mnta",
        exponent: 6
      }],
      base: "factory/kujira15pk8c09vcsgsdq4xlh2qfqxtu2r8pgdy7nggkqj8p3h2phke80pqwnvtzk/ulp",
      name: "LP Bow: wAVAX.axl-MNTA",
      display: "lp-wavax-mnta",
      symbol: "LP wAVAX.axl-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: CHEQ-MNTA",
      denom_units: [{
        denom: "factory/kujira15w6jhxsv924mn9cfr0qg9z36hltmw4rzd68x40d9re6hzyhslumqjw9zqd/ulp",
        exponent: 0
      }, {
        denom: "lp-cheq-mnta",
        exponent: 6
      }],
      base: "factory/kujira15w6jhxsv924mn9cfr0qg9z36hltmw4rzd68x40d9re6hzyhslumqjw9zqd/ulp",
      name: "LP Bow: CHEQ-MNTA",
      display: "lp-cheq-mnta",
      symbol: "LP CHEQ-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: FUZN-MNTA",
      denom_units: [{
        denom: "factory/kujira1622xuv8unv22xzazljvqh8uukcdz3yzmrp6axgerh7vxg4kum5tqcwcqmv/ulp",
        exponent: 0
      }, {
        denom: "lp-fuzn-mnta",
        exponent: 6
      }],
      base: "factory/kujira1622xuv8unv22xzazljvqh8uukcdz3yzmrp6axgerh7vxg4kum5tqcwcqmv/ulp",
      name: "LP Bow: FUZN-MNTA",
      display: "lp-fuzn-mnta",
      symbol: "LP FUZN-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: SOMM-MNTA",
      denom_units: [{
        denom: "factory/kujira17djzq5x5e5zm9q9zlp6dtxdt9p8q2zvj0qtmjs0wrxm5g9e2vf5q9d6y2t/ulp",
        exponent: 0
      }, {
        denom: "lp-somm-mnta",
        exponent: 6
      }],
      base: "factory/kujira17djzq5x5e5zm9q9zlp6dtxdt9p8q2zvj0qtmjs0wrxm5g9e2vf5q9d6y2t/ulp",
      name: "LP Bow: SOMM-MNTA",
      display: "lp-somm-mnta",
      symbol: "LP SOMM-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: wETH.axl-MNTA",
      denom_units: [{
        denom: "factory/kujira17x2v39aut0paj5d6wc5jxvqqxrdhy9kvca4y5xn6vsfpsxkgc6gq7n4tg0/ulp",
        exponent: 0
      }, {
        denom: "lp-weth-mnta",
        exponent: 6
      }],
      base: "factory/kujira17x2v39aut0paj5d6wc5jxvqqxrdhy9kvca4y5xn6vsfpsxkgc6gq7n4tg0/ulp",
      name: "LP Bow: wETH.axl-MNTA",
      display: "lp-weth-mnta",
      symbol: "LP wETH.axl-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: NTRN-MNTA",
      denom_units: [{
        denom: "factory/kujira18lhugzap20ndlqr5j2p86yk4pxpe9jjuac05z0ypxuwn3mm5vjhsjh4etr/ulp",
        exponent: 0
      }, {
        denom: "lp-ntrn-mnta",
        exponent: 6
      }],
      base: "factory/kujira18lhugzap20ndlqr5j2p86yk4pxpe9jjuac05z0ypxuwn3mm5vjhsjh4etr/ulp",
      name: "LP Bow: NTRN-MNTA",
      display: "lp-ntrn-mnta",
      symbol: "LP NTRN-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: wFTM.axl-MNTA",
      denom_units: [{
        denom: "factory/kujira18mveas6xseaqu3fmukwv2ac6mp4hszk08lvyamedytjs0kxm42yqs9v89x/ulp",
        exponent: 0
      }, {
        denom: "lp-wftm-mnta",
        exponent: 6
      }],
      base: "factory/kujira18mveas6xseaqu3fmukwv2ac6mp4hszk08lvyamedytjs0kxm42yqs9v89x/ulp",
      name: "LP Bow: wFTM.axl-MNTA",
      display: "lp-wftm-mnta",
      symbol: "LP wFTM.axl-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: STARS-MNTA",
      denom_units: [{
        denom: "factory/kujira1av284rnqh6s0l2lwdqgpgz8wuva3wh9lkmlsupjd9escn5v4fels6kwc7v/ulp",
        exponent: 0
      }, {
        denom: "lp-stars-mnta",
        exponent: 6
      }],
      base: "factory/kujira1av284rnqh6s0l2lwdqgpgz8wuva3wh9lkmlsupjd9escn5v4fels6kwc7v/ulp",
      name: "LP Bow: STARS-MNTA",
      display: "lp-stars-mnta",
      symbol: "LP STARS-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: TIA-MNTA",
      denom_units: [{
        denom: "factory/kujira1cpdyhrkwdnz38u45el3zq7007at9dm6h05tc36zpxvs6vrdwzrrskt0tgg/ulp",
        exponent: 0
      }, {
        denom: "lp-tia-mnta",
        exponent: 6
      }],
      base: "factory/kujira1cpdyhrkwdnz38u45el3zq7007at9dm6h05tc36zpxvs6vrdwzrrskt0tgg/ulp",
      name: "LP Bow: TIA-MNTA",
      display: "lp-tia-mnta",
      symbol: "LP TIA-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: SOL.wh-MNTA",
      denom_units: [{
        denom: "factory/kujira1eqd96322ec258w7k9n9cfqkusrlvzwv38jkph3qs720egdv0epmq70j2zl/ulp",
        exponent: 0
      }, {
        denom: "lp-sol-mnta",
        exponent: 6
      }],
      base: "factory/kujira1eqd96322ec258w7k9n9cfqkusrlvzwv38jkph3qs720egdv0epmq70j2zl/ulp",
      name: "LP Bow: SOL.wh-MNTA",
      display: "lp-sol-mnta",
      symbol: "LP SOL.wh-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: DYM-MNTA",
      denom_units: [{
        denom: "factory/kujira1fg7wmsde7ygw3pm6hqmd29cdvp947anajmunsvk0guvjta3md25qdqk4fw/ulp",
        exponent: 0
      }, {
        denom: "lp-dym-mnta",
        exponent: 6
      }],
      base: "factory/kujira1fg7wmsde7ygw3pm6hqmd29cdvp947anajmunsvk0guvjta3md25qdqk4fw/ulp",
      name: "LP Bow: DYM-MNTA",
      display: "lp-dym-mnta",
      symbol: "LP DYM-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: AKT-MNTA",
      denom_units: [{
        denom: "factory/kujira1gnftck9586x0nhsqsj99k9zednl6tx4kezu9hpph0u6jtqnafpyqxha3me/ulp",
        exponent: 0
      }, {
        denom: "lp-akt-mnta",
        exponent: 6
      }],
      base: "factory/kujira1gnftck9586x0nhsqsj99k9zednl6tx4kezu9hpph0u6jtqnafpyqxha3me/ulp",
      name: "LP Bow: AKT-MNTA",
      display: "lp-akt-mnta",
      symbol: "LP AKT-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: LINK.axl-MNTA",
      denom_units: [{
        denom: "factory/kujira1gnvja05kkmpeh9dnxl0c2p4sde7fpsy2r44njzyqgpsf72nqs78q3gzpzc/ulp",
        exponent: 0
      }, {
        denom: "lp-link-mnta",
        exponent: 6
      }],
      base: "factory/kujira1gnvja05kkmpeh9dnxl0c2p4sde7fpsy2r44njzyqgpsf72nqs78q3gzpzc/ulp",
      name: "LP Bow: LINK.axl-MNTA",
      display: "lp-link-mnta",
      symbol: "LP LINK.axl-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: wTAO.grv-MNTA",
      denom_units: [{
        denom: "factory/kujira1gz2kvfw7hpds9fvygwkj64znl3a9pw697g77cspcq5y4vj3ru45s7qc0rd/ulp",
        exponent: 0
      }, {
        denom: "lp-wtao-mnta",
        exponent: 6
      }],
      base: "factory/kujira1gz2kvfw7hpds9fvygwkj64znl3a9pw697g77cspcq5y4vj3ru45s7qc0rd/ulp",
      name: "LP Bow: wTAO.grv-MNTA",
      display: "lp-wtao-mnta",
      symbol: "LP wTAO.grv-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: MNTA-KUJI",
      denom_units: [{
        denom: "factory/kujira1h75predtjdm2e7u8cuvqs3usc6xs2mxlkcr20zsshvw3qap25frsr4z949/ulp",
        exponent: 0
      }, {
        denom: "lp-mnta-kuji",
        exponent: 6
      }],
      base: "factory/kujira1h75predtjdm2e7u8cuvqs3usc6xs2mxlkcr20zsshvw3qap25frsr4z949/ulp",
      name: "LP Bow: MNTA-KUJI",
      display: "lp-mnta-kuji",
      symbol: "LP MNTA-KUJI",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: AXL-MNTA",
      denom_units: [{
        denom: "factory/kujira1h929g9e9vxhc5y8v7uexdrncacxdatjupr67velewafwepfyfaaq6s7l3v/ulp",
        exponent: 0
      }, {
        denom: "lp-axl-mnta",
        exponent: 6
      }],
      base: "factory/kujira1h929g9e9vxhc5y8v7uexdrncacxdatjupr67velewafwepfyfaaq6s7l3v/ulp",
      name: "LP Bow: AXL-MNTA",
      display: "lp-axl-mnta",
      symbol: "LP AXL-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: ATOM-MNTA",
      denom_units: [{
        denom: "factory/kujira1h9f3k54j060pzlnea8ep8qfymsmwl5yhwc5hqept5p2esqzve7tq2ghnm4/ulp",
        exponent: 0
      }, {
        denom: "lp-atom-mnta",
        exponent: 6
      }],
      base: "factory/kujira1h9f3k54j060pzlnea8ep8qfymsmwl5yhwc5hqept5p2esqzve7tq2ghnm4/ulp",
      name: "LP Bow: ATOM-MNTA",
      display: "lp-atom-mnta",
      symbol: "LP ATOM-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: ARB-MNTA",
      denom_units: [{
        denom: "factory/kujira1kc90tgn4ucvdv4c9xycktanwz2lna0nfel6244ylqjvhaetfntusnmyu3d/ulp",
        exponent: 0
      }, {
        denom: "lp-arb-mnta",
        exponent: 6
      }],
      base: "factory/kujira1kc90tgn4ucvdv4c9xycktanwz2lna0nfel6244ylqjvhaetfntusnmyu3d/ulp",
      name: "LP Bow: ARB-MNTA",
      display: "lp-arb-mnta",
      symbol: "LP ARB-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: WHALE-MNTA",
      denom_units: [{
        denom: "factory/kujira1jsjygyj8hwa4f0p9wwgct4yzmzzexe5x5u6l40l7ty2qzwwwsemqavhk3x/ulp",
        exponent: 0
      }, {
        denom: "lp-whale-mnta",
        exponent: 6
      }],
      base: "factory/kujira1jsjygyj8hwa4f0p9wwgct4yzmzzexe5x5u6l40l7ty2qzwwwsemqavhk3x/ulp",
      name: "LP Bow: WHALE-MNTA",
      display: "lp-whale-mnta",
      symbol: "LP WHALE-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: SCRT-MNTA",
      denom_units: [{
        denom: "factory/kujira1p7w9ncnnme9yzzhrvzv0hnsa5u5ga06v0ckt7lq9yfap04hc5k9sn2vf6w/ulp",
        exponent: 0
      }, {
        denom: "lp-scrt-mnta",
        exponent: 6
      }],
      base: "factory/kujira1p7w9ncnnme9yzzhrvzv0hnsa5u5ga06v0ckt7lq9yfap04hc5k9sn2vf6w/ulp",
      name: "LP Bow: SCRT-MNTA",
      display: "lp-scrt-mnta",
      symbol: "LP SCRT-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: wstETH.axl-MNTA",
      denom_units: [{
        denom: "factory/kujira1qx3hcr297qmgjt5f6u9peldf4phxqufvmew8d3eey3ns29e8qp3snj6jfu/ulp",
        exponent: 0
      }, {
        denom: "lp-wsteth-mnta",
        exponent: 6
      }],
      base: "factory/kujira1qx3hcr297qmgjt5f6u9peldf4phxqufvmew8d3eey3ns29e8qp3snj6jfu/ulp",
      name: "LP Bow: wstETH.axl-MNTA",
      display: "lp-wsteth-mnta",
      symbol: "LP wstETH.axl-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: wMATIC.axl-MNTA",
      denom_units: [{
        denom: "factory/kujira1smfdnww47xav4nn849xphku3gk3xp7a24fk533dce8masnsz4v8quklajx/ulp",
        exponent: 0
      }, {
        denom: "lp-wmatic-mnta",
        exponent: 6
      }],
      base: "factory/kujira1smfdnww47xav4nn849xphku3gk3xp7a24fk533dce8masnsz4v8quklajx/ulp",
      name: "LP Bow: wMATIC.axl-MNTA",
      display: "lp-wmatic-mnta",
      symbol: "LP wMATIC.axl-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: UNI.axl-MNTA",
      denom_units: [{
        denom: "factory/kujira1t4mr2xt4ky4mfwcy752chzlquam3hzs44mt8vwyec8mvypmzxu5s90vamt/ulp",
        exponent: 0
      }, {
        denom: "lp-uni-mnta",
        exponent: 6
      }],
      base: "factory/kujira1t4mr2xt4ky4mfwcy752chzlquam3hzs44mt8vwyec8mvypmzxu5s90vamt/ulp",
      name: "LP Bow: UNI.axl-MNTA",
      display: "lp-uni-mnta",
      symbol: "LP UNI.axl-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: yieldETH.axl-MNTA",
      denom_units: [{
        denom: "factory/kujira1u8dluwa4a83q7anz0cgpmma605r07a06f0789ajcl8l0xjrplqss005cgn/ulp",
        exponent: 0
      }, {
        denom: "lp-yieldeth-mnta",
        exponent: 6
      }],
      base: "factory/kujira1u8dluwa4a83q7anz0cgpmma605r07a06f0789ajcl8l0xjrplqss005cgn/ulp",
      name: "LP Bow: yieldETH.axl-MNTA",
      display: "lp-yieldeth-mnta",
      symbol: "LP yieldETH.axl-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: wBTC.axl-MNTA",
      denom_units: [{
        denom: "factory/kujira1vj39mdwekxznxxa97fv5gt957cghfdqhwju8fdv5ysu0x6vsyhps4zmqjl/ulp",
        exponent: 0
      }, {
        denom: "lp-wbtc-mnta",
        exponent: 6
      }],
      base: "factory/kujira1vj39mdwekxznxxa97fv5gt957cghfdqhwju8fdv5ysu0x6vsyhps4zmqjl/ulp",
      name: "LP Bow: wBTC.axl-MNTA",
      display: "lp-wbtc-mnta",
      symbol: "LP wBTC.axl-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: PAXG.grv-MNTA",
      denom_units: [{
        denom: "factory/kujira1vqdyup9zxxl9gqy5hwh593vvuc84lstldj7qzt7fylf3q3e3uemqlwpg9y/ulp",
        exponent: 0
      }, {
        denom: "lp-paxg-mnta",
        exponent: 6
      }],
      base: "factory/kujira1vqdyup9zxxl9gqy5hwh593vvuc84lstldj7qzt7fylf3q3e3uemqlwpg9y/ulp",
      name: "LP Bow: PAXG.grv-MNTA",
      display: "lp-paxg-mnta",
      symbol: "LP PAXG.grv-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: wBNB.axl-MNTA",
      denom_units: [{
        denom: "factory/kujira1y24jwsv84lnuv5j78qeqz5ujjpd058qsft7wfc0nk9jvycugm32sqnq53d/ulp",
        exponent: 0
      }, {
        denom: "lp-wbnb-mnta",
        exponent: 6
      }],
      base: "factory/kujira1y24jwsv84lnuv5j78qeqz5ujjpd058qsft7wfc0nk9jvycugm32sqnq53d/ulp",
      name: "LP Bow: wBNB.axl-MNTA",
      display: "lp-wbnb-mnta",
      symbol: "LP wBNB.axl-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: OSMO-MNTA",
      denom_units: [{
        denom: "factory/kujira1ygperwf0dc9ng2jffj0pwnnray3rscn9el6d78qjtt25qwgqukqszmdwtv/ulp",
        exponent: 0
      }, {
        denom: "lp-osmo-mnta",
        exponent: 6
      }],
      base: "factory/kujira1ygperwf0dc9ng2jffj0pwnnray3rscn9el6d78qjtt25qwgqukqszmdwtv/ulp",
      name: "LP Bow: OSMO-MNTA",
      display: "lp-osmo-mnta",
      symbol: "LP OSMO-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: INJ-MNTA",
      denom_units: [{
        denom: "factory/kujira1znx048dcc6arqfw6kpckl0k4ts2h7cdx20nk22wz2cxh5vle3wxqknk238/ulp",
        exponent: 0
      }, {
        denom: "lp-inj-mnta",
        exponent: 6
      }],
      base: "factory/kujira1znx048dcc6arqfw6kpckl0k4ts2h7cdx20nk22wz2cxh5vle3wxqknk238/ulp",
      name: "LP Bow: INJ-MNTA",
      display: "lp-inj-mnta",
      symbol: "LP INJ-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: stOSMO-OSMO",
      denom_units: [{
        denom: "factory/kujira18sek950cg92gd0kvpj67dfg6p7kee6hzw92etcf2jgufr3mttvaslt5sal/ulp",
        exponent: 0
      }, {
        denom: "lp-stosmo-osmo",
        exponent: 6
      }],
      base: "factory/kujira18sek950cg92gd0kvpj67dfg6p7kee6hzw92etcf2jgufr3mttvaslt5sal/ulp",
      name: "LP Bow: stOSMO-OSMO",
      display: "lp-stosmo-osmo",
      symbol: "LP stOSMO-OSMO",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: wstETH.axl-wETH.axl",
      denom_units: [{
        denom: "factory/kujira1lyyeyuw4qgan6nz45thw2m0nmxa457uz7cp9dqw5d9a0h7ccek7qavkm6g/ulp",
        exponent: 0
      }, {
        denom: "lp-wsteth-weth",
        exponent: 6
      }],
      base: "factory/kujira1lyyeyuw4qgan6nz45thw2m0nmxa457uz7cp9dqw5d9a0h7ccek7qavkm6g/ulp",
      name: "LP Bow: wstETH.axl-wETH.axl",
      display: "lp-wsteth-weth",
      symbol: "LP wstETH.axl-wETH.axl",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: qcMNTA-MNTA",
      denom_units: [{
        denom: "factory/kujira1ul00h0a2kgcg9x2yfa86wj9qguhyv7jmpjpw6ztt24j9mn9xjw3slawyc8/ulp",
        exponent: 0
      }, {
        denom: "lp-qcmnta-mnta",
        exponent: 6
      }],
      base: "factory/kujira1ul00h0a2kgcg9x2yfa86wj9qguhyv7jmpjpw6ztt24j9mn9xjw3slawyc8/ulp",
      name: "LP Bow: qcMNTA-MNTA",
      display: "lp-qcmnta-mnta",
      symbol: "LP qcMNTA-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: ampMNTA-MNTA",
      denom_units: [{
        denom: "factory/kujira1vj36ntsqd3msc69lxldcv9dd50jngknmael9e07rz4fpn5kyq0jsglvz2m/ulp",
        exponent: 0
      }, {
        denom: "lp-ampmnta-mnta",
        exponent: 6
      }],
      base: "factory/kujira1vj36ntsqd3msc69lxldcv9dd50jngknmael9e07rz4fpn5kyq0jsglvz2m/ulp",
      name: "LP Bow: ampMNTA-MNTA",
      display: "lp-ampmnta-mnta",
      symbol: "LP ampMNTA-MNTA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "LP Bow: wETH.axl-USK",
      denom_units: [{
        denom: "factory/kujira1n648rfqqvjxm6c7zgfnfqay85rkapgg0z7da9pnmjazz5m5d7l0qxdtq90/ulp",
        exponent: 0
      }, {
        denom: "lp-weth-usk",
        exponent: 6
      }],
      base: "factory/kujira1n648rfqqvjxm6c7zgfnfqay85rkapgg0z7da9pnmjazz5m5d7l0qxdtq90/ulp",
      name: "LP Bow: wETH.axl-USK",
      display: "lp-weth-usk",
      symbol: "LP wETH.axl-USK",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/bow.svg"
      }]
    },
    {
      description: "The token of NAMI",
      denom_units: [{
        denom: "factory/kujira13x2l25mpkhwnwcwdzzd34cr8fyht9jlj7xu9g4uffe36g3fmln8qkvm3qn/unami",
        exponent: 0
      }, {
        denom: "nami",
        exponent: 6
      }],
      base: "factory/kujira13x2l25mpkhwnwcwdzzd34cr8fyht9jlj7xu9g4uffe36g3fmln8qkvm3qn/unami",
      name: "NAMI",
      display: "nami",
      symbol: "NAMI",
      coingecko_id: "nami-protocol",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/nami.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/nami.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/nami.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/nami.svg"
      }]
    }
  ]
};
var assets_default83 = info231;

// node_modules/chain-registry/esm/mainnet/kujira/chain.js
var info232 = {
  $schema: "../chain.schema.json",
  chain_name: "kujira",
  chain_id: "kaiyo-1",
  pretty_name: "Kujira",
  status: "live",
  network_type: "mainnet",
  website: "https://kujira.app/",
  bech32_prefix: "kujira",
  daemon_name: "kujirad",
  node_home: "$HOME/.kujira",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [
      {
        denom: "ukuji",
        fixed_min_gas_price: 34e-4,
        low_gas_price: 34e-4,
        average_gas_price: 51e-4,
        high_gas_price: 681e-5
      },
      {
        denom: "factory/kujira1qk00h5atutpsv900x202pxx42npjr9thg58dnqpa72f2p7m2luase444a7/uusk",
        fixed_min_gas_price: 0.01186,
        low_gas_price: 0.01186,
        average_gas_price: 0.01779,
        high_gas_price: 0.02372
      },
      {
        denom: "ibc/295548A78785A1007F232DE286149A6FF512F180AF5657780FC89C009E2C348F",
        fixed_min_gas_price: 0.0119,
        low_gas_price: 0.0119,
        average_gas_price: 0.01785,
        high_gas_price: 0.02379
      },
      {
        denom: "ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2",
        fixed_min_gas_price: 129e-5,
        low_gas_price: 129e-5,
        average_gas_price: 193e-5,
        high_gas_price: 258e-5
      },
      {
        denom: "ibc/47BD209179859CDE4A2806763D7189B6E6FE13A17880FE2B42DE1E6C1E329E23",
        fixed_min_gas_price: 0.01795,
        low_gas_price: 0.01795,
        average_gas_price: 0.02692,
        high_gas_price: 0.0359
      },
      {
        denom: "ibc/3607EB5B5E64DD1C0E12E07F077FF470D5BC4706AFCBC98FE1BA960E5AE4CE07",
        fixed_min_gas_price: 0.65943,
        low_gas_price: 0.65943,
        average_gas_price: 0.98915,
        high_gas_price: 1.31887
      },
      {
        denom: "ibc/F3AA7EF362EC5E791FE78A0F4CCC69FEE1F9A7485EB1A8CAB3F6601C00522F10",
        fixed_min_gas_price: 160416396197,
        low_gas_price: 160416396197,
        average_gas_price: 240624594296,
        high_gas_price: 320832792394
      },
      {
        denom: "ibc/EFF323CC632EC4F747C61BCE238A758EFDB7699C3226565F7C20DA06509D59A5",
        fixed_min_gas_price: 0.02689,
        low_gas_price: 0.02689,
        average_gas_price: 0.04034,
        high_gas_price: 0.05379
      },
      {
        denom: "ibc/DA59C009A0B3B95E0549E6BF7B075C8239285989FF457A8EDDBB56F10B2A6986",
        fixed_min_gas_price: 0.01495,
        low_gas_price: 0.01495,
        average_gas_price: 0.02243,
        high_gas_price: 0.02991
      },
      {
        denom: "ibc/A358D7F19237777AF6D8AD0E0F53268F8B18AE8A53ED318095C14D6D7F3B2DB5",
        fixed_min_gas_price: 0.03139,
        low_gas_price: 0.03139,
        average_gas_price: 0.04709,
        high_gas_price: 0.06278
      },
      {
        denom: "ibc/4F393C3FCA4190C0A6756CE7F6D897D5D1BE57D6CCB80D0BC87393566A7B6602",
        fixed_min_gas_price: 0.90403,
        low_gas_price: 0.90403,
        average_gas_price: 1.35605,
        high_gas_price: 1.80806
      },
      {
        denom: "ibc/004EBF085BBED1029326D56BE8A2E67C08CECE670A94AC1947DF413EF5130EB2",
        fixed_min_gas_price: 559196837,
        low_gas_price: 559196837,
        average_gas_price: 838795256,
        high_gas_price: 1118393675
      },
      {
        denom: "ibc/1B38805B1C75352B28169284F96DF56BDEBD9E8FAC005BDCC8CF0378C82AA8E7",
        fixed_min_gas_price: 5772801,
        low_gas_price: 5772801,
        average_gas_price: 8659201,
        high_gas_price: 11545602
      },
      {
        denom: "factory/kujira1643jxg8wasy5cfcn7xm8rd742yeazcksqlg4d7/umnta",
        fixed_min_gas_price: 0.01807,
        low_gas_price: 0.01807,
        average_gas_price: 0.02711,
        high_gas_price: 0.03615
      },
      {
        denom: "ibc/FE98AAD68F02F03565E9FA39A5E627946699B2B07115889ED812D8BA639576A9",
        fixed_min_gas_price: 0.01194,
        low_gas_price: 0.01194,
        average_gas_price: 0.01792,
        high_gas_price: 0.02389
      },
      {
        denom: "ibc/E5CA126979E2FFB4C70C072F8094D07ECF27773B37623AD2BF7582AD0726F0F3",
        fixed_min_gas_price: 19e-5,
        low_gas_price: 19e-5,
        average_gas_price: 29e-5,
        high_gas_price: 39e-5
      }
    ]
  },
  staking: {
    staking_tokens: [{
      denom: "ukuji"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.47.8",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.45.0"
  },
  description: "A decentralized ecosystem for protocols, builders and web3 users seeking sustainable FinTech.",
  apis: {
    rpc: [
      {
        address: "https://rpc-kujira.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://rpc.kaiyo.kujira.setten.io",
        provider: "setten.io"
      },
      {
        address: "https://kujira-rpc.polkachu.com",
        provider: "polkachu"
      },
      {
        address: "https://rpc-kujira.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://kujira-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc.kujira.chaintools.tech/",
        provider: "ChainTools"
      },
      {
        address: "https://rpc-kujira-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://kujira-rpc.ibs.team/",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://rpc-kujira.starsquid.io",
        provider: "Starsquid"
      },
      {
        address: "https://kujira.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://kuji-rpc.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://rpc-kujira.goldenratiostaking.net",
        provider: "Golden Ratio Staking"
      },
      {
        address: "https://kujira-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rpc.kujira.rektdao.club",
        provider: "rektDAO"
      },
      {
        address: "https://kujira-rpc.theamsolutions.info",
        provider: "AM Solutions"
      },
      {
        address: "https://kujira-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://rpc-kujira.mms.team",
        provider: "MMS"
      },
      {
        address: "https://kujira-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://kujira.interstellar-lounge.org",
        provider: "Interstellar Lounge \u{1F378}"
      }
    ],
    rest: [
      {
        address: "https://lcd-kujira.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://lcd.kaiyo.kujira.setten.io",
        provider: "setten.io"
      },
      {
        address: "https://kujira-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://kujira-api.polkachu.com/",
        provider: "polkachu"
      },
      {
        address: "https://rest-kujira.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://api-kujira-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://kujira-lcd.wildsage.io/",
        provider: "WildSage Labs"
      },
      {
        address: "https://kujira-api.ibs.team/",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://api-kujira.starsquid.io",
        provider: "Starsquid"
      },
      {
        address: "https://kujira.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://kuji-api.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://kujira-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://api.kujira.rektdao.club",
        provider: "rektDAO"
      },
      {
        address: "https://kujira-api.theamsolutions.info",
        provider: "AM Solutions"
      },
      {
        address: "https://kujira-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://api-kujira.mms.team",
        provider: "MMS"
      },
      {
        address: "https://kujira-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://kujira-rest.interstellar-lounge.org",
        provider: "Interstellar Lounge \u{1F378}"
      }
    ],
    grpc: [
      {
        address: "kujira.grpcui.chaintools.host:443",
        provider: "ChainTools"
      },
      {
        address: "grpc-kujira-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "kujira-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "kujira-grpc.polkachu.com:11890",
        provider: "Polkachu"
      },
      {
        address: "kujira-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "kujira.grpc.kjnodes.com:11390",
        provider: "kjnodes"
      },
      {
        address: "kujira-grpc.w3coins.io:11890",
        provider: "w3coins"
      },
      {
        address: "grpc-kujira.mms.team:443",
        provider: "MMS"
      },
      {
        address: "kujira-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "grpc-kujira.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      }
    ]
  },
  explorers: [
    {
      kind: "kujira",
      url: "https://finder.kujira.app",
      tx_page: "https://finder.kujira.app/kaiyo-1/tx/${txHash}"
    },
    {
      kind: "explorers.guru",
      url: "https://kujira.explorers.guru",
      tx_page: "https://kujira.explorers.guru/transaction/${txHash}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/kujira",
      tx_page: "https://ezstaking.app/kujira/txs/${txHash}",
      account_page: "https://ezstaking.app/kujira/account/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/kujira",
      tx_page: "https://atomscan.com/kujira/transactions/${txHash}",
      account_page: "https://atomscan.com/kujira/accounts/${accountAddress}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/kujira",
      tx_page: "https://mainnet.whispernode.com/kujira/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/kujira/account/${accountAddress}"
    }
  ],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kujira-chain-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kuji.svg"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kujira-chain-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kuji.svg"
  }]
};
var chain_default83 = info232;

// node_modules/chain-registry/esm/mainnet/kujira/ibc.js
var info233 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-8",
      connection_id: "connection-8"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-61",
      connection_id: "connection-41"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-47",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-20",
      connection_id: "connection-20"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-94",
      connection_id: "connection-64"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-61",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-126",
      connection_id: "connection-103"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-103",
      connection_id: "connection-72"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-63",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-64",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "andromeda",
      client_id: "07-tendermint-6",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-164",
      connection_id: "connection-127"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-123",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-12",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-144",
      connection_id: "connection-110"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-99",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "assetmantle",
      client_id: "07-tendermint-50",
      connection_id: "connection-31"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-104",
      connection_id: "connection-73"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-65",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-19",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-42",
      connection_id: "connection-23"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-11",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "carbon",
      client_id: "07-tendermint-16",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-60",
      connection_id: "connection-40"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-46",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "demex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "comdex",
      client_id: "07-tendermint-52",
      connection_id: "connection-34"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-20",
      connection_id: "connection-15"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-31",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-110",
      connection_id: "connection-43"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-147",
      connection_id: "connection-112"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-27",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-101",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-28",
      connection_id: "connection-19"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-163",
      connection_id: "connection-126"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-122",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-769",
      connection_id: "connection-555"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-343",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-78",
      connection_id: "connection-68"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-105",
      connection_id: "connection-75"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-42",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-67",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-5",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-158",
      connection_id: "connection-122"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-118",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dymension",
      client_id: "07-tendermint-17",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-169",
      connection_id: "connection-132"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-160",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-53",
      connection_id: "connection-21"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-25",
      connection_id: "connection-19"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "furya",
      client_id: "07-tendermint-1",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-160",
      connection_id: "connection-123"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-119",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gateway",
      client_id: "07-tendermint-13",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-153",
      connection_id: "connection-117"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-113",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-225",
      connection_id: "connection-189"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-69",
      connection_id: "connection-45"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-107",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-50",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-144",
      connection_id: "connection-116"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-77",
      connection_id: "connection-53"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-98",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-54",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "jackal",
      client_id: "07-tendermint-57",
      connection_id: "connection-47"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-139",
      connection_id: "connection-105"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-39",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-94",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-198",
      connection_id: "connection-140"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-2",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-87",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kava",
      client_id: "07-tendermint-119",
      connection_id: "connection-156"
    },
    chain_2: {
      chain_name: "kujira",
      client_id: "07-tendermint-140",
      connection_id: "connection-106"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-116",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-95",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-78",
      connection_id: "connection-54"
    },
    chain_2: {
      chain_name: "mars",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-55",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-82",
      connection_id: "connection-59"
    },
    chain_2: {
      chain_name: "migaloo",
      client_id: "07-tendermint-16",
      connection_id: "connection-19"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-58",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-112",
      connection_id: "connection-82"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-75",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-95",
      connection_id: "connection-65"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-2",
      connection_id: "connection-4"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-62",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-156",
      connection_id: "connection-120"
    },
    chain_2: {
      chain_name: "nomic",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-116",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-166",
      connection_id: "connection-129"
    },
    chain_2: {
      chain_name: "odin",
      client_id: "07-tendermint-114",
      connection_id: "connection-83"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-157",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-63",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "kujira"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-108",
      connection_id: "connection-78"
    },
    chain_2: {
      chain_name: "omniflixhub",
      client_id: "07-tendermint-43",
      connection_id: "connection-36"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-70",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-26",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2017",
      connection_id: "connection-1559"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-259",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-167",
      connection_id: "connection-130"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-162",
      connection_id: "connection-200"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-158",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-152",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-70",
      connection_id: "connection-46"
    },
    chain_2: {
      chain_name: "planq",
      client_id: "07-tendermint-144",
      connection_id: "connection-151"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-155",
      connection_id: "connection-119"
    },
    chain_2: {
      chain_name: "realio",
      client_id: "07-tendermint-6",
      connection_id: "connection-4"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-115",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-106",
      connection_id: "connection-76"
    },
    chain_2: {
      chain_name: "regen",
      client_id: "07-tendermint-115",
      connection_id: "connection-104"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-68",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-100",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-12",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-48",
      connection_id: "connection-29"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-22",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }, {
      chain_1: {
        channel_id: "channel-44",
        port_id: "transfer",
        client_id: "07-tendermint-12",
        connection_id: "connection-7"
      },
      chain_2: {
        channel_id: "channel-46",
        port_id: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4",
        client_id: "07-tendermint-48",
        connection_id: "connection-29"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-107",
      connection_id: "connection-77"
    },
    chain_2: {
      chain_name: "sommelier",
      client_id: "07-tendermint-12",
      connection_id: "connection-8"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-69",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-96",
      connection_id: "connection-68"
    },
    chain_2: {
      chain_name: "stafihub",
      client_id: "07-tendermint-4",
      connection_id: "connection-4"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-63",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-9",
      connection_id: "connection-5"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-178",
      connection_id: "connection-111"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-49",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-37",
      connection_id: "connection-31"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-5",
      connection_id: "connection-5"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-32",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-132",
      connection_id: "connection-100"
    },
    chain_2: {
      chain_name: "teritori",
      client_id: "07-tendermint-61",
      connection_id: "connection-38"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-89",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-30",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-5",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-11",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-28",
        port_id: "wasm.terra1e0mrzy8077druuu42vs0hu7ugguade0cj65dgtauyaw4gsl4kv0qtdf2au"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default67 = info233;

// node_modules/chain-registry/esm/mainnet/kujira/index.js
var assets83 = assets_default83;
var chain83 = chain_default83;
var ibc67 = ibc_default67;

// node_modules/chain-registry/esm/mainnet/kyve/assets.js
var info234 = {
  $schema: "../assetlist.schema.json",
  chain_name: "kyve",
  assets: [{
    description: "The native utility token of the KYVE network.",
    denom_units: [{
      denom: "ukyve",
      exponent: 0
    }, {
      denom: "kyve",
      exponent: 6
    }],
    base: "ukyve",
    name: "KYVE",
    display: "kyve",
    symbol: "KYVE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.svg"
    },
    coingecko_id: "kyve-network",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.svg"
    }],
    socials: {
      website: "https://www.kyve.network/",
      twitter: "https://twitter.com/KYVENetwork"
    }
  }]
};
var assets_default84 = info234;

// node_modules/chain-registry/esm/mainnet/kyve/chain.js
var info235 = {
  $schema: "../chain.schema.json",
  chain_name: "kyve",
  chain_id: "kyve-1",
  pretty_name: "KYVE",
  status: "live",
  network_type: "mainnet",
  bech32_prefix: "kyve",
  daemon_name: "kyved",
  node_home: "$HOME/.kyve",
  website: "https://www.kyve.network/",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ukyve",
      fixed_min_gas_price: 0.02,
      low_gas_price: 0.02,
      average_gas_price: 0.03,
      high_gas_price: 0.06
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ukyve"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.47.6-kyve-rc0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve.svg"
  },
  description: "Revolutionizing data reliability in the Web3 space, KYVE Network provides fast and easy tooling for data validation, immutability, and retrieval, ensuring trustless data for seamless scalability and eliminating data risks and roadblocks.",
  apis: {
    rpc: [
      {
        address: "https://rpc-eu-1.kyve.network",
        provider: "kyve"
      },
      {
        address: "https://rpc-kyve.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://kyve-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "http://kyve.rpc.m.stavr.tech:12357",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc-kyve.imperator.co",
        provider: "Imperator.co"
      },
      {
        address: "https://kyve-rpc.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://rpc.kyve.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://kyve.rpc.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "https://rpc-kyve.mms.team",
        provider: "MMS"
      },
      {
        address: "https://kyve.declab.pro:26616",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "https://kyve-rpc.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://kyve_mainnet_rpc.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      },
      {
        address: "https://kyve-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      }
    ],
    rest: [
      {
        address: "https://api-eu-1.kyve.network",
        provider: "kyve"
      },
      {
        address: "https://kyve-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rest-kyve.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://lcd-kyve.imperator.co",
        provider: "Imperator.co"
      },
      {
        address: "https://kyve.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://kyve-api.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://api.kyve.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://kyve.api.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "https://api-kyve.mms.team",
        provider: "MMS"
      },
      {
        address: "https://kyve.declab.pro:443",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "https://kyve-api.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://kyve_mainnet_api.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      },
      {
        address: "https://kyve-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      }
    ],
    grpc: [
      {
        address: "https://grpc.kyve.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://kyve-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://grpc-kyve.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "http://kyve.grpc.stavr.tech:7106",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://kyve.grpc.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "grpc-kyve.mms.team:443",
        provider: "MMS"
      },
      {
        address: "https://kyve.declab.pro:9011",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "kyve-grpc.noders.services:15090",
        provider: "[NODERS]TEAM"
      },
      {
        address: "kyve-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/kyve",
      tx_page: "https://ezstaking.app/kyve/txs/${txHash}",
      account_page: "https://ezstaking.app/kyve/account/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/kyve",
      tx_page: "https://www.mintscan.io/kyve/txs/${txHash}",
      account_page: "https://www.mintscan.io/kyve/account/${accountAddress}"
    },
    {
      kind: "NodeStake Explorer",
      url: "https://explorer.nodestake.top/kyve",
      tx_page: "https://explorer.nodestake.top/kyve/txs/${txHash}",
      account_page: "https://explorer.nodestake.top/kyve/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Kyve",
      tx_page: "https://explorer.stavr.tech/Kyve/txs/${txHash}",
      account_page: "https://explorer.stavr.tech/Kyve/account/${accountAddress}"
    },
    {
      kind: "Stake-Take",
      url: "https://explorer.stake-take.com/kyve",
      tx_page: "https://explorer.stake-take.com/kyve/txs/${txHash}",
      account_page: "https://explorer.stake-take.com/kyve/account/${accountAddress}"
    },
    {
      kind: "Decloud Nodes Lab",
      url: "https://explorer.declab.pro/Kyve",
      tx_page: "https://explorer.declab.pro/Kyve/txs/${txHash}",
      account_page: "https://explorer.declab.pro/Kyve/account/${accountAddress}"
    },
    {
      kind: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}",
      url: "https://explorer.whenmoonwhenlambo.money/kyve",
      tx_page: "https://explorer.whenmoonwhenlambo.money/kyve/txs/${txHash}",
      account_page: "https://explorer.whenmoonwhenlambo.money/kyve/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve.svg"
  }]
};
var chain_default84 = info235;

// node_modules/chain-registry/esm/mainnet/kyve/ibc.js
var info236 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "axelar",
    client_id: "07-tendermint-118",
    connection_id: "connection-107"
  },
  chain_2: {
    chain_name: "kyve",
    client_id: "07-tendermint-1",
    connection_id: "connection-1"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-75",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "kyve",
    client_id: "07-tendermint-0",
    connection_id: "connection-0"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2757",
    connection_id: "connection-2274"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-767",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default68 = info236;

// node_modules/chain-registry/esm/mainnet/kyve/index.js
var assets84 = assets_default84;
var chain84 = chain_default84;
var ibc68 = ibc_default68;

// node_modules/chain-registry/esm/mainnet/lambda/assets.js
var info237 = {
  $schema: "../assetlist.schema.json",
  chain_name: "lambda",
  assets: [{
    description: "The native token of Lambda",
    denom_units: [{
      denom: "ulamb",
      exponent: 0
    }, {
      denom: "lamb",
      exponent: 18
    }],
    base: "ulamb",
    name: "Lambda",
    display: "lamb",
    symbol: "LAMB",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lambda/images/lambda.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lambda/images/lambda.svg"
    },
    coingecko_id: "lambda",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lambda/images/lambda.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lambda/images/lambda.svg"
    }]
  }]
};
var assets_default85 = info237;

// node_modules/chain-registry/esm/mainnet/lambda/chain.js
var info238 = {
  $schema: "../chain.schema.json",
  chain_name: "lambda",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Lambda",
  chain_id: "lambda_92000-1",
  bech32_prefix: "lamb",
  node_home: "$HOME/.lambdavm",
  daemon_name: "lambdavm",
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "ulamb",
      low_gas_price: 1e10,
      average_gas_price: 25e9,
      high_gas_price: 4e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ulamb"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lambda/images/lambda.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lambda/images/lambda.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.lambda.im",
        provider: "Lambda"
      },
      {
        address: "http://lambda.rpc.m.stavr.tech:31327",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc.lambda.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://lambda-rpc.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://lambda_mainnet_rpc.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      }
    ],
    rest: [
      {
        address: "https://rest.lambda.im",
        provider: "Lambda"
      },
      {
        address: "https://lambda.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api.lambda.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://lambda-api.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://lambda_mainnet_api.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      }
    ],
    grpc: [
      {
        address: "http://lambda.grpc.m.stavr.tech:2287",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "grpc.lambda.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "lambda-grpc.noders.services:31090",
        provider: "[NODERS]TEAM"
      }
    ],
    "evm-http-jsonrpc": [
      {
        address: "https://jsonrpc-lambda.d-stake.xyz",
        provider: "D-stake"
      },
      {
        address: "https://lambda-jsonrpc.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://lambda_mainnet_evm.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      }
    ]
  },
  explorers: [
    {
      kind: "blockscout",
      url: "https://explorer.lambda.im/",
      tx_page: "https://explorer.lambda.im/tx/${txHash}"
    },
    {
      kind: "NodeStake",
      url: "https://explorer.nodestake.top/lambda",
      tx_page: "https://explorer.nodestake.top/lambda/txs/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/lambda",
      tx_page: "https://explorer.stavr.tech/lambda/txs/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/lambda",
      tx_page: "https://atomscan.com/lambda/transactions/${txHash}",
      account_page: "https://atomscan.com/lambda/accounts/${accountAddress}"
    },
    {
      kind: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}",
      url: "https://explorer.whenmoonwhenlambo.money/lambda",
      tx_page: "https://explorer.whenmoonwhenlambo.money/lambda/tx/${txHash}",
      account_page: "https://explorer.whenmoonwhenlambo.money/lambda/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lambda/images/lambda.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lambda/images/lambda.svg"
  }]
};
var chain_default85 = info238;

// node_modules/chain-registry/esm/mainnet/lambda/ibc.js
var info239 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "lambda",
    client_id: "07-tendermint-6",
    connection_id: "connection-5"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2217",
    connection_id: "connection-1733"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-2",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-378",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default69 = info239;

// node_modules/chain-registry/esm/mainnet/lambda/index.js
var assets85 = assets_default85;
var chain85 = chain_default85;
var ibc69 = ibc_default69;

// node_modules/chain-registry/esm/mainnet/lava/assets.js
var info240 = {
  $schema: "../assetlist.schema.json",
  chain_name: "lava",
  assets: [{
    description: "The native token of Lava",
    denom_units: [{
      denom: "ulava",
      exponent: 0
    }, {
      denom: "lava",
      exponent: 6
    }],
    type_asset: "sdk.coin",
    base: "ulava",
    name: "Lava",
    display: "lava",
    symbol: "LAVA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lava/images/lava.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lava/images/lava.png"
    }],
    keywords: [
      "modular",
      "data",
      "data access",
      "rpc",
      "staking",
      "dual staking",
      "indexing",
      "incentivized public rpc"
    ],
    socials: {
      website: "https://lavanet.xyz",
      twitter: "https://twitter.com/lavanetxyz"
    }
  }]
};
var assets_default86 = info240;

// node_modules/chain-registry/esm/mainnet/lava/chain.js
var info241 = {
  $schema: "../chain.schema.json",
  chain_name: "lava",
  status: "upcoming",
  network_type: "mainnet",
  website: "https://lavanet.xyz/",
  update_link: "https://raw.githubusercontent.com/lavanet/lava/main/chain.schema.json",
  pretty_name: "Lava",
  chain_id: "lava-mainnet-1",
  bech32_prefix: "lava@",
  daemon_name: "lavad",
  node_home: "$HOME/.lava",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ulava",
      fixed_min_gas_price: 1e-9,
      low_gas_price: 1e-9,
      average_gas_price: 5e-5,
      high_gas_price: 1e-4
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ulava"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "github.com/lavanet/cosmos-sdk@v0.47.x-lava",
    cosmwasm_enabled: false
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lava/images/lava.png"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lava/images/lava.png"
  },
  description: "Lava (LAVA) is the data access layer of the modular stack. developers and ecosystems permissionlessly add services to be served or accessed through lava. featuring a fully decentralized open source sdk integrable in frontends and a battle tested fully scalable open source server kit and can be used locally or through managed endpoints. Lava features rpc data access, indexing services, debug apis, archive access and more. Service providers can join the network, earn rewards either in the native token of the chain via token bought subscriptions on chain or through any ibc transferred token via incentive pools created and funded by ecosystems and DAOs. Developers can use the abstraction and go multi chain in seconds, not needing to choose what tools to use, having the access aggregated for them. Build whatever, wherever.",
  apis: {
    rpc: [
      {
        address: "https://lava-rpc.w3coins.io:443",
        provider: "w3coins"
      },
      {
        address: "https://lava-rpc.finteh.org:443",
        provider: "finteh"
      },
      {
        address: "https://lava-rpc.y2.finance:443",
        provider: "YTWOFUND"
      },
      {
        address: "https://lava-rpc.ibs.team:443",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://rpc.lava-mainnet-1.lava.aviaone.com:443",
        provider: "AVIAONE"
      },
      {
        address: "https://lava-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://lava.rpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://lava.rpc-archive.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      }
    ],
    rest: [
      {
        address: "https://lava-api.w3coins.io:443",
        provider: "w3coins"
      },
      {
        address: "https://lava-api.ibs.team:443",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://api.lava-mainnet-1.lava.aviaone.com",
        provider: "AVIAONE"
      },
      {
        address: "https://lava-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://lava.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://lava.api-archive.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      }
    ],
    grpc: [
      {
        address: "lava-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "lava.grpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "lava.grpc-archive.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      }
    ]
  },
  explorers: [{
    kind: "w3coins",
    url: "https://lava-explorer.w3coins.io/Lava",
    tx_page: "https://lava-explorer.w3coins.io/Lava/tx/${txHash}",
    account_page: "https://lava-explorer.w3coins.io/Lava/account/${accountAddress}"
  }],
  keywords: [
    "modular",
    "data",
    "data access",
    "rpc",
    "staking",
    "dual staking",
    "indexing",
    "incentivized public rpc"
  ]
};
var chain_default86 = info241;

// node_modules/chain-registry/esm/mainnet/lava/index.js
var assets86 = assets_default86;
var chain86 = chain_default86;

// node_modules/chain-registry/esm/mainnet/likecoin/assets.js
var info242 = {
  $schema: "../assetlist.schema.json",
  chain_name: "likecoin",
  assets: [{
    description: "LIKE is the native staking and governance token of LikeCoin chain, a Decentralized Publishing Infrastructure to empower content ownership, authenticity, and provenance.",
    denom_units: [{
      denom: "nanolike",
      exponent: 0
    }, {
      denom: "like",
      exponent: 9
    }],
    base: "nanolike",
    name: "LikeCoin",
    display: "like",
    symbol: "LIKE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/like.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/like.svg"
    },
    coingecko_id: "likecoin",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/like.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/like.svg"
    }]
  }]
};
var assets_default87 = info242;

// node_modules/chain-registry/esm/mainnet/likecoin/chain.js
var info243 = {
  $schema: "../chain.schema.json",
  chain_name: "likecoin",
  status: "live",
  website: "https://like.co/",
  network_type: "mainnet",
  pretty_name: "LikeCoin",
  chain_id: "likecoin-mainnet-2",
  bech32_prefix: "like",
  daemon_name: "liked",
  node_home: "$HOME/.liked",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "nanolike",
      fixed_min_gas_price: 1e3,
      low_gas_price: 1e3,
      average_gas_price: 1e4,
      high_gas_price: 1e6
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "nanolike"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "0.46",
    cosmwasm_enabled: false
  },
  apis: {
    rpc: [
      {
        address: "https://mainnet-node.like.co/rpc/",
        provider: "like.co"
      },
      {
        address: "https://likecoin-node.oldcat.io:443/rpc/",
        provider: "Oldcat"
      },
      {
        address: "https://like.rpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc-likecoin-mainnet.pikaser.net",
        provider: "PikaSer"
      },
      {
        address: "https://rpc.likecoin.citizenweb3.com:443",
        provider: "Citizen Web3"
      }
    ],
    rest: [
      {
        address: "https://mainnet-node.like.co",
        provider: "like.co"
      },
      {
        address: "https://like.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://likecoin-node.oldcat.io:443/api/",
        provider: "Oldcat"
      },
      {
        address: "https://rest-likecoin-mainnet.pikaser.net",
        provider: "PikaSer"
      }
    ],
    grpc: [
      {
        address: "mainnet-node-grpc.like.co:80",
        provider: "like.co"
      },
      {
        address: "like.grpc.m.stavr.tech:2000",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://likecoin-node.oldcat.io:443/grpc/",
        provider: "Oldcat"
      },
      {
        address: "grpc-likecoin-mainnet.pikaser.net:443",
        provider: "PikaSer"
      }
    ]
  },
  explorers: [
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/likecoin",
      tx_page: "https://www.mintscan.io/likecoin/transactions/${txHash}",
      account_page: "https://www.mintscan.io/likecoin/accounts/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/likecoin",
      tx_page: "https://ezstaking.app/likecoin/txs/${txHash}",
      account_page: "https://ezstaking.app/likecoin/account/${accountAddress}"
    },
    {
      kind: "lunie-ng",
      url: "https://stake.like.co/"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Likecoin-M",
      tx_page: "https://explorer.stavr.tech/Likecoin-M/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/likecoin",
      tx_page: "https://ping.pub/likecoin/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/likecoin",
      tx_page: "https://atomscan.com/likecoin/transactions/${txHash}",
      account_page: "https://atomscan.com/likecoin/accounts/${accountAddress}"
    }
  ],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/likecoin-chain-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/likecoin-chain-logo.svg"
  },
  keywords: [
    "depub",
    "publishing",
    "like",
    "book",
    "writing",
    "nft"
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/likecoin-chain-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/likecoin-chain-logo.svg"
  }]
};
var chain_default87 = info243;

// node_modules/chain-registry/esm/mainnet/likecoin/ibc.js
var info244 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "cosmoshub",
    client_id: "07-tendermint-468",
    connection_id: "connection-386"
  },
  chain_2: {
    chain_name: "likecoin",
    client_id: "07-tendermint-24",
    connection_id: "connection-13"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-217",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-5",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {}
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "likecoin",
    client_id: "07-tendermint-16",
    connection_id: "connection-9"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-1507",
    connection_id: "connection-1173"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-3",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-53",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default70 = info244;

// node_modules/chain-registry/esm/mainnet/likecoin/index.js
var assets87 = assets_default87;
var chain87 = chain_default87;
var ibc70 = ibc_default70;

// node_modules/chain-registry/esm/mainnet/logos/assets.js
var info245 = {
  $schema: "../assetlist.schema.json",
  chain_name: "logos",
  assets: [{
    description: "The native token of Logos",
    denom_units: [{
      denom: "aLYT",
      exponent: 0
    }, {
      denom: "LYT",
      exponent: 18
    }],
    base: "aLYT",
    name: "LYT",
    display: "LYT",
    symbol: "LYT",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/logos/images/logos.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/logos/images/logos.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/logos/images/logos.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/logos/images/logos.svg"
    }]
  }]
};
var assets_default88 = info245;

// node_modules/chain-registry/esm/mainnet/logos/chain.js
var info246 = {
  $schema: "../chain.schema.json",
  chain_name: "logos",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Logos",
  chain_id: "logos_7002-1",
  bech32_prefix: "logos",
  daemon_name: "logosd",
  node_home: "$HOME/.logos",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "aLYT"
    }]
  },
  apis: {
    rpc: [{
      address: "https://logos-rpc.provable.dev:443/",
      provider: "laurel.provable"
    }],
    rest: [{
      address: "https://logos.provable.dev/rest/",
      provider: "laurel.provable"
    }],
    grpc: [{
      address: "logos-grpc.provable.dev:443",
      provider: "laurel.provable"
    }],
    "evm-http-jsonrpc": [{
      address: "https://logos-evm.provable.dev/",
      provider: "laurel.provable"
    }]
  },
  explorers: [],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/logos/images/logos.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/logos/images/logos.svg"
  },
  codebase: {},
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/logos/images/logos.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/logos/images/logos.svg"
  }]
};
var chain_default88 = info246;

// node_modules/chain-registry/esm/mainnet/logos/index.js
var assets88 = assets_default88;
var chain88 = chain_default88;

// node_modules/chain-registry/esm/mainnet/loop/assets.js
var info247 = {
  $schema: "../assetlist.schema.json",
  chain_name: "loop",
  assets: [{
    description: "The native token of Loop",
    denom_units: [{
      denom: "token",
      exponent: 0
    }],
    type_asset: "sdk.coin",
    base: "token",
    name: "Token",
    display: "token",
    symbol: "TOKEN",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loop/images/loop.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loop/images/loop.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loop/images/loop.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loop/images/loop.svg"
    }],
    socials: {
      website: "https://www.loop.fans/",
      twitter: "https://twitter.com/LoopFans"
    }
  }, {
    denom_units: [{
      denom: "upoa",
      exponent: 0
    }, {
      denom: "poa",
      exponent: 6
    }],
    type_asset: "sdk.coin",
    base: "upoa",
    name: "POA",
    display: "poa",
    symbol: "POA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loop/images/poa.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loop/images/poa.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loop/images/poa.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loop/images/poa.svg"
    }],
    keywords: ["poa"]
  }]
};
var assets_default89 = info247;

// node_modules/chain-registry/esm/mainnet/loop/chain.js
var info248 = {
  $schema: "../chain.schema.json",
  chain_name: "loop",
  status: "live",
  network_type: "mainnet",
  website: "https://www.loop.fans/",
  pretty_name: "Loop",
  chain_id: "loop-1",
  bech32_prefix: "loop",
  daemon_name: "loopd",
  node_home: "$HOME/.loopchain",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "token",
      fixed_min_gas_price: 0,
      low_gas_price: 0,
      average_gas_price: 0,
      high_gas_price: 0
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "upoa"
    }]
  },
  codebase: {
    cosmwasm_enabled: true
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loop/images/loop.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loop/images/loop.svg"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loop/images/loop.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loop/images/loop.svg"
  },
  description: "Empowering Artists and Superfans.",
  apis: {
    rpc: [{
      address: "https://rpc.loop.pfc.zone/",
      provider: "PFC"
    }],
    rest: [{
      address: "https://api.loop.pfc.zone/",
      provider: "PFC"
    }]
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://ping.pfc.zone/loop",
    tx_page: "https://ping.pfc.zone/loop/tx/${txHash}"
  }],
  keywords: ["fans"]
};
var chain_default89 = info248;

// node_modules/chain-registry/esm/mainnet/loop/index.js
var assets89 = assets_default89;
var chain89 = chain_default89;

// node_modules/chain-registry/esm/mainnet/loyal/assets.js
var info249 = {
  $schema: "../assetlist.schema.json",
  chain_name: "loyal",
  assets: [{
    description: "The native token of Loyal",
    denom_units: [{
      denom: "ulyl",
      exponent: 0
    }, {
      denom: "lyl",
      exponent: 6
    }],
    base: "ulyl",
    name: "Loyal",
    display: "lyl",
    symbol: "LYL",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loyal/images/lyl.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loyal/images/lyl.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loyal/images/lyl.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loyal/images/lyl.svg"
    }]
  }]
};
var assets_default90 = info249;

// node_modules/chain-registry/esm/mainnet/loyal/chain.js
var info250 = {
  $schema: "../chain.schema.json",
  chain_name: "loyal",
  status: "live",
  network_type: "mainnet",
  website: "https://www.joinloyal.com/",
  pretty_name: "Loyal",
  chain_id: "loyal-main-02",
  bech32_prefix: "loyal",
  daemon_name: "loyald",
  node_home: "$HOME/.loyal",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ulyl",
      fixed_min_gas_price: 0
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ulyl"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loyal/images/lyl.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loyal/images/lyl.svg"
  },
  apis: {
    rpc: [{
      address: "https://rpc-main.joinloyal.io/"
    }, {
      address: "https://loyal-rpc.polkachu.com",
      provider: "Polkachu"
    }],
    rest: [{
      address: "https://lcd-main.joinloyal.io/"
    }, {
      address: "https://loyal-api.polkachu.com",
      provider: "Polkachu"
    }],
    grpc: [{
      address: "https://grpc.loyal.nodestake.top",
      provider: "NodeStake"
    }]
  },
  explorers: [
    {
      kind: "Loyal explorer",
      url: "https://pingpub.joinloyal.io/loyal",
      tx_page: "https://pingpub.joinloyal.io/loyal/tx/${txHash}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/loyal",
      tx_page: "https://explorer.tcnetwork.io/loyal/transaction/${txHash}"
    },
    {
      kind: "NodeStake Explorer",
      url: "https://explorer.nodestake.top/loyal",
      tx_page: "https://explorer.nodestake.top/loyal/tx/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loyal/images/lyl.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/loyal/images/lyl.svg"
  }]
};
var chain_default90 = info250;

// node_modules/chain-registry/esm/mainnet/loyal/index.js
var assets90 = assets_default90;
var chain90 = chain_default90;

// node_modules/chain-registry/esm/mainnet/lumenx/assets.js
var info251 = {
  $schema: "../assetlist.schema.json",
  chain_name: "lumenx",
  assets: [{
    description: "The native token of LumenX Network",
    denom_units: [{
      denom: "ulumen",
      exponent: 0
    }, {
      denom: "lumen",
      exponent: 6
    }],
    base: "ulumen",
    name: "LUMEN",
    display: "lumen",
    symbol: "LUMEN",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumenx/images/lumen.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumenx/images/lumen.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumenx/images/lumen.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumenx/images/lumen.svg"
    }]
  }]
};
var assets_default91 = info251;

// node_modules/chain-registry/esm/mainnet/lumenx/chain.js
var info252 = {
  $schema: "../chain.schema.json",
  chain_name: "lumenx",
  status: "killed",
  network_type: "mainnet",
  pretty_name: "LumenX",
  chain_id: "LumenX",
  bech32_prefix: "lumen",
  daemon_name: "lumenxd",
  node_home: "$HOME/.lumenx",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ulumen",
      fixed_min_gas_price: 25e-4,
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.03
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ulumen"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumenx/images/lumen.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumenx/images/lumen.svg"
  },
  apis: {
    rpc: [{
      address: "https://rpc-lumenx.cryptonet.pl/",
      provider: "CryptoNet"
    }, {
      address: "https://lumenx-rpc.kynraze.com/",
      provider: "Kynraze"
    }],
    rest: [
      {
        address: "https://api-lumenx.cryptonet.pl/",
        provider: "CryptoNet"
      },
      {
        address: "https://api-lumenx.nodine.id/",
        provider: "Nodine.ID"
      },
      {
        address: "https://lcd.lumenx.hexnodes.co/",
        provider: "Hexnodes"
      }
    ],
    grpc: [
      {
        address: "https://lumenx-grpc.kynraze.com",
        provider: "Kynraze"
      },
      {
        address: "https://grpc-lumenx.nodine.id",
        provider: "Nodine.ID"
      },
      {
        address: "https://grpc.lumenx.hexnodes.co",
        provider: "Hexnodes"
      }
    ]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://explorer.chaintools.tech/lumenx",
      tx_page: "https://explorer.chaintools.tech/lumenx/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://explorer.cryptonet.pl/lumenx",
      tx_page: "https://explorer.cryptonet.pl/lumenx/tx/${txHash}"
    },
    {
      kind: "Kynraze",
      url: "https://explorer.kynraze.com/lumenx",
      tx_page: "https://explorer.kynraze.com/lumenx/tx/${txHash}"
    },
    {
      kind: "ComunityNode",
      url: "https://explorer.comunitynode.my.id/lumenx",
      tx_page: "https://explorer.comunitynode.my.id/lumenx/tx/${txHash}"
    },
    {
      kind: "Nodine.ID",
      url: "https://explorer.co.id/lumenx",
      tx_page: "https://explorer.co.id/lumenx/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/lumenx",
      tx_page: "https://atomscan.com/lumenx/transactions/${txHash}",
      account_page: "https://atomscan.com/lumenx/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumenx/images/lumen.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumenx/images/lumen.svg"
  }]
};
var chain_default91 = info252;

// node_modules/chain-registry/esm/mainnet/lumenx/ibc.js
var info253 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "lumenx",
    client_id: "07-tendermint-0",
    connection_id: "connection-6"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2079",
    connection_id: "connection-1620"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-3",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-286",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default71 = info253;

// node_modules/chain-registry/esm/mainnet/lumenx/index.js
var assets91 = assets_default91;
var chain91 = chain_default91;
var ibc71 = ibc_default71;

// node_modules/chain-registry/esm/mainnet/lumnetwork/assets.js
var info254 = {
  $schema: "../assetlist.schema.json",
  chain_name: "lumnetwork",
  assets: [{
    description: "Native token of the Lum Network",
    denom_units: [{
      denom: "ulum",
      exponent: 0
    }, {
      denom: "lum",
      exponent: 6
    }],
    base: "ulum",
    name: "Lum",
    display: "lum",
    symbol: "LUM",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumnetwork/images/lum.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumnetwork/images/lum.svg"
    },
    coingecko_id: "lum-network",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumnetwork/images/lum.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumnetwork/images/lum.svg"
    }]
  }]
};
var assets_default92 = info254;

// node_modules/chain-registry/esm/mainnet/lumnetwork/chain.js
var info255 = {
  $schema: "../chain.schema.json",
  chain_name: "lumnetwork",
  status: "live",
  network_type: "mainnet",
  website: "https://lum.network/",
  pretty_name: "Lum Network",
  chain_id: "lum-network-1",
  bech32_prefix: "lum",
  daemon_name: "lumd",
  node_home: "$HOME/.lumd",
  key_algos: ["secp256k1"],
  slip44: 880,
  fees: {
    fee_tokens: [{
      denom: "ulum",
      fixed_min_gas_price: 1e-3,
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ulum"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.47.11"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumnetwork/images/lum.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumnetwork/images/lum.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.node0.mainnet.lum.network",
        provider: "Lum Foundation"
      },
      {
        address: "https://lum.rpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://lumnetwork-rpc.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://lum-rpc.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://lum-rpc.stakerhouse.com",
        provider: "StakerHouse"
      },
      {
        address: "https://lum-rpc.panthea.eu",
        provider: "Panthea EU"
      },
      {
        address: "https://lumnetwork_mainnet_rpc.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      }
    ],
    rest: [
      {
        address: "https://rest.node0.mainnet.lum.network",
        provider: "Lum Foundation"
      },
      {
        address: "https://lumnetwork-api.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://lum.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://lum-api.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://lum-rest.stakerhouse.com",
        provider: "StakerHouse"
      },
      {
        address: "https://lum-api.panthea.eu",
        provider: "Panthea EU"
      },
      {
        address: "https://lumnetwork_mainnet_api.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      }
    ],
    grpc: [
      {
        address: "lumnetwork-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "lum.grpc.m.stavr.tech:2277",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "lum-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "lum-grpc.stakerhouse.com:443",
        provider: "StakerHouse"
      },
      {
        address: "lum-grpc.panthea.eu:16770",
        provider: "Panthea EU"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/lumnetwork",
      tx_page: "https://ezstaking.app/lumnetwork/txs/${txHash}",
      account_page: "https://ezstaking.app/lumnetwork/account/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/lum",
      tx_page: "https://www.mintscan.io/lum/transactions/${txHash}",
      account_page: "https://www.mintscan.io/lum/accounts/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/LumNetwork-Mainnet",
      tx_page: "https://explorer.stavr.tech/LumNetwork-Mainnet/tx/${txHash}"
    },
    {
      kind: "lum-network",
      url: "https://explorer.lum.network",
      tx_page: "https://explorer.lum.network/txs/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/lum-network",
      tx_page: "https://ping.pub/lum-network/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/lum-network",
      tx_page: "https://atomscan.com/lum-network/transactions/${txHash}",
      account_page: "https://atomscan.com/lum-network/accounts/${accountAddress}"
    },
    {
      kind: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}",
      url: "https://explorer.whenmoonwhenlambo.money/lum-network",
      tx_page: "https://explorer.whenmoonwhenlambo.money/lum-network/tx/${txHash}",
      account_page: "https://explorer.whenmoonwhenlambo.money/lum-network/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumnetwork/images/lum.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumnetwork/images/lum.svg"
  }]
};
var chain_default92 = info255;

// node_modules/chain-registry/esm/mainnet/lumnetwork/ibc.js
var info256 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "cosmoshub",
    client_id: "07-tendermint-1120",
    connection_id: "connection-807"
  },
  chain_2: {
    chain_name: "lumnetwork",
    client_id: "07-tendermint-21",
    connection_id: "connection-22"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-566",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-12",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "lumnetwork",
    client_id: "07-tendermint-7",
    connection_id: "connection-5"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-1668",
    connection_id: "connection-1280"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-3",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-115",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default72 = info256;

// node_modules/chain-registry/esm/mainnet/lumnetwork/index.js
var assets92 = assets_default92;
var chain92 = chain_default92;
var ibc72 = ibc_default72;

// node_modules/chain-registry/esm/mainnet/mars/assets.js
var info257 = {
  $schema: "../assetlist.schema.json",
  chain_name: "mars",
  assets: [{
    description: "Mars protocol token",
    denom_units: [{
      denom: "umars",
      exponent: 0
    }, {
      denom: "mars",
      exponent: 6
    }],
    base: "umars",
    name: "Mars",
    display: "mars",
    symbol: "MARS",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-token.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-token.svg"
    },
    coingecko_id: "mars-protocol-a7fcbcfb-fd61-4017-92f0-7ee9f9cc6da3",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-token.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-token.svg"
    }],
    socials: {
      website: "https://www.marsprotocol.io/",
      twitter: "https://twitter.com/mars_protocol"
    }
  }]
};
var assets_default93 = info257;

// node_modules/chain-registry/esm/mainnet/mars/chain.js
var info258 = {
  $schema: "../chain.schema.json",
  chain_name: "mars",
  status: "live",
  network_type: "mainnet",
  website: "https://www.marsprotocol.io/",
  pretty_name: "Mars Hub",
  chain_id: "mars-1",
  bech32_prefix: "mars",
  daemon_name: "marsd",
  node_home: "$HOME/.mars",
  key_algos: ["secp256k1"],
  slip44: 118,
  alternative_slip44s: [330],
  fees: {
    fee_tokens: [{
      denom: "umars",
      fixed_min_gas_price: 0,
      low_gas_price: 0,
      average_gas_price: 0,
      high_gas_price: 0.01
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "umars"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.46.7",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.30.0"
  },
  description: "Lend, borrow and earn with an autonomous credit protocol in the Cosmos universe. Open to all, closed to none.",
  apis: {
    rpc: [
      {
        address: "https://rpc.marsprotocol.io:443",
        provider: "Delphi Labs"
      },
      {
        address: "https://mars-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://mars-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://mars-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://rpc.expedition-mars.com",
        provider: "Expedition Mars"
      },
      {
        address: "https://mars-rpc.genznodes.dev:443",
        provider: "genznodes"
      },
      {
        address: "https://mars-rpc.stakeandrelax.net",
        provider: "Stake&Relax Validator \u{1F9A5}"
      },
      {
        address: "https://mars-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://mars-rpc.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      }
    ],
    rest: [
      {
        address: "https://rest.marsprotocol.io:443",
        provider: "Delphi Labs"
      },
      {
        address: "https://mars-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://mars-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://mars-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://lcd.expedition-mars.com:443",
        provider: "Expedition Mars"
      },
      {
        address: "https://mars-api.genznodes.dev:443",
        provider: "genznodes"
      },
      {
        address: "https://mars-api.stakeandrelax.net",
        provider: "Stake&Relax Validator \u{1F9A5}"
      },
      {
        address: "https://mars-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://mars-api.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      }
    ],
    grpc: [
      {
        address: "grpc.marsprotocol.io:443",
        provider: "Delphi Labs"
      },
      {
        address: "mars-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "mars-grpc.polkachu.com:18590",
        provider: "Polkachu"
      },
      {
        address: "mars-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "mars-grpc.genznodes.dev:26090",
        provider: "genznodes"
      },
      {
        address: "mars.grpc.kjnodes.com:14590",
        provider: "kjnodes"
      },
      {
        address: "grpc.mars.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "mars-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "mars-grpc.stakeandrelax.net:18590",
        provider: "Stake&Relax \u{1F9A5}"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/mars",
      tx_page: "https://ezstaking.app/mars/txs/${txHash}",
      account_page: "https://ezstaking.app/mars/account/${accountAddress}"
    },
    {
      kind: "BigDipper",
      url: "https://explorer.marsprotocol.io",
      tx_page: "https://explorer.marsprotocol.io/transactions/${txHash}",
      account_page: "https://explorer.marsprotocol.io/accounts/${accountAddress}"
    },
    {
      kind: "NodeStake Explorer",
      url: "https://explorer.nodestake.top/mars",
      tx_page: "https://explorer.nodestake.top/mars/transactions/${txHash}",
      account_page: "https://explorer.nodestake.top/mars/account/${accountAddress}"
    },
    {
      kind: "Nodes.Guru",
      url: "https://mars.explorers.guru/",
      tx_page: "https://mars.explorers.guru/transaction/${txHash}",
      account_page: "https://mars.explorers.guru/account/${accountAddress}"
    },
    {
      kind: "MintScan",
      url: "https://www.mintscan.io/mars-protocol",
      tx_page: "https://www.mintscan.io/mars-protocol/transactions/${txHash}",
      account_page: "https://www.mintscan.io/mars-protocol/accounts/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/mars",
      tx_page: "https://ping.pub/mars/tx/${txHash}",
      account_page: "https://ping.pub/mars/account/${accountAddress}"
    }
  ],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-protocol.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-protocol.svg"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-protocol.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-protocol.svg"
  }]
};
var chain_default93 = info258;

// node_modules/chain-registry/esm/mainnet/mars/ibc.js
var info259 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-53",
      connection_id: "connection-52"
    },
    chain_2: {
      chain_name: "mars",
      client_id: "07-tendermint-14",
      connection_id: "connection-9"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-35",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-300",
      connection_id: "connection-270"
    },
    chain_2: {
      chain_name: "mars",
      client_id: "07-tendermint-11",
      connection_id: "connection-7"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-209",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-78",
      connection_id: "connection-54"
    },
    chain_2: {
      chain_name: "mars",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-55",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "mars",
      client_id: "07-tendermint-64",
      connection_id: "connection-50"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-21",
      connection_id: "connection-21"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-16",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "mars",
      client_id: "07-tendermint-4",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2602",
      connection_id: "connection-2114"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-557",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "mars",
      client_id: "07-tendermint-10",
      connection_id: "connection-6"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-104",
      connection_id: "connection-91"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-78",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default73 = info259;

// node_modules/chain-registry/esm/mainnet/mars/index.js
var assets93 = assets_default93;
var chain93 = chain_default93;
var ibc73 = ibc_default73;

// node_modules/chain-registry/esm/mainnet/mayachain/assets.js
var info260 = {
  $schema: "../assetlist.schema.json",
  chain_name: "mayachain",
  assets: [{
    description: "The native token of Maya Protocol",
    denom_units: [{
      denom: "cacao",
      exponent: 0
    }, {
      denom: "CACAO",
      exponent: 10
    }],
    base: "cacao",
    name: "Cacao",
    display: "CACAO",
    symbol: "CACAO",
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mayachain/images/cacao.svg"
    }],
    coingecko_id: "cacao",
    keywords: ["dex"],
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mayachain/images/cacao.svg"
    }
  }, {
    description: "The native revenue sharing token of Maya Protocol",
    denom_units: [{
      denom: "maya",
      exponent: 0
    }, {
      denom: "MAYA",
      exponent: 4
    }],
    base: "maya",
    name: "Maya",
    display: "MAYA",
    symbol: "MAYA",
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mayachain/images/maya.svg"
    }],
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mayachain/images/maya.svg"
    }
  }]
};
var assets_default94 = info260;

// node_modules/chain-registry/esm/mainnet/mayachain/chain.js
var info261 = {
  $schema: "../chain.schema.json",
  chain_name: "mayachain",
  status: "live",
  network_type: "mainnet",
  website: "https://mayaprotocol.com/",
  pretty_name: "Maya Protocol",
  chain_id: "mayachain-mainnet-v1",
  bech32_prefix: "maya",
  daemon_name: "mayanode",
  node_home: "$HOME/.mayanode",
  slip44: 931,
  codebase: {},
  apis: {
    rpc: [{
      address: "https://tendermint.mayachain.info",
      provider: "tendermint"
    }],
    rest: [{
      address: "https://mayanode.mayachain.info",
      provider: "mayanode"
    }]
  },
  explorers: [{
    kind: "Maya Protocol explorer",
    url: "https://www.explorer.mayachain.info",
    tx_page: "https://www.explorer.mayachain.info/#/txs/${txHash}"
  }]
};
var chain_default94 = info261;

// node_modules/chain-registry/esm/mainnet/mayachain/index.js
var assets94 = assets_default94;
var chain94 = chain_default94;

// node_modules/chain-registry/esm/mainnet/medasdigital/assets.js
var info262 = {
  $schema: "../assetlist.schema.json",
  chain_name: "medasdigital",
  assets: [{
    description: "The native token of Medas Digital Network",
    denom_units: [{
      denom: "umedas",
      exponent: 0
    }, {
      denom: "medas",
      exponent: 6
    }],
    base: "umedas",
    name: "Medas Digital",
    display: "medas",
    symbol: "MEDAS",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/medasdigital/images/medas.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/medasdigital/images/medas.svg"
    },
    keywords: ["medas"],
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/medasdigital/images/medas.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/medasdigital/images/medas.svg"
    }]
  }]
};
var assets_default95 = info262;

// node_modules/chain-registry/esm/mainnet/medasdigital/chain.js
var info263 = {
  $schema: "../chain.schema.json",
  chain_name: "medasdigital",
  status: "live",
  network_type: "mainnet",
  website: "https://medas-digital.io/",
  pretty_name: "Medas Digital Network",
  chain_id: "medasdigital-1",
  bech32_prefix: "medas",
  daemon_name: "medasdigitald",
  node_home: "$HOME/.medasdigital",
  slip44: 118,
  key_algos: ["secp256k1"],
  fees: {
    fee_tokens: [{
      denom: "umedas",
      low_gas_price: 0.1,
      average_gas_price: 0.25,
      high_gas_price: 0.4
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "umedas"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/medasdigital/images/medas.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/medasdigital/images/medas.svg"
  },
  apis: {
    rpc: [{
      address: "https://rpc.medas-digital.io:26657/",
      provider: "Neptun Validator"
    }],
    rest: [{
      address: "https://lcd.medas-digital.io:1317/",
      provider: "Neptun Validator"
    }],
    grpc: [{
      address: "grpc.medas-digital.io:9090",
      provider: "Neptun Validator"
    }]
  },
  explorers: [{
    kind: "BigDipper",
    url: "https://explorer.medas-digital.io:3100/medasdigital",
    tx_page: "https://explorer.medas-digital.io:3100/medasdigital/transactions/${txHash}",
    account_page: "explorer.medas-digital.io:3100/medasdigital/accounts/${accountAddress}"
  }, {
    kind: "atomscan",
    url: "https://atomscan.com/frontier/medasdigital",
    tx_page: "https://atomscan.com/frontier/medasdigital/transactions/${txHash}",
    account_page: "https://atomscan.com/frontier/medasdigital/accounts/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/medasdigital/images/medas.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/medasdigital/images/medas.svg"
  }]
};
var chain_default95 = info263;

// node_modules/chain-registry/esm/mainnet/medasdigital/ibc.js
var info264 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "medasdigital",
    client_id: "07-tendermint-0",
    connection_id: "connection-0"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2372",
    connection_id: "connection-1869"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-519",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "medasdigital",
    client_id: "07-tendermint-4",
    connection_id: "connection-4"
  },
  chain_2: {
    chain_name: "sentinel",
    client_id: "07-tendermint-110",
    connection_id: "connection-87"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-60",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default74 = info264;

// node_modules/chain-registry/esm/mainnet/medasdigital/index.js
var assets95 = assets_default95;
var chain95 = chain_default95;
var ibc74 = ibc_default74;

// node_modules/chain-registry/esm/mainnet/meme/assets.js
var info265 = {
  $schema: "../assetlist.schema.json",
  chain_name: "meme",
  assets: [{
    description: "MEME Token (MEME) is the native staking token of the MEME Chain",
    denom_units: [{
      denom: "umeme",
      exponent: 0
    }, {
      denom: "meme",
      exponent: 6
    }],
    base: "umeme",
    name: "MEME",
    display: "meme",
    symbol: "MEME",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/meme/images/meme.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/meme/images/meme.svg"
    },
    coingecko_id: "meme-network",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/meme/images/meme.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/meme/images/meme.svg"
    }]
  }]
};
var assets_default96 = info265;

// node_modules/chain-registry/esm/mainnet/meme/chain.js
var info266 = {
  $schema: "../chain.schema.json",
  chain_name: "meme",
  status: "live",
  network_type: "mainnet",
  pretty_name: "MEME",
  chain_id: "meme-1",
  bech32_prefix: "meme",
  daemon_name: "memed",
  node_home: "$HOME/.memed",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "umeme",
      fixed_min_gas_price: 0.025,
      low_gas_price: 0.025,
      average_gas_price: 0.035,
      high_gas_price: 0.045
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "umeme"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/meme/images/meme.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/meme/images/meme.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc-meme-1.meme.sx/",
        provider: "MEME Foundation"
      },
      {
        address: "https://meme-rpc.polkachu.com/",
        provider: "Polkachu"
      },
      {
        address: "https://rpc-meme.pupmos.network/",
        provider: "PUPM\xD8S"
      },
      {
        address: "https://meme.rpc.m.anode.team",
        provider: "ANODE TEAM"
      }
    ],
    rest: [
      {
        address: "https://api-meme-1.meme.sx/",
        provider: "MEME Foundation"
      },
      {
        address: "https://meme-api.polkachu.com/",
        provider: "Polkachu"
      },
      {
        address: "https://api-meme.pupmos.network/",
        provider: "PUPM\xD8S"
      },
      {
        address: "https://meme.api.m.anode.team",
        provider: "ANODE TEAM"
      },
      {
        address: "https://meme.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      }
    ],
    grpc: [{
      address: "meme-grpc.polkachu.com:14790",
      provider: "Polkachu"
    }]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://ping.pub/meme",
      tx_page: "https://ping.pub/meme/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/meme",
      tx_page: "https://atomscan.com/meme/transactions/${txHash}",
      account_page: "https://atomscan.com/meme/accounts/${accountAddress}"
    },
    {
      kind: "MEME Explorer",
      url: "https://explorer.meme.sx/meme",
      tx_page: "https://explorer.meme.sx/meme/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/meme",
      tx_page: "https://atomscan.com/meme/transactions/${txHash}",
      account_page: "https://atomscan.com/meme/accounts/${accountAddress}"
    },
    {
      kind: "Brochain",
      url: "https://explorer.brocha.in/meme",
      tx_page: "https://explorer.brocha.in/meme/tx/${txHash}"
    },
    {
      kind: "Stake-Take",
      url: "https://explorer.stake-take.com/meme",
      tx_page: "https://explorer.stake-take.com/meme/tx/${txHash}",
      account_page: "https://explorer.stake-take.com/meme/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Meme",
      tx_page: "https://explorer.stavr.tech/Meme/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Meme/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/meme/images/meme.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/meme/images/meme.svg"
  }]
};
var chain_default96 = info266;

// node_modules/chain-registry/esm/mainnet/meme/ibc.js
var info267 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "meme",
    client_id: "07-tendermint-0",
    connection_id: "connection-1"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-1931",
    connection_id: "connection-1502"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-238",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default75 = info267;

// node_modules/chain-registry/esm/mainnet/meme/index.js
var assets96 = assets_default96;
var chain96 = chain_default96;
var ibc75 = ibc_default75;

// node_modules/chain-registry/esm/mainnet/microtick/assets.js
var info268 = {
  $schema: "../assetlist.schema.json",
  chain_name: "microtick",
  assets: [{
    description: "TICK coin is the token for the Microtick Price Discovery & Oracle App",
    denom_units: [{
      denom: "utick",
      exponent: 0
    }, {
      denom: "tick",
      exponent: 6
    }],
    base: "utick",
    display: "tick",
    name: "Microtick",
    symbol: "TICK",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/microtick/images/tick.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/microtick/images/tick.svg"
    },
    coingecko_id: "microtick",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/microtick/images/tick.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/microtick/images/tick.svg"
    }]
  }]
};
var assets_default97 = info268;

// node_modules/chain-registry/esm/mainnet/microtick/chain.js
var info269 = {
  $schema: "../chain.schema.json",
  chain_name: "microtick",
  status: "killed",
  network_type: "mainnet",
  pretty_name: "Microtick",
  chain_id: "microtick-1",
  bech32_prefix: "micro",
  daemon_name: "mtm",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "utick",
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "utick"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/microtick/images/tick.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/microtick/images/tick.svg"
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://ping.pub/microtick",
    tx_page: "https://ping.pub/microtick/tx/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/microtick/images/tick.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/microtick/images/tick.svg"
  }]
};
var chain_default97 = info269;

// node_modules/chain-registry/esm/mainnet/microtick/ibc.js
var info270 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "microtick",
    client_id: "07-tendermint-99",
    connection_id: "connection-92"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-1453",
    connection_id: "connection-1139"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-16",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-39",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default76 = info270;

// node_modules/chain-registry/esm/mainnet/microtick/index.js
var assets97 = assets_default97;
var chain97 = chain_default97;
var ibc76 = ibc_default76;

// node_modules/chain-registry/esm/mainnet/migaloo/assets.js
var info271 = {
  $schema: "../assetlist.schema.json",
  chain_name: "migaloo",
  assets: [
    {
      description: "The native token of Migaloo Chain",
      denom_units: [{
        denom: "uwhale",
        exponent: 0
      }, {
        denom: "whale",
        exponent: 6
      }],
      base: "uwhale",
      name: "Whale",
      display: "whale",
      symbol: "WHALE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/white-whale.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/white-whale.svg"
      },
      coingecko_id: "white-whale",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/white-whale.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/white-whale.svg"
      }]
    },
    {
      description: "ampWHALE",
      denom_units: [{
        denom: "factory/migaloo1436kxs0w2es6xlqpp9rd35e3d0cjnw4sv8j3a7483sgks29jqwgshqdky4/ampWHALE",
        exponent: 0
      }, {
        denom: "ampWHALE",
        exponent: 6
      }],
      base: "factory/migaloo1436kxs0w2es6xlqpp9rd35e3d0cjnw4sv8j3a7483sgks29jqwgshqdky4/ampWHALE",
      name: "ampWHALE",
      display: "ampWHALE",
      symbol: "ampWHALE",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/ampwhale.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/ampwhale.svg"
      }]
    },
    {
      description: "BackBone Labs Liquid Staked WHALE",
      denom_units: [{
        denom: "factory/migaloo1mf6ptkssddfmxvhdx0ech0k03ktp6kf9yk59renau2gvht3nq2gqdhts4u/boneWhale",
        exponent: 0
      }, {
        denom: "bWHALE",
        exponent: 6
      }],
      base: "factory/migaloo1mf6ptkssddfmxvhdx0ech0k03ktp6kf9yk59renau2gvht3nq2gqdhts4u/boneWhale",
      name: "BackBone Labs Liquid Staked WHALE",
      display: "bWHALE",
      symbol: "bWHALE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/bWHALE.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/bWHALE.png"
      }],
      coingecko_id: "backbone-labs-staked-whale"
    },
    {
      description: "FABLE",
      denom_units: [{
        denom: "factory/migaloo18a9m9stu3dyvewwcq9qmp85euxqcvln5mefync/fable",
        exponent: 0
      }, {
        denom: "fable",
        exponent: 6
      }],
      base: "factory/migaloo18a9m9stu3dyvewwcq9qmp85euxqcvln5mefync/fable",
      name: "FABLE",
      display: "fable",
      symbol: "FABLE",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/fable.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/fable.svg"
      }]
    },
    {
      description: "boneLUNA are autocompounding LUNA tokens",
      denom_units: [{
        denom: "ibc/40C29143BF4153B365089E40E437B7AA819672646C45BB0A5F1E10915A0B6708",
        exponent: 0
      }, {
        denom: "bluna",
        exponent: 6
      }],
      base: "ibc/40C29143BF4153B365089E40E437B7AA819672646C45BB0A5F1E10915A0B6708",
      address: "cw20:terra17aj4ty4sz4yhgm08na8drc0v03v2jwr3waxcqrwhajj729zhl7zqnpc0ml",
      type_asset: "ics20",
      name: "boneLuna",
      display: "bluna",
      symbol: "bLUNA",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "terra2",
          base_denom: "cw20:terra17aj4ty4sz4yhgm08na8drc0v03v2jwr3waxcqrwhajj729zhl7zqnpc0ml",
          port: "wasm.terra1e0mrzy8077druuu42vs0hu7ugguade0cj65dgtauyaw4gsl4kv0qtdf2au",
          channel_id: "channel-87"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-2",
          path: "transfer/channel-2/cw20:terra17aj4ty4sz4yhgm08na8drc0v03v2jwr3waxcqrwhajj729zhl7zqnpc0ml"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/boneluna.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/boneluna.png"
      }]
    },
    {
      description: "RAC",
      denom_units: [{
        denom: "factory/migaloo1eqntnl6tzcj9h86psg4y4h6hh05g2h9nj8e09l/urac",
        exponent: 0
      }, {
        denom: "RAC",
        exponent: 6
      }],
      base: "factory/migaloo1eqntnl6tzcj9h86psg4y4h6hh05g2h9nj8e09l/urac",
      name: "RAC",
      display: "RAC",
      symbol: "RAC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rac.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rac.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rac.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rac.svg"
      }]
    },
    {
      description: "ASH",
      denom_units: [{
        denom: "factory/migaloo1erul6xyq0gk6ws98ncj7lnq9l4jn4gnnu9we73gdz78yyl2lr7qqrvcgup/ash",
        exponent: 0
      }, {
        denom: "ASH",
        exponent: 6
      }],
      base: "factory/migaloo1erul6xyq0gk6ws98ncj7lnq9l4jn4gnnu9we73gdz78yyl2lr7qqrvcgup/ash",
      name: "ASH",
      display: "ASH",
      symbol: "ASH",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/ash.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/ash.svg"
      }]
    },
    {
      description: "Tether USDt on Migaloo",
      denom_units: [{
        denom: "ibc/86A25A8A327164AE7C68A29B6ED745C7EEDC36E260A6666F33A6407BECEC4737",
        exponent: 0
      }, {
        denom: "usdt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/86A25A8A327164AE7C68A29B6ED745C7EEDC36E260A6666F33A6407BECEC4737",
      name: "Tether USDt",
      display: "usdt",
      symbol: "USDt",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kava",
          base_denom: "erc20/tether/usdt",
          channel_id: "channel-120"
        },
        chain: {
          channel_id: "channel-48",
          path: "transfer/channel-48/erc20/tether/usdt"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "kava",
          base_denom: "erc20/tether/usdt"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      }
    },
    {
      description: "Auto componded USDC despoited into Ginkou on Migaloo chain",
      denom_units: [{
        denom: "cw20:migaloo10nucfm2zqgzqmy7y7ls398t58pjt9cwjsvpy88y2nvamtl34rgmqt5em2v",
        exponent: 0
      }, {
        denom: "mUSDC",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "migaloo10nucfm2zqgzqmy7y7ls398t58pjt9cwjsvpy88y2nvamtl34rgmqt5em2v",
      base: "cw20:migaloo10nucfm2zqgzqmy7y7ls398t58pjt9cwjsvpy88y2nvamtl34rgmqt5em2v",
      name: "mUSDC",
      display: "mUSDC",
      symbol: "mUSDC",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/mUSDC.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/mUSDC.svg"
      }]
    },
    {
      description: "GUPPY",
      denom_units: [{
        denom: "factory/migaloo1etlu2h30tjvv8rfa4fwdc43c92f6ul5w9acxzk/uguppy",
        exponent: 0
      }, {
        denom: "GUPPY",
        exponent: 6
      }],
      base: "factory/migaloo1etlu2h30tjvv8rfa4fwdc43c92f6ul5w9acxzk/uguppy",
      name: "GUPPY",
      display: "GUPPY",
      symbol: "GUPPY",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/guppy.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/guppy.png"
      }]
    },
    {
      description: "OPHIR is a Cosmos Treasury DAO established on Migaloo.",
      denom_units: [{
        denom: "factory/migaloo1t862qdu9mj5hr3j727247acypym3ej47axu22rrapm4tqlcpuseqltxwq5/ophir",
        exponent: 0
      }, {
        denom: "OPHIR",
        exponent: 6
      }],
      base: "factory/migaloo1t862qdu9mj5hr3j727247acypym3ej47axu22rrapm4tqlcpuseqltxwq5/ophir",
      name: "OPHIR",
      display: "OPHIR",
      symbol: "OPHIR",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/ophir.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/ophir.png"
      }]
    },
    {
      description: "SHARK is the apex price prediction market within Cosmos.",
      denom_units: [{
        denom: "factory/migaloo1eqntnl6tzcj9h86psg4y4h6hh05g2h9nj8e09l/shark",
        exponent: 0
      }, {
        denom: "SHARK",
        exponent: 6
      }],
      base: "factory/migaloo1eqntnl6tzcj9h86psg4y4h6hh05g2h9nj8e09l/shark",
      name: "SHARK",
      display: "SHARK",
      symbol: "SHARK",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/shark.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/shark.png"
      }]
    },
    {
      description: "lsdSHARK is the liquid staking derivative of SHARK.",
      denom_units: [{
        denom: "factory/migaloo1p3aj9f09d7c4jxhgue0hpdpw370j6gzc59nxxx6l8d0gc9f9rfwsdwetus/lsdSHARK",
        exponent: 0
      }, {
        denom: "lsdSHARK",
        exponent: 6
      }],
      base: "factory/migaloo1p3aj9f09d7c4jxhgue0hpdpw370j6gzc59nxxx6l8d0gc9f9rfwsdwetus/lsdSHARK",
      name: "lsdSHARK",
      display: "lsdSHARK",
      symbol: "lsdSHARK",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1eqntnl6tzcj9h86psg4y4h6hh05g2h9nj8e09l/shark"
        },
        provider: "Shark Protocol"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/lsdshark.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/lsdshark.png"
      }]
    },
    {
      description: "The native staking token of Terra.",
      denom_units: [{
        denom: "ibc/4627AD2524E3E0523047E35BB76CC90E37D9D57ACF14F0FCBCEB2480705F3CB8",
        exponent: 0
      }, {
        denom: "luna",
        exponent: 6
      }],
      base: "ibc/4627AD2524E3E0523047E35BB76CC90E37D9D57ACF14F0FCBCEB2480705F3CB8",
      name: "Luna",
      display: "luna",
      symbol: "LUNA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "terra2",
          base_denom: "uluna",
          channel_id: "channel-86"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/uluna"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.svg"
      },
      coingecko_id: "terra-luna-2",
      images: [{
        image_sync: {
          chain_name: "terra2",
          base_denom: "uluna"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.svg"
      }],
      socials: {
        website: "https://www.terra.money/",
        twitter: "https://twitter.com/terra_money"
      }
    },
    {
      description: "Rakoff Token",
      denom_units: [{
        denom: "ibc/44C29C91F202E20C8E28DFB1FA89B725C54171CD77B8948836C72E7A97E4A018",
        exponent: 0
      }, {
        denom: "Rakoff",
        exponent: 6
      }],
      base: "ibc/44C29C91F202E20C8E28DFB1FA89B725C54171CD77B8948836C72E7A97E4A018",
      type_asset: "ics20",
      name: "Rakoff",
      display: "Rakoff",
      symbol: "RAKOFF",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "terra",
          base_denom: "cw20:terra1vhgq25vwuhdhn9xjll0rhl2s67jzw78a4g2t78y5kz89q9lsdskq2pxcj2",
          port: "wasm.terra19pfxzj9580h7rjd6z6sn5x2se76vgrc0etltr79g9z3t82jzp4hq63qguc",
          channel_id: "channel-87"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-114",
          path: "transfer/channel-114/cw20:terra1vhgq25vwuhdhn9xjll0rhl2s67jzw78a4g2t78y5kz89q9lsdskq2pxcj2"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/rakoff.png"
      },
      images: [{
        image_sync: {
          chain_name: "terra",
          base_denom: "cw20:terra1vhgq25vwuhdhn9xjll0rhl2s67jzw78a4g2t78y5kz89q9lsdskq2pxcj2"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/rakoff.png"
      }]
    },
    {
      description: "GASH",
      denom_units: [{
        denom: "factory/migaloo1r9x8fz4alekzr78k42rpmr9unpa7egsldpqeynmwl2nfvzexue9sn8l5rg/gash",
        exponent: 0
      }, {
        denom: "gash",
        exponent: 6
      }],
      base: "factory/migaloo1r9x8fz4alekzr78k42rpmr9unpa7egsldpqeynmwl2nfvzexue9sn8l5rg/gash",
      name: "GASH",
      display: "gash",
      symbol: "GASH",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/gash.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/gash.png"
      }]
    },
    {
      description: "Restake DAO Token",
      denom_units: [{
        denom: "factory/migaloo1d0uma9qzcts4fzt7ml39xp44aut5k6qyjfzz4asalnecppppr3rsl52vvv/rstk",
        exponent: 0
      }, {
        denom: "rstk",
        exponent: 6
      }],
      base: "factory/migaloo1d0uma9qzcts4fzt7ml39xp44aut5k6qyjfzz4asalnecppppr3rsl52vvv/rstk",
      name: "RESTAKE",
      display: "rstk",
      symbol: "RSTK",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.svg"
      }]
    },
    {
      description: "Frogztrik NFT Token",
      denom_units: [{
        denom: "ibc/B1BD4EF49A2E051EFC85E8C6A932B559CE62F9519E0E83BE29A8F0BDF89BD1D3",
        exponent: 0
      }, {
        denom: "frog",
        exponent: 6
      }],
      base: "ibc/B1BD4EF49A2E051EFC85E8C6A932B559CE62F9519E0E83BE29A8F0BDF89BD1D3",
      type_asset: "ics20",
      name: "Frogztrik NFT Token",
      display: "frog",
      symbol: "FROG",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "terra",
          base_denom: "cw20:terra1wez9puj43v4s25vrex7cv3ut3w75w4h6j5e537sujyuxj0r5ne2qp9uwl9",
          port: "wasm.terra19pfxzj9580h7rjd6z6sn5x2se76vgrc0etltr79g9z3t82jzp4hq63qguc",
          channel_id: "channel-87"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-114",
          path: "transfer/channel-114/cw20:terra1wez9puj43v4s25vrex7cv3ut3w75w4h6j5e537sujyuxj0r5ne2qp9uwl9"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/FROG.png"
      },
      images: [{
        image_sync: {
          chain_name: "terra",
          base_denom: "cw20:terra1wez9puj43v4s25vrex7cv3ut3w75w4h6j5e537sujyuxj0r5ne2qp9uwl9"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/FROG.png"
      }]
    },
    {
      description: "GRAC is the official token of Racoon.Bet's gaming platform.",
      denom_units: [{
        denom: "factory/migaloo1eqntnl6tzcj9h86psg4y4h6hh05g2h9nj8e09l/ugrac",
        exponent: 0
      }, {
        denom: "GRAC",
        exponent: 6
      }],
      base: "factory/migaloo1eqntnl6tzcj9h86psg4y4h6hh05g2h9nj8e09l/ugrac",
      name: "Gaming RAC Token",
      display: "GRAC",
      symbol: "GRAC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/grac.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/grac.png"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/721B42229246EEDA7A656DB17E494127F91E84AD63E21852737628321892A928",
        exponent: 0,
        aliases: ["factory/juno1h6y8tkceau4d8zyv5aa0fwdj2pa2y0gz2hx0tq/uwind"]
      }, {
        denom: "wind",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/721B42229246EEDA7A656DB17E494127F91E84AD63E21852737628321892A928",
      name: "Wind Token",
      display: "wind",
      symbol: "WIND",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "juno",
          base_denom: "factory/juno1h6y8tkceau4d8zyv5aa0fwdj2pa2y0gz2hx0tq/uwind",
          channel_id: "channel-210"
        },
        chain: {
          channel_id: "channel-1",
          path: "transfer/channel-1/factory/juno1h6y8tkceau4d8zyv5aa0fwdj2pa2y0gz2hx0tq/uwind"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "factory/juno1h6y8tkceau4d8zyv5aa0fwdj2pa2y0gz2hx0tq/uwind"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/wind.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/wind.png"
      }
    },
    {
      denom_units: [{
        denom: "ibc/0E1B883A15D5FCA533332CBAB1A672934C3936920399F2A3EB4F438E3EBAD0E9",
        exponent: 0,
        aliases: ["factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/shitmos"]
      }, {
        denom: "shitmos",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/0E1B883A15D5FCA533332CBAB1A672934C3936920399F2A3EB4F438E3EBAD0E9",
      name: "Shitmos",
      display: "shitmos",
      symbol: "SHITMOS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/shitmos",
          channel_id: "channel-642"
        },
        chain: {
          channel_id: "channel-5",
          path: "transfer/channel-5/factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/shitmos"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/shitmos"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/shitmos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/shitmos.svg",
        theme: {
          primary_color_hex: "#639BFF",
          circle: true
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/shitmos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/shitmos.svg"
      }
    },
    {
      description: "ERIS Liquid Alliance Staked GASH",
      denom_units: [{
        denom: "factory/migaloo1nsskhvvh0msm7d5ke2kfg24a8d4jecsnxd28s27h0uz5kf9ap60shlqmcl/ampGASH",
        exponent: 0
      }, {
        denom: "ampGASH",
        exponent: 6
      }],
      base: "factory/migaloo1nsskhvvh0msm7d5ke2kfg24a8d4jecsnxd28s27h0uz5kf9ap60shlqmcl/ampGASH",
      name: "ampGASH",
      display: "ampGASH",
      symbol: "ampGASH",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/ampgash.png"
      }],
      traces: [{
        type: "liquid-stake",
        chain: {
          contract: "migaloo1nsskhvvh0msm7d5ke2kfg24a8d4jecsnxd28s27h0uz5kf9ap60shlqmcl"
        },
        provider: "ERIS Protocol",
        counterparty: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1r9x8fz4alekzr78k42rpmr9unpa7egsldpqeynmwl2nfvzexue9sn8l5rg/gash",
          contract: "migaloo1r9x8fz4alekzr78k42rpmr9unpa7egsldpqeynmwl2nfvzexue9sn8l5rg"
        }
      }]
    }
  ]
};
var assets_default98 = info271;

// node_modules/chain-registry/esm/mainnet/migaloo/chain.js
var info272 = {
  $schema: "../chain.schema.json",
  chain_name: "migaloo",
  status: "live",
  network_type: "mainnet",
  website: "https://www.whitewhale.money/",
  pretty_name: "Migaloo",
  chain_id: "migaloo-1",
  bech32_prefix: "migaloo",
  daemon_name: "migalood",
  node_home: "$HOME/.migalood",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uwhale",
      fixed_min_gas_price: 1,
      low_gas_price: 1,
      average_gas_price: 2,
      high_gas_price: 3
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uwhale"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/migaloo-light.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/migaloo-light.svg"
  },
  codebase: {
    cosmos_sdk_version: "v0.47.7",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.45.0"
  },
  apis: {
    rpc: [
      {
        address: "https://migaloo-rpc.polkachu.com:443",
        provider: "Polkachu"
      },
      {
        address: "https://migaloo-rpc.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc-migaloo.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://migaloo-rpc.kleomedes.network:443",
        provider: "Kleomedes"
      },
      {
        address: "https://rpc.whitewhale.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://migaloo-rpc.cosmosrescue.com",
        provider: "cosmosrescue"
      },
      {
        address: "https://migaloo-rpc.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      }
    ],
    rest: [
      {
        address: "https://migaloo-api.polkachu.com:443",
        provider: "Polkachu"
      },
      {
        address: "https://migaloo-api.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://api-migaloo.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://migaloo-api.kleomedes.network:443",
        provider: "Kleomedes"
      },
      {
        address: "https://api.whitewhale.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://migaloo-api.cosmosrescue.com",
        provider: "cosmosrescue"
      },
      {
        address: "https://migaloo-api.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      }
    ],
    grpc: [
      {
        address: "migaloo-grpc.polkachu.com:20790",
        provider: "Polkachu"
      },
      {
        address: "migaloo-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "whitewhale-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "grpc-migaloo.cosmos-spaces.cloud:4810",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://grpc.whitewhale.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "migaloo-grpc.cosmosrescue.com:9090",
        provider: "cosmosrescue"
      }
    ]
  },
  explorers: [
    {
      kind: "Migaloo Explorers Guru",
      url: "https://migaloo.explorers.guru",
      tx_page: "https://migaloo.explorers.guru/transaction/${txHash}",
      account_page: "https://migaloo.explorers.guru/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/migaloo",
      tx_page: "https://ping.pub/migaloo/tx/${txHash}"
    },
    {
      kind: "Silk Nodes",
      url: "https://explorer.silknodes.io/migaloo",
      tx_page: "https://explorer.silknodes.io/migaloo/tx/${txHash}",
      account_page: "https://explorer.silknodes.io/migaloo/account/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/migaloo",
      tx_page: "https://atomscan.com/migaloo/transactions/${txHash}",
      account_page: "https://atomscan.com/migaloo/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/migaloo-light.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/migaloo-light.svg"
  }]
};
var chain_default98 = info272;

// node_modules/chain-registry/esm/mainnet/migaloo/ibc.js
var info273 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-180",
      connection_id: "connection-158"
    },
    chain_2: {
      chain_name: "migaloo",
      client_id: "07-tendermint-101",
      connection_id: "connection-80"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-121",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-53",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "chihuahua",
      client_id: "07-tendermint-126",
      connection_id: "connection-81"
    },
    chain_2: {
      chain_name: "migaloo",
      client_id: "07-tendermint-21",
      connection_id: "connection-21"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-39",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "comdex",
      client_id: "07-tendermint-139",
      connection_id: "connection-71"
    },
    chain_2: {
      chain_name: "migaloo",
      client_id: "07-tendermint-25",
      connection_id: "connection-24"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-63",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-154",
      connection_id: "connection-123"
    },
    chain_2: {
      chain_name: "migaloo",
      client_id: "07-tendermint-5",
      connection_id: "connection-8"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-102",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-310",
      connection_id: "connection-282"
    },
    chain_2: {
      chain_name: "migaloo",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-210",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kava",
      client_id: "07-tendermint-125",
      connection_id: "connection-162"
    },
    chain_2: {
      chain_name: "migaloo",
      client_id: "07-tendermint-90",
      connection_id: "connection-73"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-120",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-48",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-82",
      connection_id: "connection-59"
    },
    chain_2: {
      chain_name: "migaloo",
      client_id: "07-tendermint-16",
      connection_id: "connection-19"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-58",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "migaloo",
      client_id: "07-tendermint-113",
      connection_id: "connection-89"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-19",
      connection_id: "connection-28"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-60",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "migaloo",
      client_id: "07-tendermint-3",
      connection_id: "connection-11"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2669",
      connection_id: "connection-2171"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-642",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "migaloo",
      client_id: "07-tendermint-6",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-116",
      connection_id: "connection-87"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-57",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-103",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-129",
        port_id: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "migaloo",
      client_id: "07-tendermint-108",
      connection_id: "connection-84"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-22",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-57",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "migaloo",
      client_id: "07-tendermint-118",
      connection_id: "connection-90"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-352",
      connection_id: "connection-287"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-69",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-269",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "migaloo",
      client_id: "07-tendermint-122",
      connection_id: "connection-92"
    },
    chain_2: {
      chain_name: "terra",
      client_id: "07-tendermint-244",
      connection_id: "connection-151"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-114",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-87",
        port_id: "wasm.terra19pfxzj9580h7rjd6z6sn5x2se76vgrc0etltr79g9z3t82jzp4hq63qguc"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "migaloo",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-105",
      connection_id: "connection-93"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-86",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-87",
        port_id: "wasm.terra1e0mrzy8077druuu42vs0hu7ugguade0cj65dgtauyaw4gsl4kv0qtdf2au"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "migaloo",
      client_id: "07-tendermint-104",
      connection_id: "connection-83"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-234",
      connection_id: "connection-195"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-56",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-104",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default77 = info273;

// node_modules/chain-registry/esm/mainnet/migaloo/index.js
var assets98 = assets_default98;
var chain98 = chain_default98;
var ibc77 = ibc_default77;

// node_modules/chain-registry/esm/mainnet/mises/assets.js
var info274 = {
  $schema: "../assetlist.schema.json",
  chain_name: "mises",
  assets: [{
    description: "The native staking and gov token of the Mises Network.",
    denom_units: [
      {
        denom: "umis",
        exponent: 0,
        aliases: ["micromis"]
      },
      {
        denom: "mmis",
        exponent: 3,
        aliases: ["millimis"]
      },
      {
        denom: "mis",
        exponent: 6
      }
    ],
    base: "umis",
    display: "mis",
    name: "mises network MIS",
    symbol: "MIS",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mises/images/mises.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mises/images/mises.png"
    }]
  }]
};
var assets_default99 = info274;

// node_modules/chain-registry/esm/mainnet/mises/chain.js
var info275 = {
  $schema: "../chain.schema.json",
  chain_name: "mises",
  status: "live",
  network_type: "mainnet",
  website: "https://mises.site",
  pretty_name: "Mises",
  chain_id: "mainnet",
  bech32_prefix: "mises",
  node_home: "$HOME/.misestm",
  daemon_name: "misestmd",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "umis",
      fixed_min_gas_price: 0
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "umis"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mises/images/mises.png"
  },
  apis: {
    rpc: [{
      address: "https://rpc.gw.mises.site:443",
      provider: "Mises-1"
    }, {
      address: "https://e2.mises.site:443",
      provider: "Mises-3"
    }],
    rest: [],
    grpc: []
  },
  explorers: [{
    kind: "Mises-GW Explorer",
    url: "https://gw.mises.site",
    tx_page: "https://gw.mises.site/tx/${txHash}"
  }, {
    kind: "Jambulmerah ping.pub based",
    url: "https://explorer.jambulmerah.dev/mises",
    tx_page: "https://explorer.jambulmerah.dev/mises/tx/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mises/images/mises.png"
  }]
};
var chain_default99 = info275;

// node_modules/chain-registry/esm/mainnet/mises/index.js
var assets99 = assets_default99;
var chain99 = chain_default99;

// node_modules/chain-registry/esm/mainnet/mtgbp/assets.js
var info276 = {
  $schema: "../assetlist.schema.json",
  chain_name: "mtgbp",
  assets: [{
    description: "MTGBP the stablecoin of the future.",
    extended_description: "MTGBP is known as the stablecoin of the future. This stablecoin is based on the British pound, which means its value stays the same as the pound.\n\nMTGBP aims to connect traditional money with digital money, giving people a stable and trustworthy digital currency. This stablecoin combines the stability of the British pound with the speed and efficiency of blockchain technology.\n\nMTGBP makes it easy to do financial transactions without the ups and downs that other cryptocurrencies have. With MTGBP, you can send money, trade, and invest knowing that its value will stay steady. This makes it useful for everyday use and for long-term financial plans.\n\nIn short, MTGBP offers the stability of the British pound and the benefits of cryptocurrency, making it a safe and easy option\xA0for\xA0everyone.\n\n",
    denom_units: [{
      denom: "mtgbp",
      exponent: 0
    }],
    base: "mtgbp",
    name: "mtgbp",
    display: "mtgbp",
    symbol: "MTGBP",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mtgbp/images/mtgbp.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mtgbp/images/mtgbp.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mtgbp/images/mtgbp.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mtgbp/images/mtgbp.svg"
    }],
    socials: {
      website: "https://mtgbp.com/"
    }
  }]
};
var assets_default100 = info276;

// node_modules/chain-registry/esm/mainnet/mtgbp/chain.js
var info277 = {
  $schema: "../chain.schema.json",
  chain_name: "mtgbp",
  status: "live",
  network_type: "mainnet",
  website: "https://mtgbp.com/",
  pretty_name: "mtgbp",
  chain_id: "mtgbp-1",
  bech32_prefix: "mtgbp",
  daemon_name: "mtgbp",
  node_home: "$HOME/.ssc",
  key_algos: ["secp256k1"],
  slip44: 1179993441,
  staking: {
    staking_tokens: [{
      denom: "mtgbp"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  fees: {
    fee_tokens: [{
      denom: "mtgbp",
      low_gas_price: 1e-6,
      average_gas_price: 5e-6,
      high_gas_price: 1e-4
    }]
  },
  apis: {
    rpc: [{
      address: "https://rcp.mtgbp.com",
      provider: "mtgbp"
    }],
    rest: [{
      address: "https://lcd.mtgbp.com",
      provider: "mtgbp"
    }],
    grpc: [{
      address: "https://grcp.mtgbp.com:4090",
      provider: "mtgbp"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mtgbp/images/mtgbp.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mtgbp/images/mtgbp.svg"
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://blockexplorer.mtgbp.com/mtgbp",
    tx_page: "https://blockexplorer.mtgbp.com/mtgbp/tx/${txHash}",
    account_page: "https://blockexplorer.mtgbp.com/mtgbp/accounts/${accountAddress}"
  }],
  keywords: [],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mtgbp/images/mtgbp.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mtgbp/images/mtgbp.svg"
  }]
};
var chain_default100 = info277;

// node_modules/chain-registry/esm/mainnet/mtgbp/index.js
var assets100 = assets_default100;
var chain100 = chain_default100;

// node_modules/chain-registry/esm/mainnet/mun/assets.js
var info278 = {
  $schema: "../assetlist.schema.json",
  chain_name: "mun",
  assets: [{
    description: "The native token of Mun",
    denom_units: [{
      denom: "umun",
      exponent: 0
    }, {
      denom: "mun",
      exponent: 6
    }],
    base: "umun",
    name: "Mun",
    display: "mun",
    symbol: "MUN",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mun/images/mun.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mun/images/mun.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mun/images/mun.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mun/images/mun.svg"
    }]
  }]
};
var assets_default101 = info278;

// node_modules/chain-registry/esm/mainnet/mun/chain.js
var info279 = {
  $schema: "../chain.schema.json",
  chain_name: "mun",
  website: "https://mun.money",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Mun",
  chain_id: "mun-1",
  bech32_prefix: "mun",
  daemon_name: "mund",
  node_home: "$HOME/.mun",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "umun",
      fixed_min_gas_price: 0.025
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "umun"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mun/images/mun.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mun/images/mun.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://mainnet1rpc.mun.money",
        provider: "Mun"
      },
      {
        address: "https://mainnet-mun-rpc.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://rpc.mun.tcnetwork.io",
        provider: "TC Network"
      }
    ],
    rest: [
      {
        address: "https://mainnet1.mun.money",
        provider: "Mun"
      },
      {
        address: "https://mainnet-mun-api.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://rest.mun.tcnetwork.io",
        provider: "TC Network"
      }
    ],
    grpc: []
  },
  explorers: [
    {
      url: "https://explorer.mun.money/mun",
      tx_page: "https://explorer.mun.money/mun/${txHash}"
    },
    {
      url: "https://explorer.indonode.net/mun/staking",
      tx_page: "https://explorer.indonode.net/mun/${txHash}"
    },
    {
      url: "https://explorer.konsortech.xyz/mun/staking",
      tx_page: "https://explorer.konsortech.xyz/mun/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/mun",
      tx_page: "https://ping.pub/mun/${txHash}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/mun",
      tx_page: "https://explorer.tcnetwork.io/mun/transaction/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mun/images/mun.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mun/images/mun.svg"
  }]
};
var chain_default101 = info279;

// node_modules/chain-registry/esm/mainnet/mun/index.js
var assets101 = assets_default101;
var chain101 = chain_default101;

// node_modules/chain-registry/esm/mainnet/mythos/assets.js
var info280 = {
  $schema: "../assetlist.schema.json",
  chain_name: "mythos",
  assets: [{
    description: "The native token of Mythos",
    denom_units: [{
      denom: "aMYT",
      exponent: 0
    }, {
      denom: "MYT",
      exponent: 18
    }],
    base: "aMYT",
    name: "MYT",
    display: "MYT",
    symbol: "MYT",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mythos/images/mythos.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mythos/images/mythos.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mythos/images/mythos.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mythos/images/mythos.svg"
    }]
  }]
};
var assets_default102 = info280;

// node_modules/chain-registry/esm/mainnet/mythos/chain.js
var info281 = {
  $schema: "../chain.schema.json",
  chain_name: "mythos",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Mythos",
  chain_id: "mythos_7001-1",
  bech32_prefix: "mythos",
  daemon_name: "mythosd",
  node_home: "$HOME/.mythosd",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "aMYT"
    }]
  },
  apis: {
    rpc: [{
      address: "https://mythos-rpc.provable.dev:443/",
      provider: "laurel.provable"
    }],
    rest: [{
      address: "https://mythos.provable.dev/rest/",
      provider: "laurel.provable"
    }],
    grpc: [{
      address: "mythos-grpc.provable.dev:443",
      provider: "laurel.provable"
    }],
    "evm-http-jsonrpc": []
  },
  explorers: [],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mythos/images/mythos.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mythos/images/mythos.svg"
  },
  codebase: {},
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mythos/images/mythos.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mythos/images/mythos.svg"
  }]
};
var chain_default102 = info281;

// node_modules/chain-registry/esm/mainnet/mythos/index.js
var assets102 = assets_default102;
var chain102 = chain_default102;

// node_modules/chain-registry/esm/mainnet/neura/assets.js
var info282 = {
  $schema: "../assetlist.schema.json",
  chain_name: "neura",
  assets: [{
    description: "ANKR: The native EVM, governance, and staking token for Neura, enabling secure transactions, and seamless GPU resourcing within the ecosystem.",
    denom_units: [{
      denom: "atankr",
      exponent: 0
    }, {
      denom: "ankr",
      exponent: 18
    }],
    base: "atankr",
    name: "Neura",
    display: "ankr",
    symbol: "ANKR",
    traces: [{
      type: "additional-mintage",
      counterparty: {
        chain_name: "ethereum",
        base_denom: "0x8290333ceF9e6D528dD5618Fb97a76f268f3EDD4"
      },
      provider: "Neura"
    }],
    images: [{
      image_sync: {
        chain_name: "ethereum",
        base_denom: "0x8290333ceF9e6D528dD5618Fb97a76f268f3EDD4"
      },
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ankr.svg"
    }],
    coingecko_id: "ankr",
    socials: {
      website: "https://www.ankr.com",
      twitter: "https://x.com/ankr"
    }
  }]
};
var assets_default103 = info282;

// node_modules/chain-registry/esm/mainnet/neura/chain.js
var info283 = {
  $schema: "../chain.schema.json",
  chain_name: "neura",
  chain_id: "neura_266-1",
  bech32_prefix: "neura",
  pretty_name: "Neura",
  website: "https://www.neuraprotocol.io/",
  description: "Neura is an AI-centric, EVM-compatible Layer 1 blockchain built on the Cosmos SDK. We democratize GPU access and revolutionize AI project funding with IMO\u2019s to advance AI development.",
  status: "upcoming",
  network_type: "mainnet",
  node_home: "$HOME/.neurad",
  daemon_name: "neurad",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "atankr"
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "atankr"
    }]
  },
  codebase: {},
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neura/images/neura.png"
  }]
};
var chain_default103 = info283;

// node_modules/chain-registry/esm/mainnet/neura/index.js
var assets103 = assets_default103;
var chain103 = chain_default103;

// node_modules/chain-registry/esm/mainnet/neutaro/assets.js
var info284 = {
  $schema: "../assetlist.schema.json",
  chain_name: "neutaro",
  assets: [{
    description: "The native token of Neutaro",
    denom_units: [{
      denom: "uneutaro",
      exponent: 0
    }, {
      denom: "neutaro",
      exponent: 6
    }],
    base: "uneutaro",
    name: "Neutaro",
    display: "neutaro",
    symbol: "NTMPI",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutaro/images/neutaro.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutaro/images/neutaro.svg"
    },
    coingecko_id: "neutaro",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutaro/images/neutaro.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutaro/images/neutaro.svg"
    }]
  }]
};
var assets_default104 = info284;

// node_modules/chain-registry/esm/mainnet/neutaro/chain.js
var info285 = {
  $schema: "../chain.schema.json",
  chain_name: "neutaro",
  status: "live",
  network_type: "mainnet",
  website: "https://neutaro.com/",
  pretty_name: "Neutaro",
  chain_id: "Neutaro-1",
  bech32_prefix: "neutaro",
  daemon_name: "neutaro",
  node_home: "$HOME/.Neutaro",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uneutaro",
      fixed_min_gas_price: 0,
      low_gas_price: 0,
      average_gas_price: 0,
      high_gas_price: 0.035
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uneutaro"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutaro/images/neutaro.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutaro/images/neutaro.svg"
  },
  description: "The Blockchain that is Pioneering Ethical Standards, Values, and Transparency in cross chain Blockchain Technology to drive innovation",
  apis: {
    rpc: [{
      address: "https://rpc2.neutaro.tech:443",
      provider: "Neutaro"
    }, {
      address: "https://rpc-neutaro.blockval.io",
      provider: "Blockval"
    }],
    rest: [{
      address: "https://api2.neutaro.tech:443",
      provider: "Neutaro"
    }, {
      address: "https://api-neutaro.blockval.io",
      provider: "Blockval"
    }],
    grpc: [{
      address: "https://grpc2.neutaro.tech:443",
      provider: "Neutaro"
    }, {
      address: "https://grpc-neutaro.blockval.io",
      provider: "Blockval"
    }]
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://explorer.neutaro.tech/Neutaro",
    tx_page: "https://explorer.neutaro.tech/Neutaro/tx/${txHash}",
    account_page: "https://explorer.neutaro.tech/Neutaro/account/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutaro/images/neutaro.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutaro/images/neutaro.svg"
  }]
};
var chain_default104 = info285;

// node_modules/chain-registry/esm/mainnet/neutaro/index.js
var assets104 = assets_default104;
var chain104 = chain_default104;

// node_modules/chain-registry/esm/mainnet/neutron/assets.js
var info286 = {
  $schema: "../assetlist.schema.json",
  chain_name: "neutron",
  assets: [
    {
      description: "The native token of Neutron chain.",
      denom_units: [{
        denom: "untrn",
        exponent: 0
      }, {
        denom: "ntrn",
        exponent: 6
      }],
      base: "untrn",
      name: "Neutron",
      display: "ntrn",
      symbol: "NTRN",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/ntrn.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/ntrn.svg"
      },
      coingecko_id: "neutron-3",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/ntrn.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/ntrn.svg"
      }],
      socials: {
        website: "https://neutron.org/",
        twitter: "https://twitter.com/Neutron_org"
      }
    },
    {
      description: "IBC uatom through cosmoshub-4 transfer/channel-1",
      denom_units: [{
        denom: "ibc/C4CFF46FD6DE35CA4CF4CE031E643C8FDC9BA4B99AE598E9B0ED98FE3A2319F9",
        exponent: 0,
        aliases: ["uatom"]
      }, {
        denom: "atom",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/C4CFF46FD6DE35CA4CF4CE031E643C8FDC9BA4B99AE598E9B0ED98FE3A2319F9",
      name: "IBC atom",
      display: "atom",
      symbol: "ATOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "cosmoshub",
          base_denom: "uatom",
          channel_id: "channel-569"
        },
        chain: {
          channel_id: "channel-1",
          path: "transfer/channel-1/uatom"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "cosmoshub",
          base_denom: "uatom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }
    },
    {
      description: "IBC Axelar uusdc through axelar-dojo-1 transfer/channel-2",
      denom_units: [{
        denom: "ibc/F082B65C88E4B6D5EF1DB243CDA1D331D002759E938A0F5CD3FFDC5D53B3E349",
        exponent: 0,
        aliases: ["uusdc"]
      }, {
        denom: "axlusdc",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/F082B65C88E4B6D5EF1DB243CDA1D331D002759E938A0F5CD3FFDC5D53B3E349",
      name: "USD Coin (Axelar)",
      display: "axlusdc",
      symbol: "axlUSDC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "axelar",
          base_denom: "uusdc",
          channel_id: "channel-78"
        },
        chain: {
          channel_id: "channel-2",
          path: "transfer/channel-2/uusdc"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "uusdc"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.svg"
      }
    },
    {
      description: "Tia on Neutron",
      denom_units: [{
        denom: "ibc/773B4D0A3CD667B2275D5A4A7A2F0909C0BA0F4059C0B9181E680DDF4965DCC7",
        exponent: 0,
        aliases: ["utia"]
      }, {
        denom: "tia",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/773B4D0A3CD667B2275D5A4A7A2F0909C0BA0F4059C0B9181E680DDF4965DCC7",
      name: "Celestia TIA",
      display: "tia",
      symbol: "TIA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "celestia",
          base_denom: "utia",
          channel_id: "channel-8"
        },
        chain: {
          channel_id: "channel-35",
          path: "transfer/channel-35"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "celestia",
          base_denom: "utia"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.svg"
      }
    },
    {
      description: "Astropepe meme coin",
      denom_units: [{
        denom: "factory/neutron14henrqx9y328fjrdvz6l6d92r0t7g5hk86q5nd/uastropepe",
        exponent: 0
      }, {
        denom: "ASTROPEPE",
        exponent: 6
      }],
      base: "factory/neutron14henrqx9y328fjrdvz6l6d92r0t7g5hk86q5nd/uastropepe",
      name: "AstroPepe",
      display: "ASTROPEPE",
      symbol: "ASTROPEPE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astropepe.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astropepe.png"
      }]
    },
    {
      description: "wstETH on Neutron",
      denom_units: [{
        denom: "factory/neutron1ug740qrkquxzrk2hh29qrlx3sktkfml3je7juusc2te7xmvsscns0n2wry/wstETH",
        exponent: 0
      }, {
        denom: "wstETH",
        exponent: 18
      }],
      base: "factory/neutron1ug740qrkquxzrk2hh29qrlx3sktkfml3je7juusc2te7xmvsscns0n2wry/wstETH",
      name: "wstETH",
      display: "wstETH",
      symbol: "wstETH",
      traces: [{
        type: "additional-mintage",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0"
        },
        provider: "Lido"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wsteth.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wsteth.svg"
      }
    },
    {
      description: "NBTC on Neutron",
      denom_units: [{
        denom: "ibc/DDC3C60EE82BF544F1A0C6A983FF500EF1C14DE20071A5E1E7C0FB470E36E920",
        exponent: 0,
        aliases: ["usat"]
      }, {
        denom: "sat",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/DDC3C60EE82BF544F1A0C6A983FF500EF1C14DE20071A5E1E7C0FB470E36E920",
      name: "Nomic NBTC",
      display: "sat",
      symbol: "SAT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "nomic",
          base_denom: "usat",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-42",
          path: "transfer/channel-42/usat"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "nomic",
          base_denom: "usat"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nbtc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nbtc.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nbtc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nbtc.svg"
      }
    },
    {
      description: "DYDX on Neutron",
      denom_units: [{
        denom: "ibc/2CB87BCE0937B1D1DFCEE79BE4501AAF3C265E923509AEAC410AD85D27F35130",
        exponent: 0,
        aliases: ["adydx"]
      }, {
        denom: "dydx",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/2CB87BCE0937B1D1DFCEE79BE4501AAF3C265E923509AEAC410AD85D27F35130",
      name: "DYDX",
      display: "dydx",
      symbol: "DYDX",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "dydx",
          base_denom: "adydx",
          channel_id: "channel-11"
        },
        chain: {
          channel_id: "channel-48",
          path: "transfer/channel-48/adydx"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "dydx",
          base_denom: "adydx"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.svg"
      }
    },
    {
      description: "The cutest NEWT token on Neutron chain.",
      denom_units: [{
        denom: "factory/neutron1p8d89wvxyjcnawmgw72klknr3lg9gwwl6ypxda/newt",
        exponent: 0,
        aliases: ["unewt"]
      }, {
        denom: "newt",
        exponent: 6
      }],
      base: "factory/neutron1p8d89wvxyjcnawmgw72klknr3lg9gwwl6ypxda/newt",
      name: "Newt",
      display: "newt",
      symbol: "NEWT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/newt.png"
      },
      coingecko_id: "newt",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/newt.png"
      }]
    },
    {
      description: "Astroport is a neutral marketplace where anyone, from anywhere in the galaxy, can dock to trade their wares.",
      denom_units: [{
        denom: "factory/neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07/astro",
        exponent: 0,
        aliases: ["uastro"]
      }, {
        denom: "astro",
        exponent: 6
      }],
      base: "factory/neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07/astro",
      name: "Astroport token",
      display: "astro",
      symbol: "ASTRO",
      coingecko_id: "astroport-fi",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.svg"
      },
      socials: {
        website: "https://astroport.fi/",
        twitter: "https://twitter.com/astroport_fi"
      }
    },
    {
      description: "Astroport is a neutral marketplace where anyone, from anywhere in the galaxy, can dock to trade their wares.",
      denom_units: [{
        denom: "factory/neutron1zlf3hutsa4qnmue53lz2tfxrutp8y2e3rj4nkghg3rupgl4mqy8s5jgxsn/xASTRO",
        exponent: 0,
        aliases: ["uxastro"]
      }, {
        denom: "xASTRO",
        exponent: 6
      }],
      base: "factory/neutron1zlf3hutsa4qnmue53lz2tfxrutp8y2e3rj4nkghg3rupgl4mqy8s5jgxsn/xASTRO",
      name: "Staked Astroport Token",
      display: "xASTRO",
      symbol: "xASTRO",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "neutron",
          base_denom: "factory/neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07/astro"
        },
        provider: "Astroport"
      }],
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/xAstro.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/xAstro.svg"
      },
      socials: {
        website: "https://astroport.fi/",
        twitter: "https://twitter.com/astroport_fi"
      }
    },
    {
      description: "ASTRO.cw20 on Neutron",
      denom_units: [{
        denom: "ibc/5751B8BCDA688FD0A8EC0B292EEF1CDEAB4B766B63EC632778B196D317C40C3A",
        exponent: 0,
        aliases: ["uastro"]
      }, {
        denom: "astro.cw20",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/5751B8BCDA688FD0A8EC0B292EEF1CDEAB4B766B63EC632778B196D317C40C3A",
      name: "Astroport CW20 token",
      display: "astro.cw20",
      symbol: "ASTRO.cw20",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "terra2",
          base_denom: "cw20:terra1nsuqsk6kh58ulczatwev87ttq2z6r3pusulg9r24mfj2fvtzd4uq3exn26",
          channel_id: "channel-167",
          port: "wasm.terra1jhfjnm39y3nn9l4520mdn4k5mw23nz0674c4gsvyrcr90z9tqcvst22fce"
        },
        chain: {
          channel_id: "channel-5",
          path: "transfer/channel-5/cw20:terra1nsuqsk6kh58ulczatwev87ttq2z6r3pusulg9r24mfj2fvtzd4uq3exn26",
          port: "transfer"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "terra2",
          base_denom: "cw20:terra1nsuqsk6kh58ulczatwev87ttq2z6r3pusulg9r24mfj2fvtzd4uq3exn26"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/astro-cw20.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/astro-cw20.svg"
      }
    },
    {
      description: "Baby Corgi is the real doggo of Neutron!",
      denom_units: [{
        denom: "factory/neutron1tklm6cvr2wxg8k65t8gh5ewslnzdfd5fsk0w3f/corgi",
        exponent: 0,
        aliases: ["ucorgi"]
      }, {
        denom: "corgi",
        exponent: 6
      }],
      base: "factory/neutron1tklm6cvr2wxg8k65t8gh5ewslnzdfd5fsk0w3f/corgi",
      name: "Baby Corgi",
      display: "corgi",
      symbol: "CORGI",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/babycorgi.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/babycorgi.png"
      }]
    },
    {
      description: "clownmaxxed store of value",
      denom_units: [{
        denom: "factory/neutron170v88vrtnedesyfytuku257cggxc79rd7lwt7q/ucircus",
        exponent: 0,
        aliases: ["ucircus"]
      }, {
        denom: "circus",
        exponent: 6
      }],
      base: "factory/neutron170v88vrtnedesyfytuku257cggxc79rd7lwt7q/ucircus",
      name: "AtomEconomicZone69JaeKwonInu",
      display: "circus",
      symbol: "CIRCUS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/circus.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/circus.png"
      }]
    },
    {
      description: "Jimmy Neutron Finance",
      denom_units: [{
        denom: "factory/neutron108x7vp9zv22d6wxrs9as8dshd3pd5vsga463yd/JIMMY",
        exponent: 0,
        aliases: ["ujimmy"]
      }, {
        denom: "jimmy",
        exponent: 6
      }],
      base: "factory/neutron108x7vp9zv22d6wxrs9as8dshd3pd5vsga463yd/JIMMY",
      name: "jimmy",
      display: "jimmy",
      symbol: "JIMMY",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/jimmy.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/jimmy.png"
      }]
    },
    {
      description: "Baddest coin on Cosmos",
      denom_units: [{
        denom: "factory/neutron143wp6g8paqasnuuey6zyapucknwy9rhnld8hkr/bad",
        exponent: 0,
        aliases: ["ubad"]
      }, {
        denom: "bad",
        exponent: 6
      }],
      base: "factory/neutron143wp6g8paqasnuuey6zyapucknwy9rhnld8hkr/bad",
      name: "Badcoin",
      display: "bad",
      symbol: "BAD",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/bad.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/bad.png"
      }]
    },
    {
      description: "BITCOSMOS",
      denom_units: [{
        denom: "neutron1fjzg7fmv770hsvahqm0nwnu6grs3rjnd2wa6fvm9unv6vedkzekqpw44qj",
        exponent: 0,
        aliases: ["ubitcosmos"]
      }, {
        denom: "bitcosmos",
        exponent: 6
      }],
      base: "neutron1fjzg7fmv770hsvahqm0nwnu6grs3rjnd2wa6fvm9unv6vedkzekqpw44qj",
      name: "Bitcosmos",
      display: "bitcosmos",
      symbol: "BTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/bitcosmos.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/bitcosmos.png"
      }]
    },
    {
      description: "What the Fuck",
      denom_units: [{
        denom: "neutron12h09p8hq5y4xpsmcuxxzsn9juef4f6jvekp8yefc6xnlwm6uumnsdk29wf",
        exponent: 0,
        aliases: ["uwtf"]
      }, {
        denom: "wtf",
        exponent: 6
      }],
      base: "neutron12h09p8hq5y4xpsmcuxxzsn9juef4f6jvekp8yefc6xnlwm6uumnsdk29wf",
      name: "wtf",
      display: "wtf",
      symbol: "WTF",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/WTF.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/WTF.png"
      }]
    },
    {
      description: "NLS on Neutron",
      denom_units: [{
        denom: "ibc/6C9E6701AC217C0FC7D74B0F7A6265B9B4E3C3CDA6E80AADE5F950A8F52F9972",
        exponent: 0,
        aliases: ["unls"]
      }, {
        denom: "nls",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/6C9E6701AC217C0FC7D74B0F7A6265B9B4E3C3CDA6E80AADE5F950A8F52F9972",
      name: "Nolus NLS",
      display: "nls",
      symbol: "NLS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "nolus",
          base_denom: "unls",
          channel_id: "channel-3839"
        },
        chain: {
          channel_id: "channel-44",
          path: "transfer/channel-44/unls"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "nolus",
          base_denom: "unls"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nolus/images/nolus.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nolus/images/nolus.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nolus/images/nolus.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nolus/images/nolus.svg"
      }
    },
    {
      description: "A Mechanical Canine",
      denom_units: [{
        denom: "factory/neutron1t5qrjtyryh8gzt800qr5vylhh2f8cmx4wmz9mc/ugoddard",
        exponent: 0,
        aliases: ["ugoddard"]
      }, {
        denom: "goddard",
        exponent: 6
      }],
      base: "factory/neutron1t5qrjtyryh8gzt800qr5vylhh2f8cmx4wmz9mc/ugoddard",
      name: "Goddard",
      display: "goddard",
      symbol: "GODRD",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/goddardntrn.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/goddardntrn.png"
      }]
    },
    {
      description: "The deflationary utility token of the Apollo DAO project",
      denom_units: [{
        denom: "factory/neutron154gg0wtm2v4h9ur8xg32ep64e8ef0g5twlsgvfeajqwghdryvyqsqhgk8e/APOLLO",
        exponent: 0,
        aliases: ["uapollo"]
      }, {
        denom: "apollo",
        exponent: 6
      }],
      base: "factory/neutron154gg0wtm2v4h9ur8xg32ep64e8ef0g5twlsgvfeajqwghdryvyqsqhgk8e/APOLLO",
      name: "Apollo DAO",
      display: "apollo",
      symbol: "APOLLO",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/apollo.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/apollo.svg"
      }],
      socials: {
        website: "https://apollo.farm/",
        twitter: "https://twitter.com/ApolloDAO"
      }
    },
    {
      description: "NEWTROLL",
      denom_units: [{
        denom: "factory/neutron1ume2n42r5j0660gegrr28fzdze7aqf7r5cd9y6/newtroll",
        exponent: 0,
        aliases: ["unewtroll"]
      }, {
        denom: "newtroll",
        exponent: 6
      }],
      base: "factory/neutron1ume2n42r5j0660gegrr28fzdze7aqf7r5cd9y6/newtroll",
      name: "Newtroll",
      display: "newtroll",
      symbol: "NTRL",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/newtroll.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/newtroll.svg"
      }]
    },
    {
      description: "Retro Game",
      denom_units: [{
        denom: "factory/neutron1t24nc7whl77relnu3taxyg3p66pjyuk82png2y/uretro",
        exponent: 0,
        aliases: ["uretro"]
      }, {
        denom: "retro",
        exponent: 6
      }],
      base: "factory/neutron1t24nc7whl77relnu3taxyg3p66pjyuk82png2y/uretro",
      name: "Retro",
      display: "retro",
      symbol: "RETRO",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/retro.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/retro.svg"
      }]
    },
    {
      description: "THE FIRST NATIVE GODDARD MEMECOIN ON NEUTRON",
      denom_units: [{
        denom: "factory/neutron1yqj9vcc0y73xfxjzegaj4v8q0zefevnlpuh4rj/GODDARD",
        exponent: 0,
        aliases: ["ugoddard"]
      }, {
        denom: "goddard",
        exponent: 6
      }],
      base: "factory/neutron1yqj9vcc0y73xfxjzegaj4v8q0zefevnlpuh4rj/GODDARD",
      name: "Goddard",
      display: "goddard",
      symbol: "GODDARD",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/goddard.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/goddard.svg"
      }]
    },
    {
      description: "The first memecoin on osmosis.",
      denom_units: [{
        denom: "ibc/7DA39F5140741177846FCF3CFAB14450EE7F57B7794E5A94BEF73825D3741958",
        exponent: 0
      }, {
        denom: "WOSMO",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/7DA39F5140741177846FCF3CFAB14450EE7F57B7794E5A94BEF73825D3741958",
      name: "Wosmo",
      display: "WOSMO",
      symbol: "WOSMO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3/WOSMO",
          channel_id: "channel-874"
        },
        chain: {
          channel_id: "channel-10",
          path: "transfer/channel-10/factory/osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3/WOSMO"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3/WOSMO"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wosmo.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wosmo.png"
      }
    },
    {
      description: "Astro BOY",
      denom_units: [{
        denom: "neutron1uqvse8fdrd9tam47f2jhy9m6al6xxtqpc83f9pdnz5gdle4swc0spfnctv",
        exponent: 0,
        aliases: ["uboy"]
      }, {
        denom: "boy",
        exponent: 6
      }],
      base: "neutron1uqvse8fdrd9tam47f2jhy9m6al6xxtqpc83f9pdnz5gdle4swc0spfnctv",
      name: "boy",
      display: "boy",
      symbol: "BOY",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/boy.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/boy.png"
      }]
    },
    {
      description: "A clan of 11y bad kids crafting chaos on the Cosmos eco. One bad memecoin to rule them all  $BADKID. Airdropped to Badkids NFT holders and $STARS stakers. It's so bad, your wallet's throwing a tantrum for it.",
      denom_units: [{
        denom: "ibc/9F8417FBA11E5E01F7F85DDD48C400EB746E95084C11706041663845B4A700A8",
        exponent: 0
      }, {
        denom: "BADKID",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/9F8417FBA11E5E01F7F85DDD48C400EB746E95084C11706041663845B4A700A8",
      name: "Badkid",
      display: "BADKID",
      symbol: "BADKID",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "factory/osmo10n8rv8npx870l69248hnp6djy6pll2yuzzn9x8/BADKID",
          channel_id: "channel-874"
        },
        chain: {
          channel_id: "channel-10",
          path: "transfer/channel-10/factory/osmo10n8rv8npx870l69248hnp6djy6pll2yuzzn9x8/BADKID"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "factory/osmo10n8rv8npx870l69248hnp6djy6pll2yuzzn9x8/BADKID"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/badkid.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/badkid.png"
      }
    },
    {
      description: "Reflections of cartel activity on Cosmos.",
      denom_units: [{
        denom: "factory/neutron1w0pz4mjw7n96kkragj8etgfgakg5vw9lzg77wq/cartel",
        exponent: 0,
        aliases: ["ucartel"]
      }, {
        denom: "cartel",
        exponent: 6
      }],
      base: "factory/neutron1w0pz4mjw7n96kkragj8etgfgakg5vw9lzg77wq/cartel",
      name: "cartel",
      display: "cartel",
      symbol: "CARTEL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/cartel.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/cartel.png"
      }]
    },
    {
      description: "$ATOM to $1,000 LFG!!",
      denom_units: [{
        denom: "factory/neutron13lkh47msw28yynspc5rnmty3yktk43wc3dsv0l/ATOM1KLFG",
        exponent: 0,
        aliases: ["uatom1klfg"]
      }, {
        denom: "ATOM1KLFG",
        exponent: 6
      }],
      base: "factory/neutron13lkh47msw28yynspc5rnmty3yktk43wc3dsv0l/ATOM1KLFG",
      name: "ATOM1KLFG",
      display: "ATOM1KLFG",
      symbol: "ATOM1KLFG",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/ATOM1KLFGc.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/ATOM1KLFGc.png"
      }]
    },
    {
      type_asset: "ics20",
      description: "USD Coin on Neutron",
      denom_units: [{
        denom: "ibc/B559A80D62249C8AA07A380E2A2BEA6E5CA9A6F079C912C3A9E9B494105E4F81",
        exponent: 0,
        aliases: ["uusdc", "microusdc"]
      }, {
        denom: "usdc",
        exponent: 6
      }],
      base: "ibc/B559A80D62249C8AA07A380E2A2BEA6E5CA9A6F079C912C3A9E9B494105E4F81",
      name: "USD Coin",
      display: "usdc",
      symbol: "USDC",
      coingecko_id: "usd-coin",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
      },
      images: [{
        image_sync: {
          chain_name: "noble",
          base_denom: "uusdc"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
      }],
      traces: [{
        type: "ibc",
        counterparty: {
          channel_id: "channel-18",
          base_denom: "uusdc",
          chain_name: "noble"
        },
        chain: {
          channel_id: "channel-30",
          path: "transfer/channel-30/uusdc"
        }
      }]
    },
    {
      description: "WEIRD FRIENDS token",
      denom_units: [{
        denom: "factory/neutron133xakkrfksq39wxy575unve2nyehg5npx75nph/WEIRD",
        exponent: 0,
        aliases: ["uWEIRD"]
      }, {
        denom: "WEIRD",
        exponent: 6
      }],
      base: "factory/neutron133xakkrfksq39wxy575unve2nyehg5npx75nph/WEIRD",
      name: "WEIRD",
      display: "WEIRD",
      symbol: "WEIRD",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/WEIRD.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/WEIRD.png"
      }]
    },
    {
      denom_units: [{
        denom: "factory/neutron19tynwawkm2rgefqxy7weupu4hdamyhg890zep2/TAKUMI",
        exponent: 0,
        aliases: ["utakumi"]
      }, {
        denom: "takumi",
        exponent: 6
      }],
      base: "factory/neutron19tynwawkm2rgefqxy7weupu4hdamyhg890zep2/TAKUMI",
      name: "Takumi Asano",
      display: "takumi",
      symbol: "TAKUMI",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/TAKUMI.png"
      }]
    },
    {
      name: "Ninja Blaze Token",
      description: "Ninja Blaze Token",
      denom_units: [{
        denom: "factory/neutron1a6ydq8urdj0gkvjw9e9e5y9r5ce2qegm9m4xufpt96kcm60kmuass0mqq4/nbz",
        exponent: 0,
        aliases: ["uNBZ"]
      }, {
        denom: "NBZ",
        exponent: 6
      }],
      base: "factory/neutron1a6ydq8urdj0gkvjw9e9e5y9r5ce2qegm9m4xufpt96kcm60kmuass0mqq4/nbz",
      display: "NBZ",
      symbol: "NBZ",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/NBZ.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/NBZ.png"
      }]
    }
  ]
};
var assets_default105 = info286;

// node_modules/chain-registry/esm/mainnet/neutron/chain.js
var info287 = {
  $schema: "../chain.schema.json",
  chain_name: "neutron",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Neutron",
  chain_id: "neutron-1",
  bech32_prefix: "neutron",
  website: "https://neutron.org/",
  daemon_name: "neutrond",
  node_home: "$HOME/.neutrond",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [
      {
        denom: "untrn",
        low_gas_price: 53e-4,
        average_gas_price: 53e-4,
        high_gas_price: 53e-4
      },
      {
        denom: "ibc/C4CFF46FD6DE35CA4CF4CE031E643C8FDC9BA4B99AE598E9B0ED98FE3A2319F9",
        low_gas_price: 8e-4,
        average_gas_price: 8e-4,
        high_gas_price: 8e-4
      },
      {
        denom: "ibc/F082B65C88E4B6D5EF1DB243CDA1D331D002759E938A0F5CD3FFDC5D53B3E349",
        low_gas_price: 8e-3,
        average_gas_price: 8e-3,
        high_gas_price: 8e-3
      },
      {
        denom: "factory/neutron1ug740qrkquxzrk2hh29qrlx3sktkfml3je7juusc2te7xmvsscns0n2wry/wstETH",
        low_gas_price: 29032316597e-4,
        average_gas_price: 29032316597e-4,
        high_gas_price: 29032316597e-4
      },
      {
        denom: "ibc/2CB87BCE0937B1D1DFCEE79BE4501AAF3C265E923509AEAC410AD85D27F35130",
        low_gas_price: 25641025641026e-4,
        average_gas_price: 25641025641026e-4,
        high_gas_price: 25641025641026e-4
      },
      {
        denom: "ibc/773B4D0A3CD667B2275D5A4A7A2F0909C0BA0F4059C0B9181E680DDF4965DCC7",
        low_gas_price: 4e-4,
        average_gas_price: 4e-4,
        high_gas_price: 4e-4
      }
    ]
  },
  staking: {
    staking_tokens: [{
      denom: "untrn"
    }]
  },
  codebase: {
    cosmos_sdk_version: "neutron-org/cosmos-sdk v0.47.10-neutron",
    cosmwasm_enabled: true,
    cosmwasm_version: "neutron-org/wasmd v0.45.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/neutron-black-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/neutron-black-logo.svg"
  },
  description: "The most secure CosmWasm platform in Cosmos, Neutron lets smart-contracts leverage bleeding-edge Interchain technology with minimal overhead.",
  apis: {
    rpc: [
      {
        address: "https://rpc.novel.remedy.tm.p2p.org",
        provider: "P2P"
      },
      {
        address: "https://neutron-rpc.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc-neutron.whispernode.com",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://rpc-neutron.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "http://rpc.neutron.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://neutron-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://community.nuxian-node.ch:6797/neutron/trpc",
        provider: "PRO Delegators"
      },
      {
        address: "https://rpc.neutron.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://rpc.neutron.quokkastake.io",
        provider: "\u{1F439} Quokka Stake"
      }
    ],
    rest: [
      {
        address: "https://api.novel.remedy.tm.p2p.org",
        provider: "P2P"
      },
      {
        address: "https://neutron-api.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://lcd-neutron.whispernode.com",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://api-neutron.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "http://api.neutron.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://neutron-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://community.nuxian-node.ch:6797/neutron/crpc",
        provider: "PRO Delegators"
      },
      {
        address: "https://lcd.neutron.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://api.neutron.quokkastake.io",
        provider: "\u{1F439} Quokka Stake"
      }
    ],
    grpc: [
      {
        address: "grpc-kralum.neutron-1.neutron.org:80",
        provider: "Neutron"
      },
      {
        address: "neutron-grpc-pub.rpc.p2p.world:3001",
        provider: "P2P"
      },
      {
        address: "neutron-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "grpc-neutron.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "grpc-neutron.cosmos-spaces.cloud:3090",
        provider: "Cosmos Spaces"
      },
      {
        address: "grpc.neutron.nodestake.top:9090",
        provider: "NodeStake"
      },
      {
        address: "neutron-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://grpc.neutron.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "rpc.neutron.quokkastake.io:9090",
        provider: "\u{1F439} Quokka Stake"
      }
    ]
  },
  explorers: [
    {
      kind: "Mintscan",
      url: "https://www.mintscan.io/neutron",
      tx_page: "https://www.mintscan.io/neutron/transactions/${txHash}",
      account_page: "https://www.mintscan.io/neutron/accounts/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/neutron",
      tx_page: "https://ezstaking.app/neutron/txs/${txHash}",
      account_page: "https://ezstaking.app/neutron/account/${accountAddress}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/neutron",
      tx_page: "https://mainnet.whispernode.com/neutron/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/neutron/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/neutron-black-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/neutron-black-logo.svg"
  }]
};
var chain_default105 = info287;

// node_modules/chain-registry/esm/mainnet/neutron/ibc.js
var info288 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-51",
      connection_id: "connection-58"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-62",
      connection_id: "connection-43"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-61",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-41",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-123",
      connection_id: "connection-110"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-78",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-29",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-48",
      connection_id: "connection-36"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-35",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "chihuahua",
      client_id: "07-tendermint-191",
      connection_id: "connection-127"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-74",
      connection_id: "connection-53"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-76",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-77",
        port_id: "wasm.chihuahua1jwkag4yvhyj9fuddtkygvavya8hmdjuzmgxwg9vp3lw9twv6lrcq9mgl52"
      },
      chain_2: {
        channel_id: "channel-52",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-66",
      connection_id: "connection-28"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-29",
      connection_id: "connection-22"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1119",
      connection_id: "connection-809"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-569",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-11",
      connection_id: "connection-17"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-72",
      connection_id: "connection-51"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-48",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dymension",
      client_id: "07-tendermint-16",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-82",
      connection_id: "connection-61"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-675",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-233",
      connection_id: "connection-220"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-78",
      connection_id: "connection-58"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-177",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-60",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-557",
      connection_id: "connection-524"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-97",
      connection_id: "connection-71"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-548",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4328",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kava",
      client_id: "07-tendermint-151",
      connection_id: "connection-194"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-54",
      connection_id: "connection-37"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-136",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-112",
      connection_id: "connection-82"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-75",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "mars",
      client_id: "07-tendermint-64",
      connection_id: "connection-50"
    },
    chain_2: {
      chain_name: "neutron",
      client_id: "07-tendermint-21",
      connection_id: "connection-21"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-16",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-40",
      connection_id: "connection-31"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-25",
      connection_id: "connection-34"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-30",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-83",
      connection_id: "connection-62"
    },
    chain_2: {
      chain_name: "nois",
      client_id: "07-tendermint-20",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-722",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-47",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-1559",
        port_id: "wasm.neutron14cwv7d4lwc69zrjrzywwh8c9327m8dpngpq52f5kgqephhgrjc2s9ry3eu"
      },
      chain_2: {
        channel_id: "channel-48",
        port_id: "wasm.nois1acyc05v6fgcdgj88nmz2t40aex9nlnptqpwp5hf8hwg7rhce9uuqgqz5wp"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-71",
      connection_id: "connection-50"
    },
    chain_2: {
      chain_name: "nolus",
      client_id: "07-tendermint-13",
      connection_id: "connection-11"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-44",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3839",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-64",
      connection_id: "connection-44"
    },
    chain_2: {
      chain_name: "nomic",
      client_id: "07-tendermint-3",
      connection_id: "connection-3"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-42",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-19",
      connection_id: "connection-18"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2823",
      connection_id: "connection-2338"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-874",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-2107",
        port_id: "wasm.neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07"
      },
      chain_2: {
        channel_id: "channel-39589",
        port_id: "wasm.osmo1pfeve3esg5rhhkfhlujxtthc25akcf3zpa3t9whghvvp2v5v92ps0z30r6"
      },
      ordering: "unordered",
      version: "astroport-ibc-v1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-73",
      connection_id: "connection-52"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-161",
      connection_id: "connection-199"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-49",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-136",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-98",
      connection_id: "connection-72"
    },
    chain_2: {
      chain_name: "pryzm",
      client_id: "07-tendermint-6",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4329",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-90",
      connection_id: "connection-66"
    },
    chain_2: {
      chain_name: "saga",
      client_id: "07-tendermint-6",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2060",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-85",
      connection_id: "connection-63"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-199",
      connection_id: "connection-192"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1551",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-144",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-1950",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-151",
        port_id: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-89",
      connection_id: "connection-65"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-123",
      connection_id: "connection-157"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2016",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-66",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-2110",
        port_id: "wasm.neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07"
      },
      chain_2: {
        channel_id: "channel-71",
        port_id: "wasm.sei12fykm2xhg5ces2vmf4q2aem8c958exv3v0wmvrspa8zucrdwjeds2e2ntx"
      },
      ordering: "unordered",
      version: "astroport-ibc-v1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-31",
      connection_id: "connection-23"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-283",
      connection_id: "connection-211"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-191",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-18",
      connection_id: "connection-15"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-125",
      connection_id: "connection-113"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-123",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-12",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-274",
      connection_id: "connection-192"
    },
    channels: [
      {
        chain_1: {
          channel_id: "channel-25",
          port_id: "transfer"
        },
        chain_2: {
          channel_id: "channel-229",
          port_id: "transfer"
        },
        ordering: "unordered",
        version: "ics20-1",
        tags: {
          status: "live",
          preferred: true
        }
      },
      {
        chain_1: {
          channel_id: "channel-5",
          port_id: "transfer"
        },
        chain_2: {
          channel_id: "channel-167",
          port_id: "wasm.terra1jhfjnm39y3nn9l4520mdn4k5mw23nz0674c4gsvyrcr90z9tqcvst22fce"
        },
        ordering: "unordered",
        version: "ics20-1",
        tags: {
          status: "live",
          preferred: true
        }
      },
      {
        chain_1: {
          channel_id: "channel-2112",
          port_id: "wasm.neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07"
        },
        chain_2: {
          channel_id: "channel-396",
          port_id: "wasm.terra1k9j8rcyk87v5jvfla2m9wp200azegjz0eshl7n2pwv852a7ssceqsnn7pq"
        },
        ordering: "unordered",
        version: "astroport-ibc-v1",
        tags: {
          status: "live",
          preferred: true
        }
      }
    ]
  }
];
var ibc_default78 = info288;

// node_modules/chain-registry/esm/mainnet/neutron/index.js
var assets105 = assets_default105;
var chain105 = chain_default105;
var ibc78 = ibc_default78;

// node_modules/chain-registry/esm/mainnet/nibiru/assets.js
var info289 = {
  $schema: "../assetlist.schema.json",
  chain_name: "nibiru",
  assets: [
    {
      description: "The native token of Nibiru network",
      extended_description: "Nibiru hosts a variety of ecosystem partners in a wide variety of consumer sectors. From RWAs (Coded Estate) to DeFi (Constella, NOM) to Gaming (Blockchain Game Alliance, IntoTheVerse), Nibiru is advancing multiple emerging blockchain narratives that will onboard the next billion users.",
      socials: {
        website: "https://nibiru.fi",
        twitter: "https://twitter.com/nibiruchain"
      },
      denom_units: [{
        denom: "unibi",
        exponent: 0
      }, {
        denom: "nibi",
        exponent: 6
      }],
      base: "unibi",
      name: "Nibiru",
      display: "nibi",
      symbol: "NIBI",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
      },
      coingecko_id: "nibiru",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
      }]
    },
    {
      description: "uoprek",
      denom_units: [{
        denom: "tf/nibi149m52kn7nvsg5nftvv4fh85scsavpdfxp5nr7zasz97dum89dp5qkyhy0t/uoprek",
        exponent: 0
      }],
      base: "tf/nibi149m52kn7nvsg5nftvv4fh85scsavpdfxp5nr7zasz97dum89dp5qkyhy0t/uoprek",
      name: "uoprek",
      display: "tf/nibi149m52kn7nvsg5nftvv4fh85scsavpdfxp5nr7zasz97dum89dp5qkyhy0t/uoprek",
      symbol: "UOPREK"
    },
    {
      description: "utestate",
      denom_units: [{
        denom: "tf/nibi1lp28kx3gz0prsztl024z730ufkg3alahaq3e7a6gae22nk0dqdvsyrrgqw/utestate",
        exponent: 0
      }],
      base: "tf/nibi1lp28kx3gz0prsztl024z730ufkg3alahaq3e7a6gae22nk0dqdvsyrrgqw/utestate",
      name: "utestate",
      display: "tf/nibi1lp28kx3gz0prsztl024z730ufkg3alahaq3e7a6gae22nk0dqdvsyrrgqw/utestate",
      symbol: "UTESTATE"
    },
    {
      description: "npp",
      denom_units: [{
        denom: "tf/nibi1xpp7yn0tce62ffattws3gpd6v0tah0mlevef3ej3r4pnfvsehcgqk3jvxq/NPP",
        exponent: 0
      }],
      base: "tf/nibi1xpp7yn0tce62ffattws3gpd6v0tah0mlevef3ej3r4pnfvsehcgqk3jvxq/NPP",
      name: "npp",
      display: "tf/nibi1xpp7yn0tce62ffattws3gpd6v0tah0mlevef3ej3r4pnfvsehcgqk3jvxq/NPP",
      symbol: "NPP"
    }
  ]
};
var assets_default106 = info289;

// node_modules/chain-registry/esm/mainnet/nibiru/chain.js
var info290 = {
  $schema: "../chain.schema.json",
  chain_name: "nibiru",
  status: "live",
  network_type: "mainnet",
  website: "https://nibiru.fi/",
  pretty_name: "Nibiru",
  chain_id: "cataclysm-1",
  bech32_prefix: "nibi",
  daemon_name: "nibid",
  node_home: "$HOME/.nibid",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "unibi",
      fixed_min_gas_price: 0.025,
      low_gas_price: 0.025,
      average_gas_price: 0.05,
      high_gas_price: 0.1
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "unibi"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "v0.47.10",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.44.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
  },
  description: "A Web3 hub ushering in the next era of money",
  apis: {
    wss: [{
      address: "wss://rpc.nibiru.fi/websocket",
      provider: "Nibiru Foundation"
    }],
    rpc: [
      {
        address: "https://rpc.nibiru.fi",
        provider: "Nibiru Foundation"
      },
      {
        address: "https://nibiru.rpc.kjnodes.com",
        provider: "kjnodes.com \u{1F984}"
      },
      {
        address: "https://rpc.nibiru.nodestake.org",
        provider: "NodeStake"
      },
      {
        address: "https://nibiru-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc.nibiru.silentvalidator.com",
        provider: "silent"
      },
      {
        address: "https://nibiru.rpc.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "https://nibiru-rpc.cogwheel.zone",
        provider: "Cogwheel \u2699\uFE0F"
      },
      {
        address: "https://nibiru.rpc.nodeshub.online:443",
        provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705"
      },
      {
        address: "https://nibiru.rpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://nibiru-rpc.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://nibiru-mainnet.rpc.stakevillage.net:443",
        provider: "Stake Village"
      },
      {
        address: "https://nibiru-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    rest: [
      {
        address: "https://lcd.nibiru.fi",
        provider: "Nibiru Foundation"
      },
      {
        address: "https://nibiru.api.kjnodes.com",
        provider: "kjnodes.com \u{1F984}"
      },
      {
        address: "https://api.nibiru.nodestake.org",
        provider: "NodeStake"
      },
      {
        address: "https://api.nibiru.silentvalidator.com",
        provider: "silent"
      },
      {
        address: "https://nibiru-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://nibiru.api.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "https://nibiru-api.cogwheel.zone",
        provider: "Cogwheel \u2699\uFE0F"
      },
      {
        address: "https://nibiru.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://nibiru.api.nodeshub.online:443",
        provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705"
      },
      {
        address: "https://nibiru.api.staking-explorer.com",
        provider: "Daily DROP | 2% Fee"
      },
      {
        address: "https://nibiru-api.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://nibiru-mainnet.api.stakevillage.net",
        provider: "Stake Village"
      },
      {
        address: "https://nibiru-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    grpc: [
      {
        address: "grpc.nibiru.fi:443",
        provider: "Nibiru Foundation"
      },
      {
        address: "nibiru.grpc.kjnodes.com:443",
        provider: "kjnodes.com \u{1F984}"
      },
      {
        address: "grpc.nibiru.nodestake.org:443",
        provider: "NodeStake"
      },
      {
        address: "grpc.nibiru.silentvalidator.com:443",
        provider: "silent"
      },
      {
        address: "https://nibiru-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "nibiru.grpc.liveraven.net:443",
        provider: "LiveRaveN"
      },
      {
        address: "nibiru-grpc.cogwheel.zone:443",
        provider: "Cogwheel \u2699\uFE0F"
      },
      {
        address: "https://nibiru.grpc.nodeshub.online",
        provider: "Nodes Hub"
      },
      {
        address: "nibiru.grpc.m.stavr.tech:5023",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "nibiru-grpc.noders.services:35090",
        provider: "[NODERS]TEAM"
      },
      {
        address: "nibiru-mainnet.grpc.stakevillage.net:443",
        provider: "Stake Village"
      },
      {
        address: "nibiru-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ]
  },
  explorers: [
    {
      kind: "Nodes Guru",
      url: "https://nibiru.explorers.guru/",
      tx_page: "https://nibiru.explorers.guru/transaction/${txHash}",
      account_page: "https://nibiru.explorers.guru/account/${accountAddress}"
    },
    {
      kind: "NodeStake",
      url: "https://explorer.nodestake.org/nibiru",
      tx_page: "https://explorer.nodestake.org/nibiru/tx/${txHash}",
      account_page: "https://explorer.nodestake.org/nibiru/account/${accountAddress}"
    },
    {
      kind: "LiveRaveN",
      url: "https://mainnet.explorer.liveraven.net/nibiru",
      tx_page: "https://mainnet.explorer.liveraven.net/nibiru/tx/${txHash}",
      account_page: "https://mainnet.explorer.liveraven.net/nibiru/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Nibiru-Mainnet",
      tx_page: "https://explorer.stavr.tech/Nibiru-Mainnet/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Nibiru-Mainnet/account/${accountAddress}"
    },
    {
      kind: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705",
      url: "https://explorer.nodeshub.online/nibiru/",
      tx_page: "https://explorer.nodeshub.online/nibiru/tx/${txHash}",
      account_page: "https://explorer.nodeshub.online/nibiru/accounts/${accountAddress}"
    },
    {
      kind: "Stake Village",
      url: "https://exp.stakevillage.net/nibiru-mainnet",
      tx_page: "https://exp.stakevillage.net/nibiru-mainnet/tx/${txHash}",
      account_page: "https://exp.stakevillage.net/nibiru-mainnet/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
  }]
};
var chain_default106 = info290;

// node_modules/chain-registry/esm/mainnet/nibiru/ibc.js
var info291 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-200",
      connection_id: "connection-181"
    },
    chain_2: {
      chain_name: "nibiru",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-139",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nibiru",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-86",
      connection_id: "connection-86"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-67",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nibiru",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3104",
      connection_id: "connection-2580"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-21113",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  }
];
var ibc_default79 = info291;

// node_modules/chain-registry/esm/mainnet/nibiru/index.js
var assets106 = assets_default106;
var chain106 = chain_default106;
var ibc79 = ibc_default79;

// node_modules/chain-registry/esm/mainnet/nim/assets.js
var info292 = {
  $schema: "../assetlist.schema.json",
  chain_name: "nim",
  assets: [{
    description: "The native token of Nim Network.",
    extended_description: "Nim Network is a highly-adoptable AI Gaming chain that will provide the ultimate ecosystem for exploration and development of games at the intersection of Web3 and AI.",
    denom_units: [{
      denom: "anim",
      exponent: 0
    }, {
      denom: "nim",
      exponent: 18
    }],
    type_asset: "sdk.coin",
    base: "anim",
    name: "NIM Network",
    display: "nim",
    symbol: "NIM",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nim/images/nim.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nim/images/nim.svg"
    }],
    socials: {
      website: "https://ai.nim.network/",
      twitter: "https://twitter.com/nim_network"
    },
    keywords: ["gaming", "AI"],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nim/images/nim.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nim/images/nim.svg"
    }
  }]
};
var assets_default107 = info292;

// node_modules/chain-registry/esm/mainnet/nim/chain.js
var info293 = {
  $schema: "../chain.schema.json",
  chain_name: "nim",
  status: "live",
  network_type: "mainnet",
  website: "https://ai.nim.network",
  pretty_name: "Nim Network",
  chain_id: "nim_1122-1",
  bech32_prefix: "nim",
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "anim",
      low_gas_price: 2e10,
      average_gas_price: 2e10,
      high_gas_price: 2e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "anim"
    }],
    lock_duration: {
      time: "1209600s"
    }
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nim/images/nim.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nim/images/nim.svg"
  },
  description: "Nim Network is a highly-adoptable AI Gaming chain that will provide the ultimate ecosystem for exploration and development of games at the intersection of Web3 and AI.",
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nim/images/nim.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nim/images/nim.svg"
  }],
  codebase: {},
  apis: {
    rpc: [{
      address: "https://nim-mainnet-tendermint.public.blastapi.io",
      provider: "BlastAPI"
    }],
    rest: [{
      address: "https://nim-mainnet-rest.public.blastapi.io",
      provider: "BlastAPI"
    }],
    "evm-http-jsonrpc": [{
      address: "https://nim-mainnet.public.blastapi.io",
      provider: "BlastAPI"
    }]
  },
  explorers: [{
    kind: "FYI",
    url: "https://dym.fyi/r/nim",
    tx_page: "https://dym.fyi/r/nim/tx/${txHash}",
    account_page: "https://dym.fyi/r/nim/address/${accountAddress}"
  }]
};
var chain_default107 = info293;

// node_modules/chain-registry/esm/mainnet/nim/ibc.js
var info294 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "dymension",
    client_id: "07-tendermint-44",
    connection_id: "connection-34"
  },
  chain_2: {
    chain_name: "nim",
    client_id: "07-tendermint-0",
    connection_id: "connection-0"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-49",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default80 = info294;

// node_modules/chain-registry/esm/mainnet/nim/index.js
var assets107 = assets_default107;
var chain107 = chain_default107;
var ibc80 = ibc_default80;

// node_modules/chain-registry/esm/mainnet/noble/assets.js
var info295 = {
  $schema: "../assetlist.schema.json",
  chain_name: "noble",
  assets: [
    {
      description: "The permissioned staking asset for Noble Chain",
      denom_units: [{
        denom: "ustake",
        exponent: 0,
        aliases: ["microstake"]
      }, {
        denom: "stake",
        exponent: 6
      }],
      base: "ustake",
      name: "Stake",
      display: "stake",
      symbol: "STAKE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/stake.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/stake.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/stake.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/stake.svg"
      }]
    },
    {
      description: "Frienzies are an IBC token redeemable exclusively for a physical asset issued by the Noble entity.",
      denom_units: [{
        denom: "ufrienzies",
        exponent: 0,
        aliases: ["microfrienzies"]
      }, {
        denom: "frienzies",
        exponent: 6
      }],
      base: "ufrienzies",
      display: "frienzies",
      name: "Frienzies",
      symbol: "FRNZ",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/frnz.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/frnz.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/frnz.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/frnz.svg"
      }]
    },
    {
      description: "ATOM token on Noble",
      denom_units: [{
        denom: "ibc/EF48E6B1A1A19F47ECAEA62F5670C37C0580E86A9E88498B7E393EB6F49F33C0",
        exponent: 0
      }, {
        denom: "atom",
        exponent: 6,
        aliases: ["ATOM"]
      }],
      type_asset: "ics20",
      base: "ibc/EF48E6B1A1A19F47ECAEA62F5670C37C0580E86A9E88498B7E393EB6F49F33C0",
      name: "Atom Staking Coin",
      display: "atom",
      symbol: "ATOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "cosmoshub",
          base_denom: "uatom",
          channel_id: "channel-536"
        },
        chain: {
          channel_id: "channel-4",
          path: "transfer/channel-4/uatom"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      },
      images: [{
        image_sync: {
          chain_name: "cosmoshub",
          base_denom: "uatom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }]
    },
    {
      description: "USD Coin",
      denom_units: [{
        denom: "uusdc",
        exponent: 0,
        aliases: ["microusdc"]
      }, {
        denom: "usdc",
        exponent: 6
      }],
      base: "uusdc",
      display: "usdc",
      name: "USDC",
      symbol: "USDC",
      coingecko_id: "usd-coin",
      traces: [{
        type: "additional-mintage",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
        },
        provider: "Circle"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
      }]
    },
    {
      description: "USDLR is a fiat-backed stablecoin issued by Stable. Stable pays DeFi protocols who distribute USDLR.",
      denom_units: [{
        denom: "uusdlr",
        exponent: 0,
        aliases: ["microusdlr"]
      }, {
        denom: "usdlr",
        exponent: 6
      }],
      base: "uusdlr",
      display: "usdlr",
      name: "USDLR by Stable",
      symbol: "USDLR",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/nobletestnet/images/usdlr.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/nobletestnet/images/usdlr.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/nobletestnet/images/usdlr.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/nobletestnet/images/usdlr.svg"
      }]
    }
  ]
};
var assets_default108 = info295;

// node_modules/chain-registry/esm/mainnet/noble/chain.js
var info296 = {
  $schema: "../chain.schema.json",
  chain_name: "noble",
  chain_id: "noble-1",
  website: "https://nobleassets.xyz/",
  pretty_name: "Noble",
  status: "live",
  network_type: "mainnet",
  bech32_prefix: "noble",
  daemon_name: "nobled",
  node_home: "$HOME/.noble",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uusdc",
      fixed_min_gas_price: 0.1,
      low_gas_price: 0.1,
      average_gas_price: 0.1,
      high_gas_price: 0.2
    }, {
      denom: "ibc/EF48E6B1A1A19F47ECAEA62F5670C37C0580E86A9E88498B7E393EB6F49F33C0",
      fixed_min_gas_price: 0.01,
      low_gas_price: 0.01,
      average_gas_price: 0.01,
      high_gas_price: 0.02
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ustake"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "v0.45.16",
    cosmwasm_enabled: false
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/stake.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/stake.svg"
  },
  description: "The most reliable, secure, and frictionless way to natively issue a digital asset in Cosmos.",
  apis: {
    rpc: [{
      address: "https://noble-rpc.polkachu.com",
      provider: "polkachu"
    }, {
      address: "https://noble-rpc.lavenderfive.com:443",
      provider: "Lavender.Five Nodes \u{1F41D}"
    }],
    rest: [{
      address: "https://noble-api.polkachu.com",
      provider: "polkachu"
    }, {
      address: "https://noble-api.lavenderfive.com:443",
      provider: "Lavender.Five Nodes \u{1F41D}"
    }],
    grpc: [{
      address: "noble-grpc.polkachu.com:21590",
      provider: "polkachu"
    }, {
      address: "https://noble-grpc.lavenderfive.com:443",
      provider: "Lavender.Five Nodes \u{1F41D}"
    }]
  },
  explorers: [
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/noble",
      tx_page: "https://www.mintscan.io/noble/txs/${txHash}",
      account_page: "https://www.mintscan.io/noble/account/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/noble",
      tx_page: "https://ezstaking.app/noble/txs/${txHash}",
      account_page: "https://ezstaking.app/noble/account/${accountAddress}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/noble",
      account_page: "https://stakeflow.io/noble/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/stake.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/stake.svg"
  }]
};
var chain_default108 = info296;

// node_modules/chain-registry/esm/mainnet/noble/ibc.js
var info297 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-77",
      connection_id: "connection-72"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-32",
      connection_id: "connection-40"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-62",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-21",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-28",
      connection_id: "connection-31"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-17",
      connection_id: "connection-26"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-29",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "aura",
      client_id: "07-tendermint-43",
      connection_id: "connection-27"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-66",
      connection_id: "connection-63"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-41",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-32",
      connection_id: "connection-21"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-71",
      connection_id: "connection-72"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-19",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-49",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1116",
      connection_id: "connection-790"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-4",
      connection_id: "connection-12"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-536",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-68",
      connection_id: "connection-63"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-38",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-59",
      connection_id: "connection-57"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-33",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dymension",
      client_id: "07-tendermint-14",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-79",
      connection_id: "connection-80"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-62",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-106",
      connection_id: "connection-63"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-12",
      connection_id: "connection-19"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-64",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "furya",
      client_id: "07-tendermint-5",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-67",
      connection_id: "connection-64"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-42",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "haqq",
      client_id: "07-tendermint-4",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-58",
      connection_id: "connection-56"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-32",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "impacthub",
      client_id: "07-tendermint-59",
      connection_id: "connection-43"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-20",
      connection_id: "connection-29"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-26",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-212",
      connection_id: "connection-195"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-57",
      connection_id: "connection-55"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-148",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-31",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "joltify",
      client_id: "07-tendermint-4",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-102",
      connection_id: "connection-94"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-81",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-334",
      connection_id: "connection-322"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-3",
      connection_id: "connection-8"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-224",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-95",
      connection_id: "connection-65"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-2",
      connection_id: "connection-4"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-62",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "migaloo",
      client_id: "07-tendermint-113",
      connection_id: "connection-89"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-19",
      connection_id: "connection-28"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-60",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-40",
      connection_id: "connection-31"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-25",
      connection_id: "connection-34"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-30",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nibiru",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "noble",
      client_id: "07-tendermint-86",
      connection_id: "connection-86"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-67",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-68",
      connection_id: "connection-65"
    },
    chain_2: {
      chain_name: "omniflixhub",
      client_id: "07-tendermint-51",
      connection_id: "connection-49"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-44",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-38",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-98",
      connection_id: "connection-91"
    },
    chain_2: {
      chain_name: "onex",
      client_id: "07-tendermint-6",
      connection_id: "connection-14"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-78",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-60",
      connection_id: "connection-58"
    },
    chain_2: {
      chain_name: "oraichain",
      client_id: "07-tendermint-106",
      connection_id: "connection-83"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-34",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-147",
        port_id: "wasm.orai195269awwnt5m6c843q6w7hp8rt0k7syfu9de4h0wz384slshuzps8y7ccm"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "oraidex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-0",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2704",
      connection_id: "connection-2241"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-750",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-61",
      connection_id: "connection-59"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-160",
      connection_id: "connection-198"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-132",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-103",
      connection_id: "connection-95"
    },
    chain_2: {
      chain_name: "planq",
      client_id: "07-tendermint-567",
      connection_id: "connection-490"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-82",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-63",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-30",
      connection_id: "connection-37"
    },
    chain_2: {
      chain_name: "provenance",
      client_id: "07-tendermint-36",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-20",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-100",
      connection_id: "connection-92"
    },
    chain_2: {
      chain_name: "pryzm",
      client_id: "07-tendermint-5",
      connection_id: "connection-5"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-79",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-104",
      connection_id: "connection-96"
    },
    chain_2: {
      chain_name: "regen",
      client_id: "07-tendermint-177",
      connection_id: "connection-149"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-83",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-165",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-24",
      connection_id: "connection-33"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-170",
      connection_id: "connection-127"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-88",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-45",
      connection_id: "connection-61"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-45",
      connection_id: "connection-77"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-39",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-45",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-105",
      connection_id: "connection-97"
    },
    chain_2: {
      chain_name: "shido",
      client_id: "07-tendermint-8",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-84",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-16",
      connection_id: "connection-25"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-287",
      connection_id: "connection-214"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-204",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-76",
      connection_id: "connection-77"
    },
    chain_2: {
      chain_name: "teritori",
      client_id: "07-tendermint-97",
      connection_id: "connection-97"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-54",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-62",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-56",
      connection_id: "connection-54"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-367",
      connection_id: "connection-302"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-30",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-253",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-73",
      connection_id: "connection-74"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-248",
      connection_id: "connection-210"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-120",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default81 = info297;

// node_modules/chain-registry/esm/mainnet/noble/index.js
var assets108 = assets_default108;
var chain108 = chain_default108;
var ibc81 = ibc_default81;

// node_modules/chain-registry/esm/mainnet/nois/assets.js
var info298 = {
  $schema: "../assetlist.schema.json",
  chain_name: "nois",
  assets: [{
    description: "The native token of Nois",
    denom_units: [{
      denom: "unois",
      exponent: 0
    }, {
      denom: "nois",
      exponent: 6
    }],
    base: "unois",
    name: "Nois",
    display: "nois",
    symbol: "NOIS",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nois/images/nois.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nois/images/nois.svg"
    },
    keywords: [
      "nois",
      "randomness",
      "drand",
      "wasm"
    ],
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nois/images/nois.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nois/images/nois.svg"
    }]
  }]
};
var assets_default109 = info298;

// node_modules/chain-registry/esm/mainnet/nois/chain.js
var info299 = {
  $schema: "../chain.schema.json",
  chain_name: "nois",
  status: "live",
  network_type: "mainnet",
  website: "https://nois.network",
  pretty_name: "Nois",
  chain_id: "nois-1",
  bech32_prefix: "nois",
  daemon_name: "noisd",
  node_home: "$HOME/.noisd",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "unois",
      fixed_min_gas_price: 0.05,
      low_gas_price: 0.05,
      average_gas_price: 0.05,
      high_gas_price: 0.1
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "unois"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "v0.45.15",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.31.0"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nois/images/nois.png",
    theme: {
      primary_color_hex: "#0C0914"
    }
  }, {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nois/images/nois.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nois/images/nois.svg"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nois/images/nois.png"
  },
  apis: {
    rpc: [
      {
        address: "https://nois-rpc.nysa.network",
        provider: "nysa.network"
      },
      {
        address: "https://nois.rpc.bccnodes.com",
        provider: "BccNodes"
      },
      {
        address: "https://nois-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc-nois.mib.tech/",
        provider: "MadeInBlock"
      },
      {
        address: "https://m-nois.rpc.utsa.tech",
        provider: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}"
      },
      {
        address: "http://nois.rpc.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc-nois.ezstaking.dev",
        provider: "EZStaking"
      },
      {
        address: "https://nois-mainnet-rpc.itrocket.net",
        provider: "itrocket"
      },
      {
        address: "https://rpc-nois.d-stake.xyz",
        provider: "D-Stake"
      },
      {
        address: "https://rpc-nois.sr20de.xyz",
        provider: "SR20DE"
      },
      {
        address: "https://nois-mainnet-rpc.autostake.com",
        provider: "AutoStake"
      },
      {
        address: "https://nois-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://nois-rpc.kingnodes.com",
        provider: "kingnodes \u{1F451}"
      },
      {
        address: "https://rpc.nois.silentvalidator.com",
        provider: "silent"
      },
      {
        address: "https://nois-rpc.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://rpc.nois.cumulo.org.es",
        provider: "Cumulo"
      }
    ],
    grpc: [
      {
        address: "https://nois-grpc.nysa.network",
        provider: "nysa.network"
      },
      {
        address: "nois.grpc.bccnodes.com:443",
        provider: "BccNodes"
      },
      {
        address: "https://nois-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://grpc.noismain.mcbnode.online",
        provider: "mcbnode"
      },
      {
        address: "http://nois.grpc.m.stavr.tech:191",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "nois-mainnet-grpc.itrocket.net:36090",
        provider: "itrocket"
      },
      {
        address: "nois-mainnet-grpc.itrocket.net:36090",
        provider: "itrocket"
      },
      {
        address: "https://grpc.nois.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://grpc-nois.d-stake.xyz",
        provider: "D-Stake"
      },
      {
        address: "https://grpc.nois.hexnodes.co",
        provider: "HexNodes"
      },
      {
        address: "https://grpc-nois.sr20de.xyz",
        provider: "SR20DE"
      },
      {
        address: "https://nois-testnet-grpc.autostake.com",
        provider: "AutoStake"
      },
      {
        address: "nois-grpc.polkachu.com:17390",
        provider: "Polkachu"
      },
      {
        address: "https://nois-grpc.kingnodes.com",
        provider: "kingnodes \u{1F451}"
      },
      {
        address: "grpc.nois.silentvalidator.com:443",
        provider: "silent"
      },
      {
        address: "nois-grpc.stakeandrelax.net:17390",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "grpc.nois.cumulo.org.es:443",
        provider: "Cumulo"
      }
    ],
    rest: [
      {
        address: "https://m-nois.api.utsa.tech",
        provider: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}"
      },
      {
        address: "https://nois-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://lcd-nois.ezstaking.dev",
        provider: "EZStaking"
      },
      {
        address: "https://lcd-nois.mib.tech/",
        provider: "MadeInBlock"
      },
      {
        address: "https://nois.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://nois-mainnet-api.itrocket.net",
        provider: "itrocket"
      },
      {
        address: "https://api-nois.d-stake.xyz",
        provider: "D-Stake"
      },
      {
        address: "https://api-nois.sr20de.xyz",
        provider: "SR20DE"
      },
      {
        address: "https://nois-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://nois-rest.kingnodes.com",
        provider: "kingnodes \u{1F451}"
      },
      {
        address: "https://api.nois.silentvalidator.com",
        provider: "silent"
      },
      {
        address: "https://nois-api.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://api.nois.cumulo.org.es",
        provider: "Cumulo"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/nois",
      tx_page: "https://ezstaking.app/nois/txs/${txHash}",
      account_page: "https://ezstaking.app/nois/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/nois-mainnet",
      tx_page: "https://explorer.stavr.tech/nois-mainnet/txs/${txHash}",
      account_page: "https://explorer.stavr.tech/nois-mainnet/account/${accountAddress}"
    },
    {
      kind: "BccNodes",
      url: "https://explorer.stavr.tech/nois-mainnet",
      tx_page: "https://explorer.bccnodes.com/nois-M/txs/${txHash}",
      account_page: "https://explorer.bccnodes.com/nois-M/account/${accountAddress}"
    },
    {
      kind: "explorers.guru",
      url: "https://nois.explorers.guru",
      tx_page: "https://nois.explorers.guru/transaction/${txHash}",
      account_page: "https://nois.explorers.guru/account/${accountAddress}"
    }
  ],
  keywords: [
    "nois",
    "randomness",
    "drand",
    "wasm"
  ]
};
var chain_default109 = info299;

// node_modules/chain-registry/esm/mainnet/nois/ibc.js
var info300 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-22",
      connection_id: "connection-20"
    },
    chain_2: {
      chain_name: "nois",
      client_id: "07-tendermint-15",
      connection_id: "connection-9"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-21",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-19",
        port_id: "wasm.archway10f3aasgsnpv84ymjyld50jayc4ecu267sdpjamauwm8nvxlzex9qj4dkwr"
      },
      chain_2: {
        channel_id: "channel-22",
        port_id: "wasm.nois1acyc05v6fgcdgj88nmz2t40aex9nlnptqpwp5hf8hwg7rhce9uuqgqz5wp"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "aura",
      client_id: "07-tendermint-13",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "nois",
      client_id: "07-tendermint-4",
      connection_id: "connection-4"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-16",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-8",
        port_id: "wasm.aura1r3zgdsn3dcze07a4r60rxxx7ppvkxfshn9np0pwtkgarrld0786s72jtjt"
      },
      chain_2: {
        channel_id: "channel-35",
        port_id: "wasm.nois1acyc05v6fgcdgj88nmz2t40aex9nlnptqpwp5hf8hwg7rhce9uuqgqz5wp"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-201",
      connection_id: "connection-184"
    },
    chain_2: {
      chain_name: "nois",
      client_id: "07-tendermint-13",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-138",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-140",
        port_id: "wasm.inj1w9g3sk7lk8k0pdtctygupt6f3te7x4thvzz57a"
      },
      chain_2: {
        channel_id: "channel-20",
        port_id: "wasm.nois1acyc05v6fgcdgj88nmz2t40aex9nlnptqpwp5hf8hwg7rhce9uuqgqz5wp"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-335",
      connection_id: "connection-325"
    },
    chain_2: {
      chain_name: "nois",
      client_id: "07-tendermint-1",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-225",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-243",
        port_id: "wasm.juno1qr84ktm57q5t02u04ddk5r8s79axdzglad6tfdd9g2xgt4hkh6jsgeq9x2"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "wasm.nois1acyc05v6fgcdgj88nmz2t40aex9nlnptqpwp5hf8hwg7rhce9uuqgqz5wp"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-83",
      connection_id: "connection-62"
    },
    chain_2: {
      chain_name: "nois",
      client_id: "07-tendermint-20",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-722",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-47",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-1559",
        port_id: "wasm.neutron14cwv7d4lwc69zrjrzywwh8c9327m8dpngpq52f5kgqephhgrjc2s9ry3eu"
      },
      chain_2: {
        channel_id: "channel-48",
        port_id: "wasm.nois1acyc05v6fgcdgj88nmz2t40aex9nlnptqpwp5hf8hwg7rhce9uuqgqz5wp"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nois",
      client_id: "07-tendermint-16",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3017",
      connection_id: "connection-2507"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-8277",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }, {
      chain_1: {
        channel_id: "channel-11319",
        port_id: "wasm.osmo1tvzr8ur0ynjhqftxpkl4qwel8ly7erhy6cu6ks426xmzf92vk6eqfp9wcl"
      },
      chain_2: {
        channel_id: "channel-41",
        port_id: "wasm.nois1acyc05v6fgcdgj88nmz2t40aex9nlnptqpwp5hf8hwg7rhce9uuqgqz5wp"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nois",
      client_id: "07-tendermint-19",
      connection_id: "connection-11"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-106",
      connection_id: "connection-144"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-43",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-58",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-44",
        port_id: "wasm.nois1acyc05v6fgcdgj88nmz2t40aex9nlnptqpwp5hf8hwg7rhce9uuqgqz5wp"
      },
      chain_2: {
        channel_id: "channel-59",
        port_id: "wasm.sei1vxlzhn6qvf95syha2tgr0ct23sk5359s2vqzylgthuyy7kd7ql5qcxa4r0"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nois",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-237",
      connection_id: "connection-171"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-137",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }, {
      chain_1: {
        channel_id: "channel-238",
        port_id: "wasm.stars1mw5y55f53mnara7g3pn2pylxl8dpauscyn83c68442hz9nwktzrq8tjzyf"
      },
      chain_2: {
        channel_id: "channel-38",
        port_id: "wasm.nois1acyc05v6fgcdgj88nmz2t40aex9nlnptqpwp5hf8hwg7rhce9uuqgqz5wp"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default82 = info300;

// node_modules/chain-registry/esm/mainnet/nois/index.js
var assets109 = assets_default109;
var chain109 = chain_default109;
var ibc82 = ibc_default82;

// node_modules/chain-registry/esm/mainnet/nolus/assets.js
var info301 = {
  $schema: "../assetlist.schema.json",
  chain_name: "nolus",
  assets: [
    {
      description: "The native token of Nolus chain",
      denom_units: [{
        denom: "unls",
        exponent: 0
      }, {
        denom: "nls",
        exponent: 6
      }],
      base: "unls",
      name: "Nolus",
      display: "nls",
      symbol: "NLS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nolus/images/nolus.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nolus/images/nolus.svg"
      },
      coingecko_id: "nolus",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nolus/images/nolus.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nolus/images/nolus.svg"
      }],
      socials: {
        website: "https://nolus.io/",
        twitter: "https://twitter.com/NolusProtocol"
      }
    },
    {
      description: "axlUSDC transferred from the Osmosis mainnet that is supported on the Nolus chain",
      denom_units: [{
        denom: "ibc/7FBDBEEEBA9C50C4BCDF7BF438EAB99E64360833D240B32655C96E319559E911",
        exponent: 0,
        aliases: ["uusdc"]
      }, {
        denom: "usdc",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/7FBDBEEEBA9C50C4BCDF7BF438EAB99E64360833D240B32655C96E319559E911",
      name: "axlUSDC",
      display: "usdc",
      symbol: "axlUSDC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858",
          channel_id: "channel-783"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/transfer/channel-208/uusdc"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.axl.svg"
      }, {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.axl.svg"
      }
    },
    {
      description: "OSMO transferred from the Osmosis mainnet that is supported on the Nolus chain",
      denom_units: [{
        denom: "ibc/ED07A3391A112B175915CD8FAF43A2DA8E4790EDE12566649D0C2F97716B8518",
        exponent: 0,
        aliases: ["uosmo"]
      }, {
        denom: "osmo",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/ED07A3391A112B175915CD8FAF43A2DA8E4790EDE12566649D0C2F97716B8518",
      name: "Osmosis",
      display: "osmo",
      symbol: "OSMO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "uosmo",
          channel_id: "channel-783"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/uosmo"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "uosmo"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      }
    },
    {
      description: "stOSMO transferred from the Osmosis mainnet that is supported on the Nolus chain",
      denom_units: [{
        denom: "ibc/AF5559D128329B6C753F15481BEC26E533B847A471074703FA4903E7E6F61BA1",
        exponent: 0,
        aliases: ["stuosmo"]
      }, {
        denom: "stosmo",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/AF5559D128329B6C753F15481BEC26E533B847A471074703FA4903E7E6F61BA1",
      name: "Osmosis",
      display: "stosmo",
      symbol: "stOSMO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/D176154B0C63D1F9C6DCFB4F70349EBF2E2B5A87A05902F57A6AE92B863E9AEC",
          channel_id: "channel-783"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/transfer/channel-326/stuosmo"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/D176154B0C63D1F9C6DCFB4F70349EBF2E2B5A87A05902F57A6AE92B863E9AEC"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.svg"
      }
    },
    {
      description: "ATOM transferred from the Osmosis mainnet that is supported on the Nolus chain",
      denom_units: [{
        denom: "ibc/6CDD4663F2F09CD62285E2D45891FC149A3568E316CE3EBBE201A71A78A69388",
        exponent: 0,
        aliases: ["uatom"]
      }, {
        denom: "atom",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/6CDD4663F2F09CD62285E2D45891FC149A3568E316CE3EBBE201A71A78A69388",
      name: "Atom",
      display: "atom",
      symbol: "ATOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2",
          channel_id: "channel-783"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/transfer/channel-0/uatom"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }
    },
    {
      description: "stATOM transferred from the Osmosis mainnet that is supported on the Nolus chain",
      denom_units: [{
        denom: "ibc/FCFF8B19C61677F3B78E2A5AE3B4A34A8D23858D16905F253B8438B3AFD07FF8",
        exponent: 0,
        aliases: ["ustatom"]
      }, {
        denom: "statom",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/FCFF8B19C61677F3B78E2A5AE3B4A34A8D23858D16905F253B8438B3AFD07FF8",
      name: "stATOM",
      display: "statom",
      symbol: "stATOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/C140AFD542AE77BD7DCC83F13FDD8C5E5BB8C4929785E6EC2F4C636F98F17901",
          channel_id: "channel-783"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/transfer/channel-326/stuatom"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/C140AFD542AE77BD7DCC83F13FDD8C5E5BB8C4929785E6EC2F4C636F98F17901"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.svg"
      }
    },
    {
      description: "WETH transferred from the Osmosis mainnet that is supported on the Nolus chain",
      denom_units: [{
        denom: "ibc/A7C4A3FB19E88ABE60416125F9189DA680800F4CDD14E3C10C874E022BEFF04C",
        exponent: 0,
        aliases: ["weth-wei"]
      }, {
        denom: "weth",
        exponent: 18,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/A7C4A3FB19E88ABE60416125F9189DA680800F4CDD14E3C10C874E022BEFF04C",
      name: "WETH",
      display: "weth",
      symbol: "WETH",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/EA1D43981D5C9A1C4AAEA9C23BB1D4FA126BA9BC7020A25E0AE4AA841EA25DC5",
          channel_id: "channel-783"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/transfer/channel-208/weth-wei"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/EA1D43981D5C9A1C4AAEA9C23BB1D4FA126BA9BC7020A25E0AE4AA841EA25DC5"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.svg"
      }, {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/weth.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.svg"
      }
    },
    {
      description: "WBTC transferred from the Osmosis mainnet that is supported on the Nolus chain",
      denom_units: [{
        denom: "ibc/84E70F4A34FB2DE135FD3A04FDDF53B7DA4206080AA785C8BAB7F8B26299A221",
        exponent: 0,
        aliases: ["wbtc-satoshi"]
      }, {
        denom: "wbtc",
        exponent: 8,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/84E70F4A34FB2DE135FD3A04FDDF53B7DA4206080AA785C8BAB7F8B26299A221",
      name: "WBTC",
      display: "wbtc",
      symbol: "WBTC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/D1542AA8762DB13087D8364F3EA6509FD6F009A34F00426AF9E4F9FA85CBBF1F",
          channel_id: "channel-783"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/transfer/channel-208/wbtc-satoshi"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/D1542AA8762DB13087D8364F3EA6509FD6F009A34F00426AF9E4F9FA85CBBF1F"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wbtc.axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wbtc.axl.svg"
      }, {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/wbtc.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wbtc.axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wbtc.axl.svg"
      }
    },
    {
      description: "AKT transferred from the Osmosis mainnet that is supported on the Nolus chain",
      denom_units: [{
        denom: "ibc/ADC63C00000CA75F909D2BE3ACB5A9980BED3A73B92746E0FCE6C67414055459",
        exponent: 0,
        aliases: ["uakt"]
      }, {
        denom: "akt",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/ADC63C00000CA75F909D2BE3ACB5A9980BED3A73B92746E0FCE6C67414055459",
      name: "AKT",
      display: "akt",
      symbol: "AKT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/1480B8FD20AD5FCAE81EA87584D269547DD4D436843C1D20F15E00EB64743EF4",
          channel_id: "channel-783"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/transfer/channel-1/uakt"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/1480B8FD20AD5FCAE81EA87584D269547DD4D436843C1D20F15E00EB64743EF4"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.svg"
      }
    },
    {
      description: "AXL transferred from the Osmosis mainnet that is supported on the Nolus chain",
      denom_units: [{
        denom: "ibc/1B03A71B8E6F6EF424411DC9326A8E0D25D096E4D2616425CFAF2AF06F0FE717",
        exponent: 0,
        aliases: ["uaxl"]
      }, {
        denom: "axl",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/1B03A71B8E6F6EF424411DC9326A8E0D25D096E4D2616425CFAF2AF06F0FE717",
      name: "AXL",
      display: "axl",
      symbol: "AXL",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/903A61A498756EA560B85A85132D3AEE21B5DEDD41213725D22ABF276EA6945E",
          channel_id: "channel-783"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/transfer/channel-208/uaxl"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/903A61A498756EA560B85A85132D3AEE21B5DEDD41213725D22ABF276EA6945E"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.svg"
      }
    },
    {
      description: "JUNO transferred from the Osmosis mainnet that is supported on the Nolus chain",
      denom_units: [{
        denom: "ibc/4F3E83AB35529435E4BFEA001F5D935E7250133347C4E1010A9C77149EF0394C",
        exponent: 0,
        aliases: ["ujuno"]
      }, {
        denom: "juno",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/4F3E83AB35529435E4BFEA001F5D935E7250133347C4E1010A9C77149EF0394C",
      name: "JUNO",
      display: "juno",
      symbol: "JUNO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/46B44899322F3CD854D2D46DEEF881958467CDD4B3B10086DA49296BBED94BED",
          channel_id: "channel-783"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/transfer/channel-42/ujuno"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/46B44899322F3CD854D2D46DEEF881958467CDD4B3B10086DA49296BBED94BED"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.svg"
      }
    },
    {
      description: "EVMOS transferred from the Osmosis mainnet that is supported on the Nolus chain",
      denom_units: [{
        denom: "ibc/A59A9C955F1AB8B76671B00C1A0482C64A6590352944BB5880E5122358F7E1CE",
        exponent: 0,
        aliases: ["aevmos"]
      }, {
        denom: "evmos",
        exponent: 18,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/A59A9C955F1AB8B76671B00C1A0482C64A6590352944BB5880E5122358F7E1CE",
      name: "EVMOS",
      display: "evmos",
      symbol: "EVMOS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/6AE98883D4D5D5FF9E50D7130F1305DA2FFA0C652D1DD9C123657C6B4EB2DF8A",
          channel_id: "channel-783"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/transfer/channel-204/aevmos"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/6AE98883D4D5D5FF9E50D7130F1305DA2FFA0C652D1DD9C123657C6B4EB2DF8A"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.svg"
      }
    },
    {
      description: "stkATOM transferred from the Osmosis mainnet that is supported on the Nolus chain",
      denom_units: [{
        denom: "ibc/DAAD372DB7DD45BBCFA4DDD40CA9793E9D265D1530083AB41A8A0C53C3EBE865",
        exponent: 0,
        aliases: ["stk/uatom"]
      }, {
        denom: "stk/atom",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/DAAD372DB7DD45BBCFA4DDD40CA9793E9D265D1530083AB41A8A0C53C3EBE865",
      name: "stkATOM",
      display: "stk/atom",
      symbol: "stkATOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/CAA179E40F0266B0B29FB5EAA288FB9212E628822265D4141EBD1C47C3CBFCBC",
          channel_id: "channel-783"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/transfer/channel-4/stk/uatom"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/CAA179E40F0266B0B29FB5EAA288FB9212E628822265D4141EBD1C47C3CBFCBC"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.svg"
      }
    },
    {
      description: "SCRT transferred from the Osmosis mainnet that is supported on the Nolus chain",
      denom_units: [{
        denom: "ibc/EA00FFF0335B07B5CD1530B7EB3D2C710620AE5B168C71AFF7B50532D690E107",
        exponent: 0,
        aliases: ["uscrt"]
      }, {
        denom: "scrt",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/EA00FFF0335B07B5CD1530B7EB3D2C710620AE5B168C71AFF7B50532D690E107",
      name: "SCRT",
      display: "scrt",
      symbol: "SCRT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/0954E1C28EB7AF5B72D24F3BC2B47BBB2FDF91BDDFD57B74B99E133AED40972A",
          channel_id: "channel-783"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/transfer/channel-88/uscrt"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/0954E1C28EB7AF5B72D24F3BC2B47BBB2FDF91BDDFD57B74B99E133AED40972A"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.svg"
      }
    },
    {
      description: "CRO transferred from the Osmosis mainnet that is supported on the Nolus chain",
      denom_units: [{
        denom: "ibc/E1BCC0F7B932E654B1A930F72B76C0678D55095387E2A4D8F00E941A8F82EE48",
        exponent: 0,
        aliases: ["basecro"]
      }, {
        denom: "cro",
        exponent: 8,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/E1BCC0F7B932E654B1A930F72B76C0678D55095387E2A4D8F00E941A8F82EE48",
      name: "CRO",
      display: "cro",
      symbol: "CRO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/E6931F78057F7CC5DA0FD6CEF82FF39373A6E0452BF1FD76910B93292CF356C1",
          channel_id: "channel-783"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/transfer/channel-5/basecro"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/E6931F78057F7CC5DA0FD6CEF82FF39373A6E0452BF1FD76910B93292CF356C1"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cronos/images/cro.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cronos/images/cro.svg"
      }
    },
    {
      description: "STARS transferred from the Osmosis mainnet that is supported on the Nolus chain",
      denom_units: [{
        denom: "ibc/11E3CF372E065ACB1A39C531A3C7E7E03F60B5D0653AD2139D31128ACD2772B5",
        exponent: 0,
        aliases: ["ustars"]
      }, {
        denom: "stars",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/11E3CF372E065ACB1A39C531A3C7E7E03F60B5D0653AD2139D31128ACD2772B5",
      name: "STARS",
      display: "stars",
      symbol: "STARS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4",
          channel_id: "channel-783"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/transfer/channel-75/ustars"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.svg"
      }
    },
    {
      description: "TIA transferred from the Osmosis mainnet that is supported on the Nolus chain",
      denom_units: [{
        denom: "ibc/6C349F0EB135C5FA99301758F35B87DB88403D690E5E314AB080401FEE4066E5",
        exponent: 0,
        aliases: ["utia"]
      }, {
        denom: "tia",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/6C349F0EB135C5FA99301758F35B87DB88403D690E5E314AB080401FEE4066E5",
      name: "TIA",
      display: "tia",
      symbol: "TIA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/D79E7D83AB399BFFF93433E54FAA480C191248FC556924A2A8351AE2638B3877",
          channel_id: "channel-783"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/transfer/channel-6994/utia"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/D79E7D83AB399BFFF93433E54FAA480C191248FC556924A2A8351AE2638B3877"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.svg"
      }
    },
    {
      description: "STRD transferred from the Osmosis mainnet that is supported on the Nolus chain",
      denom_units: [{
        denom: "ibc/04CA9067228BB51F1C39A506DA00DF07E1496D8308DD21E8EF66AD6169FA722B",
        exponent: 0,
        aliases: ["ustrd"]
      }, {
        denom: "strd",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/04CA9067228BB51F1C39A506DA00DF07E1496D8308DD21E8EF66AD6169FA722B",
      name: "STRD",
      display: "strd",
      symbol: "STRD",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/A8CA5EE328FA10C9519DF6057DA1F69682D28F7D0F5CCC7ECB72E3DCA2D157A4",
          channel_id: "channel-783"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/transfer/channel-326/ustrd"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/A8CA5EE328FA10C9519DF6057DA1F69682D28F7D0F5CCC7ECB72E3DCA2D157A4"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.svg"
      }
    },
    {
      description: "NTRN transferred from the Neutron mainnet that is supported on the Nolus chain",
      denom_units: [{
        denom: "ibc/3D6BC6E049CAEB905AC97031A42800588C58FB471EBDC7A3530FFCD0C3DC9E09",
        exponent: 0,
        aliases: ["untrn"]
      }, {
        denom: "ntrn",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/3D6BC6E049CAEB905AC97031A42800588C58FB471EBDC7A3530FFCD0C3DC9E09",
      name: "NTRN",
      display: "ntrn",
      symbol: "NTRN",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "neutron",
          base_denom: "untrn",
          channel_id: "channel-44"
        },
        chain: {
          channel_id: "channel-3839",
          path: "transfer/channel-3839/untrn"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "neutron",
          base_denom: "untrn"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/ntrn.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/ntrn.svg"
      }, {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/neutron.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/neutron.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/ntrn.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/ntrn.svg"
      }
    },
    {
      description: "DYDX transferred from the Neutron mainnet that is supported on the Nolus chain",
      denom_units: [{
        denom: "ibc/6DF8CF5C976851D152E2C7270B0AB25C4F9D64C0A46513A68D6CBB2662A98DF4",
        exponent: 0,
        aliases: ["adydx"]
      }, {
        denom: "dydx",
        exponent: 18,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/6DF8CF5C976851D152E2C7270B0AB25C4F9D64C0A46513A68D6CBB2662A98DF4",
      name: "DYDX",
      display: "dydx",
      symbol: "DYDX",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "neutron",
          base_denom: "ibc/2CB87BCE0937B1D1DFCEE79BE4501AAF3C265E923509AEAC410AD85D27F35130",
          channel_id: "channel-44"
        },
        chain: {
          channel_id: "channel-3839",
          path: "transfer/channel-3839/transfer/channel-48/adydx"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "neutron",
          base_denom: "ibc/2CB87BCE0937B1D1DFCEE79BE4501AAF3C265E923509AEAC410AD85D27F35130"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.svg"
      }
    }
  ]
};
var assets_default110 = info301;

// node_modules/chain-registry/esm/mainnet/nolus/chain.js
var info302 = {
  $schema: "../chain.schema.json",
  chain_name: "nolus",
  status: "live",
  website: "https://nolus.io/",
  network_type: "mainnet",
  pretty_name: "Nolus",
  chain_id: "pirin-1",
  bech32_prefix: "nolus",
  daemon_name: "nolusd",
  node_home: "$HOME/.nolus",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "unls",
      fixed_min_gas_price: 0.025,
      low_gas_price: 0.025,
      average_gas_price: 0.025,
      high_gas_price: 0.05
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "unls"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "nolus-protocol/cosmos-sdk v0.47.8-nolus",
    cosmwasm_enabled: true,
    cosmwasm_version: "neutron-org/wasmd v0.45.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nolus/images/nolus.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nolus/images/nolus.svg"
  },
  description: "Elevate your game with up to 3x equity. Dive into a world of minimized risks and unlock the full potential of your assets.",
  apis: {
    rpc: [
      {
        address: "https://pirin-cl.nolus.network:26657",
        provider: "NolusProtocol"
      },
      {
        address: "https://nolus-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://nolus-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://nolus.rpc.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "https://rpc-nolus.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "https://nolus.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://nolus-rpc.enigma-validator.com/",
        provider: "Enigma"
      },
      {
        address: "https://nolus-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://rpc-nolus.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://nolus-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://nolus-rpc.ibs.team",
        provider: "Inter Blockchain Services"
      }
    ],
    rest: [
      {
        address: "https://pirin-cl.nolus.network:1317",
        provider: "NolusProtocol"
      },
      {
        address: "https://nolus-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://nolus-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://api-nolus.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://nolus.api.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "https://rest-nolus.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "https://nolus.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://nolus-lcd.enigma-validator.com/",
        provider: "Enigma"
      },
      {
        address: "https://nolus-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://nolus-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://nolus-api.ibs.team",
        provider: "Inter Blockchain Services"
      }
    ],
    grpc: [
      {
        address: "https://pirin-cl.nolus.network:9090",
        provider: "NolusProtocol"
      },
      {
        address: "nolus-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://nolus-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://nolus.grpc.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "grpc-nolus.architectnodes.com:1443",
        provider: "Architect Nodes"
      },
      {
        address: "grpc-nolus.cosmos-spaces.cloud:1190",
        provider: "Cosmos Spaces"
      },
      {
        address: "nolus.grpc.kjnodes.com:14390",
        provider: "kjnodes"
      },
      {
        address: "nolus-grpc.w3coins.io:19790",
        provider: "w3coins"
      },
      {
        address: "nolus-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ]
  },
  explorers: [
    {
      kind: "Nolus Explorer",
      url: "https://explorer.nolus.io/pirin-1",
      tx_page: "https://explorer.nolus.io/pirin-1/tx/${txHash}",
      account_page: "https://explorer.nolus.io/pirin-1/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/nolus",
      tx_page: "https://ping.pub/nolus/tx/${txHash}",
      account_page: "https://ping.pub/nolus/account/${accountAddress}"
    },
    {
      kind: "NODEXPLORER",
      url: "https://explorer.nodexcapital.com/nolus",
      tx_page: "https://explorer.nodexcapital.com/nolus/tx/${txHash}",
      account_page: "https://explorer.nodexcapital.com/nolus/account/${accountAddress}"
    },
    {
      kind: "Nodes Guru Explorer",
      url: "https://nolus.explorers.guru",
      tx_page: "https://nolus.explorers.guru/transaction/${txHash}"
    },
    {
      kind: "KJ Nodes Explorer",
      url: "https://explorer.kjnodes.com/nolus",
      tx_page: "https://explorer.kjnodes.com/nolus/tx/${txHash}",
      account_page: "https://explorer.kjnodes.com/nolus/account/${accountAddress}"
    }
  ],
  keywords: ["mainnet"],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nolus/images/nolus.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nolus/images/nolus.svg"
  }]
};
var chain_default110 = info302;

// node_modules/chain-registry/esm/mainnet/nolus/ibc.js
var info303 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "doravota",
      client_id: "07-tendermint-13",
      connection_id: "connection-5"
    },
    chain_2: {
      chain_name: "nolus",
      client_id: "07-tendermint-14",
      connection_id: "connection-12"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4092",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-71",
      connection_id: "connection-50"
    },
    chain_2: {
      chain_name: "nolus",
      client_id: "07-tendermint-13",
      connection_id: "connection-11"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-44",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3839",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nolus",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2791",
      connection_id: "connection-2289"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-783",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nolus",
      client_id: "07-tendermint-18",
      connection_id: "connection-14"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-201",
      connection_id: "connection-193"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13995",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-146",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default83 = info303;

// node_modules/chain-registry/esm/mainnet/nolus/index.js
var assets110 = assets_default110;
var chain110 = chain_default110;
var ibc83 = ibc_default83;

// node_modules/chain-registry/esm/mainnet/nomic/assets.js
var info304 = {
  $schema: "../assetlist.schema.json",
  chain_name: "nomic",
  assets: [{
    description: "Nomic's native token.",
    denom_units: [{
      denom: "unom",
      exponent: 0
    }, {
      denom: "nom",
      exponent: 6
    }],
    base: "unom",
    name: "Nomic",
    display: "nom",
    symbol: "NOM",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nom.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nom.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nom.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nom.svg"
    }]
  }, {
    description: "Bitcoin. On Cosmos.",
    denom_units: [{
      denom: "usat",
      exponent: 0
    }, {
      denom: "nbtc",
      exponent: 14
    }],
    base: "usat",
    name: "Nomic Bitcoin",
    display: "nbtc",
    symbol: "nBTC",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nbtc.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nbtc.svg"
    },
    traces: [{
      type: "bridge",
      counterparty: {
        chain_name: "bitcoin",
        base_denom: "sat"
      },
      provider: "Nomic"
    }],
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nbtc.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nbtc.svg"
    }]
  }]
};
var assets_default111 = info304;

// node_modules/chain-registry/esm/mainnet/nomic/chain.js
var info305 = {
  $schema: "../chain.schema.json",
  chain_name: "nomic",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Nomic",
  website: "https://nomic.io/",
  chain_id: "nomic-stakenet-3",
  bech32_prefix: "nomic",
  daemon_name: "nomic",
  node_home: "$HOME/.nomic-stakenet-3",
  slip44: 118,
  key_algos: ["secp256k1"],
  fees: {
    fee_tokens: [{
      denom: "unom",
      low_gas_price: 0,
      average_gas_price: 0,
      high_gas_price: 0
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "unom"
    }],
    lock_duration: {
      time: "1209600s"
    }
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nom.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nom.svg"
  },
  description: "The superior way to use Bitcoin in Cosmos DeFi. Use IBC to securely and efficiently bridge your BTC to Osmosis and more.",
  apis: {
    rpc: [
      {
        address: "https://stakenet-rpc.nomic.io:2096",
        provider: "nomic-io"
      },
      {
        address: "https://nomic-rpc.polkachu.com/",
        provider: "Polkachu"
      },
      {
        address: "https://rpc-nomic.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://rpc.nomic.basementnodes.ca:443",
        provider: "Basement Nodes \u26A1\uFE0F"
      },
      {
        address: "https://rpc.nomic.bronbro.io:443",
        provider: "Bro_n_Bro"
      }
    ],
    rest: [{
      address: "https://app.nomic.io:8443",
      provider: "nomic-io"
    }]
  },
  explorers: [
    {
      kind: "bigdipper",
      url: "https://bigdipper.live/nomic",
      account_page: "https://bigdipper.live/nomic/accounts/${accountAddress}",
      tx_page: "https://bigdipper.live/nomic/transactions/${txHash}"
    },
    {
      kind: "Zenscan.io",
      url: "https://nomic.zenscan.io/index.php",
      account_page: "https://nomic.zenscan.io/address.php?address=${accountAddress}",
      tx_page: "https://nomic.zenscan.io/transaction.php?hash=${txHash}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/nomic",
      tx_page: "https://mainnet.whispernode.com/nomic/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/nomic/account/${accountAddress}"
    }
  ],
  images: [{
    image_sync: {
      chain_name: "nomic",
      base_denom: "unom"
    },
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nom.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nom.svg"
  }],
  bech32_config: {
    bech32PrefixAccAddr: "nomic",
    bech32PrefixAccPub: "nomic",
    bech32PrefixConsAddr: "nomic",
    bech32PrefixConsPub: "nomic",
    bech32PrefixValAddr: "nomic",
    bech32PrefixValPub: "nomic"
  }
};
var chain_default111 = info305;

// node_modules/chain-registry/esm/mainnet/nomic/ibc.js
var info306 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-156",
      connection_id: "connection-120"
    },
    chain_2: {
      chain_name: "nomic",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-116",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-64",
      connection_id: "connection-44"
    },
    chain_2: {
      chain_name: "nomic",
      client_id: "07-tendermint-3",
      connection_id: "connection-3"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-42",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nomic",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3010",
      connection_id: "connection-2501"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6897",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  }
];
var ibc_default84 = info306;

// node_modules/chain-registry/esm/mainnet/nomic/index.js
var assets111 = assets_default111;
var chain111 = chain_default111;
var ibc84 = ibc_default84;

// node_modules/chain-registry/esm/mainnet/nyx/assets.js
var info307 = {
  $schema: "../assetlist.schema.json",
  chain_name: "nyx",
  assets: [{
    description: "NYX Token (NYX) is the Nym Network's native staking and governance token.",
    denom_units: [{
      denom: "unyx",
      exponent: 0
    }, {
      denom: "nyx",
      exponent: 6
    }],
    base: "unyx",
    name: "NYX",
    display: "nyx",
    symbol: "NYX",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyx/images/nyx.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyx/images/nyx.png"
    }]
  }, {
    description: "NYM Token (NYM) is the Nym Network's native utility token, used as the primary means to incentivize mixnet node operators.",
    denom_units: [{
      denom: "unym",
      exponent: 0
    }, {
      denom: "nym",
      exponent: 6
    }],
    base: "unym",
    name: "NYM",
    display: "nym",
    symbol: "NYM",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyx/images/nym_token_light.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyx/images/nym_token_light.svg"
    },
    coingecko_id: "nym",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyx/images/nym_token_light.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyx/images/nym_token_light.svg",
      theme: {
        dark_mode: false,
        circle: true
      }
    }, {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyx/images/nym_token_dark.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyx/images/nym_token_dark.svg",
      theme: {
        dark_mode: true,
        circle: true
      }
    }]
  }]
};
var assets_default112 = info307;

// node_modules/chain-registry/esm/mainnet/nyx/chain.js
var info308 = {
  $schema: "../chain.schema.json",
  chain_name: "nyx",
  status: "live",
  network_type: "mainnet",
  website: "https://nymtech.net/",
  pretty_name: "Nym",
  chain_id: "nyx",
  bech32_prefix: "n",
  daemon_name: "nyxd",
  node_home: "$HOME/.nyxd",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "unym",
      fixed_min_gas_price: 0.025,
      low_gas_price: 0.025,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }, {
      denom: "unyx",
      fixed_min_gas_price: 0.025,
      low_gas_price: 0.025,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "unyx"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmwasm_enabled: true
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyx/images/nym_token_light.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyx/images/nym_token_light.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.nymtech.net/",
        provider: "Nym"
      },
      {
        address: "https://rpc.nyx.nodes.guru/",
        provider: "nodes guru"
      },
      {
        address: "https://rpc.nym.forbole.com/",
        provider: "forbole"
      },
      {
        address: "https://nym-mainnet-rpc.commodum.io/",
        provider: "commodum"
      },
      {
        address: "https://nym-rpc.polkachu.com/",
        provider: "Polkachu"
      }
    ],
    rest: [
      {
        address: "https://nym-api.polkachu.com/",
        provider: "Polkachu"
      },
      {
        address: "https://api.nyx.nodes.guru/",
        provider: "nodes guru"
      },
      {
        address: "https://api.nymtech.net",
        provider: "Nym"
      }
    ],
    grpc: [{
      address: "nym-grpc.polkachu.com:15390",
      provider: "Polkachu"
    }, {
      address: "grpc.nymtech.net:443",
      provider: "Nym"
    }]
  },
  explorers: [
    {
      kind: "Nodes Guru explorer",
      url: "https://nym.explorers.guru/",
      tx_page: "https://nym.explorers.guru/transaction/${txHash}",
      account_page: "https://nym.explorers.guru/account/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/nyx",
      tx_page: "https://ezstaking.app/nyx/txs/${txHash}",
      account_page: "https://ezstaking.app/nyx/account/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/nyx",
      tx_page: "https://www.mintscan.io/nyx/transactions/${txHash}",
      account_page: "https://www.mintscan.io/nyx/accounts/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/nyx",
      tx_page: "https://ping.pub/nyx/tx/${txHash}"
    }
  ],
  images: [
    {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyx/images/nym_token_light.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyx/images/nym_token_light.svg",
      theme: {
        dark_mode: false,
        circle: true
      }
    },
    {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyx/images/nym_token_dark.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyx/images/nym_token_dark.svg",
      theme: {
        dark_mode: true,
        circle: true
      }
    },
    {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyx/images/nym_token_light.png"
    }
  ]
};
var chain_default112 = info308;

// node_modules/chain-registry/esm/mainnet/nyx/ibc.js
var info309 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "gravitybridge",
    client_id: "07-tendermint-33",
    connection_id: "connection-44"
  },
  chain_2: {
    chain_name: "nyx",
    client_id: "07-tendermint-1",
    connection_id: "connection-0"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-18",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "nyx",
    client_id: "07-tendermint-17",
    connection_id: "connection-8"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-3065",
    connection_id: "connection-2555"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-8",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-15464",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default85 = info309;

// node_modules/chain-registry/esm/mainnet/nyx/index.js
var assets112 = assets_default112;
var chain112 = chain_default112;
var ibc85 = ibc_default85;

// node_modules/chain-registry/esm/mainnet/octa/assets.js
var info310 = {
  $schema: "../assetlist.schema.json",
  chain_name: "octa",
  assets: [{
    description: "The native token of Octa Chain",
    denom_units: [{
      denom: "uocta",
      exponent: 0,
      aliases: []
    }, {
      denom: "octa",
      exponent: 6,
      aliases: []
    }],
    base: "uocta",
    display: "octa",
    name: "Octa",
    symbol: "OCTA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/octa/images/octa.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/octa/images/octa.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/octa/images/octa.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/octa/images/octa.svg"
    }]
  }]
};
var assets_default113 = info310;

// node_modules/chain-registry/esm/mainnet/octa/chain.js
var info311 = {
  $schema: "../chain.schema.json",
  chain_name: "octa",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Octa",
  chain_id: "octa",
  bech32_prefix: "octa",
  daemon_name: "octadaemon",
  node_home: "$HOME/.octa",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uocta",
      fixed_min_gas_price: 0
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/octa/images/octa.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/octa/images/octa.svg"
  },
  apis: {
    rpc: [],
    rest: []
  },
  explorers: [{
    kind: "Octa explorer",
    url: "http://explorer.octa-coin.com/",
    tx_page: "http://explorer.octa-coin.com/txs/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/octa/images/octa.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/octa/images/octa.svg"
  }]
};
var chain_default113 = info311;

// node_modules/chain-registry/esm/mainnet/octa/index.js
var assets113 = assets_default113;
var chain113 = chain_default113;

// node_modules/chain-registry/esm/mainnet/odin/assets.js
var info312 = {
  $schema: "../assetlist.schema.json",
  chain_name: "odin",
  assets: [
    {
      description: "Staking and governance token for ODIN Protocol",
      denom_units: [{
        denom: "loki",
        exponent: 0
      }, {
        denom: "odin",
        exponent: 6
      }],
      base: "loki",
      name: "ODIN",
      display: "odin",
      symbol: "ODIN",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/odin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/odin.svg"
      },
      coingecko_id: "odin-protocol",
      images: [{
        image_sync: {
          chain_name: "odin",
          base_denom: "loki"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/odin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/odin.svg"
      }]
    },
    {
      description: "GEO token for ODIN Protocol",
      denom_units: [{
        denom: "mGeo",
        exponent: 0
      }, {
        denom: "geo",
        exponent: 6
      }],
      base: "mGeo",
      name: "GEO",
      display: "geo",
      symbol: "GEO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/geo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/geo.svg"
      },
      images: [{
        image_sync: {
          chain_name: "odin",
          base_denom: "mGeo"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/geo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/geo.svg"
      }]
    },
    {
      description: "O9W token for ODIN Protocol",
      denom_units: [{
        denom: "mO9W",
        exponent: 0
      }, {
        denom: "O9W",
        exponent: 6
      }],
      base: "mO9W",
      name: "O9W",
      display: "O9W",
      symbol: "O9W",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/o9w.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/o9w.svg"
      },
      images: [{
        image_sync: {
          chain_name: "odin",
          base_denom: "mO9W"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/o9w.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/o9w.svg"
      }]
    }
  ]
};
var assets_default114 = info312;

// node_modules/chain-registry/esm/mainnet/odin/chain.js
var info313 = {
  $schema: "../chain.schema.json",
  chain_name: "odin",
  status: "killed",
  network_type: "mainnet",
  website: "https://odinprotocol.io/",
  pretty_name: "Odin Protocol",
  chain_id: "odin-mainnet-freya",
  bech32_prefix: "odin",
  daemon_name: "odind",
  node_home: "$HOME/.odin",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "loki",
      fixed_min_gas_price: 0.0125,
      low_gas_price: 0.025,
      average_gas_price: 0.05,
      high_gas_price: 0.06
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "loki"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/odin.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/odin.svg"
  },
  apis: {
    rpc: [
      {
        address: "http://34.79.179.216:26657",
        provider: "Odin Protocol"
      },
      {
        address: "https://odin-rpc.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://odin-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      }
    ],
    rest: [
      {
        address: "http://34.79.179.216:1317/",
        provider: "Odin Protocol"
      },
      {
        address: "https://odin-api.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://odin-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      }
    ],
    grpc: [{
      address: "odin-grpc.lavenderfive.com:443",
      provider: "Lavender.Five Nodes \u{1F41D}"
    }, {
      address: "odin-mainnet-grpc.autostake.com:443",
      provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
    }]
  },
  explorers: [{
    kind: "odin web",
    url: "https://mainnet.odinprotocol.io/",
    tx_page: "https://mainnet.odinprotocol.io/transactions/${txHash}"
  }, {
    kind: "ping.pub",
    url: "https://ping.pub/odin",
    tx_page: "https://ping.pub/odin/tx/${txHash}"
  }],
  images: [{
    image_sync: {
      chain_name: "odin"
    },
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/odin.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/odin.svg"
  }]
};
var chain_default114 = info313;

// node_modules/chain-registry/esm/mainnet/odin/ibc.js
var info314 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-150",
      connection_id: "connection-135"
    },
    chain_2: {
      chain_name: "odin",
      client_id: "07-tendermint-66",
      connection_id: "connection-151"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-102",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-253",
      connection_id: "connection-245"
    },
    chain_2: {
      chain_name: "odin",
      client_id: "07-tendermint-122",
      connection_id: "connection-85"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-214",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-65",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-166",
      connection_id: "connection-129"
    },
    chain_2: {
      chain_name: "odin",
      client_id: "07-tendermint-114",
      connection_id: "connection-83"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-157",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-63",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "kujira"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "odin",
      client_id: "07-tendermint-113",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2007",
      connection_id: "connection-1551"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-258",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  }
];
var ibc_default86 = info314;

// node_modules/chain-registry/esm/mainnet/odin/index.js
var assets114 = assets_default114;
var chain114 = chain_default114;
var ibc86 = ibc_default86;

// node_modules/chain-registry/esm/mainnet/okexchain/assets.js
var info315 = {
  $schema: "../assetlist.schema.json",
  chain_name: "okexchain",
  assets: [{
    description: "The native token of OKExChain",
    denom_units: [{
      denom: "wei",
      exponent: 0
    }, {
      denom: "okt",
      exponent: 18
    }],
    base: "wei",
    name: "OKExChain",
    display: "okt",
    symbol: "OKT",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/okexchain/images/okc.png"
    },
    coingecko_id: "oec-token",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/okexchain/images/okc.png"
    }]
  }]
};
var assets_default115 = info315;

// node_modules/chain-registry/esm/mainnet/okexchain/chain.js
var info316 = {
  $schema: "../chain.schema.json",
  chain_name: "okexchain",
  status: "live",
  network_type: "mainnet",
  pretty_name: "OKExChain",
  chain_id: "exchain-66",
  bech32_prefix: "ex",
  daemon_name: "exchaind",
  node_home: "$HOME/.exchaind",
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "wei",
      low_gas_price: 2e8,
      average_gas_price: 25e7,
      high_gas_price: 4e8
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/okexchain/images/okc.png"
  },
  apis: {
    rpc: [{
      address: "https://exchaintmrpc.okex.org",
      provider: "okx chain"
    }],
    rest: []
  },
  explorers: [{
    kind: "OKLink",
    url: "https://www.oklink.com/en/okc",
    tx_page: "https://www.oklink.com/en/okc/tx/${txHash}",
    account_page: "https://www.oklink.com/en/okc/address/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/okexchain/images/okc.png"
  }]
};
var chain_default115 = info316;

// node_modules/chain-registry/esm/mainnet/okexchain/ibc.js
var info317 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "assetmantle",
      client_id: "07-tendermint-42",
      connection_id: "connection-22"
    },
    chain_2: {
      chain_name: "okexchain",
      client_id: "07-tendermint-92",
      connection_id: "connection-35"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-30",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "chihuahua",
      client_id: "07-tendermint-85",
      connection_id: "connection-54"
    },
    chain_2: {
      chain_name: "okexchain",
      client_id: "07-tendermint-5",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-24",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-44",
      connection_id: "connection-46"
    },
    chain_2: {
      chain_name: "okexchain",
      client_id: "07-tendermint-116",
      connection_id: "connection-78"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-31",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-46",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-314",
      connection_id: "connection-285"
    },
    chain_2: {
      chain_name: "okexchain",
      client_id: "07-tendermint-122",
      connection_id: "connection-92"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-212",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-52",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "okexchain",
      client_id: "07-tendermint-100",
      connection_id: "connection-44"
    },
    chain_2: {
      chain_name: "vidulum",
      client_id: "07-tendermint-5",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default87 = info317;

// node_modules/chain-registry/esm/mainnet/okexchain/index.js
var assets115 = assets_default115;
var chain115 = chain_default115;
var ibc87 = ibc_default87;

// node_modules/chain-registry/esm/mainnet/omniflixhub/assets.js
var info318 = {
  $schema: "../assetlist.schema.json",
  chain_name: "omniflixhub",
  assets: [
    {
      description: "The native staking token of OmniFlix Hub.",
      denom_units: [{
        denom: "uflix",
        exponent: 0
      }, {
        denom: "flix",
        exponent: 6
      }],
      base: "uflix",
      name: "Flix",
      display: "flix",
      symbol: "FLIX",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/omniflixhub/images/flix.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/omniflixhub/images/flix.svg"
      },
      coingecko_id: "omniflix-network",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/omniflixhub/images/flix.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/omniflixhub/images/flix.svg"
      }],
      socials: {
        website: "https://omniflix.network/",
        twitter: "https://twitter.com/OmniFlixNetwork"
      }
    },
    {
      denom_units: [{
        denom: "ibc/A8C2D23A1E6F95DA4E48BA349667E322BD7A6C996D8A4AAE8BA72E190F3D1477",
        exponent: 0,
        aliases: ["uatom"]
      }, {
        denom: "atom",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/A8C2D23A1E6F95DA4E48BA349667E322BD7A6C996D8A4AAE8BA72E190F3D1477",
      name: "Cosmos Hub Atom",
      display: "atom",
      symbol: "ATOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "cosmoshub",
          base_denom: "uatom",
          channel_id: "channel-306"
        },
        chain: {
          channel_id: "channel-12",
          path: "transfer/channel-12/uatom"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "cosmoshub",
          base_denom: "uatom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/0471F1C4E7AFD3F07702BEF6DC365268D64570F7C1FDC98EA6098DD6DE59817B",
        exponent: 0,
        aliases: ["uosmo"]
      }, {
        denom: "osmo",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/0471F1C4E7AFD3F07702BEF6DC365268D64570F7C1FDC98EA6098DD6DE59817B",
      name: "Osmosis osmo",
      display: "osmo",
      symbol: "OSMO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "uosmo",
          channel_id: "channel-199"
        },
        chain: {
          channel_id: "channel-1",
          path: "transfer/channel-1/uosmo"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "uosmo"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/43D3010F4CA111744AC8B68E460BC95E565C32928A267FA2B30609C04C10B274",
        exponent: 0,
        aliases: ["uist"]
      }, {
        denom: "ist",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/43D3010F4CA111744AC8B68E460BC95E565C32928A267FA2B30609C04C10B274",
      name: "Agoric IST (Inter Stable Token)",
      display: "ist",
      symbol: "IST",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "agoric",
          base_denom: "uist",
          channel_id: "channel-58"
        },
        chain: {
          channel_id: "channel-30",
          path: "transfer/channel-30/uist"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "agoric",
          base_denom: "uist"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/ist.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/ist.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/ist.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/ist.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/AC4C84DD7D3732CFA95A420247FAD5179BE4F42E5635E2BF0A62C67E2E2FA4A9",
        exponent: 0,
        aliases: ["uusdc"]
      }, {
        denom: "usdc",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/AC4C84DD7D3732CFA95A420247FAD5179BE4F42E5635E2BF0A62C67E2E2FA4A9",
      name: "USD Coin (Axelar)",
      display: "usdc",
      symbol: "USDC.axl",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "axelar",
          base_denom: "uusdc",
          channel_id: "channel-77"
        },
        chain: {
          channel_id: "channel-27",
          path: "transfer/channel-27/uusdc"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "uusdc"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.svg"
      }
    },
    {
      description: "Akash Token (AKT) is the Akash Network's native utility token",
      denom_units: [{
        denom: "ibc/6901B45BC2C5418ED8B3C3C9F9A641A3DAF2D234230AFA9DF32D8F9F9434721C",
        exponent: 0,
        aliases: ["uakt"]
      }, {
        denom: "akt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/6901B45BC2C5418ED8B3C3C9F9A641A3DAF2D234230AFA9DF32D8F9F9434721C",
      name: "Akash",
      display: "akt",
      symbol: "AKT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "akash",
          base_denom: "uakt",
          channel_id: "channel-61"
        },
        chain: {
          channel_id: "channel-25",
          path: "transfer/channel-25/uakt"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.svg"
      },
      images: [{
        image_sync: {
          chain_name: "akash",
          base_denom: "uakt"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.svg"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/9F28238BDB687A86681B30764BA1437E079C3565D04FDD7862055A83F7E5C630",
        exponent: 0
      }, {
        denom: "baddog",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/9F28238BDB687A86681B30764BA1437E079C3565D04FDD7862055A83F7E5C630",
      name: "BadDog (Osmosis)",
      display: "baddog",
      symbol: "BADDOG.osmo",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/2FFE07C4B4EFC0DDA099A16C6AF3C9CCA653CC56077E87217A585D48794B0BC7",
          channel_id: "channel-199"
        },
        chain: {
          channel_id: "channel-1",
          path: "transfer/channel-1/transfer/channel-113/factory/chihuahua1x4q2vkrz4dfgd9hcw0p5m2f2nuv2uqmt9xr8k2/achihuahuawifhat"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/2FFE07C4B4EFC0DDA099A16C6AF3C9CCA653CC56077E87217A585D48794B0BC7"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/baddog.png",
        theme: {
          primary_color_hex: "#F7E3C0",
          background_color_hex: "#F7E3C0",
          circle: true
        }
      }, {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/baddog.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/baddog.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/baddog.png"
      }
    }
  ]
};
var assets_default116 = info318;

// node_modules/chain-registry/esm/mainnet/omniflixhub/chain.js
var info319 = {
  $schema: "../chain.schema.json",
  chain_name: "omniflixhub",
  status: "live",
  network_type: "mainnet",
  website: "https://omniflix.network/",
  pretty_name: "OmniFlix",
  chain_id: "omniflixhub-1",
  daemon_name: "omniflixhubd",
  node_home: "$HOME/.omniflixhub",
  bech32_prefix: "omniflix",
  slip44: 118,
  codebase: {
    cosmos_sdk_version: "v0.47.10",
    cosmwasm_version: "v0.45.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/omniflixhub/images/flix.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/omniflixhub/images/flix.svg"
  },
  fees: {
    fee_tokens: [{
      denom: "uflix",
      fixed_min_gas_price: 0,
      low_gas_price: 1e-3,
      average_gas_price: 25e-4,
      high_gas_price: 0.025
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uflix"
    }]
  },
  description: "Decentralized media and network layer for Creators & Sovereign Communities powered by NFTs and related distribution protocols.",
  apis: {
    rpc: [
      {
        address: "https://omniflix-rpc.kingnodes.com",
        provider: "kingnodes \u{1F451}"
      },
      {
        address: "https://rpc.omniflix.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://rpc.omniflix.chaintools.tech/",
        provider: "ChainTools"
      },
      {
        address: "https://rpc-omniflixhub-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://omniflixhub-rpc.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc.omniflix.silentvalidator.com/",
        provider: "silent"
      },
      {
        address: "https://omniflixhub-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rpc-omniflix.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "https://omniflix-rpc.staketab.org:443",
        provider: "Staketab"
      },
      {
        address: "https://rpc-omniflixhub.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://omniflix-rpc.dakshavalidator.in",
        provider: "Daksha Validator"
      },
      {
        address: "https://rpc-omniflix.mzonder.com:443",
        provider: "MZONDER"
      },
      {
        address: "https://rpc.omniflix.stakeup.tech:443",
        provider: "StakeUp"
      },
      {
        address: "https://rpc.omniflix.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://omniflix-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://mainnet.omniflix.rpc.srv.stakr.space",
        provider: "STAKR.space"
      }
    ],
    rest: [
      {
        address: "https://api.omniflix.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://api-omniflixhub-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://omniflixhub-api.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://api-omniflixhub.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://api.omniflix.silentvalidator.com/",
        provider: "silent"
      },
      {
        address: "https://omniflix-rest.kingnodes.com",
        provider: "kingnodes \u{1F451}"
      },
      {
        address: "https://omniflixhub-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rest-omniflix.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "https://omniflix-rest.staketab.org",
        provider: "Staketab"
      },
      {
        address: "https://omniflix-api.dakshavalidator.in",
        provider: "Daksha Validator"
      },
      {
        address: "https://omniflix.api.staking-explorer.com",
        provider: "Daily DROP | 3% Fee"
      },
      {
        address: "https://api.omniflix.stakeup.tech",
        provider: "StakeUp"
      },
      {
        address: "https://lcd.omniflix.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://omniflix-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://mainnet.omniflix.api.srv.stakr.space",
        provider: "STAKR.space"
      }
    ],
    grpc: [
      {
        address: "https://omniflix-grpc.kingnodes.com:443",
        provider: "kingnodes \u{1F451}"
      },
      {
        address: "grpc.omniflix.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "grpc-omniflixhub-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "omniflixhub-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "grpc-omniflixhub.cosmos-spaces.cloud:2230",
        provider: "Cosmos Spaces"
      },
      {
        address: "omniflixhub-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "grpc-omniflix.architectnodes.com:1443",
        provider: "Architect Nodes"
      },
      {
        address: "services.staketab.com:9015",
        provider: "Staketab"
      },
      {
        address: "grpc-omniflix.mzonder.com:443",
        provider: "MZONDER"
      },
      {
        address: "grpc.omniflix.stakeup.tech:443",
        provider: "StakeUp"
      },
      {
        address: "https://grpc.omniflix.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "omniflix-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "mainnet.omniflix.grpc.stakr.space:39090",
        provider: "STAKR.space"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/omniflixhub",
      tx_page: "https://ezstaking.app/omniflixhub/txs/${txHash}",
      account_page: "https://ezstaking.app/omniflixhub/account/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/omniflix",
      tx_page: "https://www.mintscan.io/omniflix/transactions/${txHash}",
      account_page: "https://www.mintscan.io/omniflix/accounts/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/omniflixhub",
      tx_page: "https://atomscan.com/omniflixhub/transactions/${txHash}",
      account_page: "https://atomscan.com/omniflixhub/accounts/${accountAddress}"
    },
    {
      kind: "STAKR.space explorer",
      url: "https://explorer.stakr.space/omniflix/",
      tx_page: "https://explorer.stakr.space/omniflix/tx/${txHash}",
      account_page: "https://explorer.stakr.space/omniflix/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/omniflixhub/images/flix.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/omniflixhub/images/flix.svg"
  }]
};
var chain_default116 = info319;

// node_modules/chain-registry/esm/mainnet/omniflixhub/ibc.js
var info320 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-73",
      connection_id: "connection-67"
    },
    chain_2: {
      chain_name: "omniflixhub",
      client_id: "07-tendermint-47",
      connection_id: "connection-40"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-58",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-30",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-119",
      connection_id: "connection-93"
    },
    chain_2: {
      chain_name: "omniflixhub",
      client_id: "07-tendermint-42",
      connection_id: "connection-35"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-61",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-25",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-39",
      connection_id: "connection-42"
    },
    chain_2: {
      chain_name: "omniflixhub",
      client_id: "07-tendermint-49",
      connection_id: "connection-43"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-32",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-122",
      connection_id: "connection-109"
    },
    chain_2: {
      chain_name: "omniflixhub",
      client_id: "07-tendermint-44",
      connection_id: "connection-37"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-77",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-27",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-656",
      connection_id: "connection-501"
    },
    chain_2: {
      chain_name: "omniflixhub",
      client_id: "07-tendermint-23",
      connection_id: "connection-19"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-306",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-108",
      connection_id: "connection-78"
    },
    chain_2: {
      chain_name: "omniflixhub",
      client_id: "07-tendermint-43",
      connection_id: "connection-36"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-70",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-26",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-68",
      connection_id: "connection-65"
    },
    chain_2: {
      chain_name: "omniflixhub",
      client_id: "07-tendermint-51",
      connection_id: "connection-49"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-44",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-38",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "omniflixhub",
      client_id: "07-tendermint-8",
      connection_id: "connection-8"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1829",
      connection_id: "connection-1431"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-199",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  }
];
var ibc_default88 = info320;

// node_modules/chain-registry/esm/mainnet/omniflixhub/index.js
var assets116 = assets_default116;
var chain116 = chain_default116;
var ibc88 = ibc_default88;

// node_modules/chain-registry/esm/mainnet/onex/assets.js
var info321 = {
  $schema: "../assetlist.schema.json",
  chain_name: "onex",
  assets: [{
    description: "The native token of ONEX",
    denom_units: [{
      denom: "aonex",
      exponent: 0
    }, {
      denom: "onex",
      exponent: 18
    }],
    base: "aonex",
    name: "ONEX",
    display: "onex",
    symbol: "ONEX",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/onex/images/onex.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/onex/images/onex.svg"
    },
    keywords: ["dex"],
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/onex/images/onex.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/onex/images/onex.svg"
    }]
  }]
};
var assets_default117 = info321;

// node_modules/chain-registry/esm/mainnet/onex/chain.js
var info322 = {
  $schema: "../chain.schema.json",
  chain_name: "onex",
  status: "live",
  website: "https://app.onomy.io/",
  network_type: "mainnet",
  pretty_name: "ONEX",
  chain_id: "onex-mainnet-1",
  bech32_prefix: "onomy",
  daemon_name: "onexd",
  node_home: "$HOME/.onomy_onex",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "aonex",
      fixed_min_gas_price: 0,
      low_gas_price: 0,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "aonex"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.45.16"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/onex/images/onex.png",
    theme: {
      primary_color_hex: "#000000"
    }
  }],
  apis: {
    rpc: [{
      address: "https://rpc.mainnet.onex.onomy.io",
      provider: "pendulum"
    }],
    rest: [{
      address: "https://rest.mainnet.onex.onomy.io",
      provider: "pendulum"
    }],
    grpc: [{
      address: "a.node.mainnet.onomy.io:19091",
      provider: "pendulum"
    }]
  },
  explorers: [{
    kind: "Dexplorer - must enter rpc link provided above",
    url: "https://dexplorer.cakralabs.site",
    tx_page: "https://dexplorer.cakralabs.site/txs/${txHash}",
    account_page: "https://dexplorer.cakralabs.site/${accountAddress}"
  }],
  keywords: ["dex"],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/onex/images/onex.png"
  }
};
var chain_default117 = info322;

// node_modules/chain-registry/esm/mainnet/onex/ibc.js
var info323 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kava",
      client_id: "07-tendermint-163",
      connection_id: "connection-204"
    },
    chain_2: {
      chain_name: "onex",
      client_id: "07-tendermint-1",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-145",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-98",
      connection_id: "connection-91"
    },
    chain_2: {
      chain_name: "onex",
      client_id: "07-tendermint-6",
      connection_id: "connection-14"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-78",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "onex",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "onomy",
      client_id: "07-tendermint-12",
      connection_id: "connection-12"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "onex",
      client_id: "07-tendermint-7",
      connection_id: "connection-15"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3202",
      connection_id: "connection-2659"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-74628",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default89 = info323;

// node_modules/chain-registry/esm/mainnet/onex/index.js
var assets117 = assets_default117;
var chain117 = chain_default117;
var ibc89 = ibc_default89;

// node_modules/chain-registry/esm/mainnet/onomy/assets.js
var info324 = {
  $schema: "../assetlist.schema.json",
  chain_name: "onomy",
  assets: [{
    description: "The native token of Onomy Protocol",
    denom_units: [{
      denom: "anom",
      exponent: 0
    }, {
      denom: "nom",
      exponent: 18
    }],
    base: "anom",
    name: "Nom",
    display: "nom",
    symbol: "NOM",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/onomy/images/nom.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/onomy/images/nom.svg"
    },
    keywords: [
      "dex",
      "stablecoin",
      "bridge",
      "staking"
    ],
    coingecko_id: "onomy-protocol",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/onomy/images/nom.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/onomy/images/nom.svg"
    }]
  }]
};
var assets_default118 = info324;

// node_modules/chain-registry/esm/mainnet/onomy/chain.js
var info325 = {
  $schema: "../chain.schema.json",
  chain_name: "onomy",
  status: "live",
  network_type: "mainnet",
  website: "https://onomy.io/",
  pretty_name: "Onomy",
  chain_id: "onomy-mainnet-1",
  bech32_prefix: "onomy",
  daemon_name: "onomyd",
  node_home: "$HOME/.onomyd",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "anom",
      low_gas_price: 0,
      average_gas_price: 0.03,
      high_gas_price: 0.06
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "anom"
    }]
  },
  codebase: {
    cosmos_sdk_version: "onomyprotocol/onomy-sdk v0.45.16-onomy-dev"
  },
  apis: {
    rpc: [{
      address: "https://rpc-mainnet.onomy.io",
      provider: "onomy"
    }, {
      address: "https://onomy-mainnet-rpc.autostake.com:443",
      provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
    }],
    rest: [{
      address: "https://rest-mainnet.onomy.io",
      provider: "onomy"
    }, {
      address: "https://onomy-mainnet-lcd.autostake.com:443",
      provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
    }],
    grpc: []
  },
  explorers: [{
    kind: "mintscan",
    url: "https://www.mintscan.io/onomy-protocol",
    tx_page: "https://www.mintscan.io/onomy-protocol/transactions/${txHash}",
    account_page: "https://www.mintscan.io/onomy-protocol/accounts/${accountAddress}"
  }, {
    kind: "ezstaking",
    url: "https://ezstaking.app/onomy",
    tx_page: "https://ezstaking.app/onomy/txs/${txHash}",
    account_page: "https://ezstaking.app/onomy/account/${accountAddress}"
  }],
  keywords: [
    "dex",
    "stablecoin",
    "bridge",
    "staking",
    "ics",
    "rwa"
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/onomy/images/nom.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/onomy/images/nom.svg"
  }]
};
var chain_default118 = info325;

// node_modules/chain-registry/esm/mainnet/onomy/ibc.js
var info326 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "onex",
    client_id: "07-tendermint-0",
    connection_id: "connection-0"
  },
  chain_2: {
    chain_name: "onomy",
    client_id: "07-tendermint-12",
    connection_id: "connection-12"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-2",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-11",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "onomy",
    client_id: "07-tendermint-0",
    connection_id: "connection-1"
  },
  chain_2: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2405",
    connection_id: "connection-1892"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-525",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default90 = info326;

// node_modules/chain-registry/esm/mainnet/onomy/index.js
var assets118 = assets_default118;
var chain118 = chain_default118;
var ibc90 = ibc_default90;

// node_modules/chain-registry/esm/mainnet/oraichain/assets.js
var info327 = {
  $schema: "../assetlist.schema.json",
  chain_name: "oraichain",
  assets: [{
    description: "The native token of Oraichain",
    denom_units: [{
      denom: "orai",
      exponent: 0
    }, {
      denom: "ORAI",
      exponent: 6
    }],
    base: "orai",
    name: "Oraichain",
    display: "ORAI",
    symbol: "ORAI",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/oraichain/images/orai-token.png"
    },
    coingecko_id: "oraichain-token",
    images: [
      {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/oraichain/images/orai-token.png",
        theme: {
          circle: true,
          dark_mode: true
        }
      },
      {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/oraichain/images/orai-white.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/oraichain/images/orai-white.svg",
        theme: {
          circle: true,
          dark_mode: true,
          primary_color_hex: "#FFFFFF"
        }
      },
      {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/oraichain/images/orai.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/oraichain/images/orai.svg",
        theme: {
          circle: true,
          dark_mode: false,
          primary_color_hex: "#000000"
        }
      }
    ]
  }]
};
var assets_default119 = info327;

// node_modules/chain-registry/esm/mainnet/oraichain/chain.js
var info328 = {
  $schema: "../chain.schema.json",
  chain_name: "oraichain",
  status: "live",
  network_type: "mainnet",
  website: "https://orai.io/",
  pretty_name: "Oraichain",
  chain_id: "Oraichain",
  bech32_prefix: "orai",
  daemon_name: "oraid",
  node_home: "$WORKSPACE/.oraid",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "orai",
      fixed_min_gas_price: 0,
      low_gas_price: 3e-3,
      average_gas_price: 5e-3,
      high_gas_price: 7e-3
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "orai"
    }]
  },
  codebase: {
    cosmwasm_enabled: true,
    cosmwasm_version: "0.30.2"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/oraichain/images/orai.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/oraichain/images/orai.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.orai.io",
        provider: "oraichain-team"
      },
      {
        address: "https://rpc.orai.pfc.zone/",
        provider: "PFC"
      },
      {
        address: "https://rpc-orai.nodine.id/",
        provider: "Nodine.ID"
      },
      {
        address: "https://oraichain-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rpc-oraichain.mms.team",
        provider: "MMS"
      },
      {
        address: "https://rpc-orai.blockval.io/",
        provider: "Blockval"
      },
      {
        address: "https://mainnet-orai-rpc.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://rpc.orai.mortysnode.nl",
        provider: "Morty's Nodes"
      },
      {
        address: "https://orai.rpc.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://oraichain-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    rest: [
      {
        address: "http://lcd.orai.io",
        provider: "oraichain-team"
      },
      {
        address: "https://oraichain-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://api-oraichain.mms.team",
        provider: "MMS"
      },
      {
        address: "https://api-orai.blockval.io",
        provider: "Blockval"
      },
      {
        address: "https://mainnet-orai-api.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://orai.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://oraichain-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    grpc: [
      {
        address: "grpc-oraichain.mms.team:443",
        provider: "MMS"
      },
      {
        address: "grpc.orai.pfc.zone:443",
        provider: "PFC"
      },
      {
        address: "oraichain-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "grpc-orai.blockval.io:9390",
        provider: "Blockval"
      },
      {
        address: "mainnet-orai.konsortech.xyz:33090",
        provider: "KonsorTech"
      },
      {
        address: "orai.grpc.m.stavr.tech:110",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "oraichain-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ]
  },
  explorers: [
    {
      kind: "oraiscan",
      url: "https://scan.orai.io",
      tx_page: "https://scan.orai.io/txs/${txHash}"
    },
    {
      kind: "Nodine Explorer",
      url: "https://explorer.co.id/orai",
      tx_page: "https://explorer.co.id/orai/tx/${txHash}"
    },
    {
      kind: "Blockval Explorer",
      url: "https://explorer.blockval.io/oraichain",
      tx_page: "https://explorer.blockval.io/oraichain/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/orai",
      tx_page: "https://atomscan.com/orai/transactions/${txHash}",
      account_page: "https://atomscan.com/orai/accounts/${accountAddress}"
    },
    {
      kind: "KonsorTech Explorer",
      url: "https://explorer.konsortech.xyz/oraichain",
      tx_page: "https://explorer.konsortech.xyz/oraichain/transactions/${txHash}",
      account_page: "https://explorer.konsortech.xyz/oraichain/accounts/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525} Explorer",
      url: "https://explorer.stavr.tech/Orai-Mainnet",
      tx_page: "https://explorer.stavr.tech/Orai-Mainnet/transactions/${txHash}",
      account_page: "https://explorer.stavr.tech/Orai-Mainnet/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/oraichain/images/orai.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/oraichain/images/orai.svg"
  }]
};
var chain_default119 = info328;

// node_modules/chain-registry/esm/mainnet/oraichain/ibc.js
var info329 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-12",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "oraichain",
      client_id: "07-tendermint-74",
      connection_id: "connection-42"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-33",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-651",
      connection_id: "connection-497"
    },
    chain_2: {
      chain_name: "oraichain",
      client_id: "07-tendermint-47",
      connection_id: "connection-22"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-301",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "oraidex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-211",
      connection_id: "connection-194"
    },
    chain_2: {
      chain_name: "oraichain",
      client_id: "07-tendermint-105",
      connection_id: "connection-82"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-147",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-146",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "oraidex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-60",
      connection_id: "connection-58"
    },
    chain_2: {
      chain_name: "oraichain",
      client_id: "07-tendermint-106",
      connection_id: "connection-83"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-34",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-147",
        port_id: "wasm.orai195269awwnt5m6c843q6w7hp8rt0k7syfu9de4h0wz384slshuzps8y7ccm"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "oraidex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "oraichain",
      client_id: "07-tendermint-49",
      connection_id: "connection-21"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1882",
      connection_id: "connection-1464"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-216",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "oraichain",
      client_id: "07-tendermint-178",
      connection_id: "connection-142"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-195",
      connection_id: "connection-190"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-135",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-217",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }, {
      chain_1: {
        channel_id: "channel-140",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-222",
        port_id: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  }
];
var ibc_default91 = info329;

// node_modules/chain-registry/esm/mainnet/oraichain/index.js
var assets119 = assets_default119;
var chain119 = chain_default119;
var ibc91 = ibc_default91;

// node_modules/chain-registry/esm/mainnet/osmosis/assets.js
var info330 = {
  $schema: "../assetlist.schema.json",
  chain_name: "osmosis",
  assets: [
    {
      description: "The native token of Osmosis",
      extended_description: "Osmosis (OSMO) is the premier DEX and cross-chain DeFi hub within the Cosmos ecosystem, a network of over 50 sovereign, interoperable blockchains seamlessly connected through the Inter-Blockchain Communication Protocol (IBC). Pioneering in its approach, Osmosis offers a dynamic trading and liquidity provision experience, integrating non-IBC assets from other ecosystems, including Ethereum, Solana, Avalanche, and Polkadot. Initially adopting Balancer-style pools, Osmosis now also features a concentrated liquidity model that is orders of magnitude more capital efficient, meaning that significantly less liquidity is required to handle the same amount of trading volume with minimal slippage.\n\nAs a true appchain, Osmosis has greater control over the full blockchain stack than traditional smart contract DEXs, which must follow the code of the parent chain that it is built on. This fine-grained control has enabled, for example, the development of Superfluid Staking, an extension of Proof of Stake that allows assets at the application layer to be staked to secure the chain. The customizability of appchains also allows implementing features like the Protocol Revenue module, which enables Osmosis to conduct on-chain arbitrage on behalf of OSMO stakers, balancing prices across pools while generating real yield revenue from this volume. Additionally, as a sovereign appchain, Osmosis governance can vote on upgrades to the protocol. One example of this was the introduction of a Taker Fee, which switched on the collection of exchange fees to generate diverse yield from Osmosis volume and distribute it to OSMO stakers.\n\nOsmosis is bringing the full centralized exchange experience to the decentralized world by building a cross-chain native DEX and trading suite that connects all chains over IBC, including Ethereum and Bitcoin. To reach this goal, Osmosis hosts an ever-expanding suite of DeFi applications aimed at providing a one-stop experience that includes lending, credit, margin, DeFi strategy vaults, power perps, fiat on-ramps, NFTs, stablecoins, and more \u2014 all of the functionalities that centralized exchange offer and more, in the trust-minimized environment of decentralized finance.",
      denom_units: [{
        denom: "uosmo",
        exponent: 0
      }, {
        denom: "osmo",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      base: "uosmo",
      name: "Osmosis",
      display: "osmo",
      symbol: "OSMO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      }],
      coingecko_id: "osmosis",
      keywords: ["dex", "staking"],
      socials: {
        website: "https://osmosis.zone",
        twitter: "https://twitter.com/osmosiszone"
      }
    },
    {
      description: "ION is the second native token of Osmosis.",
      extended_description: "ION DAO is governed by ION holders. ION is the second native token of Osmosis, the biggest DEX in Cosmos. The origin of ION was a meme coin, but ION DAO has been trying to find ways to add values on ION.",
      denom_units: [{
        denom: "uion",
        exponent: 0
      }, {
        denom: "ion",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      base: "uion",
      name: "Ion DAO",
      display: "ion",
      symbol: "ION",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ion.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ion.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ion.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ion.svg"
      }],
      coingecko_id: "ion",
      keywords: ["memecoin", "defi"],
      socials: {
        website: "https://ion.wtf",
        twitter: "https://twitter.com/_IONDAO"
      }
    },
    {
      description: "Circle's stablecoin on Axelar",
      denom_units: [{
        denom: "ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858",
        exponent: 0,
        aliases: ["uusdc"]
      }, {
        denom: "usdc",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858",
      name: "USD Coin (Axelar)",
      display: "usdc",
      symbol: "USDC.axl",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Circle"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "uusdc",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/uusdc"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.axl.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.axl.svg"
      }, {
        image_sync: {
          chain_name: "axelar",
          base_denom: "uusdc"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdc.svg"
      }]
    },
    {
      description: "Ethereum (ETH) is a decentralized, open-source blockchain system featuring smart contract functionality. It's the native cryptocurrency of the Ethereum platform, often regarded as the second most popular digital currency after Bitcoin. Ethereum was proposed in late 2013 and development was crowdfunded in 2014, leading to its network going live on 30 July 2015.\n\nETH, as a digital currency, is used for a variety of purposes within the Ethereum ecosystem, including the execution of decentralized smart contracts and as a mode of payment. Unlike Bitcoin, Ethereum was designed to be a platform for applications that can operate without the need for intermediaries, using blockchain technology. This has made Ethereum a leading platform for various applications, including decentralized finance (DeFi), non-fungible tokens (NFTs), and more. Ethereum is constantly evolving, with a significant upgrade termed Ethereum 2.0, which aims to improve its scalability, security, and sustainability.",
      denom_units: [{
        denom: "ibc/EA1D43981D5C9A1C4AAEA9C23BB1D4FA126BA9BC7020A25E0AE4AA841EA25DC5",
        exponent: 0,
        aliases: ["weth-wei"]
      }, {
        denom: "weth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/EA1D43981D5C9A1C4AAEA9C23BB1D4FA126BA9BC7020A25E0AE4AA841EA25DC5",
      name: "Ether",
      display: "weth",
      symbol: "ETH",
      traces: [
        {
          type: "wrapped",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "wei"
          },
          provider: "Ethereum"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "weth-wei",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/weth-wei"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.svg"
      }]
    },
    {
      description: "Wrapped Bitcoin on Axelar",
      denom_units: [{
        denom: "ibc/D1542AA8762DB13087D8364F3EA6509FD6F009A34F00426AF9E4F9FA85CBBF1F",
        exponent: 0,
        aliases: ["wbtc-satoshi"]
      }, {
        denom: "wbtc",
        exponent: 8
      }],
      type_asset: "ics20",
      base: "ibc/D1542AA8762DB13087D8364F3EA6509FD6F009A34F00426AF9E4F9FA85CBBF1F",
      name: "Wrapped Bitcoin (Axelar)",
      display: "wbtc",
      symbol: "WBTC.axl",
      traces: [
        {
          type: "bridge",
          counterparty: {
            chain_name: "bitcoin",
            base_denom: "sat"
          },
          provider: "BitGo, Kyber, and Ren"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "wbtc-satoshi",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/wbtc-satoshi"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wbtc.axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wbtc.axl.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wbtc.axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wbtc.axl.svg"
      }, {
        image_sync: {
          chain_name: "axelar",
          base_denom: "wbtc-satoshi"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/wbtc.png"
      }]
    },
    {
      description: "Tether's USD stablecoin on Axelar",
      denom_units: [{
        denom: "ibc/8242AD24008032E457D2E12D46588FD39FB54FB29680C6C7663D296B383C37C4",
        exponent: 0,
        aliases: ["uusdt"]
      }, {
        denom: "usdt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/8242AD24008032E457D2E12D46588FD39FB54FB29680C6C7663D296B383C37C4",
      name: "Tether USD (Axelar)",
      display: "usdt",
      symbol: "USDT.axl",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Tether"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "uusdt",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/uusdt"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdt.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdt.axl.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdt.axl.png"
      }, {
        image_sync: {
          chain_name: "axelar",
          base_denom: "uusdt"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/usdt.svg"
      }]
    },
    {
      description: "Multi-Collateral Dai, brings a lot of new and exciting features, such as support for new CDP collateral types and Dai Savings Rate.",
      denom_units: [{
        denom: "ibc/0CD3A0285E1341859B5E86B6AB7682F023D03E97607CCC1DC95706411D866DF7",
        exponent: 0,
        aliases: ["dai-wei"]
      }, {
        denom: "dai",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/0CD3A0285E1341859B5E86B6AB7682F023D03E97607CCC1DC95706411D866DF7",
      name: "Dai Stablecoin",
      display: "dai",
      symbol: "DAI",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "MakerDAO"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0x6b175474e89094c44da98b954eedeac495271d0f"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "dai-wei",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/dai-wei"
          }
        }
      ],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/dai.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/dai.svg"
      }]
    },
    {
      description: "Binance USD (BUSD) is a dollar-backed stablecoin issued and custodied by Paxos Trust Company, and regulated by the New York State Department of Financial Services. BUSD is available directly for sale 1:1 with USD on Paxos.com and will be listed for trading on Binance.",
      denom_units: [{
        denom: "ibc/6329DD8CF31A334DD5BE3F68C846C9FE313281362B37686A62343BAC1EB1546D",
        exponent: 0,
        aliases: ["busd-wei"]
      }, {
        denom: "busd",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/6329DD8CF31A334DD5BE3F68C846C9FE313281362B37686A62343BAC1EB1546D",
      name: "Binance USD",
      display: "busd",
      symbol: "BUSD",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Binance"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0x4fabb145d64652a948d72533023f6e7a623c7c53"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "busd-wei",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/busd-wei"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/busd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/busd.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "busd-wei"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/busd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/busd.svg"
      }]
    },
    {
      description: "The native staking and governance token of the Cosmos Hub.",
      denom_units: [{
        denom: "ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2",
        exponent: 0,
        aliases: ["uatom"]
      }, {
        denom: "atom",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2",
      name: "Cosmos Hub",
      display: "atom",
      symbol: "ATOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "cosmoshub",
          base_denom: "uatom",
          channel_id: "channel-141"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/uatom"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      },
      images: [{
        image_sync: {
          chain_name: "cosmoshub",
          base_denom: "uatom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }]
    },
    {
      description: "CRO is the native token of the Crypto.org Chain, referred to as Native CRO.",
      denom_units: [{
        denom: "ibc/E6931F78057F7CC5DA0FD6CEF82FF39373A6E0452BF1FD76910B93292CF356C1",
        exponent: 0,
        aliases: ["basecro"]
      }, {
        denom: "cro",
        exponent: 8
      }],
      type_asset: "ics20",
      base: "ibc/E6931F78057F7CC5DA0FD6CEF82FF39373A6E0452BF1FD76910B93292CF356C1",
      name: "Cronos POS Chain",
      display: "cro",
      symbol: "CRO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "cryptoorgchain",
          base_denom: "basecro",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-5",
          path: "transfer/channel-5/basecro"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cronos/images/cro.svg"
      },
      images: [{
        image_sync: {
          chain_name: "cryptoorgchain",
          base_denom: "basecro"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cronos/images/cro.svg"
      }]
    },
    {
      description: "BNB powers the BNB Chain ecosystem and is the native coin of the BNB Beacon Chain and BNB Smart Chain.",
      denom_units: [{
        denom: "ibc/F4A070A6D78496D53127EA85C094A9EC87DFC1F36071B8CCDDBD020F933D213D",
        exponent: 0,
        aliases: ["wbnb-wei"]
      }, {
        denom: "wbnb",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/F4A070A6D78496D53127EA85C094A9EC87DFC1F36071B8CCDDBD020F933D213D",
      name: "Binance Coin",
      display: "wbnb",
      symbol: "BNB",
      traces: [
        {
          type: "wrapped",
          counterparty: {
            chain_name: "binancesmartchain",
            base_denom: "wei"
          },
          chain: {
            contract: "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
          },
          provider: "Binance"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "binancesmartchain",
            base_denom: "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "wbnb-wei",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/wbnb-wei"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/bnb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/bnb.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/bnb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/bnb.svg"
      }]
    },
    {
      description: "Polygon (formerly Matic) Network brings massive scale to Ethereum using an adapted version of Plasma with PoS based side chains. Polygon is a well-structured, easy-to-use platform for Ethereum scaling and infrastructure development.",
      denom_units: [{
        denom: "ibc/AB589511ED0DD5FA56171A39978AFBF1371DB986EC1C3526CE138A16377E39BB",
        exponent: 0,
        aliases: ["wmatic-wei"]
      }, {
        denom: "wmatic",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/AB589511ED0DD5FA56171A39978AFBF1371DB986EC1C3526CE138A16377E39BB",
      name: "Polygon",
      display: "wmatic",
      symbol: "MATIC",
      traces: [
        {
          type: "wrapped",
          counterparty: {
            chain_name: "polygon",
            base_denom: "wei"
          },
          provider: "Polygon"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "polygon",
            base_denom: "0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "wmatic-wei",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/wmatic-wei"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/matic-purple.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/matic-purple.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/matic-purple.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/matic-purple.svg"
      }]
    },
    {
      description: "AVAX is the native token of Avalanche. It is a hard-capped, scarce asset that is used to pay for fees, secure the platform through staking, and provide a basic unit of account between the multiple subnets created on Avalanche.",
      denom_units: [{
        denom: "ibc/6F62F01D913E3FFE472A38C78235B8F021B511BC6596ADFF02615C8F83D3B373",
        exponent: 0,
        aliases: ["wavax-wei"]
      }, {
        denom: "avax",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/6F62F01D913E3FFE472A38C78235B8F021B511BC6596ADFF02615C8F83D3B373",
      name: "Avalanche",
      display: "avax",
      symbol: "AVAX",
      traces: [
        {
          type: "wrapped",
          counterparty: {
            chain_name: "avalanche",
            base_denom: "wei"
          },
          provider: "Avalanche"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "avalanche",
            base_denom: "0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "wavax-wei",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/wavax-wei"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/avax.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/avax.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/avax.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/avax.svg"
      }]
    },
    {
      description: "The native staking token of Terra Classic.",
      denom_units: [
        {
          denom: "ibc/0EF15DF2F02480ADE0BB6E85D9EBB5DAEA2836D3860E9F97F9AADE4F57A31AA0",
          exponent: 0,
          aliases: ["microluna", "uluna"]
        },
        {
          denom: "mluna",
          exponent: 3,
          aliases: ["milliluna"]
        },
        {
          denom: "luna",
          exponent: 6,
          aliases: ["lunc"]
        }
      ],
      type_asset: "ics20",
      base: "ibc/0EF15DF2F02480ADE0BB6E85D9EBB5DAEA2836D3860E9F97F9AADE4F57A31AA0",
      name: "Luna Classic",
      display: "luna",
      symbol: "LUNC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "terra",
          base_denom: "uluna",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-72",
          path: "transfer/channel-72/uluna"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/luna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/luna.svg"
      },
      images: [{
        image_sync: {
          chain_name: "terra",
          base_denom: "uluna"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/luna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/luna.svg"
      }]
    },
    {
      description: "The native token of JUNO Chain",
      denom_units: [{
        denom: "ibc/46B44899322F3CD854D2D46DEEF881958467CDD4B3B10086DA49296BBED94BED",
        exponent: 0,
        aliases: ["ujuno"]
      }, {
        denom: "juno",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/46B44899322F3CD854D2D46DEEF881958467CDD4B3B10086DA49296BBED94BED",
      name: "Juno",
      display: "juno",
      symbol: "JUNO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "juno",
          base_denom: "ujuno",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-42",
          path: "transfer/channel-42/ujuno"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "ujuno"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/juno.svg"
      }]
    },
    {
      description: "Wrapped Polkadot on Axelar",
      denom_units: [{
        denom: "ibc/3FF92D26B407FD61AE95D975712A7C319CDE28DE4D80BDC9978D935932B991D7",
        exponent: 0,
        aliases: ["dot-planck"]
      }, {
        denom: "dot",
        exponent: 10
      }],
      type_asset: "ics20",
      base: "ibc/3FF92D26B407FD61AE95D975712A7C319CDE28DE4D80BDC9978D935932B991D7",
      name: "Wrapped Polkadot (Axelar)",
      display: "dot",
      symbol: "moonbeam.DOT.axl",
      traces: [
        {
          type: "bridge",
          counterparty: {
            chain_name: "polkadot",
            base_denom: "Planck"
          },
          provider: "Polkadot Parachain"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "moonbeam",
            base_denom: "0xffffffff1fcacbd218edc0eba20fc2308c778080"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "dot-planck",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/dot-planck"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "dot-planck"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.svg"
      }, {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/dot.axl.svg"
      }]
    },
    {
      description: "The native EVM, governance and staking token of the Evmos Hub",
      denom_units: [{
        denom: "ibc/6AE98883D4D5D5FF9E50D7130F1305DA2FFA0C652D1DD9C123657C6B4EB2DF8A",
        exponent: 0,
        aliases: ["aevmos"]
      }, {
        denom: "evmos",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/6AE98883D4D5D5FF9E50D7130F1305DA2FFA0C652D1DD9C123657C6B4EB2DF8A",
      name: "Evmos",
      display: "evmos",
      symbol: "EVMOS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "evmos",
          base_denom: "aevmos",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-204",
          path: "transfer/channel-204/aevmos"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.svg"
      },
      images: [{
        image_sync: {
          chain_name: "evmos",
          base_denom: "aevmos"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/evmos.svg"
      }]
    },
    {
      description: "The native staking and governance token of Kava",
      denom_units: [{
        denom: "ibc/57AA1A70A4BC9769C525EBF6386F7A21536E04A79D62E1981EFCEF9428EBB205",
        exponent: 0,
        aliases: ["ukava"]
      }, {
        denom: "kava",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/57AA1A70A4BC9769C525EBF6386F7A21536E04A79D62E1981EFCEF9428EBB205",
      name: "Kava",
      display: "kava",
      symbol: "KAVA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kava",
          base_denom: "ukava",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-143",
          path: "transfer/channel-143/ukava"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/kava.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/kava.svg"
      },
      images: [{
        image_sync: {
          chain_name: "kava",
          base_denom: "ukava"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/kava.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/kava.svg"
      }]
    },
    {
      description: "The native token of Secret Network",
      denom_units: [{
        denom: "ibc/0954E1C28EB7AF5B72D24F3BC2B47BBB2FDF91BDDFD57B74B99E133AED40972A",
        exponent: 0,
        aliases: ["uscrt"]
      }, {
        denom: "scrt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/0954E1C28EB7AF5B72D24F3BC2B47BBB2FDF91BDDFD57B74B99E133AED40972A",
      name: "Secret Network",
      display: "scrt",
      symbol: "SCRT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "secretnetwork",
          base_denom: "uscrt",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-88",
          path: "transfer/channel-88/uscrt"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.svg"
      },
      images: [{
        image_sync: {
          chain_name: "secretnetwork",
          base_denom: "uscrt"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.svg"
      }]
    },
    {
      description: "The USD stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "ibc/BE1BB42D4BE3C30D50B68D7C41DB4DFCE9678E8EF8C539F6E6A9345048894FCC",
          exponent: 0,
          aliases: ["microusd", "uusd"]
        },
        {
          denom: "musd",
          exponent: 3,
          aliases: ["milliusd"]
        },
        {
          denom: "ust",
          exponent: 6,
          aliases: ["ustc"]
        }
      ],
      type_asset: "ics20",
      base: "ibc/BE1BB42D4BE3C30D50B68D7C41DB4DFCE9678E8EF8C539F6E6A9345048894FCC",
      name: "TerraClassicUSD",
      display: "ust",
      symbol: "USTC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "terra",
          base_denom: "uusd",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-72",
          path: "transfer/channel-72/uusd"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/ust.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/ust.svg"
      },
      images: [{
        image_sync: {
          chain_name: "terra",
          base_denom: "uusd"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/ust.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/ust.svg"
      }]
    },
    {
      description: "The native token of Stargaze",
      denom_units: [{
        denom: "ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4",
        exponent: 0,
        aliases: ["ustars"]
      }, {
        denom: "stars",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4",
      name: "Stargaze",
      display: "stars",
      symbol: "STARS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "stargaze",
          base_denom: "ustars",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-75",
          path: "transfer/channel-75/ustars"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stargaze",
          base_denom: "ustars"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.svg"
      }]
    },
    {
      description: "The native token of Chihuahua Chain",
      denom_units: [{
        denom: "ibc/B9E0A1A524E98BB407D3CED8720EFEFD186002F90C1B1B7964811DD0CCC12228",
        exponent: 0,
        aliases: ["uhuahua"]
      }, {
        denom: "huahua",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/B9E0A1A524E98BB407D3CED8720EFEFD186002F90C1B1B7964811DD0CCC12228",
      name: "Chihuahua",
      display: "huahua",
      symbol: "HUAHUA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "chihuahua",
          base_denom: "uhuahua",
          channel_id: "channel-7"
        },
        chain: {
          channel_id: "channel-113",
          path: "transfer/channel-113/uhuahua"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/huahua.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/huahua.svg"
      },
      images: [{
        image_sync: {
          chain_name: "chihuahua",
          base_denom: "uhuahua"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/huahua.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/huahua.svg"
      }]
    },
    {
      description: "The XPRT token is primarily a governance token for the Persistence chain.",
      denom_units: [{
        denom: "ibc/A0CC0CF735BFB30E730C70019D4218A1244FF383503FF7579C9201AB93CA9293",
        exponent: 0,
        aliases: ["uxprt"]
      }, {
        denom: "xprt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/A0CC0CF735BFB30E730C70019D4218A1244FF383503FF7579C9201AB93CA9293",
      name: "Persistence",
      display: "xprt",
      symbol: "XPRT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "persistence",
          base_denom: "uxprt",
          channel_id: "channel-6"
        },
        chain: {
          channel_id: "channel-4",
          path: "transfer/channel-4/uxprt"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.svg"
      },
      images: [{
        image_sync: {
          chain_name: "persistence",
          base_denom: "uxprt"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.svg"
      }]
    },
    {
      description: "pSTAKE is a liquid staking protocol unlocking the liquidity of staked assets. Stakers of PoS tokens can stake their assets while maintaining the liquidity of these assets. Users earn staking rewards + receive 1:1 pegged staked representative tokens which can be used to generate additional yield.",
      denom_units: [{
        denom: "ibc/8061A06D3BD4D52C4A28FFECF7150D370393AF0BA661C3776C54FF32836C3961",
        exponent: 0,
        aliases: [
          "gravity0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006",
          "0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006",
          "ibc/A6E3AF63B3C906416A9AF7A556C59EA4BD50E617EFFE6299B99700CCB780E444"
        ]
      }, {
        denom: "pstake",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/8061A06D3BD4D52C4A28FFECF7150D370393AF0BA661C3776C54FF32836C3961",
      name: "pSTAKE Finance",
      display: "pstake",
      symbol: "PSTAKE",
      traces: [
        {
          type: "liquid-stake",
          counterparty: {
            chain_name: "persistence",
            base_denom: "uxprt"
          },
          provider: "Persistence"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006"
          },
          provider: "Gravity Bridge"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "gravitybridge",
            base_denom: "gravity0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006",
            channel_id: "channel-24"
          },
          chain: {
            channel_id: "channel-38",
            path: "transfer/channel-38/gravity0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "persistence",
            base_denom: "ibc/A6E3AF63B3C906416A9AF7A556C59EA4BD50E617EFFE6299B99700CCB780E444",
            channel_id: "channel-6"
          },
          chain: {
            channel_id: "channel-4",
            path: "transfer/channel-4/transfer/channel-38/gravity0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/pstake.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/pstake.svg"
      },
      images: [{
        image_sync: {
          chain_name: "persistence",
          base_denom: "ibc/A6E3AF63B3C906416A9AF7A556C59EA4BD50E617EFFE6299B99700CCB780E444"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/pstake.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/pstake.svg"
      }]
    },
    {
      description: "Akash Token (AKT) is the Akash Network's native utility token, used as the primary means to govern, secure the blockchain, incentivize participants, and provide a default mechanism to store and exchange value.",
      denom_units: [{
        denom: "ibc/1480B8FD20AD5FCAE81EA87584D269547DD4D436843C1D20F15E00EB64743EF4",
        exponent: 0,
        aliases: ["uakt"]
      }, {
        denom: "akt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/1480B8FD20AD5FCAE81EA87584D269547DD4D436843C1D20F15E00EB64743EF4",
      name: "Akash",
      display: "akt",
      symbol: "AKT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "akash",
          base_denom: "uakt",
          channel_id: "channel-9"
        },
        chain: {
          channel_id: "channel-1",
          path: "transfer/channel-1/uakt"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.svg"
      },
      images: [{
        image_sync: {
          chain_name: "akash",
          base_denom: "uakt"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.svg"
      }]
    },
    {
      description: "REGEN coin is the token for the Regen Network Platform",
      denom_units: [{
        denom: "ibc/1DCC8A6CB5689018431323953344A9F6CC4D0BFB261E88C9F7777372C10CD076",
        exponent: 0,
        aliases: ["uregen"]
      }, {
        denom: "regen",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/1DCC8A6CB5689018431323953344A9F6CC4D0BFB261E88C9F7777372C10CD076",
      name: "Regen",
      display: "regen",
      symbol: "REGEN",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "regen",
          base_denom: "uregen",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-8",
          path: "transfer/channel-8/uregen"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/regen.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/regen.svg"
      },
      images: [{
        image_sync: {
          chain_name: "regen",
          base_denom: "uregen"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/regen.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/regen.svg"
      }]
    },
    {
      description: "DVPN is the native token of the Sentinel Hub.",
      denom_units: [{
        denom: "ibc/9712DBB13B9631EDFA9BF61B55F1B2D290B2ADB67E3A4EB3A875F3B6081B3B84",
        exponent: 0,
        aliases: ["udvpn"]
      }, {
        denom: "dvpn",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/9712DBB13B9631EDFA9BF61B55F1B2D290B2ADB67E3A4EB3A875F3B6081B3B84",
      name: "Sentinel",
      display: "dvpn",
      symbol: "DVPN",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "sentinel",
          base_denom: "udvpn",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-2",
          path: "transfer/channel-2/udvpn"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sentinel/images/dvpn.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sentinel/images/dvpn.svg"
      },
      images: [{
        image_sync: {
          chain_name: "sentinel",
          base_denom: "udvpn"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sentinel/images/dvpn.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sentinel/images/dvpn.svg"
      }]
    },
    {
      description: "The IRIS token is the native governance token for the IrisNet chain.",
      denom_units: [{
        denom: "ibc/7C4D60AA95E5A7558B0A364860979CA34B7FF8AAF255B87AF9E879374470CEC0",
        exponent: 0,
        aliases: ["uiris"]
      }, {
        denom: "iris",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/7C4D60AA95E5A7558B0A364860979CA34B7FF8AAF255B87AF9E879374470CEC0",
      name: "IRISnet",
      display: "iris",
      symbol: "IRIS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "irisnet",
          base_denom: "uiris",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-6",
          path: "transfer/channel-6/uiris"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/irisnet/images/iris.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/irisnet/images/iris.svg"
      },
      images: [{
        image_sync: {
          chain_name: "irisnet",
          base_denom: "uiris"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/irisnet/images/iris.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/irisnet/images/iris.svg"
      }]
    },
    {
      description: "IOV coin is the token for the Starname (IOV) Asset Name Service",
      denom_units: [{
        denom: "ibc/52B1AA623B34EB78FD767CEA69E8D7FA6C9CFE1FBF49C5406268FD325E2CC2AC",
        exponent: 0,
        aliases: ["uiov"]
      }, {
        denom: "iov",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/52B1AA623B34EB78FD767CEA69E8D7FA6C9CFE1FBF49C5406268FD325E2CC2AC",
      name: "Starname",
      display: "iov",
      symbol: "IOV",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "starname",
          base_denom: "uiov",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-15",
          path: "transfer/channel-15/uiov"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/starname/images/iov.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/starname/images/iov.svg"
      },
      images: [{
        image_sync: {
          chain_name: "starname",
          base_denom: "uiov"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/starname/images/iov.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/starname/images/iov.svg"
      }]
    },
    {
      description: "e-Money NGM staking token. In addition to earning staking rewards the token is bought back and burned based on e-Money stablecoin inflation.",
      denom_units: [{
        denom: "ibc/1DC495FCEFDA068A3820F903EDBD78B942FBD204D7E93D3BA2B432E9669D1A59",
        exponent: 0,
        aliases: ["ungm"]
      }, {
        denom: "ngm",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/1DC495FCEFDA068A3820F903EDBD78B942FBD204D7E93D3BA2B432E9669D1A59",
      name: "e-Money",
      display: "ngm",
      symbol: "NGM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "emoney",
          base_denom: "ungm",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-37",
          path: "transfer/channel-37/ungm"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/ngm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/ngm.svg"
      },
      images: [{
        image_sync: {
          chain_name: "emoney",
          base_denom: "ungm"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/ngm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/ngm.svg"
      }]
    },
    {
      description: "e-Money EUR stablecoin. Audited and backed by fiat EUR deposits and government bonds.",
      denom_units: [{
        denom: "ibc/5973C068568365FFF40DEDCF1A1CB7582B6116B731CD31A12231AE25E20B871F",
        exponent: 0,
        aliases: ["eeur"]
      }, {
        denom: "eur",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/5973C068568365FFF40DEDCF1A1CB7582B6116B731CD31A12231AE25E20B871F",
      name: "e-Money EUR",
      display: "eur",
      symbol: "EEUR",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "emoney",
          base_denom: "eeur",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-37",
          path: "transfer/channel-37/eeur"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/eeur.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/eeur.svg"
      },
      images: [{
        image_sync: {
          chain_name: "emoney",
          base_denom: "eeur"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/eeur.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/emoney/images/eeur.svg"
      }]
    },
    {
      description: "LIKE is the native staking and governance token of LikeCoin chain, a Decentralized Publishing Infrastructure to empower content ownership, authenticity, and provenance.",
      denom_units: [{
        denom: "ibc/9989AD6CCA39D1131523DB0617B50F6442081162294B4795E26746292467B525",
        exponent: 0,
        aliases: ["nanolike"]
      }, {
        denom: "like",
        exponent: 9
      }],
      type_asset: "ics20",
      base: "ibc/9989AD6CCA39D1131523DB0617B50F6442081162294B4795E26746292467B525",
      name: "LikeCoin",
      display: "like",
      symbol: "LIKE",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "likecoin",
          base_denom: "nanolike",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-53",
          path: "transfer/channel-53/nanolike"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/like.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/like.svg"
      },
      images: [{
        image_sync: {
          chain_name: "likecoin",
          base_denom: "nanolike"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/like.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/like.svg"
      }]
    },
    {
      description: "The native token of IXO Chain",
      denom_units: [{
        denom: "ibc/F3FF7A84A73B62921538642F9797C423D2B4C4ACB3C7FCFFCE7F12AA69909C4B",
        exponent: 0,
        aliases: ["uixo"]
      }, {
        denom: "ixo",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/F3FF7A84A73B62921538642F9797C423D2B4C4ACB3C7FCFFCE7F12AA69909C4B",
      name: "Impacts Hub",
      display: "ixo",
      symbol: "IXO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "impacthub",
          base_denom: "uixo",
          channel_id: "channel-4"
        },
        chain: {
          channel_id: "channel-38",
          path: "transfer/channel-38/uixo"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.svg"
      },
      images: [{
        image_sync: {
          chain_name: "impacthub",
          base_denom: "uixo"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.svg"
      }]
    },
    {
      description: "The BCNA coin is the transactional token within the BitCanna network, serving the legal cannabis industry through its payment network, supply chain and trust network.",
      denom_units: [{
        denom: "ibc/D805F1DA50D31B96E4282C1D4181EDDFB1A44A598BFF5666F4B43E4B8BEA95A5",
        exponent: 0,
        aliases: ["ubcna"]
      }, {
        denom: "bcna",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/D805F1DA50D31B96E4282C1D4181EDDFB1A44A598BFF5666F4B43E4B8BEA95A5",
      name: "BitCanna",
      display: "bcna",
      symbol: "BCNA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "bitcanna",
          base_denom: "ubcna",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-51",
          path: "transfer/channel-51/ubcna"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitcanna/images/bcna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitcanna/images/bcna.svg"
      },
      images: [{
        image_sync: {
          chain_name: "bitcanna",
          base_denom: "ubcna"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitcanna/images/bcna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitcanna/images/bcna.svg"
      }]
    },
    {
      description: "BitSong Native Token",
      denom_units: [{
        denom: "ibc/4E5444C35610CC76FC94E7F7886B93121175C28262DDFDDE6F84E82BF2425452",
        exponent: 0,
        aliases: ["ubtsg"]
      }, {
        denom: "btsg",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/4E5444C35610CC76FC94E7F7886B93121175C28262DDFDDE6F84E82BF2425452",
      name: "BitSong",
      display: "btsg",
      symbol: "BTSG",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "bitsong",
          base_denom: "ubtsg",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-73",
          path: "transfer/channel-73/ubtsg"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/btsg.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/btsg.svg"
      },
      images: [{
        image_sync: {
          chain_name: "bitsong",
          base_denom: "ubtsg"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/btsg.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/btsg.svg"
      }]
    },
    {
      description: "The native token of Ki Chain",
      denom_units: [{
        denom: "ibc/B547DC9B897E7C3AA5B824696110B8E3D2C31E3ED3F02FF363DCBAD82457E07E",
        exponent: 0,
        aliases: ["uxki"]
      }, {
        denom: "xki",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/B547DC9B897E7C3AA5B824696110B8E3D2C31E3ED3F02FF363DCBAD82457E07E",
      name: "Ki",
      display: "xki",
      symbol: "XKI",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kichain",
          base_denom: "uxki",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-77",
          path: "transfer/channel-77/uxki"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/xki.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/xki.svg"
      },
      images: [{
        image_sync: {
          chain_name: "kichain",
          base_denom: "uxki"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/xki.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/xki.svg"
      }]
    },
    {
      description: "Panacea is a public blockchain launched by MediBloc, which is the key infrastructure for reinventing the patient-centered healthcare data ecosystem",
      denom_units: [{
        denom: "ibc/3BCCC93AD5DF58D11A6F8A05FA8BC801CBA0BA61A981F57E91B8B598BF8061CB",
        exponent: 0,
        aliases: ["umed"]
      }, {
        denom: "med",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/3BCCC93AD5DF58D11A6F8A05FA8BC801CBA0BA61A981F57E91B8B598BF8061CB",
      name: "Medibloc",
      display: "med",
      symbol: "MED",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "panacea",
          base_denom: "umed",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-82",
          path: "transfer/channel-82/umed"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/panacea/images/med.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/panacea/images/med.svg"
      },
      images: [{
        image_sync: {
          chain_name: "panacea",
          base_denom: "umed"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/panacea/images/med.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/panacea/images/med.svg"
      }]
    },
    {
      description: "The staking token of Bostrom",
      denom_units: [{
        denom: "ibc/FE2CD1E6828EC0FAB8AF39BAC45BC25B965BA67CCBC50C13A14BD610B0D1E2C4",
        exponent: 0,
        aliases: ["boot"]
      }],
      type_asset: "ics20",
      base: "ibc/FE2CD1E6828EC0FAB8AF39BAC45BC25B965BA67CCBC50C13A14BD610B0D1E2C4",
      name: "bostrom",
      display: "ibc/FE2CD1E6828EC0FAB8AF39BAC45BC25B965BA67CCBC50C13A14BD610B0D1E2C4",
      symbol: "BOOT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "bostrom",
          base_denom: "boot",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-95",
          path: "transfer/channel-95/boot"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/boot.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/boot.svg"
      },
      images: [{
        image_sync: {
          chain_name: "bostrom",
          base_denom: "boot"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/boot.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/boot.svg"
      }]
    },
    {
      description: "Native Token of Comdex Protocol",
      denom_units: [{
        denom: "ibc/EA3E1640F9B1532AB129A571203A0B9F789A7F14BB66E350DCBFA18E1A1931F0",
        exponent: 0,
        aliases: ["ucmdx"]
      }, {
        denom: "cmdx",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/EA3E1640F9B1532AB129A571203A0B9F789A7F14BB66E350DCBFA18E1A1931F0",
      name: "Comdex",
      display: "cmdx",
      symbol: "CMDX",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "comdex",
          base_denom: "ucmdx",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-87",
          path: "transfer/channel-87/ucmdx"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmdx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmdx.svg"
      },
      images: [{
        image_sync: {
          chain_name: "comdex",
          base_denom: "ucmdx"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmdx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmdx.svg"
      }]
    },
    {
      description: "Native token for the cheqd network",
      denom_units: [{
        denom: "ibc/7A08C6F11EF0F59EB841B9F788A87EC9F2361C7D9703157EC13D940DC53031FA",
        exponent: 0,
        aliases: ["ncheq"]
      }, {
        denom: "cheq",
        exponent: 9
      }],
      type_asset: "ics20",
      base: "ibc/7A08C6F11EF0F59EB841B9F788A87EC9F2361C7D9703157EC13D940DC53031FA",
      name: "Cheqd",
      display: "cheq",
      symbol: "CHEQ",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "cheqd",
          base_denom: "ncheq",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-108",
          path: "transfer/channel-108/ncheq"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cheqd/images/cheq.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cheqd/images/cheq.svg"
      },
      images: [{
        image_sync: {
          chain_name: "cheqd",
          base_denom: "ncheq"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cheqd/images/cheq.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cheqd/images/cheq.svg"
      }]
    },
    {
      description: "Native token of the Lum Network",
      denom_units: [{
        denom: "ibc/8A34AF0C1943FD0DFCDE9ADBF0B2C9959C45E87E6088EA2FC6ADACD59261B8A2",
        exponent: 0,
        aliases: ["ulum"]
      }, {
        denom: "lum",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/8A34AF0C1943FD0DFCDE9ADBF0B2C9959C45E87E6088EA2FC6ADACD59261B8A2",
      name: "Lum Network",
      display: "lum",
      symbol: "LUM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "lumnetwork",
          base_denom: "ulum",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-115",
          path: "transfer/channel-115/ulum"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumnetwork/images/lum.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumnetwork/images/lum.svg"
      },
      images: [{
        image_sync: {
          chain_name: "lumnetwork",
          base_denom: "ulum"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumnetwork/images/lum.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumnetwork/images/lum.svg"
      }]
    },
    {
      description: "The native token of Vidulum",
      denom_units: [{
        denom: "ibc/E7B35499CFBEB0FF5778127ABA4FB2C4B79A6B8D3D831D4379C4048C238796BD",
        exponent: 0,
        aliases: ["uvdl"]
      }, {
        denom: "vdl",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/E7B35499CFBEB0FF5778127ABA4FB2C4B79A6B8D3D831D4379C4048C238796BD",
      name: "Vidulum",
      display: "vdl",
      symbol: "VDL",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "vidulum",
          base_denom: "uvdl",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-124",
          path: "transfer/channel-124/uvdl"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/vidulum/images/vdl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/vidulum/images/vdl.svg"
      },
      images: [{
        image_sync: {
          chain_name: "vidulum",
          base_denom: "uvdl"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/vidulum/images/vdl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/vidulum/images/vdl.svg"
      }],
      keywords: ["osmosis_unstable"]
    },
    {
      description: "The native token of Desmos",
      denom_units: [{
        denom: "ibc/EA4C0A9F72E2CEDF10D0E7A9A6A22954DB3444910DB5BE980DF59B05A46DAD1C",
        exponent: 0,
        aliases: ["udsm"]
      }, {
        denom: "dsm",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/EA4C0A9F72E2CEDF10D0E7A9A6A22954DB3444910DB5BE980DF59B05A46DAD1C",
      name: "Desmos",
      display: "dsm",
      symbol: "DSM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "desmos",
          base_denom: "udsm",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-135",
          path: "transfer/channel-135/udsm"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/desmos/images/dsm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/desmos/images/dsm.svg"
      },
      images: [{
        image_sync: {
          chain_name: "desmos",
          base_denom: "udsm"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/desmos/images/dsm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/desmos/images/dsm.svg"
      }]
    },
    {
      description: "Native token of Dig Chain",
      denom_units: [{
        denom: "ibc/307E5C96C8F60D1CBEE269A9A86C0834E1DB06F2B3788AE4F716EDB97A48B97D",
        exponent: 0,
        aliases: ["udig"]
      }, {
        denom: "dig",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/307E5C96C8F60D1CBEE269A9A86C0834E1DB06F2B3788AE4F716EDB97A48B97D",
      name: "Dig Chain",
      display: "dig",
      symbol: "DIG",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "dig",
          base_denom: "udig",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-128",
          path: "transfer/channel-128/udig"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dig/images/dig.png"
      },
      images: [{
        image_sync: {
          chain_name: "dig",
          base_denom: "udig"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dig/images/dig.png"
      }],
      keywords: ["osmosis_unstable"]
    },
    {
      description: "Somm Token (SOMM) is the native staking token of the Sommelier Chain",
      denom_units: [
        {
          denom: "ibc/9BBA9A1C257E971E38C1422780CE6F0B0686F0A3085E2D61118D904BFE0F5F5E",
          exponent: 0,
          aliases: ["microsomm", "usomm"]
        },
        {
          denom: "msomm",
          exponent: 3,
          aliases: ["millisomm"]
        },
        {
          denom: "somm",
          exponent: 6
        }
      ],
      type_asset: "ics20",
      base: "ibc/9BBA9A1C257E971E38C1422780CE6F0B0686F0A3085E2D61118D904BFE0F5F5E",
      name: "Sommelier",
      display: "somm",
      symbol: "SOMM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "sommelier",
          base_denom: "usomm",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-165",
          path: "transfer/channel-165/usomm"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sommelier/images/somm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sommelier/images/somm.svg"
      },
      images: [{
        image_sync: {
          chain_name: "sommelier",
          base_denom: "usomm"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sommelier/images/somm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sommelier/images/somm.svg"
      }]
    },
    {
      description: "The native token of BandChain",
      denom_units: [{
        denom: "ibc/F867AE2112EFE646EC71A25CD2DFABB8927126AC1E19F1BBF0FF693A4ECA05DE",
        exponent: 0,
        aliases: ["uband"]
      }, {
        denom: "band",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/F867AE2112EFE646EC71A25CD2DFABB8927126AC1E19F1BBF0FF693A4ECA05DE",
      name: "Band Protocol",
      display: "band",
      symbol: "BAND",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "bandchain",
          base_denom: "uband",
          channel_id: "channel-83"
        },
        chain: {
          channel_id: "channel-148",
          path: "transfer/channel-148/uband"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bandchain/images/band.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bandchain/images/band.svg"
      },
      images: [{
        image_sync: {
          chain_name: "bandchain",
          base_denom: "uband"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bandchain/images/band.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bandchain/images/band.svg"
      }]
    },
    {
      description: "The native token of Konstellation Network",
      denom_units: [{
        denom: "ibc/346786EA82F41FE55FAD14BF69AD8BA9B36985406E43F3CB23E6C45A285A9593",
        exponent: 0,
        aliases: ["udarc"]
      }, {
        denom: "darc",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/346786EA82F41FE55FAD14BF69AD8BA9B36985406E43F3CB23E6C45A285A9593",
      name: "Konstellation",
      display: "darc",
      symbol: "DARC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "konstellation",
          base_denom: "udarc",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-171",
          path: "transfer/channel-171/udarc"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/konstellation/images/darc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/konstellation/images/darc.svg"
      },
      images: [{
        image_sync: {
          chain_name: "konstellation",
          base_denom: "udarc"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/konstellation/images/darc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/konstellation/images/darc.svg"
      }],
      keywords: ["osmosis_unstable"]
    },
    {
      description: "The native token of Umee",
      denom_units: [{
        denom: "ibc/67795E528DF67C5606FC20F824EA39A6EF55BA133F4DC79C90A8C47A0901E17C",
        exponent: 0,
        aliases: ["uumee"]
      }, {
        denom: "umee",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/67795E528DF67C5606FC20F824EA39A6EF55BA133F4DC79C90A8C47A0901E17C",
      name: "UX Chain",
      display: "umee",
      symbol: "UMEE",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "umee",
          base_denom: "uumee",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-184",
          path: "transfer/channel-184/uumee"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/umee/images/umee.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/umee/images/umee.svg"
      },
      images: [{
        image_sync: {
          chain_name: "umee",
          base_denom: "uumee"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/umee/images/umee.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/umee/images/umee.svg"
      }]
    },
    {
      description: "The native token of Gravity Bridge",
      denom_units: [{
        denom: "ibc/E97634A40119F1898989C2A23224ED83FDD0A57EA46B3A094E287288D1672B44",
        exponent: 0,
        aliases: ["ugraviton"]
      }, {
        denom: "graviton",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/E97634A40119F1898989C2A23224ED83FDD0A57EA46B3A094E287288D1672B44",
      name: "Gravity Bridge",
      display: "graviton",
      symbol: "GRAV",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "gravitybridge",
          base_denom: "ugraviton",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-144",
          path: "transfer/channel-144/ugraviton"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gravitybridge/images/grav.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gravitybridge/images/grav.svg"
      },
      images: [{
        image_sync: {
          chain_name: "gravitybridge",
          base_denom: "ugraviton"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gravitybridge/images/grav.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gravitybridge/images/grav.svg"
      }]
    },
    {
      description: "The native token of Decentr",
      denom_units: [{
        denom: "ibc/9BCB27203424535B6230D594553F1659C77EC173E36D9CF4759E7186EE747E84",
        exponent: 0,
        aliases: ["udec"]
      }, {
        denom: "dec",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/9BCB27203424535B6230D594553F1659C77EC173E36D9CF4759E7186EE747E84",
      name: "Decentr",
      display: "dec",
      symbol: "DEC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "decentr",
          base_denom: "udec",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-181",
          path: "transfer/channel-181/udec"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/decentr/images/dec.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/decentr/images/dec.svg"
      },
      images: [{
        image_sync: {
          chain_name: "decentr",
          base_denom: "udec"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/decentr/images/dec.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/decentr/images/dec.svg"
      }]
    },
    {
      description: "The native token cw20 for Marble DAO on Juno Chain",
      denom_units: [{
        denom: "ibc/F6B691D5F7126579DDC87357B09D653B47FDCE0A3383FF33C8D8B544FE29A8A6",
        exponent: 0,
        aliases: ["cw20:juno1g2g7ucurum66d42g8k5twk34yegdq8c82858gz0tq2fc75zy7khssgnhjl"]
      }, {
        denom: "marble",
        exponent: 3
      }],
      type_asset: "ics20",
      base: "ibc/F6B691D5F7126579DDC87357B09D653B47FDCE0A3383FF33C8D8B544FE29A8A6",
      name: "Marble",
      display: "marble",
      symbol: "MARBLE",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1g2g7ucurum66d42g8k5twk34yegdq8c82858gz0tq2fc75zy7khssgnhjl",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1g2g7ucurum66d42g8k5twk34yegdq8c82858gz0tq2fc75zy7khssgnhjl"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/marble.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/marble.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1g2g7ucurum66d42g8k5twk34yegdq8c82858gz0tq2fc75zy7khssgnhjl"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/marble.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/marble.svg"
      }]
    },
    {
      description: "The native governance token of Carbon",
      denom_units: [{
        denom: "ibc/8FEFAE6AECF6E2A255585617F781F35A8D5709A545A804482A261C0C9548A9D3",
        exponent: 0,
        aliases: ["swth"]
      }, {
        denom: "dswth",
        exponent: 8,
        aliases: ["SWTH"]
      }],
      type_asset: "ics20",
      base: "ibc/8FEFAE6AECF6E2A255585617F781F35A8D5709A545A804482A261C0C9548A9D3",
      name: "Carbon",
      display: "dswth",
      symbol: "SWTH",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "carbon",
          base_denom: "swth",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-188",
          path: "transfer/channel-188/swth"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/swth.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/swth.svg"
      },
      images: [{
        image_sync: {
          chain_name: "carbon",
          base_denom: "swth"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/swth.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/carbon/images/swth.svg"
      }]
    },
    {
      description: "The native token of Cerberus Chain",
      denom_units: [{
        denom: "ibc/41999DF04D9441DAC0DF5D8291DF4333FBCBA810FFD63FDCE34FDF41EF37B6F7",
        exponent: 0,
        aliases: ["ucrbrus"]
      }, {
        denom: "crbrus",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/41999DF04D9441DAC0DF5D8291DF4333FBCBA810FFD63FDCE34FDF41EF37B6F7",
      name: "Cerberus",
      display: "crbrus",
      symbol: "CRBRUS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "cerberus",
          base_denom: "ucrbrus",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-212",
          path: "transfer/channel-212/ucrbrus"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cerberus/images/crbrus.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cerberus/images/crbrus.svg"
      },
      images: [{
        image_sync: {
          chain_name: "cerberus",
          base_denom: "ucrbrus"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cerberus/images/crbrus.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cerberus/images/crbrus.svg"
      }],
      keywords: ["osmosis_unstable"]
    },
    {
      description: "The native staking and governance token of the Fetch Hub.",
      denom_units: [{
        denom: "ibc/5D1F516200EE8C6B2354102143B78A2DEDA25EDE771AC0F8DC3C1837C8FD4447",
        exponent: 0,
        aliases: ["afet"]
      }, {
        denom: "fet",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/5D1F516200EE8C6B2354102143B78A2DEDA25EDE771AC0F8DC3C1837C8FD4447",
      name: "Fetch.ai",
      display: "fet",
      symbol: "FET",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "fetchhub",
          base_denom: "afet",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-229",
          path: "transfer/channel-229/afet"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/fet.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/fet.svg"
      },
      images: [{
        image_sync: {
          chain_name: "fetchhub",
          base_denom: "afet"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/fet.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/fet.svg"
      }]
    },
    {
      description: "The native token of Asset Mantle",
      denom_units: [{
        denom: "ibc/CBA34207E969623D95D057D9B11B0C8B32B89A71F170577D982FDDE623813FFC",
        exponent: 0,
        aliases: ["umntl"]
      }, {
        denom: "mntl",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/CBA34207E969623D95D057D9B11B0C8B32B89A71F170577D982FDDE623813FFC",
      name: "AssetMantle",
      display: "mntl",
      symbol: "MNTL",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "assetmantle",
          base_denom: "umntl",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-232",
          path: "transfer/channel-232/umntl"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/assetmantle/images/mntl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/assetmantle/images/mntl.svg"
      },
      images: [{
        image_sync: {
          chain_name: "assetmantle",
          base_denom: "umntl"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/assetmantle/images/mntl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/assetmantle/images/mntl.svg"
      }]
    },
    {
      description: "The native token cw20 for Neta on Juno Chain",
      denom_units: [{
        denom: "ibc/297C64CC42B5A8D8F82FE2EBE208A6FE8F94B86037FA28C4529A23701C228F7A",
        exponent: 0,
        aliases: ["cw20:juno168ctmpyppk90d34p3jjy658zf5a5l3w8wk35wht6ccqj4mr0yv8s4j5awr"]
      }, {
        denom: "neta",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/297C64CC42B5A8D8F82FE2EBE208A6FE8F94B86037FA28C4529A23701C228F7A",
      name: "Neta",
      display: "neta",
      symbol: "NETA",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno168ctmpyppk90d34p3jjy658zf5a5l3w8wk35wht6ccqj4mr0yv8s4j5awr",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno168ctmpyppk90d34p3jjy658zf5a5l3w8wk35wht6ccqj4mr0yv8s4j5awr"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/neta.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/neta.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno168ctmpyppk90d34p3jjy658zf5a5l3w8wk35wht6ccqj4mr0yv8s4j5awr"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/neta.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/neta.svg"
      }]
    },
    {
      description: "The INJ token is the native governance token for the Injective chain.",
      denom_units: [{
        denom: "ibc/64BA6E31FE887D66C6F8F31C7B1A80C7CA179239677B4088BB55F5EA07DBE273",
        exponent: 0,
        aliases: ["inj"]
      }, {
        denom: "INJ",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/64BA6E31FE887D66C6F8F31C7B1A80C7CA179239677B4088BB55F5EA07DBE273",
      name: "Injective",
      display: "INJ",
      symbol: "INJ",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "injective",
          base_denom: "inj",
          channel_id: "channel-8"
        },
        chain: {
          channel_id: "channel-122",
          path: "transfer/channel-122/inj"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.svg"
      },
      images: [{
        image_sync: {
          chain_name: "injective",
          base_denom: "inj"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.svg"
      }]
    },
    {
      description: "The KRW stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "ibc/204A582244FC241613DBB50B04D1D454116C58C4AF7866C186AA0D6EEAD42780",
          exponent: 0,
          aliases: ["microkrw", "ukrw"]
        },
        {
          denom: "mkrw",
          exponent: 3,
          aliases: ["millikrw"]
        },
        {
          denom: "krt",
          exponent: 6,
          aliases: ["krtc"]
        }
      ],
      type_asset: "ics20",
      base: "ibc/204A582244FC241613DBB50B04D1D454116C58C4AF7866C186AA0D6EEAD42780",
      name: "TerraClassicKRW",
      display: "krt",
      symbol: "KRTC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "terra",
          base_denom: "ukrw",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-72",
          path: "transfer/channel-72/ukrw"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/krt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/krt.svg"
      },
      images: [{
        image_sync: {
          chain_name: "terra",
          base_denom: "ukrw"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/krt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/krt.svg"
      }]
    },
    {
      description: "TICK coin is the token for the Microtick Price Discovery & Oracle App",
      denom_units: [{
        denom: "ibc/655BCEF3CDEBE32863FF281DBBE3B06160339E9897DC9C9C9821932A5F8BA6F8",
        exponent: 0,
        aliases: ["utick"]
      }, {
        denom: "tick",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/655BCEF3CDEBE32863FF281DBBE3B06160339E9897DC9C9C9821932A5F8BA6F8",
      name: "Microtick",
      display: "tick",
      symbol: "TICK",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "microtick",
          base_denom: "utick",
          channel_id: "channel-16"
        },
        chain: {
          channel_id: "channel-39",
          path: "transfer/channel-39/utick"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/microtick/images/tick.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/microtick/images/tick.svg"
      },
      images: [{
        image_sync: {
          chain_name: "microtick",
          base_denom: "utick"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/microtick/images/tick.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/microtick/images/tick.svg"
      }],
      keywords: ["osmosis_unstable"]
    },
    {
      description: "Rowan Token (ROWAN) is the Sifchain Network's native utility token, used as the primary means to govern, provide liquidity, secure the blockchain, incentivize participants, and provide a default mechanism to store and exchange value.",
      denom_units: [{
        denom: "ibc/8318FD63C42203D16DDCAF49FE10E8590669B3219A3E87676AC9DA50722687FB",
        exponent: 0,
        aliases: ["rowan"]
      }, {
        denom: "ROWAN",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/8318FD63C42203D16DDCAF49FE10E8590669B3219A3E87676AC9DA50722687FB",
      name: "Sifchain",
      display: "ROWAN",
      symbol: "ROWAN",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "sifchain",
          base_denom: "rowan",
          channel_id: "channel-17"
        },
        chain: {
          channel_id: "channel-47",
          path: "transfer/channel-47/rowan"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sifchain/images/rowan.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sifchain/images/rowan.svg"
      },
      images: [{
        image_sync: {
          chain_name: "sifchain",
          base_denom: "rowan"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sifchain/images/rowan.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sifchain/images/rowan.svg"
      }]
    },
    {
      description: "The native token of Shentu",
      denom_units: [{
        denom: "ibc/7ED954CFFFC06EE8419387F3FC688837FF64EF264DE14219935F724EEEDBF8D3",
        exponent: 0,
        aliases: ["uctk"]
      }, {
        denom: "ctk",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/7ED954CFFFC06EE8419387F3FC688837FF64EF264DE14219935F724EEEDBF8D3",
      name: "Shentu",
      display: "ctk",
      symbol: "CTK",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "shentu",
          base_denom: "uctk",
          channel_id: "channel-8"
        },
        chain: {
          channel_id: "channel-146",
          path: "transfer/channel-146/uctk"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shentu/images/ctk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shentu/images/ctk.svg"
      },
      images: [{
        image_sync: {
          chain_name: "shentu",
          base_denom: "uctk"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shentu/images/ctk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shentu/images/ctk.svg"
      }]
    },
    {
      description: "Hope Galaxy is an NFT collection based on its own native Token $HOPE, a cw20 token on Juno chain.",
      denom_units: [{
        denom: "ibc/C2A2E9CA95DDD4828B75124B5E27B8401C7D8493BC48353D418CBFC04565899B",
        exponent: 0,
        aliases: ["cw20:juno1re3x67ppxap48ygndmrc7har2cnc7tcxtm9nplcas4v0gc3wnmvs3s807z"]
      }, {
        denom: "hope",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/C2A2E9CA95DDD4828B75124B5E27B8401C7D8493BC48353D418CBFC04565899B",
      name: "Hope Galaxy",
      display: "hope",
      symbol: "HOPE",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1re3x67ppxap48ygndmrc7har2cnc7tcxtm9nplcas4v0gc3wnmvs3s807z",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1re3x67ppxap48ygndmrc7har2cnc7tcxtm9nplcas4v0gc3wnmvs3s807z"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hope.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hope.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1re3x67ppxap48ygndmrc7har2cnc7tcxtm9nplcas4v0gc3wnmvs3s807z"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hope.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hope.svg"
      }]
    },
    {
      description: "Racoon aims to simplify accessibility to AI, NFTs and Gambling on the Cosmos Ecosystem",
      denom_units: [{
        denom: "ibc/6BDB4C8CCD45033F9604E4B93ED395008A753E01EECD6992E7D1EA23D9D3B788",
        exponent: 0,
        aliases: ["cw20:juno1r4pzw8f9z0sypct5l9j906d47z998ulwvhvqe5xdwgy8wf84583sxwh0pa"]
      }, {
        denom: "rac",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/6BDB4C8CCD45033F9604E4B93ED395008A753E01EECD6992E7D1EA23D9D3B788",
      name: "Racoon",
      display: "rac",
      symbol: "juno.RAC",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1r4pzw8f9z0sypct5l9j906d47z998ulwvhvqe5xdwgy8wf84583sxwh0pa",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1r4pzw8f9z0sypct5l9j906d47z998ulwvhvqe5xdwgy8wf84583sxwh0pa"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/rac.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/rac.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1r4pzw8f9z0sypct5l9j906d47z998ulwvhvqe5xdwgy8wf84583sxwh0pa"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/rac.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/rac.svg"
      }]
    },
    {
      description: "Frax is a fractional-algorithmic stablecoin protocol. It aims to provide a highly scalable, decentralized, algorithmic money in place of fixed-supply assets like BTC. Additionally, FXS is the value accrual and governance token of the entire Frax ecosystem.",
      denom_units: [{
        denom: "ibc/0E43EDE2E2A3AFA36D0CD38BDDC0B49FECA64FA426A82E102F304E430ECF46EE",
        exponent: 0,
        aliases: ["frax-wei"]
      }, {
        denom: "frax",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/0E43EDE2E2A3AFA36D0CD38BDDC0B49FECA64FA426A82E102F304E430ECF46EE",
      name: "Frax",
      display: "frax",
      symbol: "FRAX",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Frax Protocol"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0x853d955acef822db058eb8505911ed77f175b99e"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "frax-wei",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/frax-wei"
          }
        }
      ],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frax.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "frax-wei"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frax.svg"
      }]
    },
    {
      description: "Gravity Bridge WBTC",
      denom_units: [{
        denom: "ibc/C9B0D48FD2C5B91135F118FF2484551888966590D7BDC20F6A87308DBA670796",
        exponent: 0,
        aliases: ["gravity0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"]
      }, {
        denom: "gwbtc",
        exponent: 8
      }],
      type_asset: "ics20",
      base: "ibc/C9B0D48FD2C5B91135F118FF2484551888966590D7BDC20F6A87308DBA670796",
      name: "Wrapped Bitcoin (Gravity Bridge)",
      display: "gwbtc",
      symbol: "WBTC.grv",
      traces: [
        {
          type: "bridge",
          counterparty: {
            chain_name: "bitcoin",
            base_denom: "sat"
          },
          provider: "BitGo, Kyber, and Ren"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599"
          },
          provider: "Gravity Bridge"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "gravitybridge",
            base_denom: "gravity0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",
            channel_id: "channel-10"
          },
          chain: {
            channel_id: "channel-144",
            path: "transfer/channel-144/gravity0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.svg"
      },
      images: [{
        image_sync: {
          chain_name: "gravitybridge",
          base_denom: "gravity0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.svg"
      }, {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wbtc.grv.svg"
      }]
    },
    {
      description: "Gravity Bridge WETH",
      denom_units: [{
        denom: "ibc/65381C5F3FD21442283D56925E62EA524DED8B6927F0FF94E21E0020954C40B5",
        exponent: 0,
        aliases: ["gravity0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"]
      }, {
        denom: "gweth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/65381C5F3FD21442283D56925E62EA524DED8B6927F0FF94E21E0020954C40B5",
      name: "Ether (Gravity Bridge)",
      display: "gweth",
      symbol: "WETH.grv",
      traces: [
        {
          type: "wrapped",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "wei"
          },
          provider: "Ethereum"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
          },
          provider: "Gravity Bridge"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "gravitybridge",
            base_denom: "gravity0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
            channel_id: "channel-10"
          },
          chain: {
            channel_id: "channel-144",
            path: "transfer/channel-144/gravity0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
          }
        }
      ],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/weth.svg"
      },
      images: [{
        image_sync: {
          chain_name: "gravitybridge",
          base_denom: "gravity0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/weth.svg"
      }, {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/weth.grv.svg"
      }]
    },
    {
      description: "Gravity Bridge USDC",
      denom_units: [{
        denom: "ibc/9F9B07EF9AD291167CF5700628145DE1DEB777C2CFC7907553B24446515F6D0E",
        exponent: 0,
        aliases: ["gravity0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"]
      }, {
        denom: "gusdc",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/9F9B07EF9AD291167CF5700628145DE1DEB777C2CFC7907553B24446515F6D0E",
      name: "USDC (Gravity Bridge)",
      display: "gusdc",
      symbol: "USDC.grv",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Circle"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          provider: "Gravity Bridge"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "gravitybridge",
            base_denom: "gravity0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
            channel_id: "channel-10"
          },
          chain: {
            channel_id: "channel-144",
            path: "transfer/channel-144/gravity0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
          }
        }
      ],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        image_sync: {
          chain_name: "gravitybridge",
          base_denom: "gravity0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }, {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.grv.svg"
      }]
    },
    {
      description: "Gravity Bridge DAI",
      denom_units: [{
        denom: "ibc/F292A17CF920E3462C816CBE6B042E779F676CAB59096904C4C1C966413E3DF5",
        exponent: 0,
        aliases: ["gravity0x6B175474E89094C44Da98b954EedeAC495271d0F"]
      }, {
        denom: "gdai",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/F292A17CF920E3462C816CBE6B042E779F676CAB59096904C4C1C966413E3DF5",
      name: "DAI Stablecoin (Gravity Bridge)",
      display: "gdai",
      symbol: "DAI.grv",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "MakerDAO"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0x6b175474e89094c44da98b954eedeac495271d0f"
          },
          provider: "Gravity Bridge"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "gravitybridge",
            base_denom: "gravity0x6B175474E89094C44Da98b954EedeAC495271d0F",
            channel_id: "channel-10"
          },
          chain: {
            channel_id: "channel-144",
            path: "transfer/channel-144/gravity0x6B175474E89094C44Da98b954EedeAC495271d0F"
          }
        }
      ],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/dai.svg"
      },
      images: [{
        image_sync: {
          chain_name: "gravitybridge",
          base_denom: "gravity0x6B175474E89094C44Da98b954EedeAC495271d0F"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/dai.svg"
      }, {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/dai.grv.svg"
      }]
    },
    {
      description: "Gravity Bridge USDT",
      denom_units: [{
        denom: "ibc/71B441E27F1BBB44DD0891BCD370C2794D404D60A4FFE5AECCD9B1E28BC89805",
        exponent: 0,
        aliases: ["gravity0xdAC17F958D2ee523a2206206994597C13D831ec7"]
      }, {
        denom: "gusdt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/71B441E27F1BBB44DD0891BCD370C2794D404D60A4FFE5AECCD9B1E28BC89805",
      name: "Tether USD (Gravity Bridge)",
      display: "gusdt",
      symbol: "USDT.grv",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Tether"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7"
          },
          provider: "Gravity Bridge"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "gravitybridge",
            base_denom: "gravity0xdAC17F958D2ee523a2206206994597C13D831ec7",
            channel_id: "channel-10"
          },
          chain: {
            channel_id: "channel-144",
            path: "transfer/channel-144/gravity0xdAC17F958D2ee523a2206206994597C13D831ec7"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdt.grv.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdt.grv.png"
      }, {
        image_sync: {
          chain_name: "gravitybridge",
          base_denom: "gravity0xdAC17F958D2ee523a2206206994597C13D831ec7"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }]
    },
    {
      description: "The native token of Marble DEX on Juno Chain",
      denom_units: [{
        denom: "ibc/DB9755CB6FE55192948AE074D18FA815E1429D3D374D5BDA8D89623C6CF235C3",
        exponent: 0,
        aliases: ["cw20:juno1y9rf7ql6ffwkv02hsgd4yruz23pn4w97p75e2slsnkm0mnamhzysvqnxaq"]
      }, {
        denom: "block",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/DB9755CB6FE55192948AE074D18FA815E1429D3D374D5BDA8D89623C6CF235C3",
      name: "Block",
      display: "block",
      symbol: "BLOCK",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1y9rf7ql6ffwkv02hsgd4yruz23pn4w97p75e2slsnkm0mnamhzysvqnxaq",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1y9rf7ql6ffwkv02hsgd4yruz23pn4w97p75e2slsnkm0mnamhzysvqnxaq"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/block.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/block.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1y9rf7ql6ffwkv02hsgd4yruz23pn4w97p75e2slsnkm0mnamhzysvqnxaq"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/block.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/block.svg"
      }]
    },
    {
      description: "Hash is the staking token of the Provenance Blockchain",
      denom_units: [{
        denom: "ibc/CE5BFF1D9BADA03BB5CCA5F56939392A761B53A10FBD03B37506669C3218D3B2",
        exponent: 0,
        aliases: ["nhash"]
      }, {
        denom: "hash",
        exponent: 9
      }],
      type_asset: "ics20",
      base: "ibc/CE5BFF1D9BADA03BB5CCA5F56939392A761B53A10FBD03B37506669C3218D3B2",
      name: "Provenance",
      display: "hash",
      symbol: "HASH",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "provenance",
          base_denom: "nhash",
          channel_id: "channel-7"
        },
        chain: {
          channel_id: "channel-222",
          path: "transfer/channel-222/nhash"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/provenance/images/prov.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/provenance/images/prov.svg"
      },
      images: [{
        image_sync: {
          chain_name: "provenance",
          base_denom: "nhash"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/provenance/images/prov.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/provenance/images/prov.svg"
      }]
    },
    {
      description: "GLX is the staking token of the Galaxy Chain",
      denom_units: [{
        denom: "ibc/F49DE040EBA5AB2FAD5F660C2A1DDF98A68470FAE82229818BE775EBF3EE79F2",
        exponent: 0,
        aliases: ["uglx"]
      }, {
        denom: "glx",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/F49DE040EBA5AB2FAD5F660C2A1DDF98A68470FAE82229818BE775EBF3EE79F2",
      name: "Galaxy",
      display: "glx",
      symbol: "GLX",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "galaxy",
          base_denom: "uglx",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-236",
          path: "transfer/channel-236/uglx"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/galaxy/images/glx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/galaxy/images/glx.svg"
      },
      images: [{
        image_sync: {
          chain_name: "galaxy",
          base_denom: "uglx"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/galaxy/images/glx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/galaxy/images/glx.svg"
      }]
    },
    {
      description: "The DAO token to build consensus among Hong Kong People",
      denom_units: [{
        denom: "ibc/52E12CF5CA2BB903D84F5298B4BFD725D66CAB95E09AA4FC75B2904CA5485FEB",
        exponent: 0,
        aliases: ["dhk", "cw20:juno1tdjwrqmnztn2j3sj2ln9xnyps5hs48q3ddwjrz7jpv6mskappjys5czd49"]
      }],
      type_asset: "ics20",
      base: "ibc/52E12CF5CA2BB903D84F5298B4BFD725D66CAB95E09AA4FC75B2904CA5485FEB",
      name: "DHK",
      display: "dhk",
      symbol: "DHK",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1tdjwrqmnztn2j3sj2ln9xnyps5hs48q3ddwjrz7jpv6mskappjys5czd49",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1tdjwrqmnztn2j3sj2ln9xnyps5hs48q3ddwjrz7jpv6mskappjys5czd49"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/dhk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/dhk.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1tdjwrqmnztn2j3sj2ln9xnyps5hs48q3ddwjrz7jpv6mskappjys5czd49"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/dhk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/dhk.svg"
      }]
    },
    {
      description: "Token governance for Junoswap",
      denom_units: [{
        denom: "ibc/00B6E60AD3D65CBEF5579AC8AF609527C0B57535B6E32D96C80A735344FD9DCC",
        exponent: 0,
        aliases: ["cw20:juno15u3dt79t6sxxa3x3kpkhzsy56edaa5a66wvt3kxmukqjz2sx0hes5sn38g"]
      }, {
        denom: "raw",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/00B6E60AD3D65CBEF5579AC8AF609527C0B57535B6E32D96C80A735344FD9DCC",
      name: "JunoSwap",
      display: "raw",
      symbol: "RAW",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno15u3dt79t6sxxa3x3kpkhzsy56edaa5a66wvt3kxmukqjz2sx0hes5sn38g",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno15u3dt79t6sxxa3x3kpkhzsy56edaa5a66wvt3kxmukqjz2sx0hes5sn38g"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/raw.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/raw.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno15u3dt79t6sxxa3x3kpkhzsy56edaa5a66wvt3kxmukqjz2sx0hes5sn38g"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/raw.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/raw.svg"
      }]
    },
    {
      description: "MEME Token (MEME) is the native staking token of the MEME Chain",
      denom_units: [{
        denom: "ibc/67C89B8B0A70C08F093C909A4DD996DD10E0494C87E28FD9A551697BF173D4CA",
        exponent: 0,
        aliases: ["umeme"]
      }, {
        denom: "meme",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/67C89B8B0A70C08F093C909A4DD996DD10E0494C87E28FD9A551697BF173D4CA",
      name: "MEME",
      display: "meme",
      symbol: "MEME",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "meme",
          base_denom: "umeme",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-238",
          path: "transfer/channel-238/umeme"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/meme/images/meme.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/meme/images/meme.svg"
      },
      images: [{
        image_sync: {
          chain_name: "meme",
          base_denom: "umeme"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/meme/images/meme.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/meme/images/meme.svg"
      }]
    },
    {
      description: "Profit sharing token for Another.Software validator. Hold and receive dividends from Another.Software validator commissions!",
      denom_units: [{
        denom: "ibc/AA1C80225BCA7B32ED1FC6ABF8B8E899BEB48ECDB4B417FD69873C6D715F97E7",
        exponent: 0,
        aliases: ["cw20:juno17wzaxtfdw5em7lc94yed4ylgjme63eh73lm3lutp2rhcxttyvpwsypjm4w"]
      }, {
        denom: "asvt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/AA1C80225BCA7B32ED1FC6ABF8B8E899BEB48ECDB4B417FD69873C6D715F97E7",
      name: "Another.Software Validator Token",
      display: "asvt",
      symbol: "ASVT",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno17wzaxtfdw5em7lc94yed4ylgjme63eh73lm3lutp2rhcxttyvpwsypjm4w",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno17wzaxtfdw5em7lc94yed4ylgjme63eh73lm3lutp2rhcxttyvpwsypjm4w"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/asvt.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno17wzaxtfdw5em7lc94yed4ylgjme63eh73lm3lutp2rhcxttyvpwsypjm4w"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/asvt.png"
      }]
    },
    {
      description: "DAO dedicated to building tools on the Juno Network",
      denom_units: [{
        denom: "ibc/0CB9DB3441D0D50F35699DEE22B9C965487E83FB2D9F483D1CC5CA34E856C484",
        exponent: 0,
        aliases: ["cw20:juno1n7n7d5088qlzlj37e9mgmkhx6dfgtvt02hqxq66lcap4dxnzdhwqfmgng3"]
      }, {
        denom: "joe",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/0CB9DB3441D0D50F35699DEE22B9C965487E83FB2D9F483D1CC5CA34E856C484",
      name: "JoeDAO",
      display: "joe",
      symbol: "JOE",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1n7n7d5088qlzlj37e9mgmkhx6dfgtvt02hqxq66lcap4dxnzdhwqfmgng3",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1n7n7d5088qlzlj37e9mgmkhx6dfgtvt02hqxq66lcap4dxnzdhwqfmgng3"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/joe.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1n7n7d5088qlzlj37e9mgmkhx6dfgtvt02hqxq66lcap4dxnzdhwqfmgng3"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/joe.png"
      }]
    },
    {
      description: "The native staking token of Terra.",
      denom_units: [{
        denom: "ibc/785AFEC6B3741100D15E7AF01374E3C4C36F24888E96479B1C33F5C71F364EF9",
        exponent: 0,
        aliases: ["uluna"]
      }, {
        denom: "luna",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/785AFEC6B3741100D15E7AF01374E3C4C36F24888E96479B1C33F5C71F364EF9",
      name: "Luna",
      display: "luna",
      symbol: "LUNA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "terra2",
          base_denom: "uluna",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-251",
          path: "transfer/channel-251/uluna"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.svg"
      },
      images: [{
        image_sync: {
          chain_name: "terra2",
          base_denom: "uluna"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.svg"
      }]
    },
    {
      description: "Native token of Rizon Chain",
      denom_units: [{
        denom: "ibc/2716E3F2E146664BEFA9217F1A03BFCEDBCD5178B3C71CACB1A0D7584451D219",
        exponent: 0,
        aliases: ["uatolo"]
      }, {
        denom: "atolo",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/2716E3F2E146664BEFA9217F1A03BFCEDBCD5178B3C71CACB1A0D7584451D219",
      name: "Rizon",
      display: "atolo",
      symbol: "ATOLO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "rizon",
          base_denom: "uatolo",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-221",
          path: "transfer/channel-221/uatolo"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rizon/images/atolo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rizon/images/atolo.svg"
      },
      images: [{
        image_sync: {
          chain_name: "rizon",
          base_denom: "uatolo"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rizon/images/atolo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rizon/images/atolo.svg"
      }]
    },
    {
      description: "Governance token of Kava Lend Protocol",
      denom_units: [{
        denom: "ibc/D6C28E07F7343360AC41E15DDD44D79701DDCA2E0C2C41279739C8D4AE5264BC",
        exponent: 0,
        aliases: ["hard"]
      }, {
        denom: "HARD",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/D6C28E07F7343360AC41E15DDD44D79701DDCA2E0C2C41279739C8D4AE5264BC",
      name: "Kava Hard",
      display: "HARD",
      symbol: "HARD",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kava",
          base_denom: "hard",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-143",
          path: "transfer/channel-143/hard"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/hard.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/hard.svg"
      },
      images: [{
        image_sync: {
          chain_name: "kava",
          base_denom: "hard"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/hard.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/hard.svg"
      }]
    },
    {
      description: "Governance token of Kava Swap Protocol",
      denom_units: [{
        denom: "ibc/70CF1A54E23EA4E480DEDA9E12082D3FD5684C3483CBDCE190C5C807227688C5",
        exponent: 0,
        aliases: ["swp"]
      }, {
        denom: "SWP",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/70CF1A54E23EA4E480DEDA9E12082D3FD5684C3483CBDCE190C5C807227688C5",
      name: "Kava Swap",
      display: "SWP",
      symbol: "SWP",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kava",
          base_denom: "swp",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-143",
          path: "transfer/channel-143/swp"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/swp.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/swp.svg"
      },
      images: [{
        image_sync: {
          chain_name: "kava",
          base_denom: "swp"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/swp.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/swp.svg"
      }]
    },
    {
      description: "A blockchain-based middleware, acting as a bridge between cryptocurrency smart contracts, data feeds, APIs and traditional bank account payments.",
      denom_units: [{
        denom: "ibc/D3327A763C23F01EC43D1F0DB3CEFEC390C362569B6FD191F40A5192F8960049",
        exponent: 0,
        aliases: ["link-wei"]
      }, {
        denom: "link",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/D3327A763C23F01EC43D1F0DB3CEFEC390C362569B6FD191F40A5192F8960049",
      name: "Chainlink",
      display: "link",
      symbol: "LINK",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x514910771af9ca656af840dff83e8264ecf986ca"
        },
        provider: "Axelar"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "axelar",
          base_denom: "link-wei",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-208",
          path: "transfer/channel-208/link-wei"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/link.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/link.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "link-wei"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/link.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/link.svg"
      }]
    },
    {
      description: "L1 coin is the GenesisL1 blockchain utility, governance and EVM token",
      denom_units: [{
        denom: "ibc/F16FDC11A7662B86BC0B9CE61871CBACF7C20606F95E86260FD38915184B75B4",
        exponent: 0,
        aliases: ["el1"]
      }, {
        denom: "l1",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/F16FDC11A7662B86BC0B9CE61871CBACF7C20606F95E86260FD38915184B75B4",
      name: "GenesisL1",
      display: "l1",
      symbol: "L1",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "genesisl1",
          base_denom: "el1",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-253",
          path: "transfer/channel-253/el1"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/genesisl1/images/l1.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/genesisl1/images/l1.svg"
      },
      images: [{
        image_sync: {
          chain_name: "genesisl1",
          base_denom: "el1"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/genesisl1/images/l1.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/genesisl1/images/l1.svg"
      }],
      keywords: ["osmosis_unstable"]
    },
    {
      description: "Aave is an Open Source and Non-Custodial protocol to earn interest on deposits & borrow assets. It also features access to highly innovative flash loans, which let developers borrow instantly and easily; no collateral needed. With 16 different assets, 5 of which are stablecoins.",
      denom_units: [{
        denom: "ibc/384E5DD50BDE042E1AAF51F312B55F08F95BC985C503880189258B4D9374CBBE",
        exponent: 0,
        aliases: ["aave-wei"]
      }, {
        denom: "aave",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/384E5DD50BDE042E1AAF51F312B55F08F95BC985C503880189258B4D9374CBBE",
      name: "Aave",
      display: "aave",
      symbol: "AAVE",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9"
        },
        provider: "Axelar"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "axelar",
          base_denom: "aave-wei",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-208",
          path: "transfer/channel-208/aave-wei"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/aave.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "aave-wei"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/aave.svg"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "ApeCoin found new expression in web3 through art, gaming, entertainment, and events. APE is a token made to support what\u2019s next, controlled, and built on by the community. It will serve as a decentralized protocol layer for community-led initiatives that drive culture forward into the metaverse.",
      denom_units: [{
        denom: "ibc/F83CC6471DA4D4B508F437244F10B9E4C68975344E551A2DEB6B8617AB08F0D4",
        exponent: 0,
        aliases: ["ape-wei"]
      }, {
        denom: "ape",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/F83CC6471DA4D4B508F437244F10B9E4C68975344E551A2DEB6B8617AB08F0D4",
      name: "ApeCoin",
      display: "ape",
      symbol: "APE",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x4d224452801aced8b2f0aebe155379bb5d594381"
        },
        provider: "Axelar"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "axelar",
          base_denom: "ape-wei",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-208",
          path: "transfer/channel-208/ape-wei"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ape.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "ape-wei"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ape.svg"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "Maker is a Decentralized Autonomous Organization that creates and insures the dai stablecoin on the Ethereum blockchain",
      denom_units: [{
        denom: "ibc/D27DDDF34BB47E5D5A570742CC667DE53277867116CCCA341F27785E899A70F3",
        exponent: 0,
        aliases: ["mkr-wei"]
      }, {
        denom: "mkr",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/D27DDDF34BB47E5D5A570742CC667DE53277867116CCCA341F27785E899A70F3",
      name: "Maker",
      display: "mkr",
      symbol: "MKR",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2"
        },
        provider: "Axelar"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "axelar",
          base_denom: "mkr-wei",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-208",
          path: "transfer/channel-208/mkr-wei"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/mkr.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "mkr-wei"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/mkr.svg"
      }]
    },
    {
      description: "RAI is a non-pegged, ETH-backed stable asset. It is useful as more 'stable' collateral for other DeFi protocols (compared to ETH or BTC) or as a stable asset with an embedded interest rate.",
      denom_units: [{
        denom: "ibc/BD796662F8825327D41C96355DF62045A5BA225BAE31C0A86289B9D88ED3F44E",
        exponent: 0,
        aliases: ["rai-wei"]
      }, {
        denom: "rai",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/BD796662F8825327D41C96355DF62045A5BA225BAE31C0A86289B9D88ED3F44E",
      name: "Rai Reflex Index",
      display: "rai",
      symbol: "RAI",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "RAI Finance"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0x03ab458634910aad20ef5f1c8ee96f1d6ac54919"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "rai-wei",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/rai-wei"
          }
        }
      ],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/rai.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "rai-wei"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/rai.svg"
      }]
    },
    {
      description: "SHIBA INU is a 100% decentralized community experiment with it claims that 1/2 the tokens have been sent to Vitalik and the other half were locked to a Uniswap pool and the keys burned.",
      denom_units: [{
        denom: "ibc/19305E20681911F14D1FB275E538CDE524C3BF88CF9AE5D5F78F4D4DA05E85B2",
        exponent: 0,
        aliases: ["shib-wei"]
      }, {
        denom: "shib",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/19305E20681911F14D1FB275E538CDE524C3BF88CF9AE5D5F78F4D4DA05E85B2",
      name: "Shiba Inu",
      display: "shib",
      symbol: "SHIB",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce"
        },
        provider: "Axelar"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "axelar",
          base_denom: "shib-wei",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-208",
          path: "transfer/channel-208/shib-wei"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/shib.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "shib-wei"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/shib.svg"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "The native staking and governance token of the Kujira chain.",
      denom_units: [{
        denom: "ibc/BB6BCDB515050BAE97516111873CCD7BCF1FD0CCB723CC12F3C4F704D6C646CE",
        exponent: 0,
        aliases: ["ukuji"]
      }, {
        denom: "kuji",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/BB6BCDB515050BAE97516111873CCD7BCF1FD0CCB723CC12F3C4F704D6C646CE",
      name: "Kujira",
      display: "kuji",
      symbol: "KUJI",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kujira",
          base_denom: "ukuji",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-259",
          path: "transfer/channel-259/ukuji"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kuji.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kuji.svg"
      },
      images: [{
        image_sync: {
          chain_name: "kujira",
          base_denom: "ukuji"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kuji.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kuji.svg"
      }]
    },
    {
      description: "The native token of Tgrade",
      denom_units: [{
        denom: "ibc/1E09CB0F506ACF12FDE4683FB6B34DA62FB4BE122641E0D93AAF98A87675676C",
        exponent: 0,
        aliases: ["utgd"]
      }, {
        denom: "tgd",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/1E09CB0F506ACF12FDE4683FB6B34DA62FB4BE122641E0D93AAF98A87675676C",
      name: "Tgrade",
      display: "tgd",
      symbol: "TGD",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "tgrade",
          base_denom: "utgd",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-263",
          path: "transfer/channel-263/utgd"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tgrade/images/tgrade-symbol-gradient.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tgrade/images/tgrade-symbol-gradient.svg"
      },
      images: [{
        image_sync: {
          chain_name: "tgrade",
          base_denom: "utgd"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tgrade/images/tgrade-symbol-gradient.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tgrade/images/tgrade-symbol-gradient.svg"
      }]
    },
    {
      description: "Echelon - a scalable EVM on Cosmos, built on Proof-of-Stake with fast-finality that prioritizes interoperability and novel economics",
      denom_units: [{
        denom: "ibc/47EE224A9B33CF0ABEAC82106E52F0F6E8D8CEC5BA80B9D9A6F55172CBB0177D",
        exponent: 0,
        aliases: ["aechelon"]
      }, {
        denom: "echelon",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/47EE224A9B33CF0ABEAC82106E52F0F6E8D8CEC5BA80B9D9A6F55172CBB0177D",
      name: "Echelon",
      display: "echelon",
      symbol: "ECH",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "echelon",
          base_denom: "aechelon",
          channel_id: "channel-11"
        },
        chain: {
          channel_id: "channel-403",
          path: "transfer/channel-403/aechelon"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/echelon/images/ech.svg"
      },
      images: [{
        image_sync: {
          chain_name: "echelon",
          base_denom: "aechelon"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/echelon/images/ech.svg"
      }]
    },
    {
      description: "Staking and governance token for ODIN Protocol",
      denom_units: [{
        denom: "ibc/C360EF34A86D334F625E4CBB7DA3223AEA97174B61F35BB3758081A8160F7D9B",
        exponent: 0,
        aliases: ["loki"]
      }, {
        denom: "odin",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/C360EF34A86D334F625E4CBB7DA3223AEA97174B61F35BB3758081A8160F7D9B",
      name: "Odin Protocol",
      display: "odin",
      symbol: "ODIN",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "odin",
          base_denom: "loki",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-258",
          path: "transfer/channel-258/loki"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/odin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/odin.svg"
      },
      images: [{
        image_sync: {
          chain_name: "odin",
          base_denom: "loki"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/odin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/odin.svg"
      }]
    },
    {
      description: "GEO token for ODIN Protocol",
      denom_units: [{
        denom: "ibc/9B6FBABA36BB4A3BF127AE5E96B572A5197FD9F3111D895D8919B07BC290764A",
        exponent: 0,
        aliases: ["mGeo"]
      }, {
        denom: "geo",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/9B6FBABA36BB4A3BF127AE5E96B572A5197FD9F3111D895D8919B07BC290764A",
      name: "GEO",
      display: "geo",
      symbol: "GEO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "odin",
          base_denom: "mGeo",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-258",
          path: "transfer/channel-258/mGeo"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/geo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/geo.svg"
      },
      images: [{
        image_sync: {
          chain_name: "odin",
          base_denom: "mGeo"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/geo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/geo.svg"
      }],
      keywords: ["osmosis_unstable"]
    },
    {
      description: "O9W token for ODIN Protocol",
      denom_units: [{
        denom: "ibc/0CD46223FEABD2AEAAAF1F057D01E63BCA79B7D4BD6B68F1EB973A987344695D",
        exponent: 0,
        aliases: ["mO9W"]
      }, {
        denom: "O9W",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/0CD46223FEABD2AEAAAF1F057D01E63BCA79B7D4BD6B68F1EB973A987344695D",
      name: "O9W",
      display: "O9W",
      symbol: "O9W",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "odin",
          base_denom: "mO9W",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-258",
          path: "transfer/channel-258/mO9W"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/o9w.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/o9w.svg"
      },
      images: [{
        image_sync: {
          chain_name: "odin",
          base_denom: "mO9W"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/o9w.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/o9w.svg"
      }],
      keywords: ["osmosis_unstable"]
    },
    {
      description: "ELEVENPARIS loyalty token on KiChain",
      denom_units: [{
        denom: "ibc/AD185F62399F770CCCE8A36A180A77879FF6C26A0398BD3D2A74E087B0BFA121",
        exponent: 0,
        aliases: ["cw20:ki1dt3lk455ed360pna38fkhqn0p8y44qndsr77qu73ghyaz2zv4whq83mwdy"]
      }, {
        denom: "lvn",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/AD185F62399F770CCCE8A36A180A77879FF6C26A0398BD3D2A74E087B0BFA121",
      name: "LVN",
      display: "lvn",
      symbol: "kichain.LVN",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "kichain",
          base_denom: "cw20:ki1dt3lk455ed360pna38fkhqn0p8y44qndsr77qu73ghyaz2zv4whq83mwdy",
          port: "wasm.ki1hzz0s0ucrhdp6tue2lxk3c03nj6f60qy463we7lgx0wudd72ctmsd9kgha",
          channel_id: "channel-18"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-261",
          path: "transfer/channel-261/cw20:ki1dt3lk455ed360pna38fkhqn0p8y44qndsr77qu73ghyaz2zv4whq83mwdy"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/lvn.png"
      },
      images: [{
        image_sync: {
          chain_name: "kichain",
          base_denom: "cw20:ki1dt3lk455ed360pna38fkhqn0p8y44qndsr77qu73ghyaz2zv4whq83mwdy"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/lvn.png"
      }]
    },
    {
      description: "Glimmer (GLMR) is the utility token of the Moonbeam Network, Moonbeam\u2019s primary deployment on the Polkadot network that serves as a developer-friendly parachain.",
      denom_units: [{
        denom: "ibc/1E26DB0E5122AED464D98462BD384FCCB595732A66B3970AE6CE0B58BAE0FC49",
        exponent: 0,
        aliases: ["wglmr-wei"]
      }, {
        denom: "wglmr",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/1E26DB0E5122AED464D98462BD384FCCB595732A66B3970AE6CE0B58BAE0FC49",
      name: "Moonbeam",
      display: "wglmr",
      symbol: "GLMR",
      traces: [
        {
          type: "wrapped",
          counterparty: {
            chain_name: "moonbeam",
            base_denom: "Wei"
          },
          provider: "Moonbeam"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "moonbeam",
            base_denom: "0xacc15dc74880c9944775448304b263d191c6077f"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "wglmr-wei",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/wglmr-wei"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "wglmr-wei"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.png"
      }]
    },
    {
      description: "DeFi gaming platform built on Juno",
      denom_units: [{
        denom: "ibc/52C57FCA7D6854AA178E7A183DDBE4EF322B904B1D719FC485F6FFBC1F72A19E",
        exponent: 0,
        aliases: ["cw20:juno1j0a9ymgngasfn3l5me8qpd53l5zlm9wurfdk7r65s5mg6tkxal3qpgf5se"]
      }, {
        denom: "glto",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/52C57FCA7D6854AA178E7A183DDBE4EF322B904B1D719FC485F6FFBC1F72A19E",
      name: "Gelotto",
      display: "glto",
      symbol: "GLTO",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1j0a9ymgngasfn3l5me8qpd53l5zlm9wurfdk7r65s5mg6tkxal3qpgf5se",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1j0a9ymgngasfn3l5me8qpd53l5zlm9wurfdk7r65s5mg6tkxal3qpgf5se"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1j0a9ymgngasfn3l5me8qpd53l5zlm9wurfdk7r65s5mg6tkxal3qpgf5se"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.svg"
      }]
    },
    {
      description: "Gelotto Year 1 Grand Prize Token",
      denom_units: [{
        denom: "ibc/7C781B4C2082CD62129A972D47486D78EC17155C299270E3C89348EA026BEAF8",
        exponent: 0,
        aliases: ["cw20:juno1gz8cf86zr4vw9cjcyyv432vgdaecvr9n254d3uwwkx9rermekddsxzageh"]
      }, {
        denom: "gkey",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/7C781B4C2082CD62129A972D47486D78EC17155C299270E3C89348EA026BEAF8",
      name: "GKey",
      display: "gkey",
      symbol: "GKEY",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1gz8cf86zr4vw9cjcyyv432vgdaecvr9n254d3uwwkx9rermekddsxzageh",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1gz8cf86zr4vw9cjcyyv432vgdaecvr9n254d3uwwkx9rermekddsxzageh"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/gkey.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/gkey.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1gz8cf86zr4vw9cjcyyv432vgdaecvr9n254d3uwwkx9rermekddsxzageh"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/gkey.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/gkey.svg"
      }]
    },
    {
      description: "The native token of Crescent",
      denom_units: [{
        denom: "ibc/5A7C219BA5F7582B99629BA3B2A01A61BFDA0F6FD1FE95B5366F7334C4BC0580",
        exponent: 0,
        aliases: ["ucre"]
      }, {
        denom: "cre",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/5A7C219BA5F7582B99629BA3B2A01A61BFDA0F6FD1FE95B5366F7334C4BC0580",
      name: "Crescent",
      display: "cre",
      symbol: "CRE",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "crescent",
          base_denom: "ucre",
          channel_id: "channel-9"
        },
        chain: {
          channel_id: "channel-297",
          path: "transfer/channel-297/ucre"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/crescent/images/cre.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/crescent/images/cre.svg"
      },
      images: [{
        image_sync: {
          chain_name: "crescent",
          base_denom: "ucre"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/crescent/images/cre.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/crescent/images/cre.svg"
      }]
    },
    {
      description: "The native token of LumenX Network",
      denom_units: [{
        denom: "ibc/FFA652599C77E853F017193E36B5AB2D4D9AFC4B54721A74904F80C9236BF3B7",
        exponent: 0,
        aliases: ["ulumen"]
      }, {
        denom: "lumen",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/FFA652599C77E853F017193E36B5AB2D4D9AFC4B54721A74904F80C9236BF3B7",
      name: "LumenX",
      display: "lumen",
      symbol: "LUMEN",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "lumenx",
          base_denom: "ulumen",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-286",
          path: "transfer/channel-286/ulumen"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumenx/images/lumen.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumenx/images/lumen.svg"
      },
      images: [{
        image_sync: {
          chain_name: "lumenx",
          base_denom: "ulumen"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumenx/images/lumen.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lumenx/images/lumen.svg"
      }],
      keywords: ["osmosis_unstable"]
    },
    {
      description: "The native token of Oraichain",
      denom_units: [{
        denom: "ibc/161D7D62BAB3B9C39003334F1671208F43C06B643CC9EDBBE82B64793C857F1D",
        exponent: 0,
        aliases: ["orai"]
      }, {
        denom: "ORAI",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/161D7D62BAB3B9C39003334F1671208F43C06B643CC9EDBBE82B64793C857F1D",
      name: "Oraichain",
      display: "ORAI",
      symbol: "ORAI",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "oraichain",
          base_denom: "orai",
          channel_id: "channel-13"
        },
        chain: {
          channel_id: "channel-216",
          path: "transfer/channel-216/orai"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/oraichain/images/orai-token.png"
      },
      images: [{
        image_sync: {
          chain_name: "oraichain",
          base_denom: "orai"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/oraichain/images/orai-token.png",
        theme: {
          circle: true,
          dark_mode: true
        }
      }]
    },
    {
      description: "The native token of the Cudos blockchain",
      denom_units: [{
        denom: "ibc/E09ED39F390EC51FA9F3F69BEA08B5BBE6A48B3057B2B1C3467FAAE9E58B021B",
        exponent: 0,
        aliases: ["attocudos", "acudos"]
      }, {
        denom: "cudos",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/E09ED39F390EC51FA9F3F69BEA08B5BBE6A48B3057B2B1C3467FAAE9E58B021B",
      name: "Cudos",
      display: "cudos",
      symbol: "CUDOS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "cudos",
          base_denom: "acudos",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-298",
          path: "transfer/channel-298/acudos"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cudos/images/cudos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cudos/images/cudos.svg"
      },
      images: [{
        image_sync: {
          chain_name: "cudos",
          base_denom: "acudos"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cudos/images/cudos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cudos/images/cudos.svg"
      }]
    },
    {
      description: "The native stablecoin of Kava",
      denom_units: [{
        denom: "ibc/C78F65E1648A3DFE0BAEB6C4CDA69CC2A75437F1793C0E6386DFDA26393790AE",
        exponent: 0,
        aliases: ["usdx"]
      }, {
        denom: "USDX",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/C78F65E1648A3DFE0BAEB6C4CDA69CC2A75437F1793C0E6386DFDA26393790AE",
      name: "Kava USDX",
      display: "USDX",
      symbol: "USDX",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kava",
          base_denom: "usdx",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-143",
          path: "transfer/channel-143/usdx"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/usdx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/usdx.svg"
      },
      images: [{
        image_sync: {
          chain_name: "kava",
          base_denom: "usdx"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/usdx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kava/images/usdx.svg"
      }]
    },
    {
      description: "BLD is the token used to secure the Agoric chain through staking and to backstop Inter Protocol.",
      denom_units: [{
        denom: "ibc/2DA9C149E9AD2BD27FEFA635458FB37093C256C1A940392634A16BEA45262604",
        exponent: 0,
        aliases: ["ubld"]
      }, {
        denom: "bld",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/2DA9C149E9AD2BD27FEFA635458FB37093C256C1A940392634A16BEA45262604",
      name: "Agoric",
      display: "bld",
      symbol: "BLD",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "agoric",
          base_denom: "ubld",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-320",
          path: "transfer/channel-320/ubld"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/bld.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/bld.svg"
      },
      images: [{
        image_sync: {
          chain_name: "agoric",
          base_denom: "ubld"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/bld.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/bld.svg"
      }]
    },
    {
      description: "IST is the stable token used by the Agoric chain for execution fees and commerce.",
      denom_units: [{
        denom: "ibc/92BE0717F4678905E53F4E45B2DED18BC0CB97BF1F8B6A25AFEDF3D5A879B4D5",
        exponent: 0,
        aliases: ["uist"]
      }, {
        denom: "ist",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/92BE0717F4678905E53F4E45B2DED18BC0CB97BF1F8B6A25AFEDF3D5A879B4D5",
      name: "Inter Stable Token",
      display: "ist",
      symbol: "IST",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "agoric",
          base_denom: "uist",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-320",
          path: "transfer/channel-320/uist"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/ist.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/ist.svg"
      },
      images: [{
        image_sync: {
          chain_name: "agoric",
          base_denom: "uist"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/ist.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/agoric/images/ist.svg"
      }]
    },
    {
      description: "Staking derivative seJUNO for staked JUNO",
      denom_units: [{
        denom: "ibc/C6B6BFCB6EE49A7CAB1A7E7B021DE35B99D525AC660844952F0F6C78DCB2A57B",
        exponent: 0,
        aliases: ["cw20:juno1dd0k0um5rqncfueza62w9sentdfh3ec4nw4aq4lk5hkjl63vljqscth9gv"]
      }, {
        denom: "sejuno",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/C6B6BFCB6EE49A7CAB1A7E7B021DE35B99D525AC660844952F0F6C78DCB2A57B",
      name: "StakeEasy seJUNO",
      display: "sejuno",
      symbol: "SEJUNO",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1dd0k0um5rqncfueza62w9sentdfh3ec4nw4aq4lk5hkjl63vljqscth9gv",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1dd0k0um5rqncfueza62w9sentdfh3ec4nw4aq4lk5hkjl63vljqscth9gv"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sejuno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sejuno.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1dd0k0um5rqncfueza62w9sentdfh3ec4nw4aq4lk5hkjl63vljqscth9gv"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sejuno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sejuno.svg"
      }]
    },
    {
      description: "Staking derivative bJUNO for staked JUNO",
      denom_units: [{
        denom: "ibc/C2DF5C3949CA835B221C575625991F09BAB4E48FB9C11A4EE357194F736111E3",
        exponent: 0,
        aliases: ["cw20:juno1wwnhkagvcd3tjz6f8vsdsw5plqnw8qy2aj3rrhqr2axvktzv9q2qz8jxn3"]
      }, {
        denom: "bjuno",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/C2DF5C3949CA835B221C575625991F09BAB4E48FB9C11A4EE357194F736111E3",
      name: "StakeEasy bJUNO",
      display: "bjuno",
      symbol: "BJUNO",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1wwnhkagvcd3tjz6f8vsdsw5plqnw8qy2aj3rrhqr2axvktzv9q2qz8jxn3",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1wwnhkagvcd3tjz6f8vsdsw5plqnw8qy2aj3rrhqr2axvktzv9q2qz8jxn3"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/bjuno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/bjuno.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1wwnhkagvcd3tjz6f8vsdsw5plqnw8qy2aj3rrhqr2axvktzv9q2qz8jxn3"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/bjuno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/bjuno.svg"
      }]
    },
    {
      description: "The native token of Stride",
      denom_units: [{
        denom: "ibc/A8CA5EE328FA10C9519DF6057DA1F69682D28F7D0F5CCC7ECB72E3DCA2D157A4",
        exponent: 0,
        aliases: ["ustrd"]
      }, {
        denom: "strd",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/A8CA5EE328FA10C9519DF6057DA1F69682D28F7D0F5CCC7ECB72E3DCA2D157A4",
      name: "Stride",
      display: "strd",
      symbol: "STRD",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "stride",
          base_denom: "ustrd",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-326",
          path: "transfer/channel-326/ustrd"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stride",
          base_denom: "ustrd"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.svg"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/C140AFD542AE77BD7DCC83F13FDD8C5E5BB8C4929785E6EC2F4C636F98F17901",
        exponent: 0,
        aliases: ["stuatom"]
      }, {
        denom: "statom",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/C140AFD542AE77BD7DCC83F13FDD8C5E5BB8C4929785E6EC2F4C636F98F17901",
      name: "Stride Staked ATOM",
      display: "statom",
      symbol: "stATOM",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "cosmoshub",
          base_denom: "uatom"
        },
        provider: "Stride"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "stride",
          base_denom: "stuatom",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-326",
          path: "transfer/channel-326/stuatom"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stride",
          base_denom: "stuatom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.svg"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/5DD1F95ED336014D00CE2520977EC71566D282F9749170ADC83A392E0EA7426A",
        exponent: 0,
        aliases: ["stustars"]
      }, {
        denom: "ststars",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/5DD1F95ED336014D00CE2520977EC71566D282F9749170ADC83A392E0EA7426A",
      name: "Stride Staked STARS",
      display: "ststars",
      symbol: "stSTARS",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "stargaze",
          base_denom: "ustars"
        },
        provider: "Stride"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "stride",
          base_denom: "stustars",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-326",
          path: "transfer/channel-326/stustars"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/ststars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/ststars.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stride",
          base_denom: "stustars"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/ststars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/ststars.svg"
      }]
    },
    {
      description: "Solarbank DAO Governance Token for speeding up the shift to renewable and green energy",
      denom_units: [{
        denom: "ibc/C3FC4DED273E7D1DD2E7BAA3317EC9A53CD3252B577AA33DC00D9DF2BDF3ED5C",
        exponent: 0,
        aliases: ["cw20:juno159q8t5g02744lxq8lfmcn6f78qqulq9wn3y9w7lxjgkz4e0a6kvsfvapse"]
      }, {
        denom: "solar",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/C3FC4DED273E7D1DD2E7BAA3317EC9A53CD3252B577AA33DC00D9DF2BDF3ED5C",
      name: "Solarbank DAO",
      display: "solar",
      symbol: "SOLAR",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno159q8t5g02744lxq8lfmcn6f78qqulq9wn3y9w7lxjgkz4e0a6kvsfvapse",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno159q8t5g02744lxq8lfmcn6f78qqulq9wn3y9w7lxjgkz4e0a6kvsfvapse"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/solar.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/solar.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno159q8t5g02744lxq8lfmcn6f78qqulq9wn3y9w7lxjgkz4e0a6kvsfvapse"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/solar.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/solar.svg"
      }]
    },
    {
      description: "StakeEasy governance token",
      denom_units: [{
        denom: "ibc/18A676A074F73B9B42DA4F9DFC8E5AEF334C9A6636DDEC8D34682F52F1DECDF6",
        exponent: 0,
        aliases: ["cw20:juno19rqljkh95gh40s7qdx40ksx3zq5tm4qsmsrdz9smw668x9zdr3lqtg33mf"]
      }, {
        denom: "seasy",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/18A676A074F73B9B42DA4F9DFC8E5AEF334C9A6636DDEC8D34682F52F1DECDF6",
      name: "StakeEasy SEASY",
      display: "seasy",
      symbol: "SEASY",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno19rqljkh95gh40s7qdx40ksx3zq5tm4qsmsrdz9smw668x9zdr3lqtg33mf",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno19rqljkh95gh40s7qdx40ksx3zq5tm4qsmsrdz9smw668x9zdr3lqtg33mf"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/seasy.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/seasy.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno19rqljkh95gh40s7qdx40ksx3zq5tm4qsmsrdz9smw668x9zdr3lqtg33mf"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/seasy.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/seasy.svg"
      }]
    },
    {
      description: "The native token of Axelar",
      denom_units: [{
        denom: "ibc/903A61A498756EA560B85A85132D3AEE21B5DEDD41213725D22ABF276EA6945E",
        exponent: 0,
        aliases: ["uaxl"]
      }, {
        denom: "axl",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/903A61A498756EA560B85A85132D3AEE21B5DEDD41213725D22ABF276EA6945E",
      name: "Axelar",
      display: "axl",
      symbol: "AXL",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "axelar",
          base_denom: "uaxl",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-208",
          path: "transfer/channel-208/uaxl"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "uaxl"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.svg"
      }]
    },
    {
      description: "REBUS, the native coin of the Rebus chain.",
      denom_units: [{
        denom: "ibc/A1AC7F9EE2F643A68E3A35BCEB22040120BEA4059773BB56985C76BDFEBC71D9",
        exponent: 0,
        aliases: ["arebus"]
      }, {
        denom: "rebus",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/A1AC7F9EE2F643A68E3A35BCEB22040120BEA4059773BB56985C76BDFEBC71D9",
      name: "Rebus",
      display: "rebus",
      symbol: "REBUS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "rebus",
          base_denom: "arebus",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-355",
          path: "transfer/channel-355/arebus"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rebus/images/rebus.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rebus/images/rebus.svg"
      },
      images: [{
        image_sync: {
          chain_name: "rebus",
          base_denom: "arebus"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rebus/images/rebus.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rebus/images/rebus.svg"
      }]
    },
    {
      description: "The native token of Teritori",
      denom_units: [{
        denom: "ibc/EB7FB9C8B425F289B63703413327C2051030E848CE4EAAEA2E51199D6D39D3EC",
        exponent: 0,
        aliases: ["utori"]
      }, {
        denom: "tori",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/EB7FB9C8B425F289B63703413327C2051030E848CE4EAAEA2E51199D6D39D3EC",
      name: "Teritori",
      display: "tori",
      symbol: "TORI",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "teritori",
          base_denom: "utori",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-362",
          path: "transfer/channel-362/utori"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/teritori/images/utori.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/teritori/images/utori.svg"
      },
      images: [{
        image_sync: {
          chain_name: "teritori",
          base_denom: "utori"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/teritori/images/utori.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/teritori/images/utori.svg"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/84502A75BCA4A5F68D464C00B3F610CE2585847D59B52E5FFB7C3C9D2DDCD3FE",
        exponent: 0,
        aliases: ["stujuno"]
      }, {
        denom: "stjuno",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/84502A75BCA4A5F68D464C00B3F610CE2585847D59B52E5FFB7C3C9D2DDCD3FE",
      name: "Stride Staked JUNO",
      display: "stjuno",
      symbol: "stJUNO",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "juno",
          base_denom: "ujuno"
        },
        provider: "Stride"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "stride",
          base_denom: "stujuno",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-326",
          path: "transfer/channel-326/stujuno"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stjuno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stjuno.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stride",
          base_denom: "stujuno"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stjuno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stjuno.svg"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/D176154B0C63D1F9C6DCFB4F70349EBF2E2B5A87A05902F57A6AE92B863E9AEC",
        exponent: 0,
        aliases: ["stuosmo"]
      }, {
        denom: "stosmo",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/D176154B0C63D1F9C6DCFB4F70349EBF2E2B5A87A05902F57A6AE92B863E9AEC",
      name: "Stride Staked OSMO",
      display: "stosmo",
      symbol: "stOSMO",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "uosmo"
        },
        provider: "Stride"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "stride",
          base_denom: "stuosmo",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-326",
          path: "transfer/channel-326/stuosmo"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stride",
          base_denom: "stuosmo"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.svg"
      }]
    },
    {
      description: "The native token cw20 for MuseDAO on Juno Chain",
      denom_units: [{
        denom: "ibc/6B982170CE024689E8DD0E7555B129B488005130D4EDA426733D552D10B36D8F",
        exponent: 0,
        aliases: ["cw20:juno1p8x807f6h222ur0vssqy3qk6mcpa40gw2pchquz5atl935t7kvyq894ne3"]
      }, {
        denom: "muse",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/6B982170CE024689E8DD0E7555B129B488005130D4EDA426733D552D10B36D8F",
      name: "MuseDAO",
      display: "muse",
      symbol: "MUSE",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1p8x807f6h222ur0vssqy3qk6mcpa40gw2pchquz5atl935t7kvyq894ne3",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1p8x807f6h222ur0vssqy3qk6mcpa40gw2pchquz5atl935t7kvyq894ne3"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/muse.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1p8x807f6h222ur0vssqy3qk6mcpa40gw2pchquz5atl935t7kvyq894ne3"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/muse.png"
      }]
    },
    {
      description: "The native token of Lambda",
      denom_units: [{
        denom: "ibc/80825E8F04B12D914ABEADB1F4D39C04755B12C8402F6876EE3168450C0A90BB",
        exponent: 0,
        aliases: ["ulamb"]
      }, {
        denom: "lamb",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/80825E8F04B12D914ABEADB1F4D39C04755B12C8402F6876EE3168450C0A90BB",
      name: "Lambda",
      display: "lamb",
      symbol: "LAMB",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "lambda",
          base_denom: "ulamb",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-378",
          path: "transfer/channel-378/ulamb"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lambda/images/lambda.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lambda/images/lambda.svg"
      },
      images: [{
        image_sync: {
          chain_name: "lambda",
          base_denom: "ulamb"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lambda/images/lambda.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/lambda/images/lambda.svg"
      }]
    },
    {
      description: "The native over-collateralized stablecoin from the Kujira chain.",
      denom_units: [{
        denom: "ibc/44492EAB24B72E3FB59B9FA619A22337FB74F95D8808FE6BC78CC0E6C18DC2EC",
        exponent: 0,
        aliases: ["factory/kujira1qk00h5atutpsv900x202pxx42npjr9thg58dnqpa72f2p7m2luase444a7/uusk"]
      }, {
        denom: "usk",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/44492EAB24B72E3FB59B9FA619A22337FB74F95D8808FE6BC78CC0E6C18DC2EC",
      name: "USK",
      display: "usk",
      symbol: "USK",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kujira",
          base_denom: "factory/kujira1qk00h5atutpsv900x202pxx42npjr9thg58dnqpa72f2p7m2luase444a7/uusk",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-259",
          path: "transfer/channel-259/factory:kujira1qk00h5atutpsv900x202pxx42npjr9thg58dnqpa72f2p7m2luase444a7:uusk"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/usk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/usk.svg"
      },
      images: [{
        image_sync: {
          chain_name: "kujira",
          base_denom: "factory/kujira1qk00h5atutpsv900x202pxx42npjr9thg58dnqpa72f2p7m2luase444a7/uusk"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/usk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/usk.svg"
      }]
    },
    {
      description: "Staking and governance coin for the Unification Blockchain",
      denom_units: [{
        denom: "ibc/608EF5C0CE64FEA097500DB39657BDD36CA708CC5DCC2E250A024B6981DD36BC",
        exponent: 0,
        aliases: ["nund"]
      }, {
        denom: "FUND",
        exponent: 9
      }],
      type_asset: "ics20",
      base: "ibc/608EF5C0CE64FEA097500DB39657BDD36CA708CC5DCC2E250A024B6981DD36BC",
      name: "Unification",
      display: "FUND",
      symbol: "FUND",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "unification",
          base_denom: "nund",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-382",
          path: "transfer/channel-382/nund"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/unification/images/fund.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/unification/images/fund.svg"
      },
      images: [{
        image_sync: {
          chain_name: "unification",
          base_denom: "nund"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/unification/images/fund.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/unification/images/fund.svg"
      }]
    },
    {
      description: "The native staking and governance token of Jackal.",
      denom_units: [{
        denom: "ibc/8E697BDABE97ACE8773C6DF7402B2D1D5104DD1EEABE12608E3469B7F64C15BA",
        exponent: 0,
        aliases: ["ujkl"]
      }, {
        denom: "jkl",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/8E697BDABE97ACE8773C6DF7402B2D1D5104DD1EEABE12608E3469B7F64C15BA",
      name: "Jackal",
      display: "jkl",
      symbol: "JKL",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "jackal",
          base_denom: "ujkl",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-412",
          path: "transfer/channel-412/ujkl"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/jackal/images/jkl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/jackal/images/jkl.svg"
      },
      images: [{
        image_sync: {
          chain_name: "jackal",
          base_denom: "ujkl"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/jackal/images/jkl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/jackal/images/jkl.svg"
      }]
    },
    {
      description: "The native token cw20 for Alter on Secret Network",
      denom_units: [{
        denom: "ibc/A6383B6CF5EA23E067666C06BC34E2A96869927BD9744DC0C1643E589C710AA3",
        exponent: 0,
        aliases: ["cw20:secret12rcvz0umvk875kd6a803txhtlu7y0pnd73kcej"]
      }, {
        denom: "alter",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/A6383B6CF5EA23E067666C06BC34E2A96869927BD9744DC0C1643E589C710AA3",
      name: "Alter",
      display: "alter",
      symbol: "ALTER",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "secretnetwork",
          base_denom: "cw20:secret12rcvz0umvk875kd6a803txhtlu7y0pnd73kcej",
          port: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4",
          channel_id: "channel-44"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-476",
          path: "transfer/channel-476/cw20:secret12rcvz0umvk875kd6a803txhtlu7y0pnd73kcej"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/alter.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/alter.svg"
      },
      images: [{
        image_sync: {
          chain_name: "secretnetwork",
          base_denom: "cw20:secret12rcvz0umvk875kd6a803txhtlu7y0pnd73kcej"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/alter.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/alter.svg"
      }]
    },
    {
      description: "The native token cw20 for Button on Secret Network",
      denom_units: [{
        denom: "ibc/1FBA9E763B8679BEF7BAAAF2D16BCA78C3B297D226C3F31312C769D7B8F992D8",
        exponent: 0,
        aliases: ["cw20:secret1yxcexylwyxlq58umhgsjgstgcg2a0ytfy4d9lt"]
      }, {
        denom: "butt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/1FBA9E763B8679BEF7BAAAF2D16BCA78C3B297D226C3F31312C769D7B8F992D8",
      name: "Button",
      display: "butt",
      symbol: "BUTT",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "secretnetwork",
          base_denom: "cw20:secret1yxcexylwyxlq58umhgsjgstgcg2a0ytfy4d9lt",
          port: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4",
          channel_id: "channel-44"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-476",
          path: "transfer/channel-476/cw20:secret1yxcexylwyxlq58umhgsjgstgcg2a0ytfy4d9lt"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/butt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/butt.svg"
      },
      images: [{
        image_sync: {
          chain_name: "secretnetwork",
          base_denom: "cw20:secret1yxcexylwyxlq58umhgsjgstgcg2a0ytfy4d9lt"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/butt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/butt.svg"
      }]
    },
    {
      description: "The native token cw20 for Shade on Secret Network",
      denom_units: [{
        denom: "ibc/71055835C7639739EAE03AACD1324FE162DBA41D09F197CB72D966D014225B1C",
        exponent: 0,
        aliases: ["cw20:secret1qfql357amn448duf5gvp9gr48sxx9tsnhupu3d"]
      }, {
        denom: "shd",
        exponent: 8
      }],
      type_asset: "ics20",
      base: "ibc/71055835C7639739EAE03AACD1324FE162DBA41D09F197CB72D966D014225B1C",
      name: "Shade (old)",
      display: "shd",
      symbol: "SHD(old)",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "secretnetwork",
          base_denom: "cw20:secret1qfql357amn448duf5gvp9gr48sxx9tsnhupu3d",
          port: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4",
          channel_id: "channel-44"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-476",
          path: "transfer/channel-476/cw20:secret1qfql357amn448duf5gvp9gr48sxx9tsnhupu3d"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shdold.svg"
      },
      images: [{
        image_sync: {
          chain_name: "secretnetwork",
          base_denom: "cw20:secret1qfql357amn448duf5gvp9gr48sxx9tsnhupu3d"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shdold.svg"
      }],
      keywords: ["osmosis_unstable"]
    },
    {
      description: "The native token cw20 for SIENNA on Secret Network",
      denom_units: [{
        denom: "ibc/9A8A93D04917A149C8AC7C16D3DA8F470D59E8D867499C4DA97450E1D7363213",
        exponent: 0,
        aliases: ["cw20:secret1rgm2m5t530tdzyd99775n6vzumxa5luxcllml4"]
      }, {
        denom: "sienna",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/9A8A93D04917A149C8AC7C16D3DA8F470D59E8D867499C4DA97450E1D7363213",
      name: "SIENNA",
      display: "sienna",
      symbol: "SIENNA",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "secretnetwork",
          base_denom: "cw20:secret1rgm2m5t530tdzyd99775n6vzumxa5luxcllml4",
          port: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4",
          channel_id: "channel-44"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-476",
          path: "transfer/channel-476/cw20:secret1rgm2m5t530tdzyd99775n6vzumxa5luxcllml4"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/sienna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/sienna.svg"
      },
      images: [{
        image_sync: {
          chain_name: "secretnetwork",
          base_denom: "cw20:secret1rgm2m5t530tdzyd99775n6vzumxa5luxcllml4"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/sienna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/sienna.svg"
      }]
    },
    {
      description: "The native token cw20 for SCRT Staking Derivatives on Secret Network",
      denom_units: [{
        denom: "ibc/D0E5BF2940FB58D9B283A339032DE88111407AAD7D94A7F1F3EB78874F8616D4",
        exponent: 0,
        aliases: ["cw20:secret1k6u0cy4feepm6pehnz804zmwakuwdapm69tuc4"]
      }, {
        denom: "stkd-scrt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/D0E5BF2940FB58D9B283A339032DE88111407AAD7D94A7F1F3EB78874F8616D4",
      name: "SCRT Staking Derivatives",
      display: "stkd-scrt",
      symbol: "stkd-SCRT",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "secretnetwork",
          base_denom: "cw20:secret1k6u0cy4feepm6pehnz804zmwakuwdapm69tuc4",
          port: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4",
          channel_id: "channel-44"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-476",
          path: "transfer/channel-476/cw20:secret1k6u0cy4feepm6pehnz804zmwakuwdapm69tuc4"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/stkd-scrt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/stkd-scrt.svg"
      },
      images: [{
        image_sync: {
          chain_name: "secretnetwork",
          base_denom: "cw20:secret1k6u0cy4feepm6pehnz804zmwakuwdapm69tuc4"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/stkd-scrt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/stkd-scrt.svg"
      }]
    },
    {
      description: "BeeZee native blockchain",
      denom_units: [{
        denom: "ibc/C822645522FC3EECF817609AA38C24B64D04F5C267A23BCCF8F2E3BC5755FA88",
        exponent: 0,
        aliases: ["ubze"]
      }, {
        denom: "bze",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/C822645522FC3EECF817609AA38C24B64D04F5C267A23BCCF8F2E3BC5755FA88",
      name: "BeeZee",
      display: "bze",
      symbol: "BZE",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "beezee",
          base_denom: "ubze",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-340",
          path: "transfer/channel-340/ubze"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/beezee/images/bze.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/beezee/images/bze.svg"
      },
      images: [{
        image_sync: {
          chain_name: "beezee",
          base_denom: "ubze"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/beezee/images/bze.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/beezee/images/bze.svg"
      }]
    },
    {
      description: "The native token cw20 for Fanfury on Juno Chain",
      denom_units: [{
        denom: "ibc/7CE5F388D661D82A0774E47B5129DA51CC7129BD1A70B5FA6BCEBB5B0A2FAEAF",
        exponent: 0,
        aliases: ["cw20:juno1cltgm8v842gu54srmejewghnd6uqa26lzkpa635wzra9m9xuudkqa2gtcz"]
      }, {
        denom: "fury",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/7CE5F388D661D82A0774E47B5129DA51CC7129BD1A70B5FA6BCEBB5B0A2FAEAF",
      name: "FURY.legacy",
      display: "fury",
      symbol: "FURY.legacy",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1cltgm8v842gu54srmejewghnd6uqa26lzkpa635wzra9m9xuudkqa2gtcz",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1cltgm8v842gu54srmejewghnd6uqa26lzkpa635wzra9m9xuudkqa2gtcz"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/fanfury.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1cltgm8v842gu54srmejewghnd6uqa26lzkpa635wzra9m9xuudkqa2gtcz"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/fanfury.png"
      }]
    },
    {
      description: "The native EVM, governance and staking token of the Acrechain",
      denom_units: [{
        denom: "ibc/BB936517F7E5D77A63E0ADB05217A6608B0C4CF8FBA7EA2F4BAE4107A7238F06",
        exponent: 0,
        aliases: ["aacre"]
      }, {
        denom: "acre",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/BB936517F7E5D77A63E0ADB05217A6608B0C4CF8FBA7EA2F4BAE4107A7238F06",
      name: "Acrechain",
      display: "acre",
      symbol: "ACRE",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "acrechain",
          base_denom: "aacre",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-490",
          path: "transfer/channel-490/aacre"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/acre.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/acre.svg"
      },
      images: [{
        image_sync: {
          chain_name: "acrechain",
          base_denom: "aacre"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/acre.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/acre.svg"
      }]
    },
    {
      description: "Stable Token of Harbor protocol on Comdex network",
      denom_units: [{
        denom: "ibc/23CA6C8D1AB2145DD13EB1E089A2E3F960DC298B468CCE034E19E5A78B61136E",
        exponent: 0,
        aliases: ["ucmst"]
      }, {
        denom: "cmst",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/23CA6C8D1AB2145DD13EB1E089A2E3F960DC298B468CCE034E19E5A78B61136E",
      name: "CMST",
      display: "cmst",
      symbol: "CMST",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "comdex",
          base_denom: "ucmst",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-87",
          path: "transfer/channel-87/ucmst"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmst.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmst.svg"
      },
      images: [{
        image_sync: {
          chain_name: "comdex",
          base_denom: "ucmst"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmst.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/cmst.svg"
      }]
    },
    {
      description: "The native EVM, governance and staking token of the Imversed",
      denom_units: [{
        denom: "ibc/92B223EBFA74DB99BEA92B23DEAA6050734FEEAABB84689CB8E1AE8F9C9F9AF4",
        exponent: 0,
        aliases: ["aimv"]
      }, {
        denom: "imv",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/92B223EBFA74DB99BEA92B23DEAA6050734FEEAABB84689CB8E1AE8F9C9F9AF4",
      name: "Imversed",
      display: "imv",
      symbol: "IMV",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "imversed",
          base_denom: "aimv",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-517",
          path: "transfer/channel-517/aimv"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/imversed/images/imversed.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/imversed/images/imversed.svg"
      },
      images: [{
        image_sync: {
          chain_name: "imversed",
          base_denom: "aimv"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/imversed/images/imversed.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/imversed/images/imversed.svg"
      }]
    },
    {
      description: "The native token of Medas Digital Network",
      denom_units: [{
        denom: "ibc/01E94A5FF29B8DDEFC86F412CC3927F7330E9B523CC63A6194B1108F5276025C",
        exponent: 0,
        aliases: ["umedas"]
      }, {
        denom: "medas",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/01E94A5FF29B8DDEFC86F412CC3927F7330E9B523CC63A6194B1108F5276025C",
      name: "Medas Digital Network",
      display: "medas",
      symbol: "MEDAS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "medasdigital",
          base_denom: "umedas",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-519",
          path: "transfer/channel-519/umedas"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/medasdigital/images/medas.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/medasdigital/images/medas.svg"
      },
      images: [{
        image_sync: {
          chain_name: "medasdigital",
          base_denom: "umedas"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/medasdigital/images/medas.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/medasdigital/images/medas.svg"
      }],
      keywords: ["medas"]
    },
    {
      description: "The native token cw20 for PHMN on Juno Chain",
      extended_description: "$PHMN is the governance token of a distributed validator. Similar to PoS chains, each holder possesses voting rights proportionate to the number of locked tokens. PHMN holders can govern the POSTHUMAN validator via DAODAO. For instance, decisions such as diversifying the treasury, updating the validator's commission rate, or exiting the network are determined by the PHMN community.",
      denom_units: [{
        denom: "ibc/D3B574938631B0A1BA704879020C696E514CFADAA7643CDE4BD5EB010BDE327B",
        exponent: 0,
        aliases: ["cw20:juno1rws84uz7969aaa7pej303udhlkt3j9ca0l3egpcae98jwak9quzq8szn2l"]
      }, {
        denom: "phmn",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/D3B574938631B0A1BA704879020C696E514CFADAA7643CDE4BD5EB010BDE327B",
      name: "POSTHUMAN",
      display: "phmn",
      symbol: "PHMN",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1rws84uz7969aaa7pej303udhlkt3j9ca0l3egpcae98jwak9quzq8szn2l",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1rws84uz7969aaa7pej303udhlkt3j9ca0l3egpcae98jwak9quzq8szn2l"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/phmn.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/phmn.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1rws84uz7969aaa7pej303udhlkt3j9ca0l3egpcae98jwak9quzq8szn2l"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/phmn.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/phmn.svg"
      }],
      socials: {
        website: "https://posthuman.digital/",
        twitter: "https://twitter.com/POSTHUMAN_DVS"
      }
    },
    {
      description: "The native token cw20 for Amber on Secret Network",
      denom_units: [{
        denom: "ibc/18A1B70E3205A48DE8590C0D11030E7146CDBF1048789261D53FFFD7527F8B55",
        exponent: 0,
        aliases: ["cw20:secret1s09x2xvfd2lp2skgzm29w2xtena7s8fq98v852"]
      }, {
        denom: "amber",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/18A1B70E3205A48DE8590C0D11030E7146CDBF1048789261D53FFFD7527F8B55",
      name: "Amber",
      display: "amber",
      symbol: "AMBER",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "secretnetwork",
          base_denom: "cw20:secret1s09x2xvfd2lp2skgzm29w2xtena7s8fq98v852",
          port: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4",
          channel_id: "channel-44"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-476",
          path: "transfer/channel-476/cw20:secret1s09x2xvfd2lp2skgzm29w2xtena7s8fq98v852"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/amber.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/amber.svg"
      },
      images: [{
        image_sync: {
          chain_name: "secretnetwork",
          base_denom: "cw20:secret1s09x2xvfd2lp2skgzm29w2xtena7s8fq98v852"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/amber.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/amber.svg"
      }]
    },
    {
      description: "The native token of Onomy Protocol",
      denom_units: [{
        denom: "ibc/B9606D347599F0F2FDF82BA3EE339000673B7D274EA50F59494DC51EFCD42163",
        exponent: 0,
        aliases: ["anom"]
      }, {
        denom: "nom",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/B9606D347599F0F2FDF82BA3EE339000673B7D274EA50F59494DC51EFCD42163",
      name: "Onomy",
      display: "nom",
      symbol: "NOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "onomy",
          base_denom: "anom",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-525",
          path: "transfer/channel-525/anom"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/onomy/images/nom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/onomy/images/nom.svg"
      },
      images: [{
        image_sync: {
          chain_name: "onomy",
          base_denom: "anom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/onomy/images/nom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/onomy/images/nom.svg"
      }],
      keywords: [
        "dex",
        "stablecoin",
        "bridge",
        "staking"
      ]
    },
    {
      description: "PSTAKE Liquid-Staked ATOM",
      denom_units: [{
        denom: "ibc/CAA179E40F0266B0B29FB5EAA288FB9212E628822265D4141EBD1C47C3CBFCBC",
        exponent: 0,
        aliases: ["stk/uatom"]
      }, {
        denom: "stkatom",
        exponent: 6,
        aliases: ["stk/atom"]
      }],
      type_asset: "ics20",
      base: "ibc/CAA179E40F0266B0B29FB5EAA288FB9212E628822265D4141EBD1C47C3CBFCBC",
      name: "PSTAKE staked ATOM",
      display: "stkatom",
      symbol: "stkATOM",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "cosmoshub",
          base_denom: "uatom"
        },
        provider: "pSTAKE"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "persistence",
          base_denom: "stk/uatom",
          channel_id: "channel-6"
        },
        chain: {
          channel_id: "channel-4",
          path: "transfer/channel-4/stk/uatom"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.svg"
      },
      images: [{
        image_sync: {
          chain_name: "persistence",
          base_denom: "stk/uatom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.svg"
      }]
    },
    {
      description: "The native staking and governance token of the Dyson Protocol",
      denom_units: [{
        denom: "ibc/E27CD305D33F150369AB526AEB6646A76EC3FFB1A6CA58A663B5DE657A89D55D",
        exponent: 0,
        aliases: ["dys"]
      }],
      type_asset: "ics20",
      base: "ibc/E27CD305D33F150369AB526AEB6646A76EC3FFB1A6CA58A663B5DE657A89D55D",
      name: "Dyson Protocol",
      display: "ibc/E27CD305D33F150369AB526AEB6646A76EC3FFB1A6CA58A663B5DE657A89D55D",
      symbol: "DYS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "dyson",
          base_denom: "dys",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-526",
          path: "transfer/channel-526/dys"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dyson/images/dys.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dyson/images/dys.svg"
      },
      images: [{
        image_sync: {
          chain_name: "dyson",
          base_denom: "dys"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dyson/images/dys.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dyson/images/dys.svg"
      }]
    },
    {
      description: "The native token cw20 for Hopers on Juno Chain",
      denom_units: [{
        denom: "ibc/D3ADAF73F84CDF205BCB72C142FDAEEA2C612AB853CEE6D6C06F184FA38B1099",
        exponent: 0,
        aliases: ["cw20:juno1u45shlp0q4gcckvsj06ss4xuvsu0z24a0d0vr9ce6r24pht4e5xq7q995n"]
      }, {
        denom: "hopers",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/D3ADAF73F84CDF205BCB72C142FDAEEA2C612AB853CEE6D6C06F184FA38B1099",
      name: "Hopers",
      display: "hopers",
      symbol: "HOPERS",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1u45shlp0q4gcckvsj06ss4xuvsu0z24a0d0vr9ce6r24pht4e5xq7q995n",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1u45shlp0q4gcckvsj06ss4xuvsu0z24a0d0vr9ce6r24pht4e5xq7q995n"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hopers.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hopers.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1u45shlp0q4gcckvsj06ss4xuvsu0z24a0d0vr9ce6r24pht4e5xq7q995n"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hopers.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/hopers.svg"
      }]
    },
    {
      description: "Overcollateralized stable coin for Arable derivatives v1",
      denom_units: [{
        denom: "ibc/5D270A584B1078FBE07D14570ED5E88EC1FEDA8518B76C322606291E6FD8286F",
        exponent: 0,
        aliases: ["erc20/0x2Cbea61fdfDFA520Ee99700F104D5b75ADf50B0c"]
      }, {
        denom: "arusd",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/5D270A584B1078FBE07D14570ED5E88EC1FEDA8518B76C322606291E6FD8286F",
      name: "Arable USD",
      display: "arusd",
      symbol: "arUSD",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "acrechain",
          base_denom: "erc20/0x2Cbea61fdfDFA520Ee99700F104D5b75ADf50B0c",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-490",
          path: "transfer/channel-490/erc20/0x2Cbea61fdfDFA520Ee99700F104D5b75ADf50B0c"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/arusd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/arusd.svg"
      },
      images: [{
        image_sync: {
          chain_name: "acrechain",
          base_denom: "erc20/0x2Cbea61fdfDFA520Ee99700F104D5b75ADf50B0c"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/arusd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/arusd.svg"
      }]
    },
    {
      description: "The native EVM, governance and staking token of the Planq Network",
      denom_units: [{
        denom: "ibc/B1E0166EA0D759FDF4B207D1F5F12210D8BFE36F2345CEFC76948CE2B36DFBAF",
        exponent: 0,
        aliases: ["aplanq"]
      }, {
        denom: "planq",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/B1E0166EA0D759FDF4B207D1F5F12210D8BFE36F2345CEFC76948CE2B36DFBAF",
      name: "Planq",
      display: "planq",
      symbol: "PLQ",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "planq",
          base_denom: "aplanq",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-492",
          path: "transfer/channel-492/aplanq"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/planq/images/planq.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/planq/images/planq.svg"
      },
      images: [{
        image_sync: {
          chain_name: "planq",
          base_denom: "aplanq"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/planq/images/planq.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/planq/images/planq.svg"
      }]
    },
    {
      description: "Fantom's native utility token \u2014 FTM \u2014 powers the entire Fantom blockchain ecosystem. FTM tokens are used for staking, governance, payments, and fees on the network.",
      denom_units: [{
        denom: "ibc/5E2DFDF1734137302129EA1C1BA21A580F96F778D4F021815EA4F6DB378DA1A4",
        exponent: 0,
        aliases: ["wftm-wei"]
      }, {
        denom: "ftm",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/5E2DFDF1734137302129EA1C1BA21A580F96F778D4F021815EA4F6DB378DA1A4",
      name: "Fantom",
      display: "ftm",
      symbol: "FTM",
      traces: [
        {
          type: "wrapped",
          counterparty: {
            chain_name: "fantom",
            base_denom: "wei"
          },
          chain: {
            contract: "0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83"
          },
          provider: "Fantom"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "fantom",
            base_denom: "0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "wftm-wei",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/wftm-wei"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "wftm-wei"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.svg"
      }]
    },
    {
      description: "Canto is a Layer-1 blockchain built to deliver on the promise of DeFi",
      denom_units: [{
        denom: "ibc/47CAF2DB8C016FAC960F33BC492FD8E454593B65CC59D70FA9D9F30424F9C32F",
        exponent: 0,
        aliases: ["acanto"]
      }, {
        denom: "canto",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/47CAF2DB8C016FAC960F33BC492FD8E454593B65CC59D70FA9D9F30424F9C32F",
      name: "Canto",
      display: "canto",
      symbol: "CANTO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "canto",
          base_denom: "acanto",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-550",
          path: "transfer/channel-550/acanto"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/canto/images/canto.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/canto/images/canto.svg"
      },
      images: [{
        image_sync: {
          chain_name: "canto",
          base_denom: "acanto"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/canto/images/canto.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/canto/images/canto.svg"
      }]
    },
    {
      description: "Quicksilver Liquid Staked STARS",
      denom_units: [{
        denom: "ibc/46C83BB054E12E189882B5284542DB605D94C99827E367C9192CF0579CD5BC83",
        exponent: 0,
        aliases: ["uqstars"]
      }, {
        denom: "qstars",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/46C83BB054E12E189882B5284542DB605D94C99827E367C9192CF0579CD5BC83",
      name: "Quicksilver Liquid Staked STARS",
      display: "qstars",
      symbol: "qSTARS",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "stargaze",
          base_denom: "ustars"
        },
        provider: "Quicksilver"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "quicksilver",
          base_denom: "uqstars",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-522",
          path: "transfer/channel-522/uqstars"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qstars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qstars.svg"
      },
      images: [{
        image_sync: {
          chain_name: "quicksilver",
          base_denom: "uqstars"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qstars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qstars.svg"
      }]
    },
    {
      description: "WYND DAO Governance Token",
      denom_units: [{
        denom: "ibc/2FBAC4BF296D7844796844B35978E5899984BA5A6314B2DD8F83C215550010B3",
        exponent: 0,
        aliases: ["cw20:juno1mkw83sv6c7sjdvsaplrzc8yaes9l42p4mhy0ssuxjnyzl87c9eps7ce3m9"]
      }, {
        denom: "wynd",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/2FBAC4BF296D7844796844B35978E5899984BA5A6314B2DD8F83C215550010B3",
      name: "Wynd DAO Governance Token",
      display: "wynd",
      symbol: "WYND",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1mkw83sv6c7sjdvsaplrzc8yaes9l42p4mhy0ssuxjnyzl87c9eps7ce3m9",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1mkw83sv6c7sjdvsaplrzc8yaes9l42p4mhy0ssuxjnyzl87c9eps7ce3m9"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/wynd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/wynd.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1mkw83sv6c7sjdvsaplrzc8yaes9l42p4mhy0ssuxjnyzl87c9eps7ce3m9"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/wynd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/wynd.svg"
      }]
    },
    {
      description: "USDC is a fully collateralized US Dollar stablecoin developed by CENTRE, the open source project with Circle being the first of several forthcoming issuers.",
      denom_units: [{
        denom: "ibc/231FD77ECCB2DB916D314019DA30FE013202833386B1908A191D16989AD80B5A",
        exponent: 0,
        aliases: ["polygon-uusdc"]
      }, {
        denom: "polygon-usdc",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/231FD77ECCB2DB916D314019DA30FE013202833386B1908A191D16989AD80B5A",
      name: "USD Coin (Polygon)",
      display: "polygon-usdc",
      symbol: "polygon.USDC.axl",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Circle"
        },
        {
          type: "additional-mintage",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          provider: "Circle"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "polygon",
            base_denom: "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "polygon-uusdc",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/polygon-uusdc"
          }
        }
      ],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }, {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/polygon.usdc.svg"
      }]
    },
    {
      description: "USDC is a fully collateralized US Dollar stablecoin developed by CENTRE, the open source project with Circle being the first of several forthcoming issuers.",
      denom_units: [{
        denom: "ibc/F17C9CA112815613C5B6771047A093054F837C3020CBA59DFFD9D780A8B2984C",
        exponent: 0,
        aliases: ["avalanche-uusdc"]
      }, {
        denom: "avalanche-usdc",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/F17C9CA112815613C5B6771047A093054F837C3020CBA59DFFD9D780A8B2984C",
      name: "USD Coin (Avalanche)",
      display: "avalanche-usdc",
      symbol: "avalanche.USDC.axl",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Circle"
        },
        {
          type: "additional-mintage",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          provider: "Circle"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "avalanche",
            base_denom: "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "avalanche-uusdc",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/avalanche-uusdc"
          }
        }
      ],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }, {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/avalanche.usdc.svg"
      }]
    },
    {
      description: "Mars protocol token",
      denom_units: [{
        denom: "ibc/573FCD90FACEE750F55A8864EF7D38265F07E5A9273FA0E8DAFD39951332B580",
        exponent: 0,
        aliases: ["umars"]
      }, {
        denom: "mars",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/573FCD90FACEE750F55A8864EF7D38265F07E5A9273FA0E8DAFD39951332B580",
      name: "Mars Hub",
      display: "mars",
      symbol: "MARS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "mars",
          base_denom: "umars",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-557",
          path: "transfer/channel-557/umars"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-token.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-token.svg"
      },
      images: [{
        image_sync: {
          chain_name: "mars",
          base_denom: "umars"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-token.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-token.svg"
      }]
    },
    {
      description: "Ciento Exchange Token",
      denom_units: [{
        denom: "ibc/D38BB3DD46864694F009AF01DA5A815B3A875F8CC52FF5679BFFCC35DC7451D5",
        exponent: 0,
        aliases: ["erc20/0xAE6D3334989a22A65228732446731438672418F2"]
      }, {
        denom: "cnto",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/D38BB3DD46864694F009AF01DA5A815B3A875F8CC52FF5679BFFCC35DC7451D5",
      name: "Ciento Token",
      display: "cnto",
      symbol: "CNTO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "acrechain",
          base_denom: "erc20/0xAE6D3334989a22A65228732446731438672418F2",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-490",
          path: "transfer/channel-490/erc20/0xAE6D3334989a22A65228732446731438672418F2"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/cnto.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/cnto.svg"
      },
      images: [{
        image_sync: {
          chain_name: "acrechain",
          base_denom: "erc20/0xAE6D3334989a22A65228732446731438672418F2"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/cnto.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/acrechain/images/cnto.svg"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/C491E7582E94AE921F6A029790083CDE1106C28F3F6C4AD7F1340544C13EC372",
        exponent: 0,
        aliases: ["stuluna"]
      }, {
        denom: "stluna",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/C491E7582E94AE921F6A029790083CDE1106C28F3F6C4AD7F1340544C13EC372",
      name: "Stride Staked LUNA",
      display: "stluna",
      symbol: "stLUNA",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "terra2",
          base_denom: "uluna"
        },
        provider: "Stride"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "stride",
          base_denom: "stuluna",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-326",
          path: "transfer/channel-326/stuluna"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stluna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stluna.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stride",
          base_denom: "stuluna"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stluna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stluna.svg"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/C5579A9595790017C600DD726276D978B9BF314CF82406CE342720A9C7911A01",
        exponent: 0,
        aliases: ["staevmos"]
      }, {
        denom: "stevmos",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/C5579A9595790017C600DD726276D978B9BF314CF82406CE342720A9C7911A01",
      name: "Stride Staked EVMOS",
      display: "stevmos",
      symbol: "stEVMOS",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "evmos",
          base_denom: "aevmos"
        },
        provider: "Stride"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "stride",
          base_denom: "staevmos",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-326",
          path: "transfer/channel-326/staevmos"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stevmos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stevmos.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stride",
          base_denom: "staevmos"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stevmos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stevmos.svg"
      }]
    },
    {
      description: "nRide Token",
      denom_units: [{
        denom: "ibc/E750D31033DC1CF4A044C3AA0A8117401316DC918FBEBC4E3D34F91B09D5F54C",
        exponent: 0,
        aliases: ["cw20:juno1qmlchtmjpvu0cr7u0tad2pq8838h6farrrjzp39eqa9xswg7teussrswlq"]
      }, {
        denom: "nride",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/E750D31033DC1CF4A044C3AA0A8117401316DC918FBEBC4E3D34F91B09D5F54C",
      name: "nRide Token",
      display: "nride",
      symbol: "NRIDE",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1qmlchtmjpvu0cr7u0tad2pq8838h6farrrjzp39eqa9xswg7teussrswlq",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1qmlchtmjpvu0cr7u0tad2pq8838h6farrrjzp39eqa9xswg7teussrswlq"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/nride.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/nride.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1qmlchtmjpvu0cr7u0tad2pq8838h6farrrjzp39eqa9xswg7teussrswlq"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/nride.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/nride.svg"
      }]
    },
    {
      description: "The native staking token of 8ball.",
      denom_units: [{
        denom: "ibc/8BE73A810E22F80E5E850531A688600D63AE7392E7C2770AE758CAA4FD921B7F",
        exponent: 0,
        aliases: ["uebl"]
      }, {
        denom: "ebl",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/8BE73A810E22F80E5E850531A688600D63AE7392E7C2770AE758CAA4FD921B7F",
      name: "8ball",
      display: "ebl",
      symbol: "EBL",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "8ball",
          base_denom: "uebl",
          channel_id: "channel-16"
        },
        chain: {
          channel_id: "channel-641",
          path: "transfer/channel-641/uebl"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/8ball/images/8ball.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/8ball/images/8ball.svg"
      },
      images: [{
        image_sync: {
          chain_name: "8ball",
          base_denom: "uebl"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/8ball/images/8ball.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/8ball/images/8ball.svg"
      }]
    },
    {
      description: "Quicksilver Liquid Staked ATOM",
      denom_units: [{
        denom: "ibc/FA602364BEC305A696CBDF987058E99D8B479F0318E47314C49173E8838C5BAC",
        exponent: 0,
        aliases: ["uqatom"]
      }, {
        denom: "qatom",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/FA602364BEC305A696CBDF987058E99D8B479F0318E47314C49173E8838C5BAC",
      name: "Quicksilver Liquid Staked ATOM",
      display: "qatom",
      symbol: "qATOM",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "cosmoshub",
          base_denom: "uatom"
        },
        provider: "Quicksilver"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "quicksilver",
          base_denom: "uqatom",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-522",
          path: "transfer/channel-522/uqatom"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qatom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qatom.svg"
      },
      images: [{
        image_sync: {
          chain_name: "quicksilver",
          base_denom: "uqatom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qatom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qatom.svg"
      }]
    },
    {
      description: "Governance Token of Harbor protocol on Comdex network",
      denom_units: [{
        denom: "ibc/AD4DEA52408EA07C0C9E19444EC8DA84A274A70AD2687A710EFDDEB28BB2986A",
        exponent: 0,
        aliases: ["uharbor"]
      }, {
        denom: "harbor",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/AD4DEA52408EA07C0C9E19444EC8DA84A274A70AD2687A710EFDDEB28BB2986A",
      name: "Harbor",
      display: "harbor",
      symbol: "HARBOR",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "comdex",
          base_denom: "uharbor",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-87",
          path: "transfer/channel-87/uharbor"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/harbor.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/harbor.svg"
      },
      images: [{
        image_sync: {
          chain_name: "comdex",
          base_denom: "uharbor"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/harbor.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/comdex/images/harbor.svg"
      }]
    },
    {
      description: "Quicksilver Liquid Staked REGEN",
      denom_units: [{
        denom: "ibc/79A676508A2ECA1021EDDC7BB9CF70CEEC9514C478DA526A5A8B3E78506C2206",
        exponent: 0,
        aliases: ["uqregen"]
      }, {
        denom: "qregen",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/79A676508A2ECA1021EDDC7BB9CF70CEEC9514C478DA526A5A8B3E78506C2206",
      name: "Quicksilver Liquid Staked Regen",
      display: "qregen",
      symbol: "qREGEN",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "regen",
          base_denom: "uregen"
        },
        provider: "Quicksilver"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "quicksilver",
          base_denom: "uqregen",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-522",
          path: "transfer/channel-522/uqregen"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qregen.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qregen.svg"
      },
      images: [{
        image_sync: {
          chain_name: "quicksilver",
          base_denom: "uqregen"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qregen.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qregen.svg"
      }]
    },
    {
      description: "Inspired by Bonk. A community project to celebrate the settlers of JunoNetwork.",
      denom_units: [{
        denom: "ibc/4F24D904BAB5FFBD3524F2DE3EC3C7A9E687A2408D9A985E57B356D9FA9201C6",
        exponent: 0,
        aliases: ["cw20:juno1u8cr3hcjvfkzxcaacv9q75uw9hwjmn8pucc93pmy6yvkzz79kh3qncca8x"]
      }, {
        denom: "fox",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/4F24D904BAB5FFBD3524F2DE3EC3C7A9E687A2408D9A985E57B356D9FA9201C6",
      name: "Juno Fox",
      display: "fox",
      symbol: "FOX",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1u8cr3hcjvfkzxcaacv9q75uw9hwjmn8pucc93pmy6yvkzz79kh3qncca8x",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1u8cr3hcjvfkzxcaacv9q75uw9hwjmn8pucc93pmy6yvkzz79kh3qncca8x"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/fox.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1u8cr3hcjvfkzxcaacv9q75uw9hwjmn8pucc93pmy6yvkzz79kh3qncca8x"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/fox.png"
      }]
    },
    {
      description: "QCK - native token of Quicksilver",
      denom_units: [{
        denom: "ibc/635CB83EF1DFE598B10A3E90485306FD0D47D34217A4BE5FD9977FA010A5367D",
        exponent: 0,
        aliases: ["uqck"]
      }, {
        denom: "qck",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/635CB83EF1DFE598B10A3E90485306FD0D47D34217A4BE5FD9977FA010A5367D",
      name: "Quicksilver",
      display: "qck",
      symbol: "QCK",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "quicksilver",
          base_denom: "uqck",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-522",
          path: "transfer/channel-522/uqck"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qck.png"
      },
      images: [{
        image_sync: {
          chain_name: "quicksilver",
          base_denom: "uqck"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qck.png"
      }]
    },
    {
      description: "The native token of Arkhadian",
      denom_units: [{
        denom: "ibc/0F91EE8B98AAE3CF393D94CD7F89A10F8D7758C5EC707E721899DFE65C164C28",
        exponent: 0,
        aliases: ["arkh"]
      }, {
        denom: "ARKH",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/0F91EE8B98AAE3CF393D94CD7F89A10F8D7758C5EC707E721899DFE65C164C28",
      name: "Arkhadian",
      display: "ARKH",
      symbol: "ARKH",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "arkh",
          base_denom: "arkh",
          channel_id: "channel-12"
        },
        chain: {
          channel_id: "channel-648",
          path: "transfer/channel-648/arkh"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/arkh/images/arkh.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/arkh/images/arkh.svg"
      },
      images: [{
        image_sync: {
          chain_name: "arkh",
          base_denom: "arkh"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/arkh/images/arkh.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/arkh/images/arkh.svg"
      }],
      keywords: ["osmosis_unstable"]
    },
    {
      description: "Quicksilver Liquid Staked OSMO",
      denom_units: [{
        denom: "ibc/42D24879D4569CE6477B7E88206ADBFE47C222C6CAD51A54083E4A72594269FC",
        exponent: 0,
        aliases: ["uqosmo"]
      }, {
        denom: "qosmo",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/42D24879D4569CE6477B7E88206ADBFE47C222C6CAD51A54083E4A72594269FC",
      name: "Quicksilver Liquid Staked OSMO",
      display: "qosmo",
      symbol: "qOSMO",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "uosmo"
        },
        provider: "Quicksilver"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "quicksilver",
          base_denom: "uqosmo",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-522",
          path: "transfer/channel-522/uqosmo"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qosmo.svg"
      },
      images: [{
        image_sync: {
          chain_name: "quicksilver",
          base_denom: "uqosmo"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qosmo.svg"
      }]
    },
    {
      description: "Frienzies are an IBC token redeemable exclusively for a physical asset issued by the Noble entity.",
      denom_units: [{
        denom: "ibc/7FA7EC64490E3BDE5A1A28CBE73CC0AD22522794957BC891C46321E3A6074DB9",
        exponent: 0,
        aliases: ["microfrienzies", "ufrienzies"]
      }, {
        denom: "frienzies",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/7FA7EC64490E3BDE5A1A28CBE73CC0AD22522794957BC891C46321E3A6074DB9",
      name: "Frienzies",
      display: "frienzies",
      symbol: "FRNZ",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "noble",
          base_denom: "ufrienzies",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-750",
          path: "transfer/channel-750/ufrienzies"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/frnz.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/frnz.svg"
      },
      images: [{
        image_sync: {
          chain_name: "noble",
          base_denom: "ufrienzies"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/frnz.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/frnz.svg"
      }]
    },
    {
      description: "The native token of Migaloo Chain",
      denom_units: [{
        denom: "ibc/EDD6F0D66BCD49C1084FB2C35353B4ACD7B9191117CE63671B61320548F7C89D",
        exponent: 0,
        aliases: ["uwhale"]
      }, {
        denom: "whale",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/EDD6F0D66BCD49C1084FB2C35353B4ACD7B9191117CE63671B61320548F7C89D",
      name: "Migaloo",
      display: "whale",
      symbol: "WHALE",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "migaloo",
          base_denom: "uwhale",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-642",
          path: "transfer/channel-642/uwhale"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/white-whale.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/white-whale.svg"
      },
      images: [{
        image_sync: {
          chain_name: "migaloo",
          base_denom: "uwhale"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/white-whale.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/white-whale.svg"
      }]
    },
    {
      description: "Evmos Guardians governance token.",
      denom_units: [{
        denom: "ibc/BAC9C6998F1F5C316D3353622EAEDAF8BD00FAABEB374FECDF8C9BC475172CFA",
        exponent: 0,
        aliases: ["cw20:juno1xekkh27punj0uxruv3gvuydyt856fax0nu750xns99t2qcxp7xmsqwhfma"]
      }, {
        denom: "grdn",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/BAC9C6998F1F5C316D3353622EAEDAF8BD00FAABEB374FECDF8C9BC475172CFA",
      name: "Guardian",
      display: "grdn",
      symbol: "GRDN",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1xekkh27punj0uxruv3gvuydyt856fax0nu750xns99t2qcxp7xmsqwhfma",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1xekkh27punj0uxruv3gvuydyt856fax0nu750xns99t2qcxp7xmsqwhfma"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/guardian.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1xekkh27punj0uxruv3gvuydyt856fax0nu750xns99t2qcxp7xmsqwhfma"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/guardian.png"
      }]
    },
    {
      description: "Mini Punks Token",
      denom_units: [{
        denom: "ibc/DC0D3303BBE739E073224D0314385B88B247F56D71D726A91414CCA244FFFE7E",
        exponent: 0,
        aliases: ["cw20:juno166heaxlyntd33a5euh4rrz26svhean4klzw594esmd02l4atan6sazy2my"]
      }, {
        denom: "mnpu",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/DC0D3303BBE739E073224D0314385B88B247F56D71D726A91414CCA244FFFE7E",
      name: "Mini Punks",
      display: "mnpu",
      symbol: "MNPU",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno166heaxlyntd33a5euh4rrz26svhean4klzw594esmd02l4atan6sazy2my",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno166heaxlyntd33a5euh4rrz26svhean4klzw594esmd02l4atan6sazy2my"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/mnpu.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/mnpu.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno166heaxlyntd33a5euh4rrz26svhean4klzw594esmd02l4atan6sazy2my"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/mnpu.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/mnpu.svg"
      }]
    },
    {
      description: "Shiba Cosmos",
      denom_units: [{
        denom: "ibc/447A0DCE83691056289503DDAB8EB08E52E167A73629F2ACC59F056B92F51CE8",
        exponent: 0,
        aliases: ["cw20:juno1x5qt47rw84c4k6xvvywtrd40p8gxjt8wnmlahlqg07qevah3f8lqwxfs7z"]
      }, {
        denom: "shibac",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/447A0DCE83691056289503DDAB8EB08E52E167A73629F2ACC59F056B92F51CE8",
      name: "ShibaCosmos",
      display: "shibac",
      symbol: "SHIBAC",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1x5qt47rw84c4k6xvvywtrd40p8gxjt8wnmlahlqg07qevah3f8lqwxfs7z",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1x5qt47rw84c4k6xvvywtrd40p8gxjt8wnmlahlqg07qevah3f8lqwxfs7z"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/shibacosmos.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1x5qt47rw84c4k6xvvywtrd40p8gxjt8wnmlahlqg07qevah3f8lqwxfs7z"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/shibacosmos.png"
      }]
    },
    {
      description: "Sikoba Governance Token",
      denom_units: [{
        denom: "ibc/71066B030D8FC6479E638580E1BA9C44925E8C1F6E45036669D22017CFDC8C5E",
        exponent: 0,
        aliases: ["cw20:juno1qqwf3lkfjhp77yja7gmg3y95pda0e5xctqrdhf3wvwdd79flagvqfgrgxp"]
      }, {
        denom: "sikoba",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/71066B030D8FC6479E638580E1BA9C44925E8C1F6E45036669D22017CFDC8C5E",
      name: "Sikoba Token",
      display: "sikoba",
      symbol: "SKOJ",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1qqwf3lkfjhp77yja7gmg3y95pda0e5xctqrdhf3wvwdd79flagvqfgrgxp",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1qqwf3lkfjhp77yja7gmg3y95pda0e5xctqrdhf3wvwdd79flagvqfgrgxp"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sikoba.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sikoba.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1qqwf3lkfjhp77yja7gmg3y95pda0e5xctqrdhf3wvwdd79flagvqfgrgxp"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sikoba.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sikoba.svg"
      }]
    },
    {
      description: "Nature Carbon Ton (NCT) is a carbon token standard backed 1:1 by carbon credits issued by Verra, a global leader in the voluntary carbon market. NCT credits on Regen Network have been tokenized by Toucan.earth.",
      denom_units: [{
        denom: "ibc/A76EB6ECF4E3E2D4A23C526FD1B48FDD42F171B206C9D2758EF778A7826ADD68",
        exponent: 0,
        aliases: ["eco.uC.NCT"]
      }, {
        denom: "nct",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/A76EB6ECF4E3E2D4A23C526FD1B48FDD42F171B206C9D2758EF778A7826ADD68",
      name: "Nature Carbon Ton",
      display: "nct",
      symbol: "NCT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "regen",
          base_denom: "eco.uC.NCT",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-8",
          path: "transfer/channel-8/eco.uC.NCT"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/nct.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/nct.svg"
      },
      images: [{
        image_sync: {
          chain_name: "regen",
          base_denom: "eco.uC.NCT"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/nct.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/nct.svg"
      }]
    },
    {
      description: "Celestims",
      denom_units: [{
        denom: "ibc/0E4FA664327BD40B32803EE84A77F145834C0281B7F82B65521333B3669FA0BA",
        exponent: 0,
        aliases: ["cw20:juno1ngww7zxak55fql42wmyqrr4rhzpne24hhs4p3w4cwhcdgqgr3hxsmzl9zg"]
      }, {
        denom: "clst",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/0E4FA664327BD40B32803EE84A77F145834C0281B7F82B65521333B3669FA0BA",
      name: "Celestims",
      display: "clst",
      symbol: "CLST",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1ngww7zxak55fql42wmyqrr4rhzpne24hhs4p3w4cwhcdgqgr3hxsmzl9zg",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1ngww7zxak55fql42wmyqrr4rhzpne24hhs4p3w4cwhcdgqgr3hxsmzl9zg"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/celestims.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1ngww7zxak55fql42wmyqrr4rhzpne24hhs4p3w4cwhcdgqgr3hxsmzl9zg"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/celestims.png"
      }]
    },
    {
      description: "The First Doge on Osmosis",
      denom_units: [{
        denom: "ibc/8AEEA9B9304392070F72611076C0E328CE3F2DECA1E18557E36F9DB4F09C0156",
        exponent: 0,
        aliases: ["cw20:juno1ytymtllllsp3hfmndvcp802p2xmy5s8m59ufel8xv9ahyxyfs4hs4kd4je"]
      }, {
        denom: "osdoge",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/8AEEA9B9304392070F72611076C0E328CE3F2DECA1E18557E36F9DB4F09C0156",
      name: "Osmosis Doge",
      display: "osdoge",
      symbol: "OSDOGE",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1ytymtllllsp3hfmndvcp802p2xmy5s8m59ufel8xv9ahyxyfs4hs4kd4je",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1ytymtllllsp3hfmndvcp802p2xmy5s8m59ufel8xv9ahyxyfs4hs4kd4je"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/osdoge.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1ytymtllllsp3hfmndvcp802p2xmy5s8m59ufel8xv9ahyxyfs4hs4kd4je"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/osdoge.png"
      }]
    },
    {
      description: "Apemos",
      denom_units: [{
        denom: "ibc/1EB03F13F29FEA73444586FC4E88A8C14ACE9291501E9658E3BEF951EA4AC85D",
        exponent: 0,
        aliases: ["cw20:juno1jrr0tuuzxrrwcg6hgeqhw5wqpck2y55734e7zcrp745aardlp0qqg8jz06"]
      }, {
        denom: "apemos",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/1EB03F13F29FEA73444586FC4E88A8C14ACE9291501E9658E3BEF951EA4AC85D",
      name: "Apemos",
      display: "apemos",
      symbol: "APEMOS",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1jrr0tuuzxrrwcg6hgeqhw5wqpck2y55734e7zcrp745aardlp0qqg8jz06",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1jrr0tuuzxrrwcg6hgeqhw5wqpck2y55734e7zcrp745aardlp0qqg8jz06"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/apemos.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1jrr0tuuzxrrwcg6hgeqhw5wqpck2y55734e7zcrp745aardlp0qqg8jz06"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/apemos.png"
      }]
    },
    {
      description: "Evmos Guardians' Invaders DAO token.",
      denom_units: [{
        denom: "ibc/3DB1721541C94AD19D7735FECED74C227E13F925BDB814392980B40A19C1ED54",
        exponent: 0,
        aliases: ["cw20:juno1jwdy7v4egw36pd84aeks3ww6n8k7zhsumd4ac8q5lts83ppxueus4626e8"]
      }, {
        denom: "invdrs",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/3DB1721541C94AD19D7735FECED74C227E13F925BDB814392980B40A19C1ED54",
      name: "Invaders",
      display: "invdrs",
      symbol: "INVDRS",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1jwdy7v4egw36pd84aeks3ww6n8k7zhsumd4ac8q5lts83ppxueus4626e8",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1jwdy7v4egw36pd84aeks3ww6n8k7zhsumd4ac8q5lts83ppxueus4626e8"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/invdrs.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1jwdy7v4egw36pd84aeks3ww6n8k7zhsumd4ac8q5lts83ppxueus4626e8"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/invdrs.png"
      }]
    },
    {
      description: "Doge Apr",
      denom_units: [{
        denom: "ibc/04BE4E9C825ED781F9684A1226114BB49607500CAD855F1E3FEEC18532297250",
        exponent: 0,
        aliases: ["cw20:juno1k2ruzzvvwwtwny6gq6kcwyfhkzahaunp685wmz4hafplduekj98q9hgs6d"]
      }, {
        denom: "doga",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/04BE4E9C825ED781F9684A1226114BB49607500CAD855F1E3FEEC18532297250",
      name: "Doge Apr",
      display: "doga",
      symbol: "DOGA",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1k2ruzzvvwwtwny6gq6kcwyfhkzahaunp685wmz4hafplduekj98q9hgs6d",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1k2ruzzvvwwtwny6gq6kcwyfhkzahaunp685wmz4hafplduekj98q9hgs6d"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/doga.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1k2ruzzvvwwtwny6gq6kcwyfhkzahaunp685wmz4hafplduekj98q9hgs6d"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/doga.png"
      }]
    },
    {
      description: "Catmos",
      denom_units: [{
        denom: "ibc/F4A07138CAEF0BFB4889E03C44C57956A48631061F1C8AB80421C1F229C1B835",
        exponent: 0,
        aliases: ["cw20:juno1f5datjdse3mdgrapwuzs3prl7pvxxht48ns6calnn0t77v2s9l8s0qu488"]
      }, {
        denom: "catmos",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/F4A07138CAEF0BFB4889E03C44C57956A48631061F1C8AB80421C1F229C1B835",
      name: "Catmos",
      display: "catmos",
      symbol: "CATMOS",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1f5datjdse3mdgrapwuzs3prl7pvxxht48ns6calnn0t77v2s9l8s0qu488",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1f5datjdse3mdgrapwuzs3prl7pvxxht48ns6calnn0t77v2s9l8s0qu488"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/catmos.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1f5datjdse3mdgrapwuzs3prl7pvxxht48ns6calnn0t77v2s9l8s0qu488"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/catmos.png"
      }]
    },
    {
      description: "Social Impact DAO providing showers, meals, and vehicles to the homeless",
      denom_units: [{
        denom: "ibc/56B988C4D934FB7503F5EA9B440C75D489C8AD5D193715B477BEC4F84B8BBA2A",
        exponent: 0,
        aliases: ["cw20:juno1j4ux0f6gt7e82z7jdpm25v4g2gts880ap64rdwa49989wzhd0dfqed6vqm"]
      }, {
        denom: "summit",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/56B988C4D934FB7503F5EA9B440C75D489C8AD5D193715B477BEC4F84B8BBA2A",
      name: "Summit",
      display: "summit",
      symbol: "SUMMIT",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1j4ux0f6gt7e82z7jdpm25v4g2gts880ap64rdwa49989wzhd0dfqed6vqm",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1j4ux0f6gt7e82z7jdpm25v4g2gts880ap64rdwa49989wzhd0dfqed6vqm"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/summit.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1j4ux0f6gt7e82z7jdpm25v4g2gts880ap64rdwa49989wzhd0dfqed6vqm"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/summit.png"
      }]
    },
    {
      description: "The native staking token of OmniFlix Hub.",
      denom_units: [{
        denom: "ibc/CEE970BB3D26F4B907097B6B660489F13F3B0DA765B83CC7D9A0BC0CE220FA6F",
        exponent: 0,
        aliases: ["uflix"]
      }, {
        denom: "flix",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/CEE970BB3D26F4B907097B6B660489F13F3B0DA765B83CC7D9A0BC0CE220FA6F",
      name: "OmniFlix",
      display: "flix",
      symbol: "FLIX",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "omniflixhub",
          base_denom: "uflix",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-199",
          path: "transfer/channel-199/uflix"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/omniflixhub/images/flix.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/omniflixhub/images/flix.svg"
      },
      images: [{
        image_sync: {
          chain_name: "omniflixhub",
          base_denom: "uflix"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/omniflixhub/images/flix.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/omniflixhub/images/flix.svg"
      }]
    },
    {
      description: "Spacer",
      denom_units: [{
        denom: "ibc/7A496DB7C2277D4B74EC4428DDB5AC8A62816FBD0DEBE1CFE094935D746BE19C",
        exponent: 0,
        aliases: ["cw20:juno1dyyf7pxeassxvftf570krv7fdf5r8e4r04mp99h0mllsqzp3rs4q7y8yqg"]
      }, {
        denom: "spacer",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/7A496DB7C2277D4B74EC4428DDB5AC8A62816FBD0DEBE1CFE094935D746BE19C",
      name: "Spacer",
      display: "spacer",
      symbol: "SPACER",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1dyyf7pxeassxvftf570krv7fdf5r8e4r04mp99h0mllsqzp3rs4q7y8yqg",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1dyyf7pxeassxvftf570krv7fdf5r8e4r04mp99h0mllsqzp3rs4q7y8yqg"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/spacer.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1dyyf7pxeassxvftf570krv7fdf5r8e4r04mp99h0mllsqzp3rs4q7y8yqg"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/spacer.png"
      }]
    },
    {
      description: "Light: LumenX community DAO treasury token",
      denom_units: [{
        denom: "ibc/3DC08BDF2689978DBCEE28C7ADC2932AA658B2F64B372760FBC5A0058669AD29",
        exponent: 0,
        aliases: ["cw20:juno1dpany8c0lj526lsa02sldv7shzvnw5dt5ues72rk35hd69rrydxqeraz8l"]
      }, {
        denom: "light",
        exponent: 9
      }],
      type_asset: "ics20",
      base: "ibc/3DC08BDF2689978DBCEE28C7ADC2932AA658B2F64B372760FBC5A0058669AD29",
      name: "LIGHT",
      display: "light",
      symbol: "LIGHT",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1dpany8c0lj526lsa02sldv7shzvnw5dt5ues72rk35hd69rrydxqeraz8l",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1dpany8c0lj526lsa02sldv7shzvnw5dt5ues72rk35hd69rrydxqeraz8l"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/light.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1dpany8c0lj526lsa02sldv7shzvnw5dt5ues72rk35hd69rrydxqeraz8l"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/light.png"
      }]
    },
    {
      description: "The native token cw20 for Silk on Secret Network",
      denom_units: [{
        denom: "ibc/8A025A1E70101E39DE0C0F153E582A30806D3DA16795F6D868A3AA247D2DEDF7",
        exponent: 0,
        aliases: ["cw20:secret1fl449muk5yq8dlad7a22nje4p5d2pnsgymhjfd"]
      }, {
        denom: "silk",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/8A025A1E70101E39DE0C0F153E582A30806D3DA16795F6D868A3AA247D2DEDF7",
      name: "Silk",
      display: "silk",
      symbol: "SILK",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "secretnetwork",
          base_denom: "cw20:secret1fl449muk5yq8dlad7a22nje4p5d2pnsgymhjfd",
          port: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4",
          channel_id: "channel-44"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-476",
          path: "transfer/channel-476/cw20:secret1fl449muk5yq8dlad7a22nje4p5d2pnsgymhjfd"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/silk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/silk.svg"
      },
      images: [{
        image_sync: {
          chain_name: "secretnetwork",
          base_denom: "cw20:secret1fl449muk5yq8dlad7a22nje4p5d2pnsgymhjfd"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/silk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/silk.svg"
      }]
    },
    {
      description: "Mille: the 1000th token on osmosis",
      denom_units: [{
        denom: "ibc/912275A63A565BFD80734AEDFFB540132C51E446EAC41483B26EDE8A557C71CF",
        exponent: 0,
        aliases: ["cw20:juno1llg7q2d5dqlrqzh5dxv8c7kzzjszld34s5vktqmlmaaxqjssz43sxyhq0d"]
      }, {
        denom: "mile",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/912275A63A565BFD80734AEDFFB540132C51E446EAC41483B26EDE8A557C71CF",
      name: "Mille",
      display: "mile",
      symbol: "MILE",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1llg7q2d5dqlrqzh5dxv8c7kzzjszld34s5vktqmlmaaxqjssz43sxyhq0d",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1llg7q2d5dqlrqzh5dxv8c7kzzjszld34s5vktqmlmaaxqjssz43sxyhq0d"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/mille.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1llg7q2d5dqlrqzh5dxv8c7kzzjszld34s5vktqmlmaaxqjssz43sxyhq0d"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/mille.png"
      }]
    },
    {
      description: "Social Impact DAO dedicated to combatting food insecurity and malnutrition",
      denom_units: [{
        denom: "ibc/980A2748F37C938AD129B92A51E2ABA8CFFC6862ADD61EC1B291125535DBE30B",
        exponent: 0,
        aliases: ["cw20:juno13ca2g36ng6etcfhr9qxx352uw2n5e92np54thfkm3w3nzlhsgvwsjaqlyq"]
      }, {
        denom: "manna",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/980A2748F37C938AD129B92A51E2ABA8CFFC6862ADD61EC1B291125535DBE30B",
      name: "Manna",
      display: "manna",
      symbol: "MANNA",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno13ca2g36ng6etcfhr9qxx352uw2n5e92np54thfkm3w3nzlhsgvwsjaqlyq",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno13ca2g36ng6etcfhr9qxx352uw2n5e92np54thfkm3w3nzlhsgvwsjaqlyq"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/manna.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno13ca2g36ng6etcfhr9qxx352uw2n5e92np54thfkm3w3nzlhsgvwsjaqlyq"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/manna.png"
      }]
    },
    {
      description: "Filecoin is a decentralized storage network designed to turn cloud storage into an algorithmic market. The network facilitates open markets for storing and retrieving data, where users pay to store their files on storage miners. Filecoin is built on top of the InterPlanetary File System (IPFS), a peer-to-peer storage network. Filecoin aims to store data in a decentralized manner, unlike traditional cloud storage providers.\n\nParticipants in the Filecoin network are incentivized to act honestly and store as much data as possible because they earn the Filecoin cryptocurrency (FIL) in exchange for their storage services. This setup ensures the integrity and accessibility of data stored. Filecoin's model allows for a variety of storage options, including long-term archival storage and more rapid retrieval services, making it a versatile solution for decentralized data storage. The project, developed by Protocol Labs, also focuses on ensuring that data is stored reliably and efficiently.",
      denom_units: [{
        denom: "ibc/18FB5C09D9D2371F659D4846A956FA56225E377EE3C3652A2BF3542BF809159D",
        exponent: 0,
        aliases: ["wfil-wei"]
      }, {
        denom: "fil",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/18FB5C09D9D2371F659D4846A956FA56225E377EE3C3652A2BF3542BF809159D",
      name: "Filecoin",
      display: "fil",
      symbol: "FIL",
      traces: [
        {
          type: "wrapped",
          counterparty: {
            chain_name: "filecoin",
            base_denom: "attoFIL"
          },
          provider: "Filecoin"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "filecoin",
            base_denom: "0x60E1773636CF5E4A227d9AC24F20fEca034ee25A"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "wfil-wei",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/wfil-wei"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/filecoin/images/fil.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/filecoin/images/fil.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/filecoin/images/fil.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/filecoin/images/fil.svg"
      }]
    },
    {
      description: "Void",
      denom_units: [{
        denom: "ibc/593F820ECE676A3E0890C734EC4F3A8DE16EC10A54EEDFA8BDFEB40EEA903960",
        exponent: 0,
        aliases: ["cw20:juno1lpvx3mv2a6ddzfjc7zzz2v2cm5gqgqf0hx67hc5p5qwn7hz4cdjsnznhu8"]
      }, {
        denom: "void",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/593F820ECE676A3E0890C734EC4F3A8DE16EC10A54EEDFA8BDFEB40EEA903960",
      name: "Void",
      display: "void",
      symbol: "VOID",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1lpvx3mv2a6ddzfjc7zzz2v2cm5gqgqf0hx67hc5p5qwn7hz4cdjsnznhu8",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1lpvx3mv2a6ddzfjc7zzz2v2cm5gqgqf0hx67hc5p5qwn7hz4cdjsnznhu8"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/void.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1lpvx3mv2a6ddzfjc7zzz2v2cm5gqgqf0hx67hc5p5qwn7hz4cdjsnznhu8"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/void.png"
      }]
    },
    {
      description: "The native token cw20 for Shade on Secret Network",
      denom_units: [{
        denom: "ibc/0B3D528E74E3DEAADF8A68F393887AC7E06028904D02173561B0D27F6E751D0A",
        exponent: 0,
        aliases: ["cw20:secret153wu605vvp934xhd4k9dtd640zsep5jkesstdm"]
      }, {
        denom: "shd",
        exponent: 8
      }],
      type_asset: "ics20",
      base: "ibc/0B3D528E74E3DEAADF8A68F393887AC7E06028904D02173561B0D27F6E751D0A",
      name: "Shade",
      display: "shd",
      symbol: "SHD",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "secretnetwork",
          base_denom: "cw20:secret153wu605vvp934xhd4k9dtd640zsep5jkesstdm",
          port: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4",
          channel_id: "channel-44"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-476",
          path: "transfer/channel-476/cw20:secret153wu605vvp934xhd4k9dtd640zsep5jkesstdm"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shd.svg"
      },
      images: [{
        image_sync: {
          chain_name: "secretnetwork",
          base_denom: "cw20:secret153wu605vvp934xhd4k9dtd640zsep5jkesstdm"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shd.svg"
      }]
    },
    {
      description: "The native token of Bluzelle",
      denom_units: [{
        denom: "ibc/63CDD51098FD99E04E5F5610A3882CBE7614C441607BA6FCD7F3A3C1CD5325F8",
        exponent: 0,
        aliases: ["ubnt"]
      }, {
        denom: "bnt",
        exponent: 6,
        aliases: ["blz"]
      }],
      type_asset: "ics20",
      base: "ibc/63CDD51098FD99E04E5F5610A3882CBE7614C441607BA6FCD7F3A3C1CD5325F8",
      name: "Bluzelle",
      display: "bnt",
      symbol: "BLZ",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "bluzelle",
          base_denom: "ubnt",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-763",
          path: "transfer/channel-763/ubnt"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bluzelle/images/bluzelle.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bluzelle/images/bluzelle.svg"
      },
      images: [{
        image_sync: {
          chain_name: "bluzelle",
          base_denom: "ubnt"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bluzelle/images/bluzelle.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bluzelle/images/bluzelle.svg"
      }],
      keywords: ["bluzelle", "game"]
    },
    {
      description: "Native token of Arbitrum",
      denom_units: [{
        denom: "ibc/10E5E5B06D78FFBB61FD9F89209DEE5FD4446ED0550CBB8E3747DA79E10D9DC6",
        exponent: 0,
        aliases: ["arb-wei"]
      }, {
        denom: "arb",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/10E5E5B06D78FFBB61FD9F89209DEE5FD4446ED0550CBB8E3747DA79E10D9DC6",
      name: "Arbitrum",
      display: "arb",
      symbol: "ARB",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "arbitrum",
          base_denom: "0x912CE59144191C1204E64559FE8253a0e49E6548"
        },
        provider: "Axelar"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "axelar",
          base_denom: "arb-wei",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-208",
          path: "transfer/channel-208/arb-wei"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/arbitrum/images/arb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/arbitrum/images/arb.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "arb-wei"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/arbitrum/images/arb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/arbitrum/images/arb.svg"
      }]
    },
    {
      description: "Silica",
      denom_units: [{
        denom: "ibc/5164ECF584AD7DC27DA9E6A89E75DAB0F7C4FCB0A624B69215B8BC6A2C40CD07",
        exponent: 0,
        aliases: ["cw20:juno10vgf2u03ufcf25tspgn05l7j3tfg0j63ljgpffy98t697m5r5hmqaw95ux"]
      }, {
        denom: "silica",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/5164ECF584AD7DC27DA9E6A89E75DAB0F7C4FCB0A624B69215B8BC6A2C40CD07",
      name: "Silica",
      display: "silica",
      symbol: "SLCA",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno10vgf2u03ufcf25tspgn05l7j3tfg0j63ljgpffy98t697m5r5hmqaw95ux",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno10vgf2u03ufcf25tspgn05l7j3tfg0j63ljgpffy98t697m5r5hmqaw95ux"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/silica.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno10vgf2u03ufcf25tspgn05l7j3tfg0j63ljgpffy98t697m5r5hmqaw95ux"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/silica.png"
      }]
    },
    {
      description: "Pepec",
      denom_units: [{
        denom: "ibc/C00B17F74C94449A62935B4C886E6F0F643249A270DEF269D53CE6741ECCDB93",
        exponent: 0,
        aliases: ["cw20:juno1epxnvge53c4hkcmqzlxryw5fp7eae2utyk6ehjcfpwajwp48km3sgxsh9k"]
      }, {
        denom: "pepec",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/C00B17F74C94449A62935B4C886E6F0F643249A270DEF269D53CE6741ECCDB93",
      name: "Pepec",
      display: "pepec",
      symbol: "PEPEC",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1epxnvge53c4hkcmqzlxryw5fp7eae2utyk6ehjcfpwajwp48km3sgxsh9k",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1epxnvge53c4hkcmqzlxryw5fp7eae2utyk6ehjcfpwajwp48km3sgxsh9k"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/pepec.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1epxnvge53c4hkcmqzlxryw5fp7eae2utyk6ehjcfpwajwp48km3sgxsh9k"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/pepec.png"
      }]
    },
    {
      description: "Pepe is a community based memecoin with one mission: to make memecoins great again. Made to honor the iconic meme we all know and love, Pepe is here to take reign as the most memeable memecoin in existence, fueled purely by memetic power. Pepe is for the people.",
      denom_units: [{
        denom: "ibc/E47F4E97C534C95B942729E1B25DBDE111EA791411CFF100515050BEA0AC0C6B",
        exponent: 0,
        aliases: ["0x6982508145454Ce325dDbE47a25d4ec3d2311933", "pepe-wei"]
      }, {
        denom: "pepe",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/E47F4E97C534C95B942729E1B25DBDE111EA791411CFF100515050BEA0AC0C6B",
      name: "Pepe",
      display: "pepe",
      symbol: "PEPE",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x6982508145454Ce325dDbE47a25d4ec3d2311933"
        },
        provider: "Axelar"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "axelar",
          base_denom: "pepe-wei",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-208",
          path: "transfer/channel-208/pepe-wei"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pepe.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pepe.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "pepe-wei"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pepe.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pepe.svg"
      }],
      keywords: ["meme"]
    },
    {
      denom_units: [{
        denom: "factory/osmo14klwqgkmackvx2tqa0trtg69dmy0nrg4ntq4gjgw2za4734r5seqjqm4gm/uibcx",
        exponent: 0
      }, {
        denom: "ibcx",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo14klwqgkmackvx2tqa0trtg69dmy0nrg4ntq4gjgw2za4734r5seqjqm4gm",
      base: "factory/osmo14klwqgkmackvx2tqa0trtg69dmy0nrg4ntq4gjgw2za4734r5seqjqm4gm/uibcx",
      name: "IBC Index",
      display: "ibcx",
      symbol: "IBCX",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ibcx.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ibcx.svg"
      }],
      coingecko_id: "ibc-index"
    },
    {
      description: "Coinbase Wrapped Staked ETH (\u201CcbETH\u201D) is a utility token and liquid representation of ETH staked through Coinbase. cbETH gives customers the option to sell, transfer, or otherwise use their staked ETH in dapps while it remains locked by the Ethereum protocol.",
      denom_units: [{
        denom: "ibc/4D7A6F2A7744B1534C984A21F9EDFFF8809FC71A9E9243FFB702073E7FCA513A",
        exponent: 0,
        aliases: ["0xbe9895146f7af43049ca1c1ae358b0541ea49704", "cbeth-wei"]
      }, {
        denom: "cbeth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/4D7A6F2A7744B1534C984A21F9EDFFF8809FC71A9E9243FFB702073E7FCA513A",
      name: "Coinbase Wrapped Staked ETH",
      display: "cbeth",
      symbol: "cbETH",
      traces: [
        {
          type: "liquid-stake",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "wei"
          },
          provider: "Coinbase"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xbe9895146f7af43049ca1c1ae358b0541ea49704"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "cbeth-wei",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/cbeth-wei"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/cbeth.png"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "cbeth-wei"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/cbeth.png"
      }]
    },
    {
      description: "Rocket Pool is a decentralised Ethereum Proof of Stake pool.",
      denom_units: [{
        denom: "ibc/E610B83FD5544E00A8A1967A2EB3BEF25F1A8CFE8650FE247A8BD4ECA9DC9222",
        exponent: 0,
        aliases: ["0xae78736cd615f374d3085123a210448e74fc6393", "reth-wei"]
      }, {
        denom: "reth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/E610B83FD5544E00A8A1967A2EB3BEF25F1A8CFE8650FE247A8BD4ECA9DC9222",
      name: "Rocket Pool Ether",
      display: "reth",
      symbol: "rETH",
      traces: [
        {
          type: "liquid-stake",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "wei"
          },
          provider: "Rocket Pool"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xae78736cd615f374d3085123a210448e74fc6393"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "reth-wei",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/reth-wei"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/reth.png"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "reth-wei"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/reth.png"
      }]
    },
    {
      description: "sfrxETH is the version of frxETH which accrues staking yield. All profit generated from Frax Ether validators is distributed to sfrxETH holders. By exchanging frxETH for sfrxETH, one become's eligible for staking yield, which is redeemed upon converting sfrxETH back to frxETH.",
      denom_units: [{
        denom: "ibc/81F578C39006EB4B27FFFA9460954527910D73390991B379C03B18934D272F46",
        exponent: 0,
        aliases: ["0xac3e018457b222d93114458476f3e3416abbe38f", "sfrxeth-wei"]
      }, {
        denom: "sfrxeth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/81F578C39006EB4B27FFFA9460954527910D73390991B379C03B18934D272F46",
      name: "Staked Frax Ether",
      display: "sfrxeth",
      symbol: "sfrxETH",
      traces: [
        {
          type: "liquid-stake",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "wei"
          },
          provider: "Frax"
        },
        {
          type: "wrapped",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0x5e8422345238f34275888049021821e8e08caa1f"
          },
          provider: "Frax"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xac3e018457b222d93114458476f3e3416abbe38f"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "sfrxeth-wei",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/sfrxeth-wei"
          }
        }
      ],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sfrxeth.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "sfrxeth-wei"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sfrxeth.svg"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/B2BD584CD2A0A9CE53D4449667E26160C7D44A9C41AF50F602C201E5B3CCA46C",
        exponent: 0,
        aliases: ["0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0", "wsteth-wei"]
      }, {
        denom: "wsteth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/B2BD584CD2A0A9CE53D4449667E26160C7D44A9C41AF50F602C201E5B3CCA46C",
      name: "Wrapped Lido Staked Ether (Axelar)",
      display: "wsteth",
      symbol: "wstETH.axl",
      traces: [
        {
          type: "liquid-stake",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "wei"
          },
          provider: "Lido"
        },
        {
          type: "wrapped",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xae7ab96520de3a18e5e111b5eaab095312d7fe84"
          },
          provider: "Lido"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "wsteth-wei",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/wsteth-wei"
          }
        }
      ],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wsteth.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wsteth.svg"
      }, {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wstETH.axl.svg"
      }]
    },
    {
      description: "The native token of Gitopia",
      denom_units: [{
        denom: "ibc/B1C1806A540B3E165A2D42222C59946FB85BA325596FC85662D7047649F419F3",
        exponent: 0,
        aliases: ["ulore"]
      }, {
        denom: "LORE",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/B1C1806A540B3E165A2D42222C59946FB85BA325596FC85662D7047649F419F3",
      name: "Gitopia",
      display: "LORE",
      symbol: "LORE",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "gitopia",
          base_denom: "ulore",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-781",
          path: "transfer/channel-781/ulore"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gitopia/images/lore.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gitopia/images/lore.svg"
      },
      images: [{
        image_sync: {
          chain_name: "gitopia",
          base_denom: "ulore"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gitopia/images/lore.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gitopia/images/lore.svg"
      }, {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/gitopia/images/gitopia.png"
      }]
    },
    {
      description: "Lion DAO is a community DAO that lives on the Terra blockchain with the mission to reactivate the LUNAtic community and showcase Terra protocols & tooling",
      denom_units: [{
        denom: "ibc/98BCD43F190C6960D0005BC46BB765C827403A361C9C03C2FF694150A30284B0",
        exponent: 0,
        aliases: ["cw20:terra1lxx40s29qvkrcj8fsa3yzyehy7w50umdvvnls2r830rys6lu2zns63eelv"]
      }, {
        denom: "roar",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/98BCD43F190C6960D0005BC46BB765C827403A361C9C03C2FF694150A30284B0",
      name: "Lion DAO",
      display: "roar",
      symbol: "ROAR",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "terra2",
          base_denom: "cw20:terra1lxx40s29qvkrcj8fsa3yzyehy7w50umdvvnls2r830rys6lu2zns63eelv",
          port: "wasm.terra1e0mrzy8077druuu42vs0hu7ugguade0cj65dgtauyaw4gsl4kv0qtdf2au",
          channel_id: "channel-26"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-341",
          path: "transfer/channel-341/cw20:terra1lxx40s29qvkrcj8fsa3yzyehy7w50umdvvnls2r830rys6lu2zns63eelv"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/roar.png"
      },
      images: [{
        image_sync: {
          chain_name: "terra2",
          base_denom: "cw20:terra1lxx40s29qvkrcj8fsa3yzyehy7w50umdvvnls2r830rys6lu2zns63eelv"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/roar.png"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/02F196DA6FD0917DD5FEA249EE61880F4D941EE9059E7964C5C9B50AF103800F",
        exponent: 0,
        aliases: ["stuumee"]
      }, {
        denom: "stumee",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/02F196DA6FD0917DD5FEA249EE61880F4D941EE9059E7964C5C9B50AF103800F",
      name: "Stride Staked UMEE",
      display: "stumee",
      symbol: "stUMEE",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "umee",
          base_denom: "uumee"
        },
        provider: "Stride"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "stride",
          base_denom: "stuumee",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-326",
          path: "transfer/channel-326/stuumee"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stumee.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stumee.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stride",
          base_denom: "stuumee"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stumee.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stumee.svg"
      }]
    },
    {
      denom_units: [{
        denom: "factory/osmo1xqw2sl9zk8a6pch0csaw78n4swg5ws8t62wc5qta4gnjxfqg6v2qcs243k/stuibcx",
        exponent: 0
      }, {
        denom: "stibcx",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo1xqw2sl9zk8a6pch0csaw78n4swg5ws8t62wc5qta4gnjxfqg6v2qcs243k",
      base: "factory/osmo1xqw2sl9zk8a6pch0csaw78n4swg5ws8t62wc5qta4gnjxfqg6v2qcs243k/stuibcx",
      name: "Staked IBCX",
      display: "stibcx",
      symbol: "stIBCX",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/stibcx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/stibcx.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/stibcx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/stibcx.svg"
      }]
    },
    {
      description: "The native token of Nolus chain",
      denom_units: [{
        denom: "ibc/D9AFCECDD361D38302AA66EB3BAC23B95234832C51D12489DC451FA2B7C72782",
        exponent: 0,
        aliases: ["unls"]
      }, {
        denom: "nls",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/D9AFCECDD361D38302AA66EB3BAC23B95234832C51D12489DC451FA2B7C72782",
      name: "Nolus",
      display: "nls",
      symbol: "NLS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "nolus",
          base_denom: "unls",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-783",
          path: "transfer/channel-783/unls"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nolus/images/nolus.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nolus/images/nolus.svg"
      },
      images: [{
        image_sync: {
          chain_name: "nolus",
          base_denom: "unls"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nolus/images/nolus.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nolus/images/nolus.svg"
      }]
    },
    {
      description: "Lion Cub DAO is a useless meme community DAO on Terra",
      denom_units: [{
        denom: "ibc/6F18EFEBF1688AA77F7EAC17065609494DC1BA12AFC78E9AEC832AF70A11BEF3",
        exponent: 0,
        aliases: ["cw20:terra1lalvk0r6nhruel7fvzdppk3tup3mh5j4d4eadrqzfhle4zrf52as58hh9t"]
      }, {
        denom: "cub",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/6F18EFEBF1688AA77F7EAC17065609494DC1BA12AFC78E9AEC832AF70A11BEF3",
      name: "Lion Cub DAO",
      display: "cub",
      symbol: "CUB",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "terra2",
          base_denom: "cw20:terra1lalvk0r6nhruel7fvzdppk3tup3mh5j4d4eadrqzfhle4zrf52as58hh9t",
          port: "wasm.terra1e0mrzy8077druuu42vs0hu7ugguade0cj65dgtauyaw4gsl4kv0qtdf2au",
          channel_id: "channel-26"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-341",
          path: "transfer/channel-341/cw20:terra1lalvk0r6nhruel7fvzdppk3tup3mh5j4d4eadrqzfhle4zrf52as58hh9t"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/cub.png"
      },
      images: [{
        image_sync: {
          chain_name: "terra2",
          base_denom: "cw20:terra1lalvk0r6nhruel7fvzdppk3tup3mh5j4d4eadrqzfhle4zrf52as58hh9t"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/cub.png"
      }]
    },
    {
      description: "BLUE CUB DAO is a community DAO on Terra",
      denom_units: [{
        denom: "ibc/DA961FE314B009C38595FFE3AF41225D8894D663B8C3F6650DCB5B6F8435592E",
        exponent: 0,
        aliases: ["cw20:terra1gwrz9xzhqsygyr5asrgyq3pu0ewpn00mv2zenu86yvx2nlwpe8lqppv584"]
      }, {
        denom: "blue",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/DA961FE314B009C38595FFE3AF41225D8894D663B8C3F6650DCB5B6F8435592E",
      name: "BLUE CUB DAO",
      display: "blue",
      symbol: "BLUE",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "terra2",
          base_denom: "cw20:terra1gwrz9xzhqsygyr5asrgyq3pu0ewpn00mv2zenu86yvx2nlwpe8lqppv584",
          port: "wasm.terra1e0mrzy8077druuu42vs0hu7ugguade0cj65dgtauyaw4gsl4kv0qtdf2au",
          channel_id: "channel-26"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-341",
          path: "transfer/channel-341/cw20:terra1gwrz9xzhqsygyr5asrgyq3pu0ewpn00mv2zenu86yvx2nlwpe8lqppv584"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/blue.png"
      },
      images: [{
        image_sync: {
          chain_name: "terra2",
          base_denom: "cw20:terra1gwrz9xzhqsygyr5asrgyq3pu0ewpn00mv2zenu86yvx2nlwpe8lqppv584"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/blue.png"
      }]
    },
    {
      description: "The native token of Neutron chain.",
      denom_units: [{
        denom: "ibc/126DA09104B71B164883842B769C0E9EC1486C0887D27A9999E395C2C8FB5682",
        exponent: 0,
        aliases: ["untrn"]
      }, {
        denom: "ntrn",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/126DA09104B71B164883842B769C0E9EC1486C0887D27A9999E395C2C8FB5682",
      name: "Neutron",
      display: "ntrn",
      symbol: "NTRN",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "neutron",
          base_denom: "untrn",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-874",
          path: "transfer/channel-874/untrn"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/ntrn.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/ntrn.svg"
      },
      images: [{
        image_sync: {
          chain_name: "neutron",
          base_denom: "untrn"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/ntrn.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/ntrn.svg"
      }]
    },
    {
      description: "An innovative DAO dedicated to housing the most vulnerable",
      denom_units: [{
        denom: "ibc/2F5C084037D951B24D100F15CC013A131DF786DCE1B1DBDC48F018A9B9A138DE",
        exponent: 0,
        aliases: ["cw20:juno1ju8k8sqwsqu5k6umrypmtyqu2wqcpnrkf4w4mntvl0javt4nma7s8lzgss"]
      }, {
        denom: "casa",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/2F5C084037D951B24D100F15CC013A131DF786DCE1B1DBDC48F018A9B9A138DE",
      name: "Casa",
      display: "casa",
      symbol: "CASA",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1ju8k8sqwsqu5k6umrypmtyqu2wqcpnrkf4w4mntvl0javt4nma7s8lzgss",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1ju8k8sqwsqu5k6umrypmtyqu2wqcpnrkf4w4mntvl0javt4nma7s8lzgss"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/casa.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1ju8k8sqwsqu5k6umrypmtyqu2wqcpnrkf4w4mntvl0javt4nma7s8lzgss"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/casa.png"
      }]
    },
    {
      description: "The native staking and governance token of Composable.",
      denom_units: [{
        denom: "ibc/56D7C03B8F6A07AD322EEE1BEF3AE996E09D1C1E34C27CF37E0D4A0AC5972516",
        exponent: 0,
        aliases: ["ppica"]
      }, {
        denom: "pica",
        exponent: 12
      }],
      type_asset: "ics20",
      base: "ibc/56D7C03B8F6A07AD322EEE1BEF3AE996E09D1C1E34C27CF37E0D4A0AC5972516",
      name: "Picasso",
      display: "pica",
      symbol: "PICA",
      traces: [{
        type: "additional-mintage",
        counterparty: {
          chain_name: "picasso",
          base_denom: "ppica"
        },
        provider: "Picasso"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "composable",
          base_denom: "ppica",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-1279",
          path: "transfer/channel-1279/ppica"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/composable/images/pica.svg"
      },
      images: [{
        image_sync: {
          chain_name: "picasso",
          base_denom: "ppica"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/composable/images/pica.svg"
      }]
    },
    {
      description: "The native fee, governance, staking, and bonding token of the Polkadot platform.",
      denom_units: [{
        denom: "ibc/6727B2F071643B3841BD535ECDD4ED9CAE52ABDD0DCD07C3630811A7A37B215C",
        exponent: 0,
        aliases: ["4", "ibc/EE9046745AEC0E8302CB7ED9D5AD67F528FB3B7AE044B247FB0FB293DBDA35E9"]
      }, {
        denom: "ksm",
        exponent: 12
      }],
      type_asset: "ics20",
      base: "ibc/6727B2F071643B3841BD535ECDD4ED9CAE52ABDD0DCD07C3630811A7A37B215C",
      name: "Kusama",
      display: "ksm",
      symbol: "KSM",
      traces: [
        {
          type: "bridge",
          counterparty: {
            chain_name: "kusama",
            base_denom: "Planck"
          },
          provider: "Kusama Parachain"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "picasso",
            base_denom: "4",
            channel_id: "channel-17"
          },
          chain: {
            channel_id: "channel-2",
            path: "transfer/channel-2/4"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composable",
            base_denom: "ibc/EE9046745AEC0E8302CB7ED9D5AD67F528FB3B7AE044B247FB0FB293DBDA35E9",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-1279",
            path: "transfer/channel-1279/transfer/channel-2/4"
          }
        }
      ],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/kusama/images/ksm.svg"
      },
      images: [{
        image_sync: {
          chain_name: "composable",
          base_denom: "ibc/EE9046745AEC0E8302CB7ED9D5AD67F528FB3B7AE044B247FB0FB293DBDA35E9"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/kusama/images/ksm.svg"
      }]
    },
    {
      description: "The native fee, governance, staking, and bonding token of the Polkadot platform.",
      denom_units: [{
        denom: "ibc/6B2B19D874851F631FF0AF82C38A20D4B82F438C7A22F41EDA33568345397244",
        exponent: 0,
        aliases: ["79228162514264337593543950342", "ibc/3CC19CEC7E5A3E90E78A5A9ECC5A0E2F8F826A375CF1E096F4515CF09DA3E366"]
      }, {
        denom: "dot",
        exponent: 10
      }],
      type_asset: "ics20",
      base: "ibc/6B2B19D874851F631FF0AF82C38A20D4B82F438C7A22F41EDA33568345397244",
      name: "Polkadot",
      display: "dot",
      symbol: "DOT",
      traces: [
        {
          type: "bridge",
          counterparty: {
            chain_name: "polkadot",
            base_denom: "Planck"
          },
          provider: "Polkadot Relay"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composablepolkadot",
            base_denom: "79228162514264337593543950342",
            channel_id: "channel-15"
          },
          chain: {
            channel_id: "channel-15",
            path: "transfer/channel-15/79228162514264337593543950342"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "picasso",
            base_denom: "79228162514264337593543950342",
            channel_id: "channel-17"
          },
          chain: {
            channel_id: "channel-2",
            path: "transfer/channel-2/transfer/channel-15/79228162514264337593543950342"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composable",
            base_denom: "ibc/3CC19CEC7E5A3E90E78A5A9ECC5A0E2F8F826A375CF1E096F4515CF09DA3E366",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-1279",
            path: "transfer/channel-1279/transfer/channel-2/transfer/channel-15/79228162514264337593543950342"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.svg"
      },
      images: [{
        image_sync: {
          chain_name: "composable",
          base_denom: "ibc/3CC19CEC7E5A3E90E78A5A9ECC5A0E2F8F826A375CF1E096F4515CF09DA3E366"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.png"
      }]
    },
    {
      description: "The native token of Quasar",
      denom_units: [{
        denom: "ibc/1B708808D372E959CD4839C594960309283424C775F4A038AAEBE7F83A988477",
        exponent: 0,
        aliases: ["uqsr"]
      }, {
        denom: "qsr",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/1B708808D372E959CD4839C594960309283424C775F4A038AAEBE7F83A988477",
      name: "Quasar",
      display: "qsr",
      symbol: "QSR",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "quasar",
          base_denom: "uqsr",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-688",
          path: "transfer/channel-688/uqsr"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quasar/images/quasar.png"
      },
      images: [{
        image_sync: {
          chain_name: "quasar",
          base_denom: "uqsr"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quasar/images/quasar.png"
      }]
    },
    {
      description: "The native token of Archway network",
      denom_units: [
        {
          denom: "ibc/23AB778D694C1ECFC59B91D8C399C115CC53B0BD1C61020D8E19519F002BDD85",
          exponent: 0,
          aliases: ["aarch"]
        },
        {
          denom: "uarch",
          exponent: 12
        },
        {
          denom: "arch",
          exponent: 18
        }
      ],
      type_asset: "ics20",
      base: "ibc/23AB778D694C1ECFC59B91D8C399C115CC53B0BD1C61020D8E19519F002BDD85",
      name: "Archway",
      display: "arch",
      symbol: "ARCH",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "archway",
          base_denom: "aarch",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-1429",
          path: "transfer/channel-1429/aarch"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/archway/images/archway.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/archway/images/archway.svg"
      },
      images: [{
        image_sync: {
          chain_name: "archway",
          base_denom: "aarch"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/archway/images/archway.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/archway/images/archway.svg"
      }]
    },
    {
      description: "The native staking and governance token of Empower.",
      denom_units: [{
        denom: "ibc/DD3938D8131F41994C1F01F4EB5233DEE9A0A5B787545B9A07A321925655BF38",
        exponent: 0,
        aliases: ["umpwr"]
      }, {
        denom: "mpwr",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/DD3938D8131F41994C1F01F4EB5233DEE9A0A5B787545B9A07A321925655BF38",
      name: "EmpowerChain",
      display: "mpwr",
      symbol: "MPWR",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "empowerchain",
          base_denom: "umpwr",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-1411",
          path: "transfer/channel-1411/umpwr"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/empowerchain/images/mpwr.svg"
      },
      images: [{
        image_sync: {
          chain_name: "empowerchain",
          base_denom: "umpwr"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/empowerchain/images/mpwr.svg"
      }]
    },
    {
      description: "A revolutionary DAO created to bring clean drinking water to men, women, and children worldwide. We hope you join us on our journey!",
      denom_units: [{
        denom: "ibc/AABCB14ACAFD53A5C455BAC01EA0CA5AE18714895846681A52BFF1E3B960B44E",
        exponent: 0,
        aliases: ["cw20:juno1m4h8q4p305wgy7vkux0w6e5ylhqll3s6pmadhxkhqtuwd5wlxhxs8xklsw"]
      }, {
        denom: "watr",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/AABCB14ACAFD53A5C455BAC01EA0CA5AE18714895846681A52BFF1E3B960B44E",
      name: "WATR",
      display: "watr",
      symbol: "WATR",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1m4h8q4p305wgy7vkux0w6e5ylhqll3s6pmadhxkhqtuwd5wlxhxs8xklsw",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1m4h8q4p305wgy7vkux0w6e5ylhqll3s6pmadhxkhqtuwd5wlxhxs8xklsw"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/watr.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1m4h8q4p305wgy7vkux0w6e5ylhqll3s6pmadhxkhqtuwd5wlxhxs8xklsw"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/watr.png"
      }]
    },
    {
      description: "The native utility token of the KYVE network.",
      denom_units: [{
        denom: "ibc/613BF0BF2F2146AE9941E923725745E931676B2C14E9768CD609FA0849B2AE13",
        exponent: 0,
        aliases: ["ukyve"]
      }, {
        denom: "kyve",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/613BF0BF2F2146AE9941E923725745E931676B2C14E9768CD609FA0849B2AE13",
      name: "KYVE",
      display: "kyve",
      symbol: "KYVE",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kyve",
          base_denom: "ukyve",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-767",
          path: "transfer/channel-767/ukyve"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.svg"
      },
      images: [{
        image_sync: {
          chain_name: "kyve",
          base_denom: "ukyve"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.svg"
      }]
    },
    {
      description: "Tether gives you the joint benefits of open blockchain technology and traditional currency by converting your cash into a stable digital currency equivalent.",
      denom_units: [{
        denom: "ibc/4ABBEF4C8926DDDB320AE5188CFD63267ABBCEFC0583E4AE05D6E5AA2401DDAB",
        exponent: 0,
        aliases: ["erc20/tether/usdt"]
      }, {
        denom: "usdt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/4ABBEF4C8926DDDB320AE5188CFD63267ABBCEFC0583E4AE05D6E5AA2401DDAB",
      name: "Tether USD",
      display: "usdt",
      symbol: "USDT",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Tether"
        },
        {
          type: "additional-mintage",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7"
          },
          provider: "Tether"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "kava",
            base_denom: "erc20/tether/usdt",
            channel_id: "channel-1"
          },
          chain: {
            channel_id: "channel-143",
            path: "transfer/channel-143/erc20/tether/usdt"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdt.kava.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdt.kava.png"
      }, {
        image_sync: {
          chain_name: "kava",
          base_denom: "erc20/tether/usdt"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }]
    },
    {
      description: "ERIS liquid staked OSMO",
      denom_units: [{
        denom: "factory/osmo1dv8wz09tckslr2wy5z86r46dxvegylhpt97r9yd6qc3kyc6tv42qa89dr9/ampOSMO",
        exponent: 0
      }, {
        denom: "ampOSMO",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo1dv8wz09tckslr2wy5z86r46dxvegylhpt97r9yd6qc3kyc6tv42qa89dr9",
      base: "factory/osmo1dv8wz09tckslr2wy5z86r46dxvegylhpt97r9yd6qc3kyc6tv42qa89dr9/ampOSMO",
      name: "ERIS Amplified OSMO",
      display: "ampOSMO",
      symbol: "ampOSMO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/amposmo.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/amposmo.png"
      }],
      socials: {
        website: "https://www.erisprotocol.com/",
        twitter: "https://twitter.com/eris_protocol"
      }
    },
    {
      description: "The native staking token of Sei.",
      denom_units: [{
        denom: "ibc/71F11BC0AF8E526B80E44172EBA9D3F0A8E03950BB882325435691EBC9450B1D",
        exponent: 0,
        aliases: ["usei"]
      }, {
        denom: "sei",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/71F11BC0AF8E526B80E44172EBA9D3F0A8E03950BB882325435691EBC9450B1D",
      name: "Sei",
      display: "sei",
      symbol: "SEI",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "sei",
          base_denom: "usei",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-782",
          path: "transfer/channel-782/usei"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/sei.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/sei.svg"
      },
      images: [{
        image_sync: {
          chain_name: "sei",
          base_denom: "usei"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/sei.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/sei.svg"
      }]
    },
    {
      description: "Quicksilver Liquid Staked SOMM",
      denom_units: [{
        denom: "ibc/EAF76AD1EEF7B16D167D87711FB26ABE881AC7D9F7E6D0CF313D5FA530417208",
        exponent: 0,
        aliases: ["uqsomm"]
      }, {
        denom: "qsomm",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/EAF76AD1EEF7B16D167D87711FB26ABE881AC7D9F7E6D0CF313D5FA530417208",
      name: "Quicksilver Liquid Staked SOMM",
      display: "qsomm",
      symbol: "qSOMM",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "sommelier",
          base_denom: "usomm"
        },
        provider: "Quicksilver"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "quicksilver",
          base_denom: "uqsomm",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-522",
          path: "transfer/channel-522/uqsomm"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qsomm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qsomm.svg"
      },
      images: [{
        image_sync: {
          chain_name: "quicksilver",
          base_denom: "uqsomm"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qsomm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qsomm.svg"
      }]
    },
    {
      description: "The native staking and governance token of the Passage chain.",
      denom_units: [{
        denom: "ibc/208B2F137CDE510B44C41947C045CFDC27F996A9D990EA64460BDD5B3DBEB2ED",
        exponent: 0,
        aliases: ["upasg"]
      }, {
        denom: "pasg",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/208B2F137CDE510B44C41947C045CFDC27F996A9D990EA64460BDD5B3DBEB2ED",
      name: "Passage",
      display: "pasg",
      symbol: "PASG",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "passage",
          base_denom: "upasg",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-2494",
          path: "transfer/channel-2494/upasg"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/passage/images/pasg.png"
      },
      images: [{
        image_sync: {
          chain_name: "passage",
          base_denom: "upasg"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/passage/images/pasg.png"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/5A0060579D24FBE5268BEA74C3281E7FE533D361C41A99307B4998FEC611E46B",
        exponent: 0,
        aliases: ["stusomm"]
      }, {
        denom: "stsomm",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/5A0060579D24FBE5268BEA74C3281E7FE533D361C41A99307B4998FEC611E46B",
      name: "Stride Staked SOMM",
      display: "stsomm",
      symbol: "stSOMM",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "sommelier",
          base_denom: "usomm"
        },
        provider: "Stride"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "stride",
          base_denom: "stusomm",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-326",
          path: "transfer/channel-326/stusomm"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stsomm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stsomm.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stride",
          base_denom: "stusomm"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stsomm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stsomm.svg"
      }]
    },
    {
      description: "Solana (SOL) is the native asset of the Solana blockchain.",
      denom_units: [{
        denom: "ibc/1E43D59E565D41FB4E54CA639B838FFD5BCFC20003D330A56CB1396231AA1CBA",
        exponent: 0,
        aliases: ["factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/8sYgCzLRJC3J7qPn2bNbx6PiGcarhyx8rBhVaNnfvHCA"]
      }, {
        denom: "wormhole/8sYgCzLRJC3J7qPn2bNbx6PiGcarhyx8rBhVaNnfvHCA/8",
        exponent: 8,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/1E43D59E565D41FB4E54CA639B838FFD5BCFC20003D330A56CB1396231AA1CBA",
      name: "Solana",
      display: "wormhole/8sYgCzLRJC3J7qPn2bNbx6PiGcarhyx8rBhVaNnfvHCA/8",
      symbol: "SOL",
      traces: [
        {
          type: "wrapped",
          counterparty: {
            chain_name: "solana",
            base_denom: "Lamport"
          },
          provider: "Solana"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "solana",
            base_denom: "So11111111111111111111111111111111111111112"
          },
          provider: "Wormhole"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "gateway",
            base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/8sYgCzLRJC3J7qPn2bNbx6PiGcarhyx8rBhVaNnfvHCA",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-2186",
            path: "transfer/channel-2186/factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/8sYgCzLRJC3J7qPn2bNbx6PiGcarhyx8rBhVaNnfvHCA"
          }
        }
      ],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/sol.svg"
      },
      images: [{
        image_sync: {
          chain_name: "gateway",
          base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/8sYgCzLRJC3J7qPn2bNbx6PiGcarhyx8rBhVaNnfvHCA"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/sol.svg"
      }]
    },
    {
      description: "The Official Bonk Inu token",
      denom_units: [{
        denom: "ibc/CA3733CB0071F480FAE8EF0D9C3D47A49C6589144620A642BBE0D59A293D110E",
        exponent: 0,
        aliases: ["factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/95mnwzvJZJ3fKz77xfGN2nR5to9pZmH8YNvaxgLgw5AR"]
      }, {
        denom: "wormhole/95mnwzvJZJ3fKz77xfGN2nR5to9pZmH8YNvaxgLgw5AR/5",
        exponent: 5,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/CA3733CB0071F480FAE8EF0D9C3D47A49C6589144620A642BBE0D59A293D110E",
      name: "Bonk",
      display: "wormhole/95mnwzvJZJ3fKz77xfGN2nR5to9pZmH8YNvaxgLgw5AR/5",
      symbol: "BONK",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "solana",
          base_denom: "DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263"
        },
        provider: "Wormhole"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "gateway",
          base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/95mnwzvJZJ3fKz77xfGN2nR5to9pZmH8YNvaxgLgw5AR",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-2186",
          path: "transfer/channel-2186/factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/95mnwzvJZJ3fKz77xfGN2nR5to9pZmH8YNvaxgLgw5AR"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/bonk.png"
      },
      images: [{
        image_sync: {
          chain_name: "gateway",
          base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/95mnwzvJZJ3fKz77xfGN2nR5to9pZmH8YNvaxgLgw5AR"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/bonk.png"
      }]
    },
    {
      description: "Tether USD (Wormhole), USDT, factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/8iuAc6DSeLvi2JDUtwJxLytsZT8R19itXebZsNReLLNi",
      denom_units: [{
        denom: "ibc/2108F2D81CBE328F371AD0CEF56691B18A86E08C3651504E42487D9EE92DDE9C",
        exponent: 0,
        aliases: ["factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/8iuAc6DSeLvi2JDUtwJxLytsZT8R19itXebZsNReLLNi"]
      }, {
        denom: "wormhole/8iuAc6DSeLvi2JDUtwJxLytsZT8R19itXebZsNReLLNi/6",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/2108F2D81CBE328F371AD0CEF56691B18A86E08C3651504E42487D9EE92DDE9C",
      name: "Tether USD (Wormhole)",
      display: "wormhole/8iuAc6DSeLvi2JDUtwJxLytsZT8R19itXebZsNReLLNi/6",
      symbol: "USDT.wh",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Tether"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7"
          },
          provider: "Wormhole"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "gateway",
            base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/8iuAc6DSeLvi2JDUtwJxLytsZT8R19itXebZsNReLLNi",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-2186",
            path: "transfer/channel-2186/factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/8iuAc6DSeLvi2JDUtwJxLytsZT8R19itXebZsNReLLNi"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdt.wh.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdt.wh.png"
      }, {
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }]
    },
    {
      description: "Sui\u2019s native asset is called SUI.",
      denom_units: [{
        denom: "ibc/B1C287C2701774522570010EEBCD864BCB7AB714711B3AA218699FDD75E832F5",
        exponent: 0,
        aliases: ["factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/46YEtoSN1AcwgGSRoWruoS6bnVh8XpMp5aQTpKohCJYh"]
      }, {
        denom: "wormhole/46YEtoSN1AcwgGSRoWruoS6bnVh8XpMp5aQTpKohCJYh/8",
        exponent: 8,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/B1C287C2701774522570010EEBCD864BCB7AB714711B3AA218699FDD75E832F5",
      name: "Sui",
      display: "wormhole/46YEtoSN1AcwgGSRoWruoS6bnVh8XpMp5aQTpKohCJYh/8",
      symbol: "SUI",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "sui",
          base_denom: "0x2::sui::SUI"
        },
        provider: "Wormhole"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "gateway",
          base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/46YEtoSN1AcwgGSRoWruoS6bnVh8XpMp5aQTpKohCJYh",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-2186",
          path: "transfer/channel-2186/factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/46YEtoSN1AcwgGSRoWruoS6bnVh8XpMp5aQTpKohCJYh"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/sui/images/sui.svg"
      },
      images: [{
        image_sync: {
          chain_name: "gateway",
          base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/46YEtoSN1AcwgGSRoWruoS6bnVh8XpMp5aQTpKohCJYh"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/sui/images/sui.svg"
      }]
    },
    {
      description: "Aptos token (APT) is the Aptos blockchain native token used for paying network and transaction fees.",
      denom_units: [{
        denom: "ibc/A4D176906C1646949574B48C1928D475F2DF56DE0AC04E1C99B08F90BC21ABDE",
        exponent: 0,
        aliases: ["factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5wS2fGojbL9RhGEAeQBdkHPUAciYDxjDTMYvdf9aDn2r"]
      }, {
        denom: "wormhole/5wS2fGojbL9RhGEAeQBdkHPUAciYDxjDTMYvdf9aDn2r/8",
        exponent: 8,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/A4D176906C1646949574B48C1928D475F2DF56DE0AC04E1C99B08F90BC21ABDE",
      name: "Aptos Coin",
      display: "wormhole/5wS2fGojbL9RhGEAeQBdkHPUAciYDxjDTMYvdf9aDn2r/8",
      symbol: "APT",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "aptos",
          base_denom: "0x1::aptos_coin::AptosCoin"
        },
        provider: "Wormhole"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "gateway",
          base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5wS2fGojbL9RhGEAeQBdkHPUAciYDxjDTMYvdf9aDn2r",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-2186",
          path: "transfer/channel-2186/factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5wS2fGojbL9RhGEAeQBdkHPUAciYDxjDTMYvdf9aDn2r"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/aptos/images/aptos.svg"
      },
      images: [{
        image_sync: {
          chain_name: "gateway",
          base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5wS2fGojbL9RhGEAeQBdkHPUAciYDxjDTMYvdf9aDn2r"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/aptos/images/aptos.svg"
      }, {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/aptos/images/apt-dm.svg",
        theme: {
          dark_mode: true
        }
      }]
    },
    {
      description: "MantaDAO Governance Token",
      denom_units: [{
        denom: "ibc/51D893F870B7675E507E91DA8DB0B22EA66333207E4F5C0708757F08EE059B0B",
        exponent: 0,
        aliases: ["factory/kujira1643jxg8wasy5cfcn7xm8rd742yeazcksqlg4d7/umnta"]
      }, {
        denom: "mnta",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/51D893F870B7675E507E91DA8DB0B22EA66333207E4F5C0708757F08EE059B0B",
      name: "MantaDAO",
      display: "mnta",
      symbol: "MNTA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kujira",
          base_denom: "factory/kujira1643jxg8wasy5cfcn7xm8rd742yeazcksqlg4d7/umnta",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-259",
          path: "transfer/channel-259/factory:kujira1643jxg8wasy5cfcn7xm8rd742yeazcksqlg4d7:umnta"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/mnta.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/mnta.svg"
      },
      images: [{
        image_sync: {
          chain_name: "kujira",
          base_denom: "factory/kujira1643jxg8wasy5cfcn7xm8rd742yeazcksqlg4d7/umnta"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/mnta.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/mnta.svg"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/D69F6D787EC649F4E998161A9F0646F4C2DCC64748A2AB982F14CAFBA7CC0EC9",
        exponent: 0,
        aliases: ["factory/juno1u805lv20qc6jy7c3ttre7nct6uyl20pfky5r7e/DGL"]
      }, {
        denom: "dgl",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/D69F6D787EC649F4E998161A9F0646F4C2DCC64748A2AB982F14CAFBA7CC0EC9",
      name: "Licorice",
      display: "dgl",
      symbol: "DGL",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "juno",
          base_denom: "factory/juno1u805lv20qc6jy7c3ttre7nct6uyl20pfky5r7e/DGL",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-42",
          path: "transfer/channel-42/factory/juno1u805lv20qc6jy7c3ttre7nct6uyl20pfky5r7e/DGL"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/dgl.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "factory/juno1u805lv20qc6jy7c3ttre7nct6uyl20pfky5r7e/DGL"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/dgl.png"
      }]
    },
    {
      description: "USD Coin (Wormhole), USDC, factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/GGh9Ufn1SeDGrhzEkMyRKt5568VbbxZK2yvWNsd6PbXt",
      denom_units: [{
        denom: "ibc/6B99DB46AA9FF47162148C1726866919E44A6A5E0274B90912FD17E19A337695",
        exponent: 0,
        aliases: ["factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/GGh9Ufn1SeDGrhzEkMyRKt5568VbbxZK2yvWNsd6PbXt"]
      }, {
        denom: "wormhole/GGh9Ufn1SeDGrhzEkMyRKt5568VbbxZK2yvWNsd6PbXt/6",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/6B99DB46AA9FF47162148C1726866919E44A6A5E0274B90912FD17E19A337695",
      name: "USD Coin (Wormhole)",
      display: "wormhole/GGh9Ufn1SeDGrhzEkMyRKt5568VbbxZK2yvWNsd6PbXt/6",
      symbol: "USDC.wh",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Circle"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          provider: "Wormhole"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "gateway",
            base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/GGh9Ufn1SeDGrhzEkMyRKt5568VbbxZK2yvWNsd6PbXt",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-2186",
            path: "transfer/channel-2186/factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/GGh9Ufn1SeDGrhzEkMyRKt5568VbbxZK2yvWNsd6PbXt"
          }
        }
      ],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }, {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.hole.svg"
      }]
    },
    {
      description: "Wrapped Ether (Wormhole), WETH, factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5BWqpR48Lubd55szM5i62zK7TFkddckhbT48yy6mNbDp",
      denom_units: [{
        denom: "ibc/62F82550D0B96522361C89B0DA1119DE262FBDFB25E5502BC5101B5C0D0DBAAC",
        exponent: 0,
        aliases: ["factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5BWqpR48Lubd55szM5i62zK7TFkddckhbT48yy6mNbDp"]
      }, {
        denom: "wormhole/5BWqpR48Lubd55szM5i62zK7TFkddckhbT48yy6mNbDp/8",
        exponent: 8,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/62F82550D0B96522361C89B0DA1119DE262FBDFB25E5502BC5101B5C0D0DBAAC",
      name: "Wrapped Ether (Wormhole)",
      display: "wormhole/5BWqpR48Lubd55szM5i62zK7TFkddckhbT48yy6mNbDp/8",
      symbol: "wETH.wh",
      traces: [
        {
          type: "wrapped",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "wei"
          },
          provider: "Ethereum"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
          },
          provider: "Wormhole"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "gateway",
            base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5BWqpR48Lubd55szM5i62zK7TFkddckhbT48yy6mNbDp",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-2186",
            path: "transfer/channel-2186/factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5BWqpR48Lubd55szM5i62zK7TFkddckhbT48yy6mNbDp"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.svg"
      },
      images: [{
        image_sync: {
          chain_name: "gateway",
          base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5BWqpR48Lubd55szM5i62zK7TFkddckhbT48yy6mNbDp"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.svg"
      }, {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/weth.hole.svg"
      }]
    },
    {
      description: "USDC is a fully collateralized US Dollar stablecoin developed by CENTRE, the open source project with Circle being the first of several forthcoming issuers.",
      denom_units: [{
        denom: "ibc/498A0751C798A0D9A389AA3691123DADA57DAA4FE165D5C75894505B876BA6E4",
        exponent: 0,
        aliases: ["microusdc", "uusdc"]
      }, {
        denom: "usdc",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/498A0751C798A0D9A389AA3691123DADA57DAA4FE165D5C75894505B876BA6E4",
      name: "USDC",
      display: "usdc",
      symbol: "USDC",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Circle"
        },
        {
          type: "additional-mintage",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          provider: "Circle"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "noble",
            base_denom: "uusdc",
            channel_id: "channel-1"
          },
          chain: {
            channel_id: "channel-750",
            path: "transfer/channel-750/uusdc"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
      },
      images: [{
        image_sync: {
          chain_name: "noble",
          base_denom: "uusdc"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
      }, {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    },
    {
      description: "Maximize ETH yield through leveraged staking across Aave, Compound and Morpho and liquidity provision of ETH liquid staking tokens on Uniswap V3.",
      denom_units: [{
        denom: "ibc/FBB3FEF80ED2344D821D4F95C31DBFD33E4E31D5324CAD94EF756E67B749F668",
        exponent: 0,
        aliases: ["0xb5b29320d2Dde5BA5BAFA1EbcD270052070483ec", "yieldeth-wei"]
      }, {
        denom: "YieldETH",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/FBB3FEF80ED2344D821D4F95C31DBFD33E4E31D5324CAD94EF756E67B749F668",
      name: "Real Yield ETH",
      display: "YieldETH",
      symbol: "YieldETH",
      traces: [
        {
          type: "liquid-stake",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "wei"
          },
          provider: "Seven Seas & DeFine Logic Labs"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xb5b29320d2Dde5BA5BAFA1EbcD270052070483ec"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelar",
            base_denom: "yieldeth-wei",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-208",
            path: "transfer/channel-208/yieldeth-wei"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/yieldeth.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/yieldeth.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "yieldeth-wei"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/yieldeth.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/yieldeth.svg"
      }]
    },
    {
      description: "The native staking token of XPLA.",
      denom_units: [{
        denom: "ibc/95C9B5870F95E21A242E6AF9ADCB1F212EE4A8855087226C36FBE43FC41A77B8",
        exponent: 0,
        aliases: ["axpla"]
      }, {
        denom: "xpla",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/95C9B5870F95E21A242E6AF9ADCB1F212EE4A8855087226C36FBE43FC41A77B8",
      name: "XPLA",
      display: "xpla",
      symbol: "XPLA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "xpla",
          base_denom: "axpla",
          channel_id: "channel-9"
        },
        chain: {
          channel_id: "channel-1634",
          path: "transfer/channel-1634/axpla"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/xpla/images/xpla.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/xpla/images/xpla.svg"
      },
      images: [{
        image_sync: {
          chain_name: "xpla",
          base_denom: "axpla"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/xpla/images/xpla.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/xpla/images/xpla.svg"
      }]
    },
    {
      description: "OIN Token ($OIN) is a groundbreaking digital asset developed on the $SEI Blockchain. It transcends being merely a cryptocurrency; $OIN stands as a robust store of value, symbolizing the future of decentralized finance and its potential to reshape the crypto landscape.",
      denom_units: [{
        denom: "ibc/98B3DBF1FA79C4C14CC5F08F62ACD5498560FCB515F677526FD200D54EA048B6",
        exponent: 0,
        aliases: ["factory/sei1thgp6wamxwqt7rthfkeehktmq0ujh5kspluw6w/OIN"]
      }, {
        denom: "oin",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/98B3DBF1FA79C4C14CC5F08F62ACD5498560FCB515F677526FD200D54EA048B6",
      name: "OIN STORE OF VALUE",
      display: "oin",
      symbol: "OIN",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "sei",
          base_denom: "factory/sei1thgp6wamxwqt7rthfkeehktmq0ujh5kspluw6w/OIN",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-782",
          path: "transfer/channel-782/factory/sei1thgp6wamxwqt7rthfkeehktmq0ujh5kspluw6w/OIN"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/oin.png"
      },
      images: [{
        image_sync: {
          chain_name: "sei",
          base_denom: "factory/sei1thgp6wamxwqt7rthfkeehktmq0ujh5kspluw6w/OIN"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/oin.png"
      }]
    },
    {
      description: "The token of Neokingdom DAO.",
      denom_units: [{
        denom: "ibc/DEE262653B9DE39BCEF0493D47E0DFC4FE62F7F046CF38B9FDEFEBE98D149A71",
        exponent: 0,
        aliases: ["erc20/0x655ecB57432CC1370f65e5dc2309588b71b473A9"]
      }, {
        denom: "neok",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/DEE262653B9DE39BCEF0493D47E0DFC4FE62F7F046CF38B9FDEFEBE98D149A71",
      name: "Neokingdom DAO",
      display: "neok",
      symbol: "NEOK",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "evmos",
          base_denom: "erc20/0x655ecB57432CC1370f65e5dc2309588b71b473A9",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-204",
          path: "transfer/channel-204/erc20/0x655ecB57432CC1370f65e5dc2309588b71b473A9"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/neok.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/neok.svg"
      },
      images: [{
        image_sync: {
          chain_name: "evmos",
          base_denom: "erc20/0x655ecB57432CC1370f65e5dc2309588b71b473A9"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/neok.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/neok.svg"
      }]
    },
    {
      description: "The native currency of the Realio Network.",
      denom_units: [{
        denom: "ibc/1CDF9C7D073DD59ED06F15DB08CC0901F2A24759BE70463570E8896F9A444ADF",
        exponent: 0,
        aliases: ["ario"]
      }, {
        denom: "rio",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/1CDF9C7D073DD59ED06F15DB08CC0901F2A24759BE70463570E8896F9A444ADF",
      name: "Realio Network",
      display: "rio",
      symbol: "RIO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "realio",
          base_denom: "ario",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-1424",
          path: "transfer/channel-1424/ario"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/realio/images/rio.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/realio/images/rio.svg"
      },
      images: [{
        image_sync: {
          chain_name: "realio",
          base_denom: "ario"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/realio/images/rio.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/realio/images/rio.svg",
        theme: {
          primary_color_hex: "#000000",
          background_color_hex: "#000000",
          circle: true
        }
      }]
    },
    {
      description: "Membrane's CDP-style stablecoin called CDT",
      denom_units: [{
        denom: "factory/osmo1s794h9rxggytja3a4pmwul53u98k06zy2qtrdvjnfuxruh7s8yjs6cyxgd/ucdt",
        exponent: 0
      }, {
        denom: "cdt",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      base: "factory/osmo1s794h9rxggytja3a4pmwul53u98k06zy2qtrdvjnfuxruh7s8yjs6cyxgd/ucdt",
      name: "CDT Stablecoin",
      display: "cdt",
      symbol: "CDT",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/CDT.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/CDT.svg"
      }],
      coingecko_id: "collateralized-debt-token"
    },
    {
      description: "Membrane's protocol token",
      denom_units: [{
        denom: "factory/osmo1s794h9rxggytja3a4pmwul53u98k06zy2qtrdvjnfuxruh7s8yjs6cyxgd/umbrn",
        exponent: 0
      }, {
        denom: "mbrn",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      base: "factory/osmo1s794h9rxggytja3a4pmwul53u98k06zy2qtrdvjnfuxruh7s8yjs6cyxgd/umbrn",
      name: "Membrane",
      display: "mbrn",
      symbol: "MBRN",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/MBRN.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/MBRN.svg"
      }],
      coingecko_id: "membrane"
    },
    {
      description: "The native token of SGE Network",
      denom_units: [{
        denom: "ibc/A1830DECC0B742F0B2044FF74BE727B5CF92C9A28A9235C3BACE4D24A23504FA",
        exponent: 0,
        aliases: ["usge"]
      }, {
        denom: "sge",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/A1830DECC0B742F0B2044FF74BE727B5CF92C9A28A9235C3BACE4D24A23504FA",
      name: "SGE",
      display: "sge",
      symbol: "SGE",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "sge",
          base_denom: "usge",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-5485",
          path: "transfer/channel-5485/usge"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.svg"
      },
      images: [{
        image_sync: {
          chain_name: "sge",
          base_denom: "usge"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.svg",
        theme: {
          primary_color_hex: "#C0A15B",
          background_color_hex: "#00000000",
          circle: false
        }
      }]
    },
    {
      description: "The native staking and governance token of the StaFi Hub.",
      denom_units: [{
        denom: "ibc/01D2F0C4739C871BFBEE7E786709E6904A55559DC1483DD92ED392EF12247862",
        exponent: 0,
        aliases: ["ufis"]
      }, {
        denom: "fis",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/01D2F0C4739C871BFBEE7E786709E6904A55559DC1483DD92ED392EF12247862",
      name: "StaFi Hub",
      display: "fis",
      symbol: "FIS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "stafihub",
          base_denom: "ufis",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-5413",
          path: "transfer/channel-5413/ufis"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stafihub/images/fis.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stafihub",
          base_denom: "ufis"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stafihub/images/fis.svg"
      }]
    },
    {
      description: "A liquid staking representation of staked ATOMs",
      denom_units: [{
        denom: "ibc/B66CE615C600ED0A8B5AF425ECFE0D57BE2377587F66C45934A76886F34DC9B7",
        exponent: 0,
        aliases: ["uratom"]
      }, {
        denom: "ratom",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/B66CE615C600ED0A8B5AF425ECFE0D57BE2377587F66C45934A76886F34DC9B7",
      name: "rATOM",
      display: "ratom",
      symbol: "rATOM",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "cosmoshub",
          base_denom: "uatom"
        },
        provider: "StaFiHub"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "stafihub",
          base_denom: "uratom",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-5413",
          path: "transfer/channel-5413/uratom"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stafihub/images/ratom.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stafihub",
          base_denom: "uratom"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stafihub/images/ratom.svg"
      }]
    },
    {
      description: "The native token of ohhNFT.",
      denom_units: [{
        denom: "ibc/CFF40564FDA3E958D9904B8B479124987901168494655D9CC6B7C0EC0416020B",
        exponent: 0,
        aliases: ["factory/stars16da2uus9zrsy83h23ur42v3lglg5rmyrpqnju4/dust"]
      }, {
        denom: "strdst",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/CFF40564FDA3E958D9904B8B479124987901168494655D9CC6B7C0EC0416020B",
      name: "Stardust STRDST",
      display: "strdst",
      symbol: "STRDST",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "stargaze",
          base_denom: "factory/stars16da2uus9zrsy83h23ur42v3lglg5rmyrpqnju4/dust",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-75",
          path: "transfer/channel-75/factory/stars16da2uus9zrsy83h23ur42v3lglg5rmyrpqnju4/dust"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/dust.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/dust.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stargaze",
          base_denom: "factory/stars16da2uus9zrsy83h23ur42v3lglg5rmyrpqnju4/dust"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/dust.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/dust.svg"
      }]
    },
    {
      description: "The native staking and governance token of the Theta testnet version of the Dora Vota.",
      denom_units: [{
        denom: "ibc/672406ADE4EDFD8C5EA7A0D0DD0C37E431DA7BD8393A15CD2CFDE3364917EB2A",
        exponent: 0,
        aliases: ["peaka"]
      }, {
        denom: "DORA",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/672406ADE4EDFD8C5EA7A0D0DD0C37E431DA7BD8393A15CD2CFDE3364917EB2A",
      name: "Dora Vota",
      display: "DORA",
      symbol: "DORA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "doravota",
          base_denom: "peaka",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-2694",
          path: "transfer/channel-2694/peaka"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/doravota/images/dora.svg"
      },
      images: [{
        image_sync: {
          chain_name: "doravota",
          base_denom: "peaka"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/doravota/images/dora.svg"
      }, {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/doravota/images/doravota.png"
      }]
    },
    {
      description: "The native token of Coreum",
      denom_units: [{
        denom: "ibc/F3166F4D31D6BA1EC6C9F5536F5DDDD4CC93DBA430F7419E7CDC41C497944A65",
        exponent: 0,
        aliases: ["ucore"]
      }, {
        denom: "core",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/F3166F4D31D6BA1EC6C9F5536F5DDDD4CC93DBA430F7419E7CDC41C497944A65",
      name: "Coreum",
      display: "core",
      symbol: "COREUM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "coreum",
          base_denom: "ucore",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-2188",
          path: "transfer/channel-2188/ucore"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coreum/images/coreum.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coreum/images/coreum.svg"
      },
      images: [{
        image_sync: {
          chain_name: "coreum",
          base_denom: "ucore"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coreum/images/coreum.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coreum/images/coreum.svg"
      }],
      keywords: [
        "dex",
        "staking",
        "wasm",
        "assets",
        "nft",
        "XRPL"
      ]
    },
    {
      description: "The native token of the Celestia blockchain.",
      denom_units: [{
        denom: "ibc/D79E7D83AB399BFFF93433E54FAA480C191248FC556924A2A8351AE2638B3877",
        exponent: 0,
        aliases: ["utia"]
      }, {
        denom: "tia",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/D79E7D83AB399BFFF93433E54FAA480C191248FC556924A2A8351AE2638B3877",
      name: "Celestia",
      display: "tia",
      symbol: "TIA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "celestia",
          base_denom: "utia",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-6994",
          path: "transfer/channel-6994/utia"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.svg"
      },
      images: [{
        image_sync: {
          chain_name: "celestia",
          base_denom: "utia"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.svg"
      }]
    },
    {
      description: "The native staking token of dYdX Protocol.",
      denom_units: [{
        denom: "ibc/831F0B1BBB1D08A2B75311892876D71565478C532967545476DF4C2D7492E48C",
        exponent: 0,
        aliases: ["adydx"]
      }, {
        denom: "dydx",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/831F0B1BBB1D08A2B75311892876D71565478C532967545476DF4C2D7492E48C",
      name: "dYdX Protocol",
      display: "dydx",
      symbol: "DYDX",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "dydx",
          base_denom: "adydx",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-6787",
          path: "transfer/channel-6787/adydx"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.svg"
      },
      images: [{
        image_sync: {
          chain_name: "dydx",
          base_denom: "adydx"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.svg"
      }, {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx-circle.svg"
      }]
    },
    {
      description: "The native staking token of the Function X",
      denom_units: [{
        denom: "ibc/2B30802A0B03F91E4E16D6175C9B70F2911377C1CAE9E50FF011C821465463F9",
        exponent: 0,
        aliases: ["FX"]
      }, {
        denom: "WFX",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/2B30802A0B03F91E4E16D6175C9B70F2911377C1CAE9E50FF011C821465463F9",
      name: "f(x)Core",
      display: "WFX",
      symbol: "FX",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "fxcore",
          base_denom: "FX",
          channel_id: "channel-19"
        },
        chain: {
          channel_id: "channel-2716",
          path: "transfer/channel-2716/FX"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fxcore/images/fx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fxcore/images/fx.svg"
      },
      images: [{
        image_sync: {
          chain_name: "fxcore",
          base_denom: "FX"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fxcore/images/fx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fxcore/images/fx.svg"
      }]
    },
    {
      description: "Bitcoin. On Cosmos.",
      denom_units: [{
        denom: "ibc/75345531D87BD90BF108BE7240BD721CB2CB0A1F16D4EBA71B09EC3C43E15C8F",
        exponent: 0,
        aliases: ["usat"]
      }, {
        denom: "nbtc",
        exponent: 14
      }],
      type_asset: "ics20",
      base: "ibc/75345531D87BD90BF108BE7240BD721CB2CB0A1F16D4EBA71B09EC3C43E15C8F",
      name: "Nomic Bitcoin",
      display: "nbtc",
      symbol: "nBTC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "bitcoin",
          base_denom: "sat"
        },
        provider: "Nomic"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "nomic",
          base_denom: "usat",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-6897",
          path: "transfer/channel-6897/usat"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nbtc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nbtc.svg"
      },
      images: [{
        image_sync: {
          chain_name: "nomic",
          base_denom: "usat"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nbtc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nbtc.svg"
      }]
    },
    {
      description: "The native token of Nois",
      denom_units: [{
        denom: "ibc/6928AFA9EA721938FED13B051F9DBF1272B16393D20C49EA5E4901BB76D94A90",
        exponent: 0,
        aliases: ["unois"]
      }, {
        denom: "nois",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/6928AFA9EA721938FED13B051F9DBF1272B16393D20C49EA5E4901BB76D94A90",
      name: "Nois",
      display: "nois",
      symbol: "NOIS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "nois",
          base_denom: "unois",
          channel_id: "channel-37"
        },
        chain: {
          channel_id: "channel-8277",
          path: "transfer/channel-8277/unois"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nois/images/nois.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nois/images/nois.svg"
      },
      images: [{
        image_sync: {
          chain_name: "nois",
          base_denom: "unois"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nois/images/nois.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nois/images/nois.svg"
      }],
      keywords: [
        "nois",
        "randomness",
        "drand",
        "wasm"
      ]
    },
    {
      description: "Margined Power Token sqOSMO",
      denom_units: [{
        denom: "factory/osmo1g8qypve6l95xmhgc0fddaecerffymsl7kn9muw/squosmo",
        exponent: 0
      }, {
        denom: "sqosmo",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      base: "factory/osmo1g8qypve6l95xmhgc0fddaecerffymsl7kn9muw/squosmo",
      name: "OSMO Squared",
      display: "sqosmo",
      symbol: "sqOSMO",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/sqosmo.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/sqosmo.svg"
      }]
    },
    {
      description: "The Revenue & Governance token of Unstake.fi",
      denom_units: [{
        denom: "ibc/F74225B0AFD2F675AF56E9BE3F235486BCDE5C5E09AA88A97AFD2E052ABFE04C",
        exponent: 0,
        aliases: ["factory/kujira1aaudpfr9y23lt9d45hrmskphpdfaq9ajxd3ukh/unstk"]
      }, {
        denom: "nstk",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/F74225B0AFD2F675AF56E9BE3F235486BCDE5C5E09AA88A97AFD2E052ABFE04C",
      name: "Unstake Fi",
      display: "nstk",
      symbol: "NSTK",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kujira",
          base_denom: "factory/kujira1aaudpfr9y23lt9d45hrmskphpdfaq9ajxd3ukh/unstk",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-259",
          path: "transfer/channel-259/factory:kujira1aaudpfr9y23lt9d45hrmskphpdfaq9ajxd3ukh:unstk"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/nstk.svg"
      },
      images: [{
        image_sync: {
          chain_name: "kujira",
          base_denom: "factory/kujira1aaudpfr9y23lt9d45hrmskphpdfaq9ajxd3ukh/unstk"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/nstk.svg"
      }]
    },
    {
      description: "ohhNFT LP token.",
      denom_units: [{
        denom: "ibc/71DAA4CAFA4FE2F9803ABA0696BA5FC0EFC14305A2EA8B4E01880DB851B1EC02",
        exponent: 0,
        aliases: ["factory/stars16da2uus9zrsy83h23ur42v3lglg5rmyrpqnju4/uBRNCH"]
      }, {
        denom: "BRNCH",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/71DAA4CAFA4FE2F9803ABA0696BA5FC0EFC14305A2EA8B4E01880DB851B1EC02",
      name: "Branch",
      display: "BRNCH",
      symbol: "BRNCH",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "stargaze",
          base_denom: "factory/stars16da2uus9zrsy83h23ur42v3lglg5rmyrpqnju4/uBRNCH",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-75",
          path: "transfer/channel-75/factory/stars16da2uus9zrsy83h23ur42v3lglg5rmyrpqnju4/uBRNCH"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/brnch.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/brnch.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stargaze",
          base_denom: "factory/stars16da2uus9zrsy83h23ur42v3lglg5rmyrpqnju4/uBRNCH"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/brnch.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/brnch.svg"
      }]
    },
    {
      description: "wstETH is a wrapped version of stETH. As some DeFi protocols require a constant balance mechanism for tokens, wstETH keeps your balance of stETH fixed and uses an underlying share system to reflect your earned staking rewards.",
      denom_units: [{
        denom: "ibc/2F21E6D4271DE3F561F20A02CD541DAF7405B1E9CB3B9B07E3C2AC7D8A4338A5",
        exponent: 0,
        aliases: ["factory/neutron1ug740qrkquxzrk2hh29qrlx3sktkfml3je7juusc2te7xmvsscns0n2wry/wstETH"]
      }, {
        denom: "wstETH",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/2F21E6D4271DE3F561F20A02CD541DAF7405B1E9CB3B9B07E3C2AC7D8A4338A5",
      name: "Wrapped Lido Staked Ether",
      display: "wstETH",
      symbol: "wstETH",
      traces: [
        {
          type: "liquid-stake",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "wei"
          },
          provider: "Lido"
        },
        {
          type: "wrapped",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xae7ab96520de3a18e5e111b5eaab095312d7fe84"
          },
          provider: "Lido"
        },
        {
          type: "additional-mintage",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0"
          },
          provider: "Lido"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "neutron",
            base_denom: "factory/neutron1ug740qrkquxzrk2hh29qrlx3sktkfml3je7juusc2te7xmvsscns0n2wry/wstETH",
            channel_id: "channel-10"
          },
          chain: {
            channel_id: "channel-874",
            path: "transfer/channel-874/factory/neutron1ug740qrkquxzrk2hh29qrlx3sktkfml3je7juusc2te7xmvsscns0n2wry/wstETH"
          }
        }
      ],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wsteth.svg"
      },
      images: [{
        image_sync: {
          chain_name: "neutron",
          base_denom: "factory/neutron1ug740qrkquxzrk2hh29qrlx3sktkfml3je7juusc2te7xmvsscns0n2wry/wstETH"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wsteth.svg"
      }]
    },
    {
      description: "Margined Power Token sqATOM",
      denom_units: [{
        denom: "factory/osmo1g8qypve6l95xmhgc0fddaecerffymsl7kn9muw/sqatom",
        exponent: 0
      }, {
        denom: "sqatom",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      base: "factory/osmo1g8qypve6l95xmhgc0fddaecerffymsl7kn9muw/sqatom",
      name: "ATOM Squared",
      display: "sqatom",
      symbol: "sqATOM",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/sqatom.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/sqatom.svg"
      }]
    },
    {
      description: "Margined Power Token sqBTC",
      denom_units: [{
        denom: "factory/osmo1g8qypve6l95xmhgc0fddaecerffymsl7kn9muw/sqbtc",
        exponent: 0
      }, {
        denom: "sqbtc",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      base: "factory/osmo1g8qypve6l95xmhgc0fddaecerffymsl7kn9muw/sqbtc",
      name: "BTC Squared",
      display: "sqbtc",
      symbol: "sqBTC",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/sqbtc.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/sqbtc.svg"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "QWOYN is the native governance token for Qwoyn Network",
      denom_units: [{
        denom: "ibc/09FAF1E04435E14C68DE7AB0D03C521C92975C792DB12B2EA390BAA2E06B3F3D",
        exponent: 0,
        aliases: ["uqwoyn"]
      }, {
        denom: "qwoyn",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/09FAF1E04435E14C68DE7AB0D03C521C92975C792DB12B2EA390BAA2E06B3F3D",
      name: "Qwoyn",
      display: "qwoyn",
      symbol: "QWOYN",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "qwoyn",
          base_denom: "uqwoyn",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-880",
          path: "transfer/channel-880/uqwoyn"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/qwoyn/images/qwoyn.png"
      },
      images: [{
        image_sync: {
          chain_name: "qwoyn",
          base_denom: "uqwoyn"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/qwoyn/images/qwoyn.png"
      }],
      keywords: ["gaming"]
    },
    {
      description: "The liquid staking token of Bostrom",
      denom_units: [{
        denom: "ibc/4F3B0EC2FE2D370D10C3671A1B7B06D2A964C721470C305CBB846ED60E6CAA20",
        exponent: 0,
        aliases: ["hydrogen"]
      }],
      type_asset: "ics20",
      base: "ibc/4F3B0EC2FE2D370D10C3671A1B7B06D2A964C721470C305CBB846ED60E6CAA20",
      name: "Bostrom Hydrogen",
      display: "ibc/4F3B0EC2FE2D370D10C3671A1B7B06D2A964C721470C305CBB846ED60E6CAA20",
      symbol: "HYDROGEN",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "bostrom",
          base_denom: "hydrogen",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-95",
          path: "transfer/channel-95/hydrogen"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/hydrogen.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/hydrogen.svg"
      },
      images: [{
        image_sync: {
          chain_name: "bostrom",
          base_denom: "hydrogen"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/hydrogen.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/hydrogen.svg"
      }]
    },
    {
      description: "The staking token of Cyber",
      denom_units: [{
        denom: "ibc/BCDB35B7390806F35E716D275E1E017999F8281A81B6F128F087EF34D1DFA761",
        exponent: 0,
        aliases: ["tocyb"]
      }],
      type_asset: "ics20",
      base: "ibc/BCDB35B7390806F35E716D275E1E017999F8281A81B6F128F087EF34D1DFA761",
      name: "Bostrom Tocyb",
      display: "ibc/BCDB35B7390806F35E716D275E1E017999F8281A81B6F128F087EF34D1DFA761",
      symbol: "TOCYB",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "bostrom",
          base_denom: "tocyb",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-95",
          path: "transfer/channel-95/tocyb"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/tocyb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/tocyb.svg"
      },
      images: [{
        image_sync: {
          chain_name: "bostrom",
          base_denom: "tocyb"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/tocyb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/tocyb.svg"
      }]
    },
    {
      description: "The resource token of Bostrom",
      denom_units: [{
        denom: "ibc/D3A1900B2B520E45608B5671ADA461E1109628E89B4289099557C6D3996F7DAA",
        exponent: 0,
        aliases: ["millivolt"]
      }, {
        denom: "volt",
        exponent: 3,
        aliases: ["volt"]
      }],
      type_asset: "ics20",
      base: "ibc/D3A1900B2B520E45608B5671ADA461E1109628E89B4289099557C6D3996F7DAA",
      name: "Bostrom Volt",
      display: "volt",
      symbol: "V",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "bostrom",
          base_denom: "millivolt",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-95",
          path: "transfer/channel-95/millivolt"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/volt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/volt.svg"
      },
      images: [{
        image_sync: {
          chain_name: "bostrom",
          base_denom: "millivolt"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/volt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/volt.svg"
      }]
    },
    {
      description: "The resource token of Bostrom",
      denom_units: [{
        denom: "ibc/020F5162B7BC40656FC5432622647091F00D53E82EE8D21757B43D3282F25424",
        exponent: 0,
        aliases: ["milliampere"]
      }, {
        denom: "ampere",
        exponent: 3,
        aliases: ["ampere"]
      }],
      type_asset: "ics20",
      base: "ibc/020F5162B7BC40656FC5432622647091F00D53E82EE8D21757B43D3282F25424",
      name: "Bostrom Ampere",
      display: "ampere",
      symbol: "A",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "bostrom",
          base_denom: "milliampere",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-95",
          path: "transfer/channel-95/milliampere"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/ampere.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/ampere.svg"
      },
      images: [{
        image_sync: {
          chain_name: "bostrom",
          base_denom: "milliampere"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/ampere.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bostrom/images/ampere.svg"
      }]
    },
    {
      description: "The native token of SOURCE Chain",
      denom_units: [{
        denom: "ibc/E7905742CE2EA4EA5D592527DC89220C59B617DE803939FE7293805A64B484D7",
        exponent: 0,
        aliases: ["usource"]
      }, {
        denom: "source",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/E7905742CE2EA4EA5D592527DC89220C59B617DE803939FE7293805A64B484D7",
      name: "Source",
      display: "source",
      symbol: "SOURCE",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "source",
          base_denom: "usource",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-8945",
          path: "transfer/channel-8945/usource"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/source/images/source.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/source/images/source.svg"
      },
      images: [{
        image_sync: {
          chain_name: "source",
          base_denom: "usource"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/source/images/source.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/source/images/source.svg"
      }]
    },
    {
      description: "Pyth is a protocol that allows market participants to publish pricing information on-chain for others to use. The protocol is an interaction between three parties:\n-Publishers submit pricing information to Pyth's oracle program. Pyth has multiple data publishers for every product to improve the accuracy and robustness of the system.\n-Pyth's oracle program combines publishers' data to produce a single aggregate price and confidence interval.\nConsumers read the price information produced by the oracle program.\n\nPyth's oracle program runs simultaneously on both Solana mainnet and Pythnet. Each instance of the program is responsible for its own set of price feeds. Solana Price Feeds are available for use by Solana protocols. In this case, since the oracle program itself runs on Solana, the resulting prices are immediately available to consumers without requiring any additional work. Pythnet Price Feeds are available on 12+ blockchains. The prices constructed on Pythnet are transferred cross-chain to reach consumers on these blockchains.\n\nIn both cases, the critical component of the system is the oracle program that combines the data from each individual publisher. This program maintains a number of different Solana accounts that list the products on Pyth and their current price data. Publishers publish their price and confidence by interacting with the oracle program on every slot. The program stores this information in its accounts. The first price update in a slot additionally triggers price aggregation, which combines the price data from the previous slot into a single aggregate price and confidence interval. This aggregate price is written to the Solana account where it is readable by other on-chain programs and available for transmission to other blockchains.",
      denom_units: [{
        denom: "ibc/E42006ED917C769EDE1B474650EEA6BFE3F97958912B9206DD7010A28D01D9D5",
        exponent: 0,
        aliases: ["HZ1JovNiVvGrGNiiYvEozEVgZ58xaU3RKwX8eACQBCt3", "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/B8ohBnfisop27exk2gtNABJyYjLwQA7ogrp5uNzvZCoy"]
      }, {
        denom: "wormhole/B8ohBnfisop27exk2gtNABJyYjLwQA7ogrp5uNzvZCoy/6",
        exponent: 6,
        aliases: ["pyth"]
      }],
      type_asset: "ics20",
      base: "ibc/E42006ED917C769EDE1B474650EEA6BFE3F97958912B9206DD7010A28D01D9D5",
      name: "Pyth Network",
      display: "wormhole/B8ohBnfisop27exk2gtNABJyYjLwQA7ogrp5uNzvZCoy/6",
      symbol: "PYTH",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "solana",
          base_denom: "HZ1JovNiVvGrGNiiYvEozEVgZ58xaU3RKwX8eACQBCt3"
        },
        provider: "Wormhole"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "gateway",
          base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/B8ohBnfisop27exk2gtNABJyYjLwQA7ogrp5uNzvZCoy",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-2186",
          path: "transfer/channel-2186/factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/B8ohBnfisop27exk2gtNABJyYjLwQA7ogrp5uNzvZCoy"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/pyth.svg"
      },
      images: [{
        image_sync: {
          chain_name: "gateway",
          base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/B8ohBnfisop27exk2gtNABJyYjLwQA7ogrp5uNzvZCoy"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/pyth.svg"
      }]
    },
    {
      description: "PSTAKE Liquid-Staked OSMO",
      denom_units: [{
        denom: "ibc/ECBE78BF7677320A93E7BA1761D144BCBF0CBC247C290C049655E106FE5DC68E",
        exponent: 0,
        aliases: ["stk/uosmo"]
      }, {
        denom: "stkosmo",
        exponent: 6,
        aliases: ["stk/osmo"]
      }],
      type_asset: "ics20",
      base: "ibc/ECBE78BF7677320A93E7BA1761D144BCBF0CBC247C290C049655E106FE5DC68E",
      name: "PSTAKE staked OSMO",
      display: "stkosmo",
      symbol: "stkOSMO",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "uosmo"
        },
        provider: "pSTAKE"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "persistence",
          base_denom: "stk/uosmo",
          channel_id: "channel-6"
        },
        chain: {
          channel_id: "channel-4",
          path: "transfer/channel-4/stk/uosmo"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkosmo.svg"
      },
      images: [{
        image_sync: {
          chain_name: "persistence",
          base_denom: "stk/uosmo"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkosmo.svg"
      }]
    },
    {
      description: "Levana Well-funded Perps is a protocol for perpetual swaps, which are leveraged trading contracts.",
      extended_description: `Levana Well-funded Perps is a protocol for perpetual swaps, which are leveraged trading contracts. It aims to manage risk and provide benefits to both traders and liquidity providers.

For traders, Levana's solution is to make all positions "well-funded," meaning that the maximum profit for each position is locked in advance. This eliminates the possibility of bad debt and insolvency, providing greater security.

Liquidity providers, on the other hand, receive a yield for taking on the risk of market instability. They supply funds that act as collateral, and in return, they earn a fee with a risk premium.

The protocol addresses the issues with existing perpetual swap models, such as the virtual AMM. These models rely on complex mechanisms to maintain price stability, but they have limitations and can be risky in volatile markets.

By separating different trading pairs and creating a decentralized market for liquidity, Levana reduces the risk of contagion between different markets. This also makes it easier to expand to other blockchain networks.

Overall, Levana's perpetual swaps protocol offers a reliable and secure platform for traders and liquidity providers. It ensures fair settlement, minimizes risks, and allows for the development of additional financial protocols on top of tokenized positions.`,
      denom_units: [{
        denom: "factory/osmo1mlng7pz4pnyxtpq0akfwall37czyk9lukaucsrn30ameplhhshtqdvfm5c/ulvn",
        exponent: 0
      }, {
        denom: "lvn",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      base: "factory/osmo1mlng7pz4pnyxtpq0akfwall37czyk9lukaucsrn30ameplhhshtqdvfm5c/ulvn",
      name: "Levana",
      display: "lvn",
      symbol: "LVN",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/levana.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/levana.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/levana.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/levana.svg"
      }],
      coingecko_id: "levana-protocol"
    },
    {
      description: "Puppy",
      denom_units: [{
        denom: "ibc/46AC07DBFF1352EC94AF5BD4D23740D92D9803A6B41F6E213E77F3A1143FB963",
        exponent: 0,
        aliases: ["cw20:chihuahua1yl8z39ugle8s02fpwkhh293509q5xcpalmdzc4amvchz8nkexrmsy95gef"]
      }, {
        denom: "puppy",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/46AC07DBFF1352EC94AF5BD4D23740D92D9803A6B41F6E213E77F3A1143FB963",
      name: "Puppy",
      display: "puppy",
      symbol: "PUPPY",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "chihuahua",
          base_denom: "cw20:chihuahua1yl8z39ugle8s02fpwkhh293509q5xcpalmdzc4amvchz8nkexrmsy95gef",
          port: "wasm.chihuahua1jwkag4yvhyj9fuddtkygvavya8hmdjuzmgxwg9vp3lw9twv6lrcq9mgl52",
          channel_id: "channel-73"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-11348",
          path: "transfer/channel-11348/cw20:chihuahua1yl8z39ugle8s02fpwkhh293509q5xcpalmdzc4amvchz8nkexrmsy95gef"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/puppyhuahua_logo.png"
      },
      images: [{
        image_sync: {
          chain_name: "chihuahua",
          base_denom: "cw20:chihuahua1yl8z39ugle8s02fpwkhh293509q5xcpalmdzc4amvchz8nkexrmsy95gef"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/puppyhuahua_logo.png"
      }],
      keywords: ["osmosis_unstable"]
    },
    {
      description: "The cutest NEWT token on Neutron chain.",
      denom_units: [{
        denom: "ibc/BF685448E564B5A4AC8F6E0493A0B979D0E0BF5EC11F7E15D25A0A2160C944DD",
        exponent: 0,
        aliases: ["unewt", "factory/neutron1p8d89wvxyjcnawmgw72klknr3lg9gwwl6ypxda/newt"]
      }, {
        denom: "newt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/BF685448E564B5A4AC8F6E0493A0B979D0E0BF5EC11F7E15D25A0A2160C944DD",
      name: "Newt",
      display: "newt",
      symbol: "NEWT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "neutron",
          base_denom: "factory/neutron1p8d89wvxyjcnawmgw72klknr3lg9gwwl6ypxda/newt",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-874",
          path: "transfer/channel-874/factory/neutron1p8d89wvxyjcnawmgw72klknr3lg9gwwl6ypxda/newt"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/newt.png"
      },
      images: [{
        image_sync: {
          chain_name: "neutron",
          base_denom: "factory/neutron1p8d89wvxyjcnawmgw72klknr3lg9gwwl6ypxda/newt"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/newt.png"
      }]
    },
    {
      description: "MilkyWay's liquid staked TIA",
      denom_units: [{
        denom: "factory/osmo1f5vfcph2dvfeqcqkhetwv75fda69z7e5c2dldm3kvgj23crkv6wqcn47a0/umilkTIA",
        exponent: 0
      }, {
        denom: "milkTIA",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      base: "factory/osmo1f5vfcph2dvfeqcqkhetwv75fda69z7e5c2dldm3kvgj23crkv6wqcn47a0/umilkTIA",
      name: "milkTIA",
      display: "milkTIA",
      symbol: "milkTIA",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "celestia",
          base_denom: "utia"
        },
        provider: "MilkyWay"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/milktia.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/milktia.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/milktia.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/milktia.svg"
      }],
      coingecko_id: "milkyway-staked-tia"
    },
    {
      description: "ASH",
      denom_units: [{
        denom: "ibc/4976049456D261659D0EC499CC9C2391D3C7D1128A0B9FB0BBF2842D1B2BC7BC",
        exponent: 0,
        aliases: ["factory/migaloo1erul6xyq0gk6ws98ncj7lnq9l4jn4gnnu9we73gdz78yyl2lr7qqrvcgup/ash"]
      }, {
        denom: "ASH",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/4976049456D261659D0EC499CC9C2391D3C7D1128A0B9FB0BBF2842D1B2BC7BC",
      name: "ASH",
      display: "ASH",
      symbol: "ASH",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1erul6xyq0gk6ws98ncj7lnq9l4jn4gnnu9we73gdz78yyl2lr7qqrvcgup/ash",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-642",
          path: "transfer/channel-642/factory/migaloo1erul6xyq0gk6ws98ncj7lnq9l4jn4gnnu9we73gdz78yyl2lr7qqrvcgup/ash"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/ash.svg"
      },
      images: [{
        image_sync: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1erul6xyq0gk6ws98ncj7lnq9l4jn4gnnu9we73gdz78yyl2lr7qqrvcgup/ash"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/ash.svg"
      }]
    },
    {
      description: "RAC",
      denom_units: [{
        denom: "ibc/DDF1CD4CDC14AE2D6A3060193624605FF12DEE71CF1F8C19EEF35E9447653493",
        exponent: 0,
        aliases: ["factory/migaloo1eqntnl6tzcj9h86psg4y4h6hh05g2h9nj8e09l/urac"]
      }, {
        denom: "RAC",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/DDF1CD4CDC14AE2D6A3060193624605FF12DEE71CF1F8C19EEF35E9447653493",
      name: "RAC",
      display: "RAC",
      symbol: "RAC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1eqntnl6tzcj9h86psg4y4h6hh05g2h9nj8e09l/urac",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-642",
          path: "transfer/channel-642/factory/migaloo1eqntnl6tzcj9h86psg4y4h6hh05g2h9nj8e09l/urac"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rac.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rac.svg"
      },
      images: [{
        image_sync: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1eqntnl6tzcj9h86psg4y4h6hh05g2h9nj8e09l/urac"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rac.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rac.svg"
      }]
    },
    {
      description: "GUPPY",
      denom_units: [{
        denom: "ibc/42A9553A7770F3D7B62F3A82AF04E7719B4FD6EAF31BE5645092AAC4A6C2201D",
        exponent: 0,
        aliases: ["factory/migaloo1etlu2h30tjvv8rfa4fwdc43c92f6ul5w9acxzk/uguppy"]
      }, {
        denom: "GUPPY",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/42A9553A7770F3D7B62F3A82AF04E7719B4FD6EAF31BE5645092AAC4A6C2201D",
      name: "GUPPY",
      display: "GUPPY",
      symbol: "GUPPY",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1etlu2h30tjvv8rfa4fwdc43c92f6ul5w9acxzk/uguppy",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-642",
          path: "transfer/channel-642/factory/migaloo1etlu2h30tjvv8rfa4fwdc43c92f6ul5w9acxzk/uguppy"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/guppy.png"
      },
      images: [{
        image_sync: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1etlu2h30tjvv8rfa4fwdc43c92f6ul5w9acxzk/uguppy"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/guppy.png"
      }]
    },
    {
      description: "The native EVM, governance and staking token of the Haqq Network",
      denom_units: [{
        denom: "ibc/69110FF673D70B39904FF056CFDFD58A90BEC3194303F45C32CB91B8B0A738EA",
        exponent: 0,
        aliases: ["aISLM"]
      }, {
        denom: "ISLM",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/69110FF673D70B39904FF056CFDFD58A90BEC3194303F45C32CB91B8B0A738EA",
      name: "Haqq Network",
      display: "ISLM",
      symbol: "ISLM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "haqq",
          base_denom: "aISLM",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-1575",
          path: "transfer/channel-1575/aISLM"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/haqq/images/islm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/haqq/images/islm.svg"
      },
      images: [{
        image_sync: {
          chain_name: "haqq",
          base_denom: "aISLM"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/haqq/images/islm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/haqq/images/islm.svg"
      }]
    },
    {
      description: "$AUTISM exists to celebrate autism as a superior biological tech stack for a changing world",
      denom_units: [{
        denom: "ibc/9DDF52A334F92BC57A9E0D59DFF9984EAC61D2A14E5162605DF601AA58FDFC6D",
        exponent: 0,
        aliases: ["factory/inj14lf8xm6fcvlggpa7guxzjqwjmtr24gnvf56hvz/autism"]
      }, {
        denom: "autism",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/9DDF52A334F92BC57A9E0D59DFF9984EAC61D2A14E5162605DF601AA58FDFC6D",
      name: "Autism",
      display: "autism",
      symbol: "AUTISM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "injective",
          base_denom: "factory/inj14lf8xm6fcvlggpa7guxzjqwjmtr24gnvf56hvz/autism",
          channel_id: "channel-8"
        },
        chain: {
          channel_id: "channel-122",
          path: "transfer/channel-122/factory/inj14lf8xm6fcvlggpa7guxzjqwjmtr24gnvf56hvz/autism"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/autism.png"
      },
      images: [{
        image_sync: {
          chain_name: "injective",
          base_denom: "factory/inj14lf8xm6fcvlggpa7guxzjqwjmtr24gnvf56hvz/autism"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/autism.png"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "The PAGE token is used for actions in the PageDAO NFT literary ecosystem and for DAO governance.",
      denom_units: [{
        denom: "ibc/23A62409E4AD8133116C249B1FA38EED30E500A115D7B153109462CD82C1CD99",
        exponent: 0,
        aliases: ["gravity0x60e683C6514Edd5F758A55b6f393BeBBAfaA8d5e"]
      }, {
        denom: "page",
        exponent: 8
      }],
      type_asset: "ics20",
      base: "ibc/23A62409E4AD8133116C249B1FA38EED30E500A115D7B153109462CD82C1CD99",
      name: "Page",
      display: "page",
      symbol: "PAGE",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x60e683C6514Edd5F758A55b6f393BeBBAfaA8d5e"
        },
        provider: "Gravity Bridge"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "gravitybridge",
          base_denom: "gravity0x60e683C6514Edd5F758A55b6f393BeBBAfaA8d5e",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-144",
          path: "transfer/channel-144/gravity0x60e683C6514Edd5F758A55b6f393BeBBAfaA8d5e"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/page.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/page.svg"
      },
      images: [{
        image_sync: {
          chain_name: "gravitybridge",
          base_denom: "gravity0x60e683C6514Edd5F758A55b6f393BeBBAfaA8d5e"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/page.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/page.svg"
      }]
    },
    {
      description: "PURSE Token",
      denom_units: [{
        denom: "ibc/6FD2938076A4C1BB3A324A676E76B0150A4443DAE0E002FB62AC0E6B604B1519",
        exponent: 0,
        aliases: ["bsc0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C"]
      }, {
        denom: "PURSE",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/6FD2938076A4C1BB3A324A676E76B0150A4443DAE0E002FB62AC0E6B604B1519",
      name: "PURSE Token (Function X)",
      display: "PURSE",
      symbol: "PURSE",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "binancesmartchain",
          base_denom: "0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C",
          contract: "0x84238c00c8313920826D798e3cF6793Ef4F610ad"
        },
        provider: "Function X"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "pundix",
          base_denom: "bsc0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-12618",
          path: "transfer/channel-12618/bsc0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/purse-token-logo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/purse-token-logo.svg"
      },
      images: [{
        image_sync: {
          chain_name: "binancesmartchain",
          base_denom: "0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/purse-token-logo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/purse-token-logo.svg"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "The first meme coin on Injective. It\u2019s a dog, but he has nunchucks",
      denom_units: [{
        denom: "ibc/183C0BB962D2F57C957E0B134CFA0AC9D6F755C02DE9DC2A59089BA23009DEC3",
        exponent: 0,
        aliases: ["factory/inj1xtel2knkt8hmc9dnzpjz6kdmacgcfmlv5f308w/ninja"]
      }, {
        denom: "NINJA",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/183C0BB962D2F57C957E0B134CFA0AC9D6F755C02DE9DC2A59089BA23009DEC3",
      name: "Dog wif nunchucks",
      display: "NINJA",
      symbol: "NINJA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "injective",
          base_denom: "factory/inj1xtel2knkt8hmc9dnzpjz6kdmacgcfmlv5f308w/ninja",
          channel_id: "channel-8"
        },
        chain: {
          channel_id: "channel-122",
          path: "transfer/channel-122/factory/inj1xtel2knkt8hmc9dnzpjz6kdmacgcfmlv5f308w/ninja"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/ninja.png"
      },
      images: [{
        image_sync: {
          chain_name: "injective",
          base_denom: "factory/inj1xtel2knkt8hmc9dnzpjz6kdmacgcfmlv5f308w/ninja"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/ninja.png",
        theme: {
          primary_color_hex: "#00468E",
          background_color_hex: "#00468E",
          circle: true
        }
      }]
    },
    {
      description: "Kleomedes Token",
      denom_units: [{
        denom: "ibc/5F5B7DA5ECC80F6C7A8702D525BB0B74279B1F7B8EFAE36E423D68788F7F39FF",
        exponent: 0,
        aliases: ["cw20:juno10gthz5ufgrpuk5cscve2f0hjp56wgp90psqxcrqlg4m9mcu9dh8q4864xy"]
      }, {
        denom: "kleo",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/5F5B7DA5ECC80F6C7A8702D525BB0B74279B1F7B8EFAE36E423D68788F7F39FF",
      name: "Kleomedes",
      display: "kleo",
      symbol: "KLEO",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno10gthz5ufgrpuk5cscve2f0hjp56wgp90psqxcrqlg4m9mcu9dh8q4864xy",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno10gthz5ufgrpuk5cscve2f0hjp56wgp90psqxcrqlg4m9mcu9dh8q4864xy"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/kleomedes.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno10gthz5ufgrpuk5cscve2f0hjp56wgp90psqxcrqlg4m9mcu9dh8q4864xy"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/kleomedes.png"
      }]
    },
    {
      description: "NYX Token (NYX) is the Nym Network's native token.",
      denom_units: [{
        denom: "ibc/1A611E8A3E4248106A1A5A80A64BFA812739435E8B9888EB3F652A21F029F317",
        exponent: 0,
        aliases: ["unyx"]
      }, {
        denom: "nyx",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/1A611E8A3E4248106A1A5A80A64BFA812739435E8B9888EB3F652A21F029F317",
      name: "Nym",
      display: "nyx",
      symbol: "NYX",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "nyx",
          base_denom: "unyx",
          channel_id: "channel-8"
        },
        chain: {
          channel_id: "channel-15464",
          path: "transfer/channel-15464/unyx"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyx/images/nyx.png"
      },
      images: [{
        image_sync: {
          chain_name: "nyx",
          base_denom: "unyx"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyx/images/nyx.png"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "NYM Token (NYM) is the Nym Network's native utility token, used as the primary means to incentivize mixnet node operators.",
      denom_units: [{
        denom: "ibc/37CB3078432510EE57B9AFA8DBE028B33AE3280A144826FEAC5F2334CF2C5539",
        exponent: 0,
        aliases: ["unym"]
      }, {
        denom: "nym",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/37CB3078432510EE57B9AFA8DBE028B33AE3280A144826FEAC5F2334CF2C5539",
      name: "NYM",
      display: "nym",
      symbol: "NYM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "nyx",
          base_denom: "unym",
          channel_id: "channel-8"
        },
        chain: {
          channel_id: "channel-15464",
          path: "transfer/channel-15464/unym"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyx/images/nym.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyx/images/nym.png"
      }]
    },
    {
      description: "has a hat",
      denom_units: [{
        denom: "ibc/2FFE07C4B4EFC0DDA099A16C6AF3C9CCA653CC56077E87217A585D48794B0BC7",
        exponent: 0,
        aliases: ["factory/chihuahua1x4q2vkrz4dfgd9hcw0p5m2f2nuv2uqmt9xr8k2/achihuahuawifhat"]
      }, {
        denom: "achihuahuawifhat",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/2FFE07C4B4EFC0DDA099A16C6AF3C9CCA653CC56077E87217A585D48794B0BC7",
      name: "Chihuahuawifhat",
      display: "achihuahuawifhat",
      symbol: "BADDOG",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "chihuahua",
          base_denom: "factory/chihuahua1x4q2vkrz4dfgd9hcw0p5m2f2nuv2uqmt9xr8k2/achihuahuawifhat",
          channel_id: "channel-7"
        },
        chain: {
          channel_id: "channel-113",
          path: "transfer/channel-113/factory/chihuahua1x4q2vkrz4dfgd9hcw0p5m2f2nuv2uqmt9xr8k2/achihuahuawifhat"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/baddog.png"
      },
      images: [{
        image_sync: {
          chain_name: "chihuahua",
          base_denom: "factory/chihuahua1x4q2vkrz4dfgd9hcw0p5m2f2nuv2uqmt9xr8k2/achihuahuawifhat"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/baddog.png",
        theme: {
          primary_color_hex: "#F7E3C0",
          background_color_hex: "#F7E3C0",
          circle: true
        }
      }]
    },
    {
      description: "clownmaxxed store of value",
      denom_units: [{
        denom: "ibc/8C8F6349F656C943543C6B040377BE44123D01F712277815C3C13098BB98818C",
        exponent: 0,
        aliases: ["ucircus", "factory/neutron170v88vrtnedesyfytuku257cggxc79rd7lwt7q/ucircus"]
      }, {
        denom: "circus",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/8C8F6349F656C943543C6B040377BE44123D01F712277815C3C13098BB98818C",
      name: "AtomEconomicZone69JaeKwonInu",
      display: "circus",
      symbol: "CIRCUS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "neutron",
          base_denom: "factory/neutron170v88vrtnedesyfytuku257cggxc79rd7lwt7q/ucircus",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-874",
          path: "transfer/channel-874/factory/neutron170v88vrtnedesyfytuku257cggxc79rd7lwt7q/ucircus"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/circus.png"
      },
      images: [{
        image_sync: {
          chain_name: "neutron",
          base_denom: "factory/neutron170v88vrtnedesyfytuku257cggxc79rd7lwt7q/ucircus"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/circus.png"
      }]
    },
    {
      description: "Governance and utility token for the Jun\xF8 Apes NFT platform on Juno",
      denom_units: [{
        denom: "ibc/176DD560277BB0BD676260BE02EBAB697725CA85144D8A2BF286C6B5323DB5FE",
        exponent: 0,
        aliases: ["cw20:juno1zkwveux7y6fmsr88atf3cyffx96p0c96qr8tgcsj7vfnhx7sal3s3zu3ps"]
      }, {
        denom: "jape",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/176DD560277BB0BD676260BE02EBAB697725CA85144D8A2BF286C6B5323DB5FE",
      name: "Jun\xF8 Apes",
      display: "jape",
      symbol: "JAPE",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1zkwveux7y6fmsr88atf3cyffx96p0c96qr8tgcsj7vfnhx7sal3s3zu3ps",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1zkwveux7y6fmsr88atf3cyffx96p0c96qr8tgcsj7vfnhx7sal3s3zu3ps"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/jape.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1zkwveux7y6fmsr88atf3cyffx96p0c96qr8tgcsj7vfnhx7sal3s3zu3ps"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/jape.png"
      }]
    },
    {
      description: "Woof",
      denom_units: [{
        denom: "ibc/9B8EC667B6DF55387DC0F3ACC4F187DA6921B0806ED35DE6B04DE96F5AB81F53",
        exponent: 0,
        aliases: ["factory/chihuahua13jawsn574rf3f0u5rhu7e8n6sayx5gkw3eddhp/uwoof"]
      }, {
        denom: "WOOF",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/9B8EC667B6DF55387DC0F3ACC4F187DA6921B0806ED35DE6B04DE96F5AB81F53",
      name: "WOOF",
      display: "WOOF",
      symbol: "WOOF",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "chihuahua",
          base_denom: "factory/chihuahua13jawsn574rf3f0u5rhu7e8n6sayx5gkw3eddhp/uwoof",
          channel_id: "channel-7"
        },
        chain: {
          channel_id: "channel-113",
          path: "transfer/channel-113/factory/chihuahua13jawsn574rf3f0u5rhu7e8n6sayx5gkw3eddhp/uwoof"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/woof.png"
      },
      images: [{
        image_sync: {
          chain_name: "chihuahua",
          base_denom: "factory/chihuahua13jawsn574rf3f0u5rhu7e8n6sayx5gkw3eddhp/uwoof"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/woof.png"
      }]
    },
    {
      description: "The native coin of Sneaky Productions.",
      denom_units: [{
        denom: "ibc/94ED1F172BC633DFC56D7E26551D8B101ADCCC69052AC44FED89F97FF658138F",
        exponent: 0,
        aliases: ["factory/stars1xx5976njvxpl9n4v8huvff6cudhx7yuu8e7rt4/usneaky"]
      }, {
        denom: "sneaky",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/94ED1F172BC633DFC56D7E26551D8B101ADCCC69052AC44FED89F97FF658138F",
      name: "Sneaky Productions",
      display: "sneaky",
      symbol: "SNEAKY",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "stargaze",
          base_denom: "factory/stars1xx5976njvxpl9n4v8huvff6cudhx7yuu8e7rt4/usneaky",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-75",
          path: "transfer/channel-75/factory/stars1xx5976njvxpl9n4v8huvff6cudhx7yuu8e7rt4/usneaky"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/sneaky.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/sneaky.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stargaze",
          base_denom: "factory/stars1xx5976njvxpl9n4v8huvff6cudhx7yuu8e7rt4/usneaky"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/sneaky.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/sneaky.svg"
      }]
    },
    {
      description: "Wrapped Bitcoin (WBTC) is an ERC20 token backed 1:1 with Bitcoin. Completely transparent. 100% verifiable. Community led.",
      denom_units: [{
        denom: "factory/osmo1z0qrq605sjgcqpylfl4aa6s90x738j7m58wyatt0tdzflg2ha26q67k743/wbtc",
        exponent: 0,
        aliases: ["wbtc-satoshi"]
      }, {
        denom: "wbtc",
        exponent: 8
      }],
      type_asset: "sdk.coin",
      address: "osmo1z0qrq605sjgcqpylfl4aa6s90x738j7m58wyatt0tdzflg2ha26q67k743",
      base: "factory/osmo1z0qrq605sjgcqpylfl4aa6s90x738j7m58wyatt0tdzflg2ha26q67k743/wbtc",
      name: "Wrapped Bitcoin",
      display: "wbtc",
      symbol: "WBTC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "bitcoin",
          base_denom: "sat"
        },
        provider: "BitGo, Kyber, and Ren"
      }, {
        type: "additional-mintage",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599"
        },
        provider: "BitGo, Kyber, and Ren"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.svg"
      }],
      coingecko_id: "wrapped-bitcoin"
    },
    {
      description: "Baddest coin on Cosmos",
      denom_units: [{
        denom: "ibc/442A08C33AE9875DF90792FFA73B5728E1CAECE87AB4F26AE9B422F1E682ED23",
        exponent: 0,
        aliases: ["ubad", "factory/neutron143wp6g8paqasnuuey6zyapucknwy9rhnld8hkr/bad"]
      }, {
        denom: "bad",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/442A08C33AE9875DF90792FFA73B5728E1CAECE87AB4F26AE9B422F1E682ED23",
      name: "Badcoin",
      display: "bad",
      symbol: "BAD",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "neutron",
          base_denom: "factory/neutron143wp6g8paqasnuuey6zyapucknwy9rhnld8hkr/bad",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-874",
          path: "transfer/channel-874/factory/neutron143wp6g8paqasnuuey6zyapucknwy9rhnld8hkr/bad"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/bad.png"
      },
      images: [{
        image_sync: {
          chain_name: "neutron",
          base_denom: "factory/neutron143wp6g8paqasnuuey6zyapucknwy9rhnld8hkr/bad"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/bad.png"
      }]
    },
    {
      description: "Signal Art and Gaming on Juno",
      denom_units: [{
        denom: "ibc/4BDADBEDA31899036AB286E9901116496A9D85FB87B35A408C9D67C0DCAC660A",
        exponent: 0,
        aliases: ["cw20:juno14lycavan8gvpjn97aapzvwmsj8kyrvf644p05r0hu79namyj3ens87650k"]
      }, {
        denom: "sgnl",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/4BDADBEDA31899036AB286E9901116496A9D85FB87B35A408C9D67C0DCAC660A",
      name: "Signal",
      display: "sgnl",
      symbol: "SGNL",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno14lycavan8gvpjn97aapzvwmsj8kyrvf644p05r0hu79namyj3ens87650k",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno14lycavan8gvpjn97aapzvwmsj8kyrvf644p05r0hu79namyj3ens87650k"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sgnl.png"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno14lycavan8gvpjn97aapzvwmsj8kyrvf644p05r0hu79namyj3ens87650k"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/sgnl.png"
      }]
    },
    {
      description: "The first native memecoin on Osmosis. Crafted by the deftest of hands in the lab of lunacy. It's scientifically anarchic, professionally foolish, and your ticket to the madhouse.",
      denom_units: [{
        denom: "factory/osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3/WOSMO",
        exponent: 0
      }, {
        denom: "WOSMO",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3",
      base: "factory/osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3/WOSMO",
      name: "WOSMO",
      display: "WOSMO",
      symbol: "WOSMO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wosmo.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wosmo.png"
      }]
    },
    {
      description: "Margined Power Token sqTIA",
      denom_units: [{
        denom: "factory/osmo1g8qypve6l95xmhgc0fddaecerffymsl7kn9muw/sqtia",
        exponent: 0
      }, {
        denom: "sqtia",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      base: "factory/osmo1g8qypve6l95xmhgc0fddaecerffymsl7kn9muw/sqtia",
      name: "TIA Squared",
      display: "sqtia",
      symbol: "sqTIA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/sqtia.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/sqtia.svg"
      }]
    },
    {
      description: "The deflationary utility token of the Apollo DAO project",
      denom_units: [{
        denom: "ibc/73BB20AF857D1FE6E061D01CA13870872AD0C979497CAF71BEA25B1CBF6879F1",
        exponent: 0,
        aliases: ["uapollo", "factory/neutron154gg0wtm2v4h9ur8xg32ep64e8ef0g5twlsgvfeajqwghdryvyqsqhgk8e/APOLLO"]
      }, {
        denom: "apollo",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/73BB20AF857D1FE6E061D01CA13870872AD0C979497CAF71BEA25B1CBF6879F1",
      name: "Apollo DAO",
      display: "apollo",
      symbol: "APOLLO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "neutron",
          base_denom: "factory/neutron154gg0wtm2v4h9ur8xg32ep64e8ef0g5twlsgvfeajqwghdryvyqsqhgk8e/APOLLO",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-874",
          path: "transfer/channel-874/factory/neutron154gg0wtm2v4h9ur8xg32ep64e8ef0g5twlsgvfeajqwghdryvyqsqhgk8e/APOLLO"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/apollo.svg"
      },
      images: [{
        image_sync: {
          chain_name: "neutron",
          base_denom: "factory/neutron154gg0wtm2v4h9ur8xg32ep64e8ef0g5twlsgvfeajqwghdryvyqsqhgk8e/APOLLO"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/apollo.svg"
      }]
    },
    {
      description: "Stride's liquid staked DYDX",
      denom_units: [{
        denom: "ibc/980E82A9F8E7CA8CD480F4577E73682A6D3855A267D1831485D7EBEF0E7A6C2C",
        exponent: 0,
        aliases: ["stadydx"]
      }, {
        denom: "stDYDX",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/980E82A9F8E7CA8CD480F4577E73682A6D3855A267D1831485D7EBEF0E7A6C2C",
      name: "Stride Staked DYDX",
      display: "stDYDX",
      symbol: "stDYDX",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "dydx",
          base_denom: "adydx"
        },
        provider: "Stride"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "stride",
          base_denom: "stadydx",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-326",
          path: "transfer/channel-326/stadydx"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stdydx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stdydx.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stride",
          base_denom: "stadydx"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stdydx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stdydx.svg"
      }]
    },
    {
      description: "Stride's liquid staked TIA",
      denom_units: [{
        denom: "ibc/698350B8A61D575025F3ED13E9AC9C0F45C89DEFE92F76D5838F1D3C1A7FF7C9",
        exponent: 0,
        aliases: ["stutia"]
      }, {
        denom: "stTIA",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/698350B8A61D575025F3ED13E9AC9C0F45C89DEFE92F76D5838F1D3C1A7FF7C9",
      name: "Stride Staked TIA",
      display: "stTIA",
      symbol: "stTIA",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "celestia",
          base_denom: "utia"
        },
        provider: "Stride"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "stride",
          base_denom: "stutia",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-326",
          path: "transfer/channel-326/stutia"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/sttia.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/sttia.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stride",
          base_denom: "stutia"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/sttia.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/sttia.svg"
      }]
    },
    {
      description: "Stride's liquid staked SAGA",
      denom_units: [{
        denom: "ibc/2CD9F8161C3FC332E78EF0C25F6E684D09379FB2F56EF9267E7EC139642EC57B",
        exponent: 0,
        aliases: ["stusaga"]
      }, {
        denom: "stSAGA",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/2CD9F8161C3FC332E78EF0C25F6E684D09379FB2F56EF9267E7EC139642EC57B",
      name: "Stride Staked SAGA",
      display: "stSAGA",
      symbol: "stSAGA",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "saga",
          base_denom: "usaga"
        },
        provider: "Stride"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "stride",
          base_denom: "stusaga",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-326",
          path: "transfer/channel-326/stusaga"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stsaga.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stsaga.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stride",
          base_denom: "stusaga"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stsaga.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stsaga.svg"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/C04DFC9BCD893E57F2BEFE40F63EFD18D2768514DBD5F63ABD2FF7F48FC01D36",
        exponent: 0,
        aliases: ["stinj"]
      }, {
        denom: "stINJ",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/C04DFC9BCD893E57F2BEFE40F63EFD18D2768514DBD5F63ABD2FF7F48FC01D36",
      name: "Stride Staked INJ",
      display: "stINJ",
      symbol: "stINJ",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "injective",
          base_denom: "inj"
        },
        provider: "Stride"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "stride",
          base_denom: "stinj",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-326",
          path: "transfer/channel-326/stinj"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stinj.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stinj.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stride",
          base_denom: "stinj"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stinj.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stinj.svg"
      }]
    },
    {
      description: "GLTO-ERC20 on injective",
      denom_units: [{
        denom: "ibc/072E5B3D6F278B3E6A9C51D7EAD1A737148609512C5EBE8CBCB5663264A0DDB7",
        exponent: 0,
        aliases: ["peggy0xd73175f9eb15eee81745d367ae59309Ca2ceb5e2"]
      }, {
        denom: "glto",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/072E5B3D6F278B3E6A9C51D7EAD1A737148609512C5EBE8CBCB5663264A0DDB7",
      name: "Gelotto (Injective)",
      display: "glto",
      symbol: "injective.GLTO",
      traces: [
        {
          type: "additional-mintage",
          counterparty: {
            chain_name: "juno",
            base_denom: "cw20:juno1j0a9ymgngasfn3l5me8qpd53l5zlm9wurfdk7r65s5mg6tkxal3qpgf5se"
          },
          provider: "Gelotto"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xd73175f9eb15eee81745d367ae59309Ca2ceb5e2"
          },
          provider: "Peggy"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "injective",
            base_denom: "peggy0xd73175f9eb15eee81745d367ae59309Ca2ceb5e2",
            channel_id: "channel-8"
          },
          chain: {
            channel_id: "channel-122",
            path: "transfer/channel-122/peggy0xd73175f9eb15eee81745d367ae59309Ca2ceb5e2"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xd73175f9eb15eee81745d367ae59309Ca2ceb5e2"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.svg"
      }]
    },
    {
      description: "The native governance and staking token of the Dymension Hub",
      denom_units: [{
        denom: "ibc/9A76CDF0CBCEF37923F32518FA15E5DC92B9F56128292BC4D63C4AEA76CBB110",
        exponent: 0,
        aliases: ["adym"]
      }, {
        denom: "dym",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/9A76CDF0CBCEF37923F32518FA15E5DC92B9F56128292BC4D63C4AEA76CBB110",
      name: "Dymension Hub",
      display: "dym",
      symbol: "DYM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "dymension",
          base_denom: "adym",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-19774",
          path: "transfer/channel-19774/adym"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dymension/images/dymension-logo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dymension/images/dymension-logo.svg"
      },
      images: [{
        image_sync: {
          chain_name: "dymension",
          base_denom: "adym"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dymension/images/dymension-logo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dymension/images/dymension-logo.svg"
      }]
    },
    {
      description: "Rapture insurance is the first ever P2P insurance platform on $OSMO. Get rewarded to take care of peoples loved ones after the Rapture.",
      denom_units: [{
        denom: "factory/osmo1279xudevmf5cw83vkhglct7jededp86k90k2le/RAPTR",
        exponent: 0
      }, {
        denom: "RAPTR",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo1279xudevmf5cw83vkhglct7jededp86k90k2le",
      base: "factory/osmo1279xudevmf5cw83vkhglct7jededp86k90k2le/RAPTR",
      name: "RAPTR",
      display: "RAPTR",
      symbol: "RAPTR",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/RAPTR.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/RAPTR.png"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "Astroport is a neutral marketplace where anyone, from anywhere in the galaxy, can dock to trade their wares.",
      denom_units: [{
        denom: "ibc/C25A2303FE24B922DAFFDCE377AC5A42E5EF746806D32E2ED4B610DE85C203F7",
        exponent: 0,
        aliases: ["cw20:terra1nsuqsk6kh58ulczatwev87ttq2z6r3pusulg9r24mfj2fvtzd4uq3exn26"]
      }, {
        denom: "astro.cw20",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/C25A2303FE24B922DAFFDCE377AC5A42E5EF746806D32E2ED4B610DE85C203F7",
      name: "Astroport CW20 Token",
      display: "astro.cw20",
      symbol: "ASTRO.cw20",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "terra2",
          base_denom: "cw20:terra1nsuqsk6kh58ulczatwev87ttq2z6r3pusulg9r24mfj2fvtzd4uq3exn26",
          port: "wasm.terra1jhfjnm39y3nn9l4520mdn4k5mw23nz0674c4gsvyrcr90z9tqcvst22fce",
          channel_id: "channel-392"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-21671",
          path: "transfer/channel-21671/cw20:terra1nsuqsk6kh58ulczatwev87ttq2z6r3pusulg9r24mfj2fvtzd4uq3exn26"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/astro-cw20.svg"
      },
      images: [{
        image_sync: {
          chain_name: "terra2",
          base_denom: "cw20:terra1nsuqsk6kh58ulczatwev87ttq2z6r3pusulg9r24mfj2fvtzd4uq3exn26"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/astro-cw20.svg"
      }]
    },
    {
      description: "A clan of 11y bad kids crafting chaos on the Cosmos eco. One bad memecoin to rule them all  $BADKID. Airdropped to Badkids NFT holders and $STARS stakers. It's so bad, your wallet's throwing a tantrum for it.",
      denom_units: [{
        denom: "factory/osmo10n8rv8npx870l69248hnp6djy6pll2yuzzn9x8/BADKID",
        exponent: 0
      }, {
        denom: "BADKID",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo10n8rv8npx870l69248hnp6djy6pll2yuzzn9x8",
      base: "factory/osmo10n8rv8npx870l69248hnp6djy6pll2yuzzn9x8/BADKID",
      name: "BADKID",
      display: "BADKID",
      symbol: "BADKID",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/badkid.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/badkid.png"
      }]
    },
    {
      description: "Solana USD Coin (Wormhole), Solana USDC, factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/HJk1XMDRNUbRrpKkNZYui7SwWDMjXZAsySzqgyNcQoU3",
      denom_units: [{
        denom: "ibc/F08DE332018E8070CC4C68FE06E04E254F527556A614F5F8F9A68AF38D367E45",
        exponent: 0,
        aliases: ["factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/HJk1XMDRNUbRrpKkNZYui7SwWDMjXZAsySzqgyNcQoU3"]
      }, {
        denom: "wormhole/HJk1XMDRNUbRrpKkNZYui7SwWDMjXZAsySzqgyNcQoU3/6",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/F08DE332018E8070CC4C68FE06E04E254F527556A614F5F8F9A68AF38D367E45",
      name: "Solana USD Coin (Wormhole)",
      display: "wormhole/HJk1XMDRNUbRrpKkNZYui7SwWDMjXZAsySzqgyNcQoU3/6",
      symbol: "solana.USDC.wh",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Circle"
        },
        {
          type: "additional-mintage",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          provider: "Circle"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "solana",
            base_denom: "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"
          },
          provider: "Wormhole"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "gateway",
            base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/HJk1XMDRNUbRrpKkNZYui7SwWDMjXZAsySzqgyNcQoU3",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-2186",
            path: "transfer/channel-2186/factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/HJk1XMDRNUbRrpKkNZYui7SwWDMjXZAsySzqgyNcQoU3"
          }
        }
      ],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }, {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/solana.USDC.wh.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/solana.USDC.wh.svg"
      }]
    },
    {
      description: "The native staking and governance token of Humans.ai.",
      denom_units: [{
        denom: "ibc/35CECC330D11DD00FACB555D07687631E0BC7D226260CC5F015F6D7980819533",
        exponent: 0,
        aliases: ["aheart"]
      }, {
        denom: "heart",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/35CECC330D11DD00FACB555D07687631E0BC7D226260CC5F015F6D7980819533",
      name: "Humans.ai",
      display: "heart",
      symbol: "HEART",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "humans",
          base_denom: "aheart",
          channel_id: "channel-4"
        },
        chain: {
          channel_id: "channel-20082",
          path: "transfer/channel-20082/aheart"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/humans/images/heart-dark-mode.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/humans/images/heart-dark-mode.svg"
      },
      images: [{
        image_sync: {
          chain_name: "humans",
          base_denom: "aheart"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/humans/images/heart-dark-mode.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/humans/images/heart-dark-mode.svg",
        theme: {
          dark_mode: true
        }
      }]
    },
    {
      description: "The token of Teledisko DAO.",
      denom_units: [{
        denom: "ibc/2BF9656CAB0384A31167DB9B0254F0FB1CB4346A229BD7E5CBDCBB911C3740F7",
        exponent: 0,
        aliases: ["erc20/0x1cFc8f1FE8D5668BAFF2724547EcDbd6f013a280"]
      }, {
        denom: "berlin",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/2BF9656CAB0384A31167DB9B0254F0FB1CB4346A229BD7E5CBDCBB911C3740F7",
      name: "Teledisko DAO - Legacy",
      display: "berlin",
      symbol: "BERLIN-legacy",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "evmos",
          base_denom: "erc20/0x1cFc8f1FE8D5668BAFF2724547EcDbd6f013a280",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-204",
          path: "transfer/channel-204/erc20/0x1cFc8f1FE8D5668BAFF2724547EcDbd6f013a280"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/berlin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/berlin.svg"
      },
      images: [{
        image_sync: {
          chain_name: "evmos",
          base_denom: "erc20/0x1cFc8f1FE8D5668BAFF2724547EcDbd6f013a280"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/berlin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/berlin.svg"
      }]
    },
    {
      description: "The native token of Scorum",
      denom_units: [{
        denom: "ibc/178248C262DE2E141EE6287EE7AB0854F05F25B0A3F40C4B912FA1C7E51F466E",
        exponent: 0,
        aliases: ["nscr"]
      }, {
        denom: "scr",
        exponent: 9
      }],
      type_asset: "ics20",
      base: "ibc/178248C262DE2E141EE6287EE7AB0854F05F25B0A3F40C4B912FA1C7E51F466E",
      name: "Scorum",
      display: "scr",
      symbol: "SCR",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "scorum",
          base_denom: "nscr",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-20100",
          path: "transfer/channel-20100/nscr"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/scr.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/scr.svg"
      },
      images: [{
        image_sync: {
          chain_name: "scorum",
          base_denom: "nscr"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/scr.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/scr.svg"
      }]
    },
    {
      description: "The native token of Chain4Energy",
      denom_units: [{
        denom: "ibc/62118FB4D5FEDD5D2B18DC93648A745CD5E5B01D420E9B7A5FED5381CB13A7E8",
        exponent: 0,
        aliases: ["uc4e"]
      }, {
        denom: "c4e",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/62118FB4D5FEDD5D2B18DC93648A745CD5E5B01D420E9B7A5FED5381CB13A7E8",
      name: "C4E",
      display: "c4e",
      symbol: "C4E",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "chain4energy",
          base_denom: "uc4e",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-22172",
          path: "transfer/channel-22172/uc4e"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chain4energy/images/c4e.png"
      },
      images: [{
        image_sync: {
          chain_name: "chain4energy",
          base_denom: "uc4e"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chain4energy/images/c4e.png"
      }]
    },
    {
      description: "Bitmos opens doors for BRC20 tokens to thrive alongside established players in the Cosmos Network, revolutionizing decentralized finance (DeFi) for all.",
      denom_units: [{
        denom: "ibc/7D389F0ABF1E4D45BE6D7BBE36A2C50EA0559C01E076B02F8E381E685EC1F942",
        exponent: 0,
        aliases: ["cw20:terra1sxe8u2hjczlekwfkcq0rs28egt38pg3wqzfx4zcrese4fnvzzupsk9gjkq"]
      }, {
        denom: "bitmos",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/7D389F0ABF1E4D45BE6D7BBE36A2C50EA0559C01E076B02F8E381E685EC1F942",
      name: "Bitmos",
      display: "bitmos",
      symbol: "BMOS",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "terra2",
          base_denom: "cw20:terra1sxe8u2hjczlekwfkcq0rs28egt38pg3wqzfx4zcrese4fnvzzupsk9gjkq",
          port: "wasm.terra1e0mrzy8077druuu42vs0hu7ugguade0cj65dgtauyaw4gsl4kv0qtdf2au",
          channel_id: "channel-26"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-341",
          path: "transfer/channel-341/cw20:terra1sxe8u2hjczlekwfkcq0rs28egt38pg3wqzfx4zcrese4fnvzzupsk9gjkq"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/bitmos.png"
      },
      images: [{
        image_sync: {
          chain_name: "terra2",
          base_denom: "cw20:terra1sxe8u2hjczlekwfkcq0rs28egt38pg3wqzfx4zcrese4fnvzzupsk9gjkq"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/bitmos.png"
      }]
    },
    {
      description: "The SRCX token of Source Protocol.",
      denom_units: [{
        denom: "ibc/C97473CD237EBA2F94FDFA6ABA5EC0E22FA140655D73D2A2754F03A347BBA40B",
        exponent: 0,
        aliases: ["nsrcx", "ibc/FC5A7360EEED0713AE3E83E9D55A69AF873056A172AC495890ACE4582FF9685A"]
      }, {
        denom: "srcx",
        exponent: 9
      }],
      type_asset: "ics20",
      base: "ibc/C97473CD237EBA2F94FDFA6ABA5EC0E22FA140655D73D2A2754F03A347BBA40B",
      name: "Source Token",
      display: "srcx",
      symbol: "SRCX",
      traces: [
        {
          type: "bridge",
          counterparty: {
            chain_name: "binancesmartchain",
            base_denom: "0x454b90716a9435e7161a9aea5cf00e0acbe565ae",
            contract: "0xC891aBa0b42818fb4c975Bf6461033c62BCE75ff"
          },
          chain: {
            contract: "0xC891aBa0b42818fb4c975Bf6461033c62BCE75ff"
          },
          provider: "DeltaSwap.io"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "planq",
            base_denom: "erc20/0x091F9A57A3F58d758b6572E9d41675918EAC7F09",
            channel_id: "channel-61"
          },
          chain: {
            channel_id: "channel-1",
            path: "transfer/channel-1/erc20/0x091F9A57A3F58d758b6572E9d41675918EAC7F09"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "source",
            base_denom: "ibc/FC5A7360EEED0713AE3E83E9D55A69AF873056A172AC495890ACE4582FF9685A",
            channel_id: "channel-0"
          },
          chain: {
            channel_id: "channel-8945",
            path: "transfer/channel-8945/transfer/channel-1/erc20/0x091F9A57A3F58d758b6572E9d41675918EAC7F09"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/srcx.png"
      },
      images: [{
        image_sync: {
          chain_name: "source",
          base_denom: "ibc/FC5A7360EEED0713AE3E83E9D55A69AF873056A172AC495890ACE4582FF9685A"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/srcx.png"
      }]
    },
    {
      description: "The revenue token for Pylons",
      denom_units: [{
        denom: "ibc/0835781EF3F3ADD053874323AB660C75B50B18B16733CAB783CA6BBD78244EDF",
        exponent: 0,
        aliases: ["ubedrock"]
      }, {
        denom: "rock",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/0835781EF3F3ADD053874323AB660C75B50B18B16733CAB783CA6BBD78244EDF",
      name: "Pylons",
      display: "rock",
      symbol: "ROCK",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "pylons",
          base_denom: "ubedrock",
          channel_id: "channel-29"
        },
        chain: {
          channel_id: "channel-17683",
          path: "transfer/channel-17683/ubedrock"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pylons/images/pylons.png"
      },
      images: [{
        image_sync: {
          chain_name: "pylons",
          base_denom: "ubedrock"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pylons/images/pylons.png"
      }]
    },
    {
      description: "BSKT tracks the top assets across the crypto ecosystem",
      denom_units: [{
        denom: "ibc/CDD1E59BD5034C1B2597DD199782204EB397DB93200AA2E99C0AF3A66B2915FA",
        exponent: 0,
        aliases: [
          "6gnCPhXtLnUD76HjQuSYPENLSZdG8RvDB1pTLM5aLSJA",
          "wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/bqqqpqsxzelp2hdfd4cgmxr6ekpatlj8yt2eghk52vst",
          "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/bqqqpqsxzelp2hdfd4cgmxr6ekpatlj8yt2eghk52vst"
        ]
      }, {
        denom: "wormhole/bqqqpqsxzelp2hdfd4cgmxr6ekpatlj8yt2eghk52vst/5",
        exponent: 5,
        aliases: ["bskt"]
      }],
      type_asset: "ics20",
      base: "ibc/CDD1E59BD5034C1B2597DD199782204EB397DB93200AA2E99C0AF3A66B2915FA",
      name: "Basket",
      display: "wormhole/bqqqpqsxzelp2hdfd4cgmxr6ekpatlj8yt2eghk52vst/5",
      symbol: "BSKT",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "solana",
          base_denom: "6gnCPhXtLnUD76HjQuSYPENLSZdG8RvDB1pTLM5aLSJA"
        },
        provider: "Wormhole"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "gateway",
          base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/bqqqpqsxzelp2hdfd4cgmxr6ekpatlj8yt2eghk52vst",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-2186",
          path: "transfer/channel-2186/factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/bqqqpqsxzelp2hdfd4cgmxr6ekpatlj8yt2eghk52vst"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/bskt.png"
      },
      images: [{
        image_sync: {
          chain_name: "gateway",
          base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/bqqqpqsxzelp2hdfd4cgmxr6ekpatlj8yt2eghk52vst"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/bskt.png"
      }]
    },
    {
      description: "The native staking and governance token of the AIOZ Network.",
      denom_units: [
        {
          denom: "ibc/BB0AFE2AFBD6E883690DAE4B9168EAC2B306BCC9C9292DACBB4152BBB08DB25F",
          exponent: 0,
          aliases: ["attoaioz"]
        },
        {
          denom: "nanoaioz",
          exponent: 9
        },
        {
          denom: "aioz",
          exponent: 18
        }
      ],
      type_asset: "ics20",
      base: "ibc/BB0AFE2AFBD6E883690DAE4B9168EAC2B306BCC9C9292DACBB4152BBB08DB25F",
      name: "AIOZ Network",
      display: "aioz",
      symbol: "AIOZ",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "aioz",
          base_denom: "attoaioz",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-779",
          path: "transfer/channel-779/attoaioz"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aioz/images/aioz.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aioz/images/aioz.svg"
      },
      images: [{
        image_sync: {
          chain_name: "aioz",
          base_denom: "attoaioz"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aioz/images/aioz.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aioz/images/aioz.svg"
      }]
    },
    {
      description: "Stride's liquid staked DYM",
      denom_units: [{
        denom: "ibc/D53E785DC9C5C2CA50CADB1EFE4DE5D0C30418BE0E9C6F2AF9F092A247E8BC22",
        exponent: 0,
        aliases: ["stadym"]
      }, {
        denom: "stDYM",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/D53E785DC9C5C2CA50CADB1EFE4DE5D0C30418BE0E9C6F2AF9F092A247E8BC22",
      name: "Stride Staked DYM",
      display: "stDYM",
      symbol: "stDYM",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "dymension",
          base_denom: "adym"
        },
        provider: "Stride"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "stride",
          base_denom: "stadym",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-326",
          path: "transfer/channel-326/stadym"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stdym.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stdym.svg"
      },
      images: [{
        image_sync: {
          chain_name: "stride",
          base_denom: "stadym"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stdym.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stdym.svg"
      }]
    },
    {
      description: "DOKI the last Dragon",
      denom_units: [{
        denom: "ibc/C12C353A83CD1005FC38943410B894DBEC5F2ABC97FC12908F0FB03B970E8E1B",
        exponent: 0,
        aliases: ["udoki"]
      }, {
        denom: "doki",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/C12C353A83CD1005FC38943410B894DBEC5F2ABC97FC12908F0FB03B970E8E1B",
      name: "DOKI",
      display: "doki",
      symbol: "DOKI",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "odin",
          base_denom: "udoki",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-258",
          path: "transfer/channel-258/udoki"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/doki_Logo.png"
      },
      images: [{
        image_sync: {
          chain_name: "odin",
          base_denom: "udoki"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/odin/images/doki_Logo.png"
      }]
    },
    {
      description: "Sail DAO is a liquidity deployment and management DAO built as a collaboration between the Osmosis and Migaloo Blockchains.",
      extended_description: "Sail DAO is a liquidity deployment and management DAO built as a collaboration between the Osmosis and Migaloo Blockchains. Seeded by both the Osmosis Community Pool and the Migaloo Foundation, Sail DAO is open to hear offers from cosmos based projects that hope to seed liquidity for their token on the Osmosis blockchain. Along with the creation of this DAO the White Whale DEX is deployed on Osmosis, being the first DEX apart from Osmosis to deploy on the chain, it is a great step towards Osmosis becoming an ecosystem from an appchain. Migaloo incubated projects are encouraged to participate in OTC deals with Sail DAO in order to seed or enhance liquidity on WW's Osmosis DEX. However, offers are not limited to Migaloo projects and liquidity is not limited to being deployed on WW DEX. The treasury of this DAO can be deployed however it wishes at the discretion of the Sail DAO voters. The Osmosis CP has been given veto authorization over any props introduced in this DAO and has also been given clawback rights if this venture ever gets off track.",
      denom_units: [{
        denom: "factory/osmo1rckme96ptawr4zwexxj5g5gej9s2dmud8r2t9j0k0prn5mch5g4snzzwjv/sail",
        exponent: 0
      }, {
        denom: "sail",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      base: "factory/osmo1rckme96ptawr4zwexxj5g5gej9s2dmud8r2t9j0k0prn5mch5g4snzzwjv/sail",
      name: "Sail",
      display: "sail",
      symbol: "SAIL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/sail.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/sail.png"
      }],
      coingecko_id: "sail-dao",
      socials: {
        website: "https://daodao.zone/dao/osmo106tvcj58rvdn9k36m9m3xcmcwk2c3fgft3ldcst9lgy05gcmjanqexru3h/home",
        twitter: "https://twitter.com/Sail_DAO_"
      }
    },
    {
      description: "SHARK is the apex price prediction market within Cosmos.",
      denom_units: [{
        denom: "ibc/64D56DF9EC69BE554F49EBCE0199611062FF1137EF105E2F645C1997344F3834",
        exponent: 0,
        aliases: ["factory/migaloo1eqntnl6tzcj9h86psg4y4h6hh05g2h9nj8e09l/shark"]
      }, {
        denom: "SHARK",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/64D56DF9EC69BE554F49EBCE0199611062FF1137EF105E2F645C1997344F3834",
      name: "SHARK",
      display: "SHARK",
      symbol: "SHARK",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1eqntnl6tzcj9h86psg4y4h6hh05g2h9nj8e09l/shark",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-642",
          path: "transfer/channel-642/factory/migaloo1eqntnl6tzcj9h86psg4y4h6hh05g2h9nj8e09l/shark"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/shark.png"
      },
      images: [{
        image_sync: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1eqntnl6tzcj9h86psg4y4h6hh05g2h9nj8e09l/shark"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/shark.png"
      }]
    },
    {
      description: "XRP bridged from XRPL",
      denom_units: [{
        denom: "ibc/63A7CA0B6838AD8CAD6B5103998FF9B9B6A6F06FBB9638BFF51E63E0142339F3",
        exponent: 0,
        aliases: ["drop", "drop-core1zhs909jp9yktml6qqx9f0ptcq2xnhhj99cja03j3lfcsp2pgm86studdrz"]
      }, {
        denom: "xrp",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/63A7CA0B6838AD8CAD6B5103998FF9B9B6A6F06FBB9638BFF51E63E0142339F3",
      name: "Ripple (Coreum)",
      display: "xrp",
      symbol: "XRP.core",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "xrpl",
          base_denom: "drop"
        },
        provider: "Coreum"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "coreum",
          base_denom: "drop-core1zhs909jp9yktml6qqx9f0ptcq2xnhhj99cja03j3lfcsp2pgm86studdrz",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-2188",
          path: "transfer/channel-2188/drop-core1zhs909jp9yktml6qqx9f0ptcq2xnhhj99cja03j3lfcsp2pgm86studdrz"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/xrpl/images/xrp.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/xrpl/images/xrp.svg"
      },
      images: [{
        image_sync: {
          chain_name: "xrpl",
          base_denom: "drop"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/xrpl/images/xrp.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/xrpl/images/xrp.svg"
      }, {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/xrp.core.png"
      }]
    },
    {
      description: "The Original Meme Coin of SEI Network",
      denom_units: [{
        denom: "ibc/86074B8DF625A75C25D52FA6112E3FD5446BA41FE418880C168CA99D10E22F05",
        exponent: 0,
        aliases: ["cw20:sei1hrndqntlvtmx2kepr0zsfgr7nzjptcc72cr4ppk4yav58vvy7v3s4er8ed"]
      }, {
        denom: "SEIYAN",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/86074B8DF625A75C25D52FA6112E3FD5446BA41FE418880C168CA99D10E22F05",
      name: "SEIYAN",
      display: "SEIYAN",
      symbol: "SEIYAN",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "sei",
          base_denom: "cw20:sei1hrndqntlvtmx2kepr0zsfgr7nzjptcc72cr4ppk4yav58vvy7v3s4er8ed",
          port: "transfer",
          channel_id: "channel-0"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-782",
          path: "transfer/channel-782/cw20:sei1hrndqntlvtmx2kepr0zsfgr7nzjptcc72cr4ppk4yav58vvy7v3s4er8ed"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/SEIYAN.png"
      },
      images: [{
        image_sync: {
          chain_name: "sei",
          base_denom: "cw20:sei1hrndqntlvtmx2kepr0zsfgr7nzjptcc72cr4ppk4yav58vvy7v3s4er8ed"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/SEIYAN.png"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "The native token of Nibiru network",
      denom_units: [{
        denom: "ibc/4017C65CEA338196ECCEC3FE3FE8258F23D1DE88F1D95750CC912C7A1C1016FF",
        exponent: 0,
        aliases: ["unibi"]
      }, {
        denom: "nibi",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/4017C65CEA338196ECCEC3FE3FE8258F23D1DE88F1D95750CC912C7A1C1016FF",
      name: "Nibiru",
      display: "nibi",
      symbol: "NIBI",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "nibiru",
          base_denom: "unibi",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-21113",
          path: "transfer/channel-21113/unibi"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
      },
      images: [{
        image_sync: {
          chain_name: "nibiru",
          base_denom: "unibi"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
      }]
    },
    {
      description: "BEAST-ERC20 on injective",
      denom_units: [{
        denom: "ibc/B84F8CC583A54DA8173711C0B66B22FDC1954FEB1CA8DBC66C89919DAFE02000",
        exponent: 0,
        aliases: ["peggy0xA4426666addBE8c4985377d36683D17FB40c31Be"]
      }, {
        denom: "beast",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/B84F8CC583A54DA8173711C0B66B22FDC1954FEB1CA8DBC66C89919DAFE02000",
      name: "Gelotto BEAST (Peggy)",
      display: "beast",
      symbol: "BEAST",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xA4426666addBE8c4985377d36683D17FB40c31Be"
        },
        provider: "Peggy"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "injective",
          base_denom: "peggy0xA4426666addBE8c4985377d36683D17FB40c31Be",
          channel_id: "channel-8"
        },
        chain: {
          channel_id: "channel-122",
          path: "transfer/channel-122/peggy0xA4426666addBE8c4985377d36683D17FB40c31Be"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/beast.png"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xA4426666addBE8c4985377d36683D17FB40c31Be"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/beast.png"
      }]
    },
    {
      description: "Cvn is a Layer-1 blockchain built to deliver on the promise of DeFi",
      denom_units: [{
        denom: "ibc/044B7B28AFE93CEC769CF529ADC626DA09EA0EFA3E0E3284D540E9E00E01E24A",
        exponent: 0,
        aliases: ["acvnt"]
      }, {
        denom: "cvnt",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/044B7B28AFE93CEC769CF529ADC626DA09EA0EFA3E0E3284D540E9E00E01E24A",
      name: "ConsciousDAO",
      display: "cvnt",
      symbol: "CVN",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "conscious",
          base_denom: "acvnt",
          channel_id: "channel-6"
        },
        chain: {
          channel_id: "channel-73971",
          path: "transfer/channel-73971/acvnt"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/conscious/images/cvn.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/conscious/images/cvn.svg"
      },
      images: [{
        image_sync: {
          chain_name: "conscious",
          base_denom: "acvnt"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/conscious/images/cvn.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/conscious/images/cvn.svg"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "The memecoin built for the Celestia community",
      denom_units: [{
        denom: "factory/osmo1nr8zfakf6jauye3uqa9lrmr5xumee5n42lv92z/toro",
        exponent: 0
      }, {
        denom: "toro",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo1nr8zfakf6jauye3uqa9lrmr5xumee5n42lv92z",
      base: "factory/osmo1nr8zfakf6jauye3uqa9lrmr5xumee5n42lv92z/toro",
      name: "TORO",
      display: "toro",
      symbol: "TORO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/toro.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/toro.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/toro.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/toro.svg"
      }]
    },
    {
      description: "Sayve is a revolutionary language learning app in the Web3 era that combines gamification, blockchain technology, and a Metaverse experience to motivate users to learn languages while earning rewards.",
      denom_units: [{
        denom: "ibc/06EF575844982382F4D1BC3830D294557A30EDB3CD223153AFC8DFEF06349C56",
        exponent: 0,
        aliases: ["cw20:terra1xp9hrhthzddnl7j5du83gqqr4wmdjm5t0guzg9jp6jwrtpukwfjsjgy4f3"]
      }, {
        denom: "sayve",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/06EF575844982382F4D1BC3830D294557A30EDB3CD223153AFC8DFEF06349C56",
      name: "sayve",
      display: "sayve",
      symbol: "SAYVE",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "terra2",
          base_denom: "cw20:terra1xp9hrhthzddnl7j5du83gqqr4wmdjm5t0guzg9jp6jwrtpukwfjsjgy4f3",
          port: "wasm.terra1e0mrzy8077druuu42vs0hu7ugguade0cj65dgtauyaw4gsl4kv0qtdf2au",
          channel_id: "channel-26"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-341",
          path: "transfer/channel-341/cw20:terra1xp9hrhthzddnl7j5du83gqqr4wmdjm5t0guzg9jp6jwrtpukwfjsjgy4f3"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/sayve.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/sayve.svg"
      },
      images: [{
        image_sync: {
          chain_name: "terra2",
          base_denom: "cw20:terra1xp9hrhthzddnl7j5du83gqqr4wmdjm5t0guzg9jp6jwrtpukwfjsjgy4f3"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/sayve.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/sayve.svg"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "LAB - Everything is an Experiment",
      extended_description: "LAB - Everything is an Experiment\n\nUse 10 $LAB tokens to mint 1 Mad Scientist NFT on Backbone Labs Osmosis Launchpad. You will then be able to trade your NFTs on the marketplace. You can also choose to hold onto your $LAB tokens as unrevealed NFTs and trade it.\n\n Fair Launch: The event was marked by the absence of whitelists (WLs), no bots and no lock, ensuring an equitable opportunity for all interested parties.\n\nPreparation for the Launch: Participants were given a 52.91-hour window to deposit $OSMO into a pool on Streamswap.\n\nThe Swap Process: After the initial deposit period, $OSMO was converted into $LAB tokens over an additional hour, allowing for a smooth transition and fair distribution.",
      denom_units: [{
        denom: "factory/osmo17fel472lgzs87ekt9dvk0zqyh5gl80sqp4sk4n/LAB",
        exponent: 0
      }, {
        denom: "LAB",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo17fel472lgzs87ekt9dvk0zqyh5gl80sqp4sk4n",
      base: "factory/osmo17fel472lgzs87ekt9dvk0zqyh5gl80sqp4sk4n/LAB",
      name: "LAB",
      display: "LAB",
      symbol: "LAB",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/LAB.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/LAB.png"
      }],
      coingecko_id: "mad-scientists"
    },
    {
      description: "BackBone Labs Liquid Staked OSMO",
      extended_description: "bOSMO - solving capital inefficiencies in the NFT market space",
      denom_units: [{
        denom: "factory/osmo1s3l0lcqc7tu0vpj6wdjz9wqpxv8nk6eraevje4fuwkyjnwuy82qsx3lduv/boneOsmo",
        exponent: 0
      }, {
        denom: "bOSMO",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo1s3l0lcqc7tu0vpj6wdjz9wqpxv8nk6eraevje4fuwkyjnwuy82qsx3lduv",
      base: "factory/osmo1s3l0lcqc7tu0vpj6wdjz9wqpxv8nk6eraevje4fuwkyjnwuy82qsx3lduv/boneOsmo",
      name: "BackBone Labs Liquid Staked OSMO",
      display: "bOSMO",
      symbol: "bOSMO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/bOSMO.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/bOSMO.png"
      }],
      socials: {
        website: "https://app.backbonelabs.io/",
        twitter: "https://twitter.com/BackBone_Labs"
      }
    },
    {
      description: "PUNDIX token is the native token that functions within the Pundi X ecosystem, including PundiX Chain and XPOS.",
      denom_units: [{
        denom: "ibc/46D8D1A6E2A80ECCB7CA6663086A2E749C508B68DA56A077CD26E6F4F9691EEE",
        exponent: 0,
        aliases: ["eth0x0FD10b9899882a6f2fcb5c371E17e70FdEe00C38"]
      }, {
        denom: "PUNDIX",
        exponent: 18,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/46D8D1A6E2A80ECCB7CA6663086A2E749C508B68DA56A077CD26E6F4F9691EEE",
      name: "Pundi X Token",
      display: "PUNDIX",
      symbol: "PUNDIX",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x0FD10b9899882a6f2fcb5c371E17e70FdEe00C38",
          contract: "0x0FD10b9899882a6f2fcb5c371E17e70FdEe00C38"
        },
        provider: "Function X"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "fxcore",
          base_denom: "eth0x0FD10b9899882a6f2fcb5c371E17e70FdEe00C38",
          channel_id: "channel-19"
        },
        chain: {
          channel_id: "channel-2716",
          path: "transfer/channel-2716/eth0x0FD10b9899882a6f2fcb5c371E17e70FdEe00C38"
        }
      }],
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pundix.png"
      }]
    },
    {
      description: "The native fee, governance and staking token of the Tinkernet Parachain.",
      denom_units: [{
        denom: "ibc/3A0A392E610A8D477851ABFEA74F3D828F36C015AB8E93B0FBB7566A6D13C4D6",
        exponent: 0,
        aliases: ["2125", "ibc/C58E5D2571042137CB68B1B9851C4E7211C05F7C2C79E21E0966AF0F063961F8"]
      }, {
        denom: "tnkr",
        exponent: 12
      }],
      type_asset: "ics20",
      base: "ibc/3A0A392E610A8D477851ABFEA74F3D828F36C015AB8E93B0FBB7566A6D13C4D6",
      name: "Tinkernet",
      display: "tnkr",
      symbol: "TNKR",
      traces: [
        {
          type: "bridge",
          counterparty: {
            chain_name: "tinkernet",
            base_denom: "Planck"
          },
          provider: "Tinkernet Parachain"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "picasso",
            base_denom: "2125",
            channel_id: "channel-17"
          },
          chain: {
            channel_id: "channel-2",
            path: "transfer/channel-2/2125"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composable",
            base_denom: "ibc/C58E5D2571042137CB68B1B9851C4E7211C05F7C2C79E21E0966AF0F063961F8",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-1279",
            path: "transfer/channel-1279/transfer/channel-2/2125"
          }
        }
      ],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/tinkernet/images/tnkr.svg"
      },
      images: [{
        image_sync: {
          chain_name: "composable",
          base_denom: "ibc/C58E5D2571042137CB68B1B9851C4E7211C05F7C2C79E21E0966AF0F063961F8"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/tinkernet/images/tnkr.svg"
      }]
    },
    {
      description: "W is the native token powering the Wormhole interoperability platform.",
      denom_units: [{
        denom: "ibc/AC6EE43E608B5A7EEE460C960480BC1C3708010E32B2071C429DA259836E10C3",
        exponent: 0,
        aliases: ["factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/2Wb6ueMFc9WLc2eyYVha6qnwHKbwzUXdooXsg6XXVvos"]
      }, {
        denom: "w",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/AC6EE43E608B5A7EEE460C960480BC1C3708010E32B2071C429DA259836E10C3",
      name: "Wormhole Token",
      display: "w",
      symbol: "W",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "solana",
          base_denom: "85VBFQZC9TZkfaptBWjvUw7YbZjy52A6mjtPGjstQAmQ"
        },
        provider: "Wormhole"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "gateway",
          base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/2Wb6ueMFc9WLc2eyYVha6qnwHKbwzUXdooXsg6XXVvos",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-2186",
          path: "transfer/channel-2186/factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/2Wb6ueMFc9WLc2eyYVha6qnwHKbwzUXdooXsg6XXVvos"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/w.png"
      },
      images: [{
        image_sync: {
          chain_name: "gateway",
          base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/2Wb6ueMFc9WLc2eyYVha6qnwHKbwzUXdooXsg6XXVvos"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/w.png"
      }]
    },
    {
      description: "The native token of dHealth",
      denom_units: [{
        denom: "ibc/FD506CCA1FC574F2A8175FB574C981E9F6351E194AA48AC219BD67FF934E2F33",
        exponent: 0,
        aliases: ["udhp"]
      }, {
        denom: "dhp",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/FD506CCA1FC574F2A8175FB574C981E9F6351E194AA48AC219BD67FF934E2F33",
      name: "dHealth",
      display: "dhp",
      symbol: "DHP",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "dhealth",
          base_denom: "udhp",
          channel_id: "channel-4"
        },
        chain: {
          channel_id: "channel-75030",
          path: "transfer/channel-75030/udhp"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "dhealth",
          base_denom: "udhp"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dhealth/images/dhp.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dhealth/images/dhp.svg"
      }]
    },
    {
      description: "The native token of Furya",
      denom_units: [{
        denom: "ibc/E4C60B9F95BF54CC085A5E39F6057ABD4DF92793D330EB884A36530F7E6804DE",
        exponent: 0,
        aliases: ["ufury"]
      }, {
        denom: "fury",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/E4C60B9F95BF54CC085A5E39F6057ABD4DF92793D330EB884A36530F7E6804DE",
      name: "furya",
      display: "fury",
      symbol: "FURY",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "furya",
          base_denom: "ufury",
          channel_id: "channel-8"
        },
        chain: {
          channel_id: "channel-74222",
          path: "transfer/channel-74222/ufury"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "furya",
          base_denom: "ufury"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/furya/images/fury.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/furya/images/fury.svg"
      }],
      keywords: ["gaming", "staking"]
    },
    {
      description: "The native staking and governance token of Saga.",
      denom_units: [{
        denom: "ibc/094FB70C3006906F67F5D674073D2DAFAFB41537E7033098F5C752F211E7B6C2",
        exponent: 0,
        aliases: ["usaga"]
      }, {
        denom: "saga",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/094FB70C3006906F67F5D674073D2DAFAFB41537E7033098F5C752F211E7B6C2",
      name: "Saga",
      display: "saga",
      symbol: "SAGA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "saga",
          base_denom: "usaga",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-38946",
          path: "transfer/channel-38946/usaga"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.svg"
      },
      images: [{
        image_sync: {
          chain_name: "saga",
          base_denom: "usaga"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.svg",
        theme: {
          primary_color_hex: "#000000",
          dark_mode: false
        }
      }, {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga_white.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga_white.svg",
        theme: {
          primary_color_hex: "#FFFFFF",
          dark_mode: true
        }
      }]
    },
    {
      description: "$ATOM to $1,000 LFG!!",
      denom_units: [{
        denom: "ibc/0E77E090EC04C476DE2BC0A7056580AC47660DAEB7B0D4701C085E3A046AC7B7",
        exponent: 0,
        aliases: ["uatom1klfg", "factory/neutron13lkh47msw28yynspc5rnmty3yktk43wc3dsv0l/ATOM1KLFG"]
      }, {
        denom: "ATOM1KLFG",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/0E77E090EC04C476DE2BC0A7056580AC47660DAEB7B0D4701C085E3A046AC7B7",
      name: "ATOM1KLFG",
      display: "ATOM1KLFG",
      symbol: "ATOM1KLFG",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "neutron",
          base_denom: "factory/neutron13lkh47msw28yynspc5rnmty3yktk43wc3dsv0l/ATOM1KLFG",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-874",
          path: "transfer/channel-874/factory/neutron13lkh47msw28yynspc5rnmty3yktk43wc3dsv0l/ATOM1KLFG"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/ATOM1KLFGc.png"
      },
      images: [{
        image_sync: {
          chain_name: "neutron",
          base_denom: "factory/neutron13lkh47msw28yynspc5rnmty3yktk43wc3dsv0l/ATOM1KLFG"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/ATOM1KLFGc.png"
      }]
    },
    {
      description: "The native EVM and Wasm, governance and staking token of the Shido Chain",
      denom_units: [{
        denom: "ibc/62B50BB1DAEAD2A92D6C6ACAC118F4ED8CBE54265DCF5688E8D0A0A978AA46E7",
        exponent: 0,
        aliases: ["shido"]
      }, {
        denom: "SHIDO",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/62B50BB1DAEAD2A92D6C6ACAC118F4ED8CBE54265DCF5688E8D0A0A978AA46E7",
      name: "Shido",
      display: "SHIDO",
      symbol: "SHIDO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "shido",
          base_denom: "shido",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-73755",
          path: "transfer/channel-73755/shido"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "shido",
          base_denom: "shido"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shido/images/shido.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shido/images/shido.svg"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "Decentralized Machine Learning",
      denom_units: [{
        denom: "ibc/EFC1776BEFB7842F2DC7BABD9A3050E188145C99007ECC5F3526FED45A68D5F5",
        exponent: 0,
        aliases: ["ucif"]
      }, {
        denom: "cif",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/EFC1776BEFB7842F2DC7BABD9A3050E188145C99007ECC5F3526FED45A68D5F5",
      name: "Cifer",
      display: "cif",
      symbol: "CIF",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "cifer",
          base_denom: "ucif",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-39205",
          path: "transfer/channel-39205/ucif"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.svg"
      },
      images: [{
        image_sync: {
          chain_name: "cifer",
          base_denom: "ucif"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cifer/images/cif.svg"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "Hava Coin is the lifeblood of the Cosmos & Injective networks, rewarding builders and welcoming supporters. https://havacoin.xyz/",
      denom_units: [{
        denom: "ibc/884EBC228DFCE8F1304D917A712AA9611427A6C1ECC3179B2E91D7468FB091A2",
        exponent: 0,
        aliases: ["factory/inj1h0ypsdtjfcjynqu3m75z2zwwz5mmrj8rtk2g52/uhava"]
      }, {
        denom: "hava",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/884EBC228DFCE8F1304D917A712AA9611427A6C1ECC3179B2E91D7468FB091A2",
      name: "Hava Coin",
      display: "hava",
      symbol: "HAVA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "injective",
          base_denom: "factory/inj1h0ypsdtjfcjynqu3m75z2zwwz5mmrj8rtk2g52/uhava",
          channel_id: "channel-8"
        },
        chain: {
          channel_id: "channel-122",
          path: "transfer/channel-122/factory/inj1h0ypsdtjfcjynqu3m75z2zwwz5mmrj8rtk2g52/uhava"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/hava.png"
      },
      images: [{
        image_sync: {
          chain_name: "injective",
          base_denom: "factory/inj1h0ypsdtjfcjynqu3m75z2zwwz5mmrj8rtk2g52/uhava"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/hava.png"
      }]
    },
    {
      description: "OnE mEmEcOiN tO cOnNeCt oL ImBeCiles - aNd in Da Cosmos BiNd DeM",
      denom_units: [{
        denom: "factory/osmo1kqdw6pvn0xww6tyfv2sqvkkencdz0qw406x54r/IBC",
        exponent: 0
      }, {
        denom: "IBC",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      base: "factory/osmo1kqdw6pvn0xww6tyfv2sqvkkencdz0qw406x54r/IBC",
      name: "IBC",
      display: "IBC",
      symbol: "IBC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ibc.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ibc.png"
      }],
      keywords: ["memecoin", "osmosis_unlisted"],
      socials: {
        website: "https://www.ibcmeme.wtf",
        twitter: "https://twitter.com/IBCmemecoin"
      }
    },
    {
      description: "The token of Crowdpunk DAO",
      denom_units: [{
        denom: "ibc/B87F0F5255CC658408F167C2F7B987A8D914622E1F73BCC267406360588F2B1E",
        exponent: 0,
        aliases: ["erc20/0xfbf4318d24a93753f11d365a6dcf8b830e98ab0f"]
      }, {
        denom: "crowdp",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/B87F0F5255CC658408F167C2F7B987A8D914622E1F73BCC267406360588F2B1E",
      name: "Crowdpunk DAO",
      display: "crowdp",
      symbol: "CROWDP",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "evmos",
          base_denom: "erc20/0xfbf4318d24a93753f11d365a6dcf8b830e98ab0f",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-204",
          path: "transfer/channel-204/erc20/0xfbf4318d24a93753f11d365a6dcf8b830e98ab0f"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "evmos",
          base_denom: "erc20/0xfbf4318d24a93753f11d365a6dcf8b830e98ab0f"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/crowdp.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/evmos/images/crowdp.svg"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "Astroport is a neutral marketplace where anyone, from anywhere in the galaxy, can dock to trade their wares.",
      denom_units: [{
        denom: "ibc/B8C608CEE08C4F30A15A7955306F2EDAF4A02BB191CABC4185C1A57FD978DA1B",
        exponent: 0,
        aliases: ["uastro"]
      }, {
        denom: "astro",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/B8C608CEE08C4F30A15A7955306F2EDAF4A02BB191CABC4185C1A57FD978DA1B",
      name: "Astroport token",
      display: "astro",
      symbol: "ASTRO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "neutron",
          base_denom: "factory/neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07/astro",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-874",
          path: "transfer/channel-874/factory/neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07/astro"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.svg"
      },
      images: [{
        image_sync: {
          chain_name: "neutron",
          base_denom: "factory/neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07/astro"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.svg"
      }]
    },
    {
      description: "Astroport is a neutral marketplace where anyone, from anywhere in the galaxy, can dock to trade their wares.",
      denom_units: [{
        denom: "ibc/2ED09B03AA396BC2F35B741F4CA4A82D33A24A1007BFC1973299842DD626F564",
        exponent: 0,
        aliases: ["uxastro", "factory/neutron1zlf3hutsa4qnmue53lz2tfxrutp8y2e3rj4nkghg3rupgl4mqy8s5jgxsn/xASTRO"]
      }, {
        denom: "xASTRO",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/2ED09B03AA396BC2F35B741F4CA4A82D33A24A1007BFC1973299842DD626F564",
      name: "Staked Astroport Token",
      display: "xASTRO",
      symbol: "xASTRO",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "neutron",
          base_denom: "factory/neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07/astro"
        },
        provider: "Astroport"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "neutron",
          base_denom: "factory/neutron1zlf3hutsa4qnmue53lz2tfxrutp8y2e3rj4nkghg3rupgl4mqy8s5jgxsn/xASTRO",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-874",
          path: "transfer/channel-874/factory/neutron1zlf3hutsa4qnmue53lz2tfxrutp8y2e3rj4nkghg3rupgl4mqy8s5jgxsn/xASTRO"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/xAstro.svg"
      },
      images: [{
        image_sync: {
          chain_name: "neutron",
          base_denom: "factory/neutron1zlf3hutsa4qnmue53lz2tfxrutp8y2e3rj4nkghg3rupgl4mqy8s5jgxsn/xASTRO"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/xAstro.svg"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "Gravity Bridge Paxos Gold",
      denom_units: [{
        denom: "ibc/A5CCD24BA902843B1003A7EEE5F937C632808B9CF4925601241B15C5A0A51A53",
        exponent: 0,
        aliases: ["gravity0x45804880De22913dAFE09f4980848ECE6EcbAf78"]
      }, {
        denom: "gpaxg",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/A5CCD24BA902843B1003A7EEE5F937C632808B9CF4925601241B15C5A0A51A53",
      name: "Paxos Gold (Gravity Bridge)",
      display: "gpaxg",
      symbol: "PAXG.grv",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "comex",
            base_denom: "XAU"
          },
          provider: "Paxos"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0x45804880De22913dAFE09f4980848ECE6EcbAf78"
          },
          provider: "Gravity Bridge"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "gravitybridge",
            base_denom: "gravity0x45804880De22913dAFE09f4980848ECE6EcbAf78",
            channel_id: "channel-10"
          },
          chain: {
            channel_id: "channel-144",
            path: "transfer/channel-144/gravity0x45804880De22913dAFE09f4980848ECE6EcbAf78"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/paxg.grv.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/paxg.grv.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/paxg.grv.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/paxg.grv.svg"
      }, {
        image_sync: {
          chain_name: "gravitybridge",
          base_denom: "gravity0x45804880De22913dAFE09f4980848ECE6EcbAf78"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/paxg.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/paxg.svg"
      }]
    },
    {
      description: "Restake DAO Token",
      denom_units: [{
        denom: "ibc/04FAC73DFF7F1DD59395948F2F043B0BBF978AD4533EE37E811340F501A08FFB",
        exponent: 0,
        aliases: ["factory/migaloo1d0uma9qzcts4fzt7ml39xp44aut5k6qyjfzz4asalnecppppr3rsl52vvv/rstk"]
      }, {
        denom: "rstk",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/04FAC73DFF7F1DD59395948F2F043B0BBF978AD4533EE37E811340F501A08FFB",
      name: "RESTAKE",
      display: "rstk",
      symbol: "RSTK",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1d0uma9qzcts4fzt7ml39xp44aut5k6qyjfzz4asalnecppppr3rsl52vvv/rstk",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-642",
          path: "transfer/channel-642/factory/migaloo1d0uma9qzcts4fzt7ml39xp44aut5k6qyjfzz4asalnecppppr3rsl52vvv/rstk"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.svg"
      },
      images: [{
        image_sync: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1d0uma9qzcts4fzt7ml39xp44aut5k6qyjfzz4asalnecppppr3rsl52vvv/rstk"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.svg"
      }]
    },
    {
      description: "Bernese Mountain Dog. Thematic dog token to have fun and be friends with all other dog tokens. Fixed supply 132M",
      denom_units: [{
        denom: "factory/osmo1s6ht8qrm8x0eg8xag5x3ckx9mse9g4se248yss/BERNESE",
        exponent: 0
      }, {
        denom: "BERNESE",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo1s6ht8qrm8x0eg8xag5x3ckx9mse9g4se248yss",
      base: "factory/osmo1s6ht8qrm8x0eg8xag5x3ckx9mse9g4se248yss/BERNESE",
      name: "BERNESE",
      display: "BERNESE",
      symbol: "BERNESE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/bernese.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/bernese.png"
      }]
    },
    {
      description: "The native token of Ethereum, bridged via IBC.",
      denom_units: [{
        denom: "ibc/A23E590BA7E0D808706FB5085A449B3B9D6864AE4DDE7DAF936243CEBB2A3D43",
        exponent: 0,
        aliases: ["wei", "ibc/F9D075D4079FC56A9C49B601E54A45292C319D8B0E8CC0F8439041130AA7166C"]
      }, {
        denom: "eth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/A23E590BA7E0D808706FB5085A449B3B9D6864AE4DDE7DAF936243CEBB2A3D43",
      name: "Ethereum",
      display: "eth",
      symbol: "ETH.pica",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "wei",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/wei"
        }
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "composable",
          base_denom: "ibc/F9D075D4079FC56A9C49B601E54A45292C319D8B0E8CC0F8439041130AA7166C",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-1279",
          path: "transfer/channel-1279/transfer/channel-52/wei"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "wei"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.png"
      }]
    },
    {
      description: "A stablecoin issued by Maker Protocol.",
      denom_units: [{
        denom: "ibc/37DFAFDA529FF7D513B0DB23E9728DF9BF73122D38D46824C78BB7F91E6A736B",
        exponent: 0,
        aliases: ["dai-wei", "ibc/A342F6F8D1CDE1D934C50E8EAFF91E813D971E1BFEED7E557F1674E01004A533"]
      }, {
        denom: "dai",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/37DFAFDA529FF7D513B0DB23E9728DF9BF73122D38D46824C78BB7F91E6A736B",
      name: "Dai",
      display: "dai",
      symbol: "DAI.pica",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "MakerDAO"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0x6b175474e89094c44da98b954eedeac495271d0f",
            channel_id: "channel-2"
          },
          chain: {
            channel_id: "channel-52",
            path: "transfer/channel-52/0x6b175474e89094c44da98b954eedeac495271d0f"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composable",
            base_denom: "ibc/A342F6F8D1CDE1D934C50E8EAFF91E813D971E1BFEED7E557F1674E01004A533",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-1279",
            path: "transfer/channel-1279/transfer/channel-52/0x6b175474e89094c44da98b954eedeac495271d0f"
          }
        }
      ],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x6b175474e89094c44da98b954eedeac495271d0f"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/dai.svg"
      }]
    },
    {
      description: "The governance token of the Frax ecosystem.",
      denom_units: [{
        denom: "ibc/5435437A8C9416B650DDA49C338B63CCFC6465123B715F6BAA9B1B2071E27913",
        exponent: 0,
        aliases: ["fxs-wei", "ibc/5F9BE030FC355733EC79307409FA98398BBFC747C9430B326C144A74F6808B29"]
      }, {
        denom: "fxs",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/5435437A8C9416B650DDA49C338B63CCFC6465123B715F6BAA9B1B2071E27913",
      name: "Frax Shares",
      display: "fxs",
      symbol: "FXS.pica",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0"
        }
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "composable",
          base_denom: "ibc/5F9BE030FC355733EC79307409FA98398BBFC747C9430B326C144A74F6808B29",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-1279",
          path: "transfer/channel-1279/transfer/channel-52/0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/fxs.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/fxs.png"
      }]
    },
    {
      description: "The first fractional-algorithmic stablecoin by Frax Finance.",
      denom_units: [{
        denom: "ibc/9A8CBC029002DC5170E715F93FBF35011FFC9796371F59B1F3C3094AE1B453A9",
        exponent: 0,
        aliases: ["frax-wei", "ibc/4F20D68B51ED559F99C3CD658383E91F45486D884BF546E7B25337A058562CDB"]
      }, {
        denom: "frax",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/9A8CBC029002DC5170E715F93FBF35011FFC9796371F59B1F3C3094AE1B453A9",
      name: "Frax",
      display: "frax",
      symbol: "FRAX.pica",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Frax Protocol"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0x853d955acef822db058eb8505911ed77f175b99e",
            channel_id: "channel-2"
          },
          chain: {
            channel_id: "channel-52",
            path: "transfer/channel-52/0x853d955acef822db058eb8505911ed77f175b99e"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composable",
            base_denom: "ibc/4F20D68B51ED559F99C3CD658383E91F45486D884BF546E7B25337A058562CDB",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-1279",
            path: "transfer/channel-1279/transfer/channel-52/0x853d955acef822db058eb8505911ed77f175b99e"
          }
        }
      ],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x853d955acef822db058eb8505911ed77f175b99e"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frax.svg"
      }]
    },
    {
      description: "A stablecoin issued by Tether that is pegged 1:1 to the USD.",
      denom_units: [{
        denom: "ibc/078AD6F581E8115CDFBD8FFA29D8C71AFE250CE952AFF80040CBC64868D44AD3",
        exponent: 0,
        aliases: ["uusdt", "ibc/37CC704EA53E96AB09A9C31D79142DE7DB252420F3AB18015F9870AE219947BD"]
      }, {
        denom: "usdt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/078AD6F581E8115CDFBD8FFA29D8C71AFE250CE952AFF80040CBC64868D44AD3",
      name: "Tether (Ethereum)",
      display: "usdt",
      symbol: "USDT.pica",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Tether"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7",
            channel_id: "channel-2"
          },
          chain: {
            channel_id: "channel-52",
            path: "transfer/channel-52/0xdac17f958d2ee523a2206206994597c13d831ec7"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composable",
            base_denom: "ibc/37CC704EA53E96AB09A9C31D79142DE7DB252420F3AB18015F9870AE219947BD",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-1279",
            path: "transfer/channel-1279/transfer/channel-52/0xdac17f958d2ee523a2206206994597c13d831ec7"
          }
        }
      ],
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdt.pica.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdt.pica.png"
      }, {
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }]
    },
    {
      description: "An ERC4626 staking vault that distributes part of the Frax Protocol yield weekly to stakers denominated in FRAX stablecoins. ",
      denom_units: [{
        denom: "ibc/0EFA07F312E05258A56AE1DD600E39B9151CF7A91C8A94EEBCF4F03ECFE5DD98",
        exponent: 0,
        aliases: ["sfrax-wei", "ibc/5BD7F23FE150D9CF3BCC944DB829380BCC51A4022A131151C4D13B3AFAC2D1D9"]
      }, {
        denom: "sfrax",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/0EFA07F312E05258A56AE1DD600E39B9151CF7A91C8A94EEBCF4F03ECFE5DD98",
      name: "Staked FRAX",
      display: "sfrax",
      symbol: "sFRAX.pica",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Frax Protocol"
        },
        {
          type: "liquid-stake",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0x853d955acef822db058eb8505911ed77f175b99e"
          },
          provider: "Frax"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xa663b02cf0a4b149d2ad41910cb81e23e1c41c32",
            channel_id: "channel-2"
          },
          chain: {
            channel_id: "channel-52",
            path: "transfer/channel-52/0xa663b02cf0a4b149d2ad41910cb81e23e1c41c32"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composable",
            base_denom: "ibc/5BD7F23FE150D9CF3BCC944DB829380BCC51A4022A131151C4D13B3AFAC2D1D9",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-1279",
            path: "transfer/channel-1279/transfer/channel-52/0xa663b02cf0a4b149d2ad41910cb81e23e1c41c32"
          }
        }
      ],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xa663b02cf0a4b149d2ad41910cb81e23e1c41c32"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sfrax.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sfrax.png"
      }]
    },
    {
      description: "A liquid ETH staking derivative designed to leverage the Frax ecosystem.",
      denom_units: [{
        denom: "ibc/688E70EF567E5D4BA1CF4C54BAD758C288BC1A6C8B0B12979F911A2AE95E27EC",
        exponent: 0,
        aliases: ["frxeth-wei", "ibc/458032E654E41DB91EF98F13E2CE4F9E0FE86BA3E0CDBEC074A854E9F5229A90"]
      }, {
        denom: "frxeth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/688E70EF567E5D4BA1CF4C54BAD758C288BC1A6C8B0B12979F911A2AE95E27EC",
      name: "Frax Ether",
      display: "frxeth",
      symbol: "frxETH.pica",
      traces: [
        {
          type: "liquid-stake",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "wei"
          },
          provider: "Frax"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0x5e8422345238f34275888049021821e8e08caa1f",
            channel_id: "channel-2"
          },
          chain: {
            channel_id: "channel-52",
            path: "transfer/channel-52/0x5e8422345238f34275888049021821e8e08caa1f"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composable",
            base_denom: "ibc/458032E654E41DB91EF98F13E2CE4F9E0FE86BA3E0CDBEC074A854E9F5229A90",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-1279",
            path: "transfer/channel-1279/transfer/channel-52/0x5e8422345238f34275888049021821e8e08caa1f"
          }
        }
      ],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x5e8422345238f34275888049021821e8e08caa1f"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frxeth.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frxeth.png"
      }]
    },
    {
      description: "A Liquid Staking Derivative designed to accrue the staking yield of the Frax ETH validators.",
      denom_units: [{
        denom: "ibc/F17CCB4F07948CC2D8B72952C2D0A84F2B763962F698774BB121B872AE4611B5",
        exponent: 0,
        aliases: ["sfrxeth-wei", "ibc/4E0ECE7819D77B0F2B49F5C34B5E594A02D2BA8B1B0F103208F847B53EBFB69A"]
      }, {
        denom: "sfrxeth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/F17CCB4F07948CC2D8B72952C2D0A84F2B763962F698774BB121B872AE4611B5",
      name: "Frax Staked Ether",
      display: "sfrxeth",
      symbol: "sfrxETH.pica",
      traces: [
        {
          type: "liquid-stake",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "wei"
          },
          provider: "Frax"
        },
        {
          type: "wrapped",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0x5e8422345238f34275888049021821e8e08caa1f"
          },
          provider: "Frax"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xac3e018457b222d93114458476f3e3416abbe38f",
            channel_id: "channel-2"
          },
          chain: {
            channel_id: "channel-52",
            path: "transfer/channel-52/0xac3e018457b222d93114458476f3e3416abbe38f"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composable",
            base_denom: "ibc/4E0ECE7819D77B0F2B49F5C34B5E594A02D2BA8B1B0F103208F847B53EBFB69A",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-1279",
            path: "transfer/channel-1279/transfer/channel-52/0xac3e018457b222d93114458476f3e3416abbe38f"
          }
        }
      ],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xac3e018457b222d93114458476f3e3416abbe38f"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sfrxeth.svg"
      }]
    },
    {
      description: "Adam Clay a BitSong Music FanToken",
      denom_units: [{
        denom: "ibc/7ABF696369EFB3387DF22B6A24204459FE5EFD010220E8E5618DC49DB877047B",
        exponent: 0,
        aliases: ["ft2D8E7041556CE93E1EFD66C07C45D551A6AAAE09"]
      }, {
        denom: "clay",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/7ABF696369EFB3387DF22B6A24204459FE5EFD010220E8E5618DC49DB877047B",
      name: "Adam Clay FanToken",
      display: "clay",
      symbol: "CLAY",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "bitsong",
          base_denom: "ft2D8E7041556CE93E1EFD66C07C45D551A6AAAE09",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-73",
          path: "transfer/channel-73/ft2D8E7041556CE93E1EFD66C07C45D551A6AAAE09"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "bitsong",
          base_denom: "ft2D8E7041556CE93E1EFD66C07C45D551A6AAAE09"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft2D8E7041556CE93E1EFD66C07C45D551A6AAAE09.png"
      }]
    },
    {
      description: "404Deep Records a BitSong Music FanToken",
      denom_units: [{
        denom: "ibc/B797E4F42CD33C50511B341E50C5CC0E8EF0D93B1E1247ABAA071583B8619202",
        exponent: 0,
        aliases: ["ft99091610CCC66F4277C66D14AF2BC4C5EE52E27A"]
      }, {
        denom: "404dr",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/B797E4F42CD33C50511B341E50C5CC0E8EF0D93B1E1247ABAA071583B8619202",
      name: "404Deep Records Fantoken",
      display: "404dr",
      symbol: "404DR",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "bitsong",
          base_denom: "ft99091610CCC66F4277C66D14AF2BC4C5EE52E27A",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-73",
          path: "transfer/channel-73/ft99091610CCC66F4277C66D14AF2BC4C5EE52E27A"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "bitsong",
          base_denom: "ft99091610CCC66F4277C66D14AF2BC4C5EE52E27A"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft99091610CCC66F4277C66D14AF2BC4C5EE52E27A.png"
      }]
    },
    {
      description: "wLibra is a bridged version of Libra Coin from 0L Network via LibraBridge.",
      extended_description: "Libra Coin is a fork from Facebook's Diem (Libra) blockchain that was announced in 2019. Libra Coin operates on its own high-performance Layer 1 blockchain, known as the 0L Network. In October 2021, Libra Coin began mining.\n\n Like Bitcoin, there were no pre-mined coins or dedicated token allocation to any parties; all coins were minted through a mining process. Unlike Bitcoin, which undergoes continuous issuance, Libra Coin has a fixed supply. By December 2023, all the Libra Coin had been issued, establishing a capped supply and making the coin permanently deflationary.\n\n Fiercely independent, the project has a long-term view because it is unburdened by venture capital funding, labs entities, a foundation, and the influence of other blockchain ecosystems. Carpe diem.",
      denom_units: [{
        denom: "factory/osmo19hdqma2mj0vnmgcxag6ytswjnr8a3y07q7e70p/wLIBRA",
        exponent: 0
      }, {
        denom: "wLIBRA",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo19hdqma2mj0vnmgcxag6ytswjnr8a3y07q7e70p",
      base: "factory/osmo19hdqma2mj0vnmgcxag6ytswjnr8a3y07q7e70p/wLIBRA",
      name: "Wrapped Libra Coin (LibraBridge)",
      display: "wLIBRA",
      symbol: "wLIBRA",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "0l",
          base_denom: "microlibra"
        },
        provider: "LibraBridge"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/0l/images/libra.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/0l/images/libra.svg"
      },
      images: [{
        image_sync: {
          chain_name: "0l",
          base_denom: "microlibra"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/0l/images/libra.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/0l/images/libra.png"
      }],
      socials: {
        website: "https://0l.network/",
        twitter: "https://twitter.com/0LNetwork"
      }
    },
    {
      description: "The native token of Nim Network.",
      extended_description: "Nim Network is a highly-adoptable AI Gaming chain that will provide the ultimate ecosystem for exploration and development of games at the intersection of Web3 and AI.",
      denom_units: [{
        denom: "ibc/279D69A6EF8E37456C8D2DC7A7C1C50F7A566EC4758F6DE17472A9FDE36C4426",
        exponent: 0,
        aliases: ["anim", "ibc/FB53D1684F155CBB86D9CE917807E42B59209EBE3AD3A92E15EF66586C073942"]
      }, {
        denom: "nim",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/279D69A6EF8E37456C8D2DC7A7C1C50F7A566EC4758F6DE17472A9FDE36C4426",
      name: "Nim Network",
      display: "nim",
      symbol: "NIM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "nim",
          base_denom: "anim",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-49",
          path: "transfer/channel-49/anim"
        }
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "dymension",
          base_denom: "ibc/FB53D1684F155CBB86D9CE917807E42B59209EBE3AD3A92E15EF66586C073942",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-19774",
          path: "transfer/channel-19774/transfer/channel-49/anim"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nim/images/nim.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nim/images/nim.svg"
      },
      images: [{
        image_sync: {
          chain_name: "dymension",
          base_denom: "ibc/FB53D1684F155CBB86D9CE917807E42B59209EBE3AD3A92E15EF66586C073942"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nim/images/nim.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nim/images/nim.svg"
      }],
      keywords: [
        "gaming",
        "AI",
        "osmosis_unstable"
      ],
      socials: {
        website: "https://ai.nim.network/",
        twitter: "https://twitter.com/nim_network"
      }
    },
    {
      description: "The native token of SEDA Chain.",
      denom_units: [{
        denom: "ibc/956AEF1DA92F70584266E87978C3F30A43B91EE6ABC62F03D097E79F6B99C4D8",
        exponent: 0,
        aliases: ["aseda"]
      }, {
        denom: "seda",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/956AEF1DA92F70584266E87978C3F30A43B91EE6ABC62F03D097E79F6B99C4D8",
      name: "SEDA",
      display: "seda",
      symbol: "SEDA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "seda",
          base_denom: "aseda",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-75016",
          path: "transfer/channel-75016/aseda"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "seda",
          base_denom: "aseda"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/seda/images/seda.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/seda/images/seda.svg"
      }]
    },
    {
      description: "Cosmos Airdrop Chat",
      extended_description: "Official Token of the Cosmos Airdrop community",
      denom_units: [{
        denom: "factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/cac",
        exponent: 0
      }, {
        denom: "CAC",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8",
      base: "factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/cac",
      name: "Cosmos Airdrop Chat",
      display: "CAC",
      symbol: "CAC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/CAC.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/CAC.png"
      }]
    },
    {
      description: "WEIRD token for WEIRD friends collection",
      denom_units: [{
        denom: "ibc/38ADC6FFDDDB7D70B72AD0322CEA8844CB18FAA0A23400DBA8A99D43E18B3748",
        exponent: 0,
        aliases: ["uWEIRD"]
      }, {
        denom: "WEIRD",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/38ADC6FFDDDB7D70B72AD0322CEA8844CB18FAA0A23400DBA8A99D43E18B3748",
      name: "WEIRD",
      display: "WEIRD",
      symbol: "WEIRD",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "neutron",
          base_denom: "factory/neutron133xakkrfksq39wxy575unve2nyehg5npx75nph/WEIRD",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-874",
          path: "transfer/channel-874/factory/neutron133xakkrfksq39wxy575unve2nyehg5npx75nph/WEIRD"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/WEIRD.png"
      },
      images: [{
        image_sync: {
          chain_name: "neutron",
          base_denom: "factory/neutron133xakkrfksq39wxy575unve2nyehg5npx75nph/WEIRD"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/WEIRD.png"
      }]
    },
    {
      description: "Uhm, Power Bottom",
      denom_units: [{
        denom: "factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/pbb",
        exponent: 0
      }, {
        denom: "PBB",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8",
      base: "factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/pbb",
      name: "Power Bottom",
      display: "PBB",
      symbol: "PBB",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/PBB.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/PBB.png"
      }]
    },
    {
      description: "Beer Is Good for You!",
      denom_units: [{
        denom: "factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/bwh",
        exponent: 0
      }, {
        denom: "bwh",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8",
      base: "factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/bwh",
      name: "BeerWifHat",
      display: "bwh",
      symbol: "BWH",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/BWH.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/BWH.png"
      }]
    },
    {
      description: "Airdrop For All [AFA - New Name on Cosmos Ecosystem, A4A - Old Name on TurtleNetwork] is a token from turtleNetwork towards cosmos ecosystem.",
      denom_units: [{
        denom: "ibc/0D62E47FDEBBC199D4E1853C0708F0F9337AC62D95B719585C9700E466060995",
        exponent: 0,
        aliases: ["cw20:juno1spjes0smg5yp40dl7gqyw0h8rn03tnmve06dd2m5acwgh6tlx86swha3xg"]
      }],
      type_asset: "ics20",
      base: "ibc/0D62E47FDEBBC199D4E1853C0708F0F9337AC62D95B719585C9700E466060995",
      name: "Airdrop For All",
      display: "cw20:juno1spjes0smg5yp40dl7gqyw0h8rn03tnmve06dd2m5acwgh6tlx86swha3xg",
      symbol: "AFA",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1spjes0smg5yp40dl7gqyw0h8rn03tnmve06dd2m5acwgh6tlx86swha3xg",
          port: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn",
          channel_id: "channel-47"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-169",
          path: "transfer/channel-169/cw20:juno1spjes0smg5yp40dl7gqyw0h8rn03tnmve06dd2m5acwgh6tlx86swha3xg"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1spjes0smg5yp40dl7gqyw0h8rn03tnmve06dd2m5acwgh6tlx86swha3xg"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/afa.png"
      }]
    },
    {
      description: "The Cosmos Network's premier self-hatred memecoin.",
      extended_description: "Shitmos is a fair launched token deployed via the start.cooking liquidity bootstrapping protocol (LBP) on the Osmosis blockchain. It is powered by the Shitmos Economic Zone (SEZ), and it has been designed with the goal of uniting the Cosmos Network and interchain-at-large ecosystems by making crypto fun. The SEZ is a federation of nft collections on Stargaze that supports Shitmos by providing at least 2% of royalties towards open market purchases of Shitmos.",
      denom_units: [{
        denom: "factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/shitmos",
        exponent: 0
      }, {
        denom: "SHITMOS",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8",
      base: "factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/shitmos",
      name: "Shitmos",
      display: "SHITMOS",
      symbol: "SHITMOS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/shitmos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/shitmos.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/shitmos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/shitmos.svg",
        theme: {
          primary_color_hex: "#639BFF",
          circle: true
        }
      }],
      keywords: ["memecoin"],
      socials: {
        website: "https://shitmos.wtf",
        twitter: "https://twitter.com/shitoncosmos"
      }
    },
    {
      description: "Quicksilver Liquid Staked JUNO",
      denom_units: [{
        denom: "ibc/B4E18E61E1505C2F371B621E49B09E983F6A138F251A7B5286A6BDF739FD0D54",
        exponent: 0,
        aliases: ["uqjuno"]
      }, {
        denom: "qjuno",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/B4E18E61E1505C2F371B621E49B09E983F6A138F251A7B5286A6BDF739FD0D54",
      name: "Quicksilver Liquid Staked JUNO",
      display: "qjuno",
      symbol: "qJUNO",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "juno",
          base_denom: "ujuno"
        },
        provider: "Quicksilver"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "quicksilver",
          base_denom: "uqjuno",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-522",
          path: "transfer/channel-522/uqjuno"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qjuno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qjuno.svg"
      },
      images: [{
        image_sync: {
          chain_name: "quicksilver",
          base_denom: "uqjuno"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qjuno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qjuno.svg"
      }]
    },
    {
      description: "Quicksilver Liquid Staked SAGA",
      denom_units: [{
        denom: "ibc/F2D400F2728E9DA06EAE2AFAB289931A69EDDA5A661578C66A3177EDFE3C0D13",
        exponent: 0,
        aliases: ["uqsaga"]
      }, {
        denom: "qsaga",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/F2D400F2728E9DA06EAE2AFAB289931A69EDDA5A661578C66A3177EDFE3C0D13",
      name: "Quicksilver Liquid Staked SAGA",
      display: "qsaga",
      symbol: "qSAGA",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "saga",
          base_denom: "usaga"
        },
        provider: "Quicksilver"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "quicksilver",
          base_denom: "uqsaga",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-522",
          path: "transfer/channel-522/uqsaga"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qsaga.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qsaga.svg"
      },
      images: [{
        image_sync: {
          chain_name: "quicksilver",
          base_denom: "uqsaga"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qsaga.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qsaga.svg"
      }]
    },
    {
      description: "Quicksilver Liquid Staked DYDX",
      denom_units: [{
        denom: "ibc/273C593E51ACE56F1F2BDB3E03A5CB81BB208B894BCAA642676A32C3454E8C27",
        exponent: 0,
        aliases: ["aqdydx"]
      }, {
        denom: "qdydx",
        exponent: 18,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/273C593E51ACE56F1F2BDB3E03A5CB81BB208B894BCAA642676A32C3454E8C27",
      name: "Quicksilver Liquid Staked DYDX",
      display: "qdydx",
      symbol: "qDYDX",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "dydx",
          base_denom: "adydx"
        },
        provider: "Quicksilver"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "quicksilver",
          base_denom: "aqdydx",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-522",
          path: "transfer/channel-522/aqdydx"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qdydx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qdydx.svg"
      },
      images: [{
        image_sync: {
          chain_name: "quicksilver",
          base_denom: "aqdydx"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qdydx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qdydx.svg"
      }]
    },
    {
      description: "Quicksilver Liquid Staked BLD",
      denom_units: [{
        denom: "ibc/C1C106D915C8E8C59E5DC69BF30FEF64729A6F788060B184C86A315DBB762EF7",
        exponent: 0,
        aliases: ["uqbld"]
      }, {
        denom: "qbld",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/C1C106D915C8E8C59E5DC69BF30FEF64729A6F788060B184C86A315DBB762EF7",
      name: "Quicksilver Liquid Staked BLD",
      display: "qbld",
      symbol: "qBLD",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "agoric",
          base_denom: "ubld"
        },
        provider: "Quicksilver"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "quicksilver",
          base_denom: "uqbld",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-522",
          path: "transfer/channel-522/uqbld"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qbld.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qbld.svg"
      },
      images: [{
        image_sync: {
          chain_name: "quicksilver",
          base_denom: "uqbld"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qbld.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qbld.svg"
      }]
    },
    {
      description: "PEPE is a deflationary memecoin launched on Ethereum. ",
      denom_units: [{
        denom: "ibc/5B5BFCC8A9F0D554A4245117F7798E85BE25B6C73DBFA2D6F369BD9DD6CACC6D",
        exponent: 0,
        aliases: ["pepe-wei", "ibc/6367C5AF2E2477FB13DD0C8CB0027FEDDF5AE947EE84C69FB75003E604E29D05"]
      }, {
        denom: "pepe",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/5B5BFCC8A9F0D554A4245117F7798E85BE25B6C73DBFA2D6F369BD9DD6CACC6D",
      name: "Pepe",
      display: "pepe",
      symbol: "PEPE.pica",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x6982508145454Ce325dDbE47a25d4ec3d2311933",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0x6982508145454ce325ddbe47a25d4ec3d2311933"
        }
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "composable",
          base_denom: "ibc/6367C5AF2E2477FB13DD0C8CB0027FEDDF5AE947EE84C69FB75003E604E29D05",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-1279",
          path: "transfer/channel-1279/transfer/channel-52/0x6982508145454ce325ddbe47a25d4ec3d2311933"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x6982508145454Ce325dDbE47a25d4ec3d2311933"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pepe.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pepe.png"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "CRV is the governance token for Curve Finance.",
      denom_units: [{
        denom: "ibc/080CE38C1E49595F2199E88BE7281F93FAEEF3FE354EECED0640625E8311C9CF",
        exponent: 0,
        aliases: ["crv-wei", "ibc/52C8C6197989684F891076F228F20CD1659AB6E1776E3B85E65CBBEC67DA5DED"]
      }, {
        denom: "crv",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/080CE38C1E49595F2199E88BE7281F93FAEEF3FE354EECED0640625E8311C9CF",
      name: "Curve DAO",
      display: "crv",
      symbol: "CRV.pica",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xd533a949740bb3306d119cc777fa900ba034cd52",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0xd533a949740bb3306d119cc777fa900ba034cd52"
        }
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "composable",
          base_denom: "ibc/52C8C6197989684F891076F228F20CD1659AB6E1776E3B85E65CBBEC67DA5DED",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-1279",
          path: "transfer/channel-1279/transfer/channel-52/0x2260fac5e5542a773aa44fbcfedf7c193bc2c599"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xd533a949740bb3306d119cc777fa900ba034cd52"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/crv.png"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "A Liquid Restaking Token (LRT) and Strategy Manager for EigenLayer.",
      denom_units: [{
        denom: "ibc/39AAE0F5F918B731BEF1E02E9BAED33C242805F668B0A941AC509FB569FE51CB",
        exponent: 0,
        aliases: ["ezeth-wei", "ibc/0247E0E2C174135AADF4EA172D97FF5C15A64689A403E83603EAE4F0616DD365"]
      }, {
        denom: "ezeth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/39AAE0F5F918B731BEF1E02E9BAED33C242805F668B0A941AC509FB569FE51CB",
      name: "Renzo Restaked ETH",
      display: "ezeth",
      symbol: "ezETH.pica",
      traces: [
        {
          type: "liquid-stake",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "wei"
          },
          provider: "Renzo"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xbf5495efe5db9ce00f80364c8b423567e58d2110",
            channel_id: "channel-2"
          },
          chain: {
            channel_id: "channel-52",
            path: "transfer/channel-52/0xbf5495efe5db9ce00f80364c8b423567e58d2110"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composable",
            base_denom: "ibc/0247E0E2C174135AADF4EA172D97FF5C15A64689A403E83603EAE4F0616DD365",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-1279",
            path: "transfer/channel-1279/transfer/channel-52/0xbf5495efe5db9ce00f80364c8b423567e58d2110"
          }
        }
      ],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xbf5495efe5db9ce00f80364c8b423567e58d2110"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ezeth.png"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "Ethena USDe is a synthetic dollar protocol built on Ethereum.",
      denom_units: [{
        denom: "ibc/BFFE212A23384C4EB055CF6F95A1F5EC1BE0F9BD286FAA66C3748F0444E67D63",
        exponent: 0,
        aliases: ["usde-wei", "ibc/FFD9EB71B4480ED4D73F7370A2AEBDB48447A0AAE27265F8060A957F0FF71983"]
      }, {
        denom: "usde",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/BFFE212A23384C4EB055CF6F95A1F5EC1BE0F9BD286FAA66C3748F0444E67D63",
      name: "Ethena USDe",
      display: "usde",
      symbol: "USDe.pica",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Ethena"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0x4c9edd5852cd905f086c759e8383e09bff1e68b3",
            channel_id: "channel-2"
          },
          chain: {
            channel_id: "channel-52",
            path: "transfer/channel-52/0x4c9edd5852cd905f086c759e8383e09bff1e68b3"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composable",
            base_denom: "ibc/FFD9EB71B4480ED4D73F7370A2AEBDB48447A0AAE27265F8060A957F0FF71983",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-1279",
            path: "transfer/channel-1279/transfer/channel-52/0x4c9edd5852cd905f086c759e8383e09bff1e68b3"
          }
        }
      ],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x4c9edd5852cd905f086c759e8383e09bff1e68b3"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usde.png"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "The native governance token of Ethena.",
      denom_units: [{
        denom: "ibc/257FF64F160106F6EE43CEE7C761DA64C1346221895373CC810FFA1BFAC5A7CD",
        exponent: 0,
        aliases: ["ena-wei", "ibc/B089810D5A6316AD5E9C7808733DC4AB11C7BA3033221D28711FC7206BACB929"]
      }, {
        denom: "ena",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/257FF64F160106F6EE43CEE7C761DA64C1346221895373CC810FFA1BFAC5A7CD",
      name: "Ethena",
      display: "ena",
      symbol: "ENA.pica",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x57e114b691db790c35207b2e685d4a43181e6061",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-52",
          path: "transfer/channel-52/0x57e114b691db790c35207b2e685d4a43181e6061"
        }
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "composable",
          base_denom: "ibc/B089810D5A6316AD5E9C7808733DC4AB11C7BA3033221D28711FC7206BACB929",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-1279",
          path: "transfer/channel-1279/transfer/channel-52/0x57e114b691db790c35207b2e685d4a43181e6061"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x57e114b691db790c35207b2e685d4a43181e6061"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ena.png"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "eETH is a natively restaked liquid staking token on Ethereum.",
      denom_units: [{
        denom: "ibc/8D0FFEA4EDB04E3C1738C9599B66AE49683E0540FC4C1214AC84534C200D818B",
        exponent: 0,
        aliases: ["eeth-wei", "ibc/34C23BA6BAA2EAE0199D85AD1E2E214F76B0BFAD42BF75542D15F71264EEB05B"]
      }, {
        denom: "eeth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/8D0FFEA4EDB04E3C1738C9599B66AE49683E0540FC4C1214AC84534C200D818B",
      name: "ether.fi Staked ETH",
      display: "eeth",
      symbol: "eETH.pica",
      traces: [
        {
          type: "liquid-stake",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "wei"
          },
          provider: "EtherFi"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0x35fa164735182de50811e8e2e824cfb9b6118ac2",
            channel_id: "channel-2"
          },
          chain: {
            channel_id: "channel-52",
            path: "transfer/channel-52/0x35fa164735182de50811e8e2e824cfb9b6118ac2"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composable",
            base_denom: "ibc/34C23BA6BAA2EAE0199D85AD1E2E214F76B0BFAD42BF75542D15F71264EEB05B",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-1279",
            path: "transfer/channel-1279/transfer/channel-52/0x35fa164735182de50811e8e2e824cfb9b6118ac2"
          }
        }
      ],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x35fa164735182de50811e8e2e824cfb9b6118ac2"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eeth.png"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "pxETH is built on top of the Pirex platform and forms the foundation of the Dinero protocol.",
      denom_units: [{
        denom: "ibc/D09BB89B2187EF13EF006B44510749B0F02FD0B34F8BB55C70D812A1FF6148C7",
        exponent: 0,
        aliases: ["pxeth-wei", "ibc/36EF1EA47A09689C81D848B08E5240FA9FF13B17DB7DCF48B77D4D0D9B152821"]
      }, {
        denom: "pxeth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/D09BB89B2187EF13EF006B44510749B0F02FD0B34F8BB55C70D812A1FF6148C7",
      name: "Dinero Staked ETH",
      display: "pxeth",
      symbol: "pxETH.pica",
      traces: [
        {
          type: "liquid-stake",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "wei"
          },
          provider: "Dinero"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0x04c154b66cb340f3ae24111cc767e0184ed00cc6",
            channel_id: "channel-2"
          },
          chain: {
            channel_id: "channel-52",
            path: "transfer/channel-52/0x04c154b66cb340f3ae24111cc767e0184ed00cc6"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composable",
            base_denom: "ibc/36EF1EA47A09689C81D848B08E5240FA9FF13B17DB7DCF48B77D4D0D9B152821",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-1279",
            path: "transfer/channel-1279/transfer/channel-52/0x04c154b66cb340f3ae24111cc767e0184ed00cc6"
          }
        }
      ],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x04c154b66cb340f3ae24111cc767e0184ed00cc6"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pxeth.png"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "A collateralized-debt-position (CDP) stablecoin by Curve DAO.",
      denom_units: [{
        denom: "ibc/63551E7BB24008F0AFC1CB051A423A5104F781F035F8B1A191264B7086A0A0F6",
        exponent: 0,
        aliases: ["crvusd-wei", "ibc/C9D79BE8E3E75CA2DFDC722C77D7B179C39A4802D59019C790A825FDE34B724A"]
      }, {
        denom: "crvusd",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/63551E7BB24008F0AFC1CB051A423A5104F781F035F8B1A191264B7086A0A0F6",
      name: "crvUSD",
      display: "crvusd",
      symbol: "crvUSD.pica",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Curve Finance"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xf939e0a03fb07f59a73314e73794be0e57ac1b4e",
            channel_id: "channel-2"
          },
          chain: {
            channel_id: "channel-52",
            path: "transfer/channel-52/0xf939e0a03fb07f59a73314e73794be0e57ac1b4e"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composable",
            base_denom: "ibc/C9D79BE8E3E75CA2DFDC722C77D7B179C39A4802D59019C790A825FDE34B724A",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-1279",
            path: "transfer/channel-1279/transfer/channel-52/0xf939e0a03fb07f59a73314e73794be0e57ac1b4e"
          }
        }
      ],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xf939e0a03fb07f59a73314e73794be0e57ac1b4e"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/crvusd.png"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "Coin to support the real world in Wilhelmshall im Huy",
      denom_units: [{
        denom: "factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/wiha",
        exponent: 0
      }, {
        denom: "WIHA",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8",
      base: "factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/wiha",
      name: "WiliHall",
      display: "WIHA",
      symbol: "WIHA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/WIHA.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/WIHA.png"
      }]
    },
    {
      description: "For th",
      denom_units: [{
        denom: "factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/crazyhorse",
        exponent: 0
      }, {
        denom: "CRAZYHORSE",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8",
      base: "factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/crazyhorse",
      name: "HorseShoeBar",
      display: "CRAZYHORSE",
      symbol: "CRAZYHORSE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/CrazyHorse.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/CrazyHorse.png"
      }]
    },
    {
      description: "Cosmus Cartol always get rich",
      denom_units: [{
        denom: "factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/coca",
        exponent: 0
      }, {
        denom: "COCA",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8",
      base: "factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/coca",
      name: "CosmusCartol",
      display: "COCA",
      symbol: "COCA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/COCA.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/COCA.png"
      }]
    },
    {
      description: "Tether, issued natively on Solana.",
      denom_units: [{
        denom: "ibc/0233A3F2541FD43DBCA569B27AF886E97F5C03FC0305E4A8A3FAC6AC26249C7A",
        exponent: 0,
        aliases: ["ibc/D105950618E47CA2AEC314282BC401625025F80A4F812808DEEBB1941C685575"]
      }, {
        denom: "usdt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/0233A3F2541FD43DBCA569B27AF886E97F5C03FC0305E4A8A3FAC6AC26249C7A",
      name: "Tether",
      display: "usdt",
      symbol: "solana.USDT.pica",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Tether"
        },
        {
          type: "additional-mintage",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7"
          },
          provider: "Tether"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "solana",
            base_denom: "Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB",
            channel_id: "channel-1"
          },
          chain: {
            channel_id: "channel-71",
            path: "transfer/channel-71/Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composable",
            base_denom: "ibc/D105950618E47CA2AEC314282BC401625025F80A4F812808DEEBB1941C685575",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-1279",
            path: "transfer/channel-1279/transfer/channel-71/Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB"
          }
        }
      ],
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdt.solana.pica.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdt.solana.pica.png"
      }, {
        image_sync: {
          chain_name: "solana",
          base_denom: "Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "A representative token for staked SOL, derived through the process of liquid staking SOL using the Edgevana protocol.",
      denom_units: [{
        denom: "ibc/B83F9E20B4A07FA8846880000BD9D8985D89567A090F5E9390C64E81C39B4607",
        exponent: 0,
        aliases: ["ibc/BADB5950C4A81AC201696EBCB33CD295137FA86F0AA620CDDE946D3700E0208C"]
      }, {
        denom: "edgesol",
        exponent: 9
      }],
      type_asset: "ics20",
      base: "ibc/B83F9E20B4A07FA8846880000BD9D8985D89567A090F5E9390C64E81C39B4607",
      name: "Edgevana Staked SOL",
      display: "edgesol",
      symbol: "edgeSOL.pica",
      traces: [
        {
          type: "liquid-stake",
          counterparty: {
            chain_name: "solana",
            base_denom: "Lamport"
          },
          provider: "Edgevana"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "solana",
            base_denom: "edge86g9cVz87xcpKpy3J77vbp4wYd9idEV562CCntt",
            channel_id: "channel-1"
          },
          chain: {
            channel_id: "channel-71",
            path: "transfer/channel-71/edge86g9cVz87xcpKpy3J77vbp4wYd9idEV562CCntt"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composable",
            base_denom: "ibc/BADB5950C4A81AC201696EBCB33CD295137FA86F0AA620CDDE946D3700E0208C",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-1279",
            path: "transfer/channel-1279/transfer/channel-71/edge86g9cVz87xcpKpy3J77vbp4wYd9idEV562CCntt"
          }
        }
      ],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "edge86g9cVz87xcpKpy3J77vbp4wYd9idEV562CCntt"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/edgesol.png"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "A representative token for staked SOL, derived through the process of liquid staking SOL using the MarginFi protocol.",
      denom_units: [{
        denom: "ibc/F618D130A2B8203D169811658BD0361F18DC2453085965FA0E5AEB8018DD54EE",
        exponent: 0,
        aliases: ["ibc/55F5B582483FEFA5422794292B079B4D49A5BAB9881E7C801F9F271F1D234F1D"]
      }, {
        denom: "lst",
        exponent: 9
      }],
      type_asset: "ics20",
      base: "ibc/F618D130A2B8203D169811658BD0361F18DC2453085965FA0E5AEB8018DD54EE",
      name: "Liquid Staking Token",
      display: "lst",
      symbol: "LST.pica",
      traces: [
        {
          type: "liquid-stake",
          counterparty: {
            chain_name: "solana",
            base_denom: "Lamport"
          },
          provider: "MarginFi"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "solana",
            base_denom: "LSTxxxnJzKDFSLr4dUkPcmCf5VyryEqzPLz5j4bpxFp",
            channel_id: "channel-1"
          },
          chain: {
            channel_id: "channel-71",
            path: "transfer/channel-71/LSTxxxnJzKDFSLr4dUkPcmCf5VyryEqzPLz5j4bpxFp"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composable",
            base_denom: "ibc/55F5B582483FEFA5422794292B079B4D49A5BAB9881E7C801F9F271F1D234F1D",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-1279",
            path: "transfer/channel-1279/transfer/channel-71/LSTxxxnJzKDFSLr4dUkPcmCf5VyryEqzPLz5j4bpxFp"
          }
        }
      ],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/msol.png"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "A representative token for staked SOL, derived through the process of liquid staking SOL using Jito.",
      denom_units: [{
        denom: "ibc/9A83BDF4C8C5FFDDE735533BC8CD4363714A6474AED1C2C492FB003BB77C7982",
        exponent: 0,
        aliases: ["ibc/91A2FE07F8BDFC0552B1C9972FCCBF2CFD067DDE5F496D81E5132CE57762B0F2"]
      }, {
        denom: "jitosol",
        exponent: 9
      }],
      type_asset: "ics20",
      base: "ibc/9A83BDF4C8C5FFDDE735533BC8CD4363714A6474AED1C2C492FB003BB77C7982",
      name: "Jito Staked SOL",
      display: "jitosol",
      symbol: "jitoSOL.pica",
      traces: [
        {
          type: "liquid-stake",
          counterparty: {
            chain_name: "solana",
            base_denom: "Lamport"
          },
          provider: "Jito"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "solana",
            base_denom: "J1toso1uCk3RLmjorhTtrVwY9HJ7X8V9yYac6Y7kGCPn",
            channel_id: "channel-1"
          },
          chain: {
            channel_id: "channel-71",
            path: "transfer/channel-71/J1toso1uCk3RLmjorhTtrVwY9HJ7X8V9yYac6Y7kGCPn"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composable",
            base_denom: "ibc/91A2FE07F8BDFC0552B1C9972FCCBF2CFD067DDE5F496D81E5132CE57762B0F2",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-1279",
            path: "transfer/channel-1279/transfer/channel-71/J1toso1uCk3RLmjorhTtrVwY9HJ7X8V9yYac6Y7kGCPn"
          }
        }
      ],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "J1toso1uCk3RLmjorhTtrVwY9HJ7X8V9yYac6Y7kGCPn"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/jitosol.png"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "SOL is the native cryptocurrency of the Solana blockchain.",
      denom_units: [{
        denom: "ibc/0F9E9277B61A78CB31014D541ACA5BF6AB06DFC4524C4C836490B131DAAECD78",
        exponent: 0,
        aliases: ["Lamport", "ibc/2CC39C8141F257EBBA250F65B9D0F31DC8D153C225E51EC192DE6E3F65D43F0C"]
      }, {
        denom: "wsol",
        exponent: 9
      }],
      type_asset: "ics20",
      base: "ibc/0F9E9277B61A78CB31014D541ACA5BF6AB06DFC4524C4C836490B131DAAECD78",
      name: "Wrapped Solana",
      display: "wsol",
      symbol: "wSOL.pica",
      traces: [
        {
          type: "wrapped",
          counterparty: {
            chain_name: "solana",
            base_denom: "Lamport"
          },
          provider: "Solana"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "solana",
            base_denom: "So11111111111111111111111111111111111111112",
            channel_id: "channel-1"
          },
          chain: {
            channel_id: "channel-71",
            path: "transfer/channel-71/So11111111111111111111111111111111111111112"
          }
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "composable",
            base_denom: "ibc/2CC39C8141F257EBBA250F65B9D0F31DC8D153C225E51EC192DE6E3F65D43F0C",
            channel_id: "channel-3"
          },
          chain: {
            channel_id: "channel-1279",
            path: "transfer/channel-1279/transfer/channel-71/So11111111111111111111111111111111111111112"
          }
        }
      ],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "So11111111111111111111111111111111111111112"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/sol.svg"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "An alloy of USDT asset variants on Osmosis.",
      extended_description: "Multiple Tether USD variants on Osmosis comprise the liquidity backing of a tokenized transmuter pool to create an alloy of USDT.",
      denom_units: [{
        denom: "factory/osmo1em6xs47hd82806f5cxgyufguxrrc7l0aqx7nzzptjuqgswczk8csavdxek/alloyed/allUSDT",
        exponent: 0
      }, {
        denom: "allUSDT",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo1em6xs47hd82806f5cxgyufguxrrc7l0aqx7nzzptjuqgswczk8csavdxek",
      base: "factory/osmo1em6xs47hd82806f5cxgyufguxrrc7l0aqx7nzzptjuqgswczk8csavdxek/alloyed/allUSDT",
      name: "Alloyed USDT",
      display: "allUSDT",
      symbol: "allUSDT",
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "forex",
          base_denom: "USD"
        },
        provider: "Tether"
      }, {
        type: "synthetic",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7"
        },
        provider: "Osmosis"
      }],
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/allUSDT.svg"
      }, {
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "Whinecoin is an experimental memecoin by the Sommelier Finance team.",
      denom_units: [{
        denom: "ibc/A8C568580D613F16F7E9075EA9FAD69FEBE0CC1F4AF46C60255FEC4459C166F1",
        exponent: 0,
        aliases: ["ATeTQcUkWGs7AZ15mCiFUWCW9EUL7KpDZEHCN1Y8pump", "ibc/9D5DA3720001F91DD76B8F609A93F96688EC8185B54BF9A1A1450EB34FF2D912"]
      }, {
        denom: "whine",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/A8C568580D613F16F7E9075EA9FAD69FEBE0CC1F4AF46C60255FEC4459C166F1",
      name: "WHINEcoin",
      display: "whine",
      symbol: "WHINE",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "solana",
          base_denom: "ATeTQcUkWGs7AZ15mCiFUWCW9EUL7KpDZEHCN1Y8pump",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-71",
          path: "transfer/channel-71/ATeTQcUkWGs7AZ15mCiFUWCW9EUL7KpDZEHCN1Y8pump"
        }
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "composable",
          base_denom: "ibc/9D5DA3720001F91DD76B8F609A93F96688EC8185B54BF9A1A1450EB34FF2D912",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-1279",
          path: "transfer/channel-1279/transfer/channel-71/ATeTQcUkWGs7AZ15mCiFUWCW9EUL7KpDZEHCN1Y8pump"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "ATeTQcUkWGs7AZ15mCiFUWCW9EUL7KpDZEHCN1Y8pump"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/whine.png",
        theme: {
          primary_color_hex: "#FFFFFF",
          background_color_hex: "#FFFFFF",
          circle: false
        }
      }]
    },
    {
      description: "A group of french boulanger who wanna bring fun and baguette on cosmos",
      denom_units: [{
        denom: "factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/bag",
        exponent: 0
      }, {
        denom: "BAG",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8",
      base: "factory/osmo1q77cw0mmlluxu0wr29fcdd0tdnh78gzhkvhe4n6ulal9qvrtu43qtd0nh8/bag",
      name: "Baguette",
      display: "BAG",
      symbol: "BAG",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/BAG.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/BAG.png"
      }]
    },
    {
      description: "An alloy of BTC asset variants on Osmosis.",
      extended_description: "Multiple Bitcoin variants on Osmosis comprise the liquidity backing of a tokenized transmuter pool to create an alloy of BTC.",
      denom_units: [{
        denom: "factory/osmo1z6r6qdknhgsc0zeracktgpcxf43j6sekq07nw8sxduc9lg0qjjlqfu25e3/alloyed/allBTC",
        exponent: 0
      }, {
        denom: "allBTC",
        exponent: 8
      }],
      type_asset: "sdk.coin",
      address: "osmo1z6r6qdknhgsc0zeracktgpcxf43j6sekq07nw8sxduc9lg0qjjlqfu25e3",
      base: "factory/osmo1z6r6qdknhgsc0zeracktgpcxf43j6sekq07nw8sxduc9lg0qjjlqfu25e3/alloyed/allBTC",
      name: "Alloyed BTC",
      display: "allBTC",
      symbol: "allBTC",
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "bitcoin",
          base_denom: "sat"
        },
        provider: "Osmosis"
      }],
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/allBTC.svg"
      }, {
        image_sync: {
          chain_name: "bitcoin",
          base_denom: "sat"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/bitcoin/images/btc.png"
      }]
    },
    {
      description: "The native token of Furya",
      denom_units: [{
        denom: "ibc/42D0FBF9DDC72D7359D309A93A6DF9F6FDEE3987EA1C5B3CDE95C06FCE183F12",
        exponent: 0,
        aliases: ["ufury"]
      }, {
        denom: "fury",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/42D0FBF9DDC72D7359D309A93A6DF9F6FDEE3987EA1C5B3CDE95C06FCE183F12",
      name: "furya",
      display: "fury",
      symbol: "FURY",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "furya",
          base_denom: "ufury",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-8690",
          path: "transfer/channel-8690/ufury"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/furya/images/fury.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/furya/images/fury.svg"
      },
      images: [{
        image_sync: {
          chain_name: "furya",
          base_denom: "ufury"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/furya/images/fury.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/furya/images/fury.svg"
      }],
      keywords: ["gaming", "staking"]
    },
    {
      description: "PUNDIX token is the native token that functions within the Pundi X ecosystem, including PundiX Chain and XPOS.",
      denom_units: [{
        denom: "ibc/2EB516F83C9FF44AB6826F269CA98A5622608C6C955E12112E58F23A324FEE07",
        exponent: 0,
        aliases: ["ibc/55367B7B6572631B78A93C66EF9FDFCE87CDE372CC4ED7848DA78C1EB1DCDD78"]
      }, {
        denom: "PUNDIX",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/2EB516F83C9FF44AB6826F269CA98A5622608C6C955E12112E58F23A324FEE07",
      name: "Pundi X Token",
      display: "PUNDIX",
      symbol: "PUNDIX",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "fxcore",
          base_denom: "eth0x0FD10b9899882a6f2fcb5c371E17e70FdEe00C38",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/eth0x0FD10b9899882a6f2fcb5c371E17e70FdEe00C38"
        }
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "pundix",
          base_denom: "ibc/55367B7B6572631B78A93C66EF9FDFCE87CDE372CC4ED7848DA78C1EB1DCDD78",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-12618",
          path: "transfer/channel-12618/transfer/channel-0/eth0x0FD10b9899882a6f2fcb5c371E17e70FdEe00C38"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pundix.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pundix.png"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "The native token of dHealth",
      denom_units: [{
        denom: "ibc/320F8D6EC17E14436D19C6D844BB9A5AE9B9A209F6D18364A2191FF08E8732A9",
        exponent: 0,
        aliases: ["udhp"]
      }, {
        denom: "dhp",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/320F8D6EC17E14436D19C6D844BB9A5AE9B9A209F6D18364A2191FF08E8732A9",
      name: "dHealth",
      display: "dhp",
      symbol: "DHP",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "dhealth",
          base_denom: "udhp",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-38776",
          path: "transfer/channel-38776/udhp"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dhealth/images/dhp.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dhealth/images/dhp.svg"
      },
      images: [{
        image_sync: {
          chain_name: "dhealth",
          base_denom: "udhp"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dhealth/images/dhp.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dhealth/images/dhp.svg"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "The native EVM and Wasm, governance and staking token of the Shido Chain",
      denom_units: [{
        denom: "ibc/BBE825F7D1673E1EBF05AB02000E23E6077967B79547A3733B60AE4ED62C4D32",
        exponent: 0,
        aliases: ["shido"]
      }, {
        denom: "SHIDO",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/BBE825F7D1673E1EBF05AB02000E23E6077967B79547A3733B60AE4ED62C4D32",
      name: "Shido",
      display: "SHIDO",
      symbol: "SHIDO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "shido",
          base_denom: "shido",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-38921",
          path: "transfer/channel-38921/shido"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shido/images/shido.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shido/images/shido.svg"
      },
      images: [{
        image_sync: {
          chain_name: "shido",
          base_denom: "shido"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shido/images/shido.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shido/images/shido.svg"
      }],
      keywords: ["osmosis_unlisted"]
    },
    {
      description: "The Revenue & Governance token of Unstake.fi",
      denom_units: [{
        denom: "ibc/690EB0A0CA0DA2DC1E9CF62FB23C935AE5C7E9F57919CF89690521D5D70948A7",
        exponent: 0,
        aliases: ["factory/kujira1aaudpfr9y23lt9d45hrmskphpdfaq9ajxd3ukh/unstk"]
      }, {
        denom: "nstk",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/690EB0A0CA0DA2DC1E9CF62FB23C935AE5C7E9F57919CF89690521D5D70948A7",
      name: "Unstake Fi",
      display: "nstk",
      symbol: "NSTK",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kujira",
          base_denom: "factory/kujira1aaudpfr9y23lt9d45hrmskphpdfaq9ajxd3ukh/unstk",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-259",
          path: "transfer/channel-259/factory:kujira1aaudpfr9y23lt9d45hrmskphpdfaq9ajxd3ukh:unstk"
        }
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/nstk.svg"
      },
      images: [{
        image_sync: {
          chain_name: "kujira",
          base_denom: "factory/kujira1aaudpfr9y23lt9d45hrmskphpdfaq9ajxd3ukh/unstk"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/nstk.svg"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/0B3C3D06228578334B66B57FBFBA4033216CEB8119B27ACDEE18D92DA5B28D43",
        exponent: 0,
        aliases: ["avalanche-uusdc"]
      }, {
        denom: "avalanche-usdc",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/0B3C3D06228578334B66B57FBFBA4033216CEB8119B27ACDEE18D92DA5B28D43",
      name: "Wormhole USDC(Avalanche)",
      display: "avalanche-usdc",
      symbol: "avalanche.USDC.wh",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "gateway",
          base_denom: "factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5ZLmAZpcbaP4EGyihSmpfwryzDr84h51tboV392BCjW4",
          channel_id: "channel-3"
        },
        chain: {
          channel_id: "channel-2186",
          path: "transfer/channel-2186/factory/wormhole14ejqjyq8um4p3xfqj74yld5waqljf88fz25yxnma0cngspxe3les00fpjx/5ZLmAZpcbaP4EGyihSmpfwryzDr84h51tboV392BCjW4"
        }
      }],
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.hole.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.hole.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.hole.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.hole.svg"
      }
    },
    {
      description: "Nomic's native token.",
      denom_units: [{
        denom: "ibc/F49DFB3BC8105C57EE7F17EC2402438825B31212CFDD81681EB87911E934F32C",
        exponent: 0,
        aliases: ["unom"]
      }, {
        denom: "nom",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/F49DFB3BC8105C57EE7F17EC2402438825B31212CFDD81681EB87911E934F32C",
      name: "Nomic",
      display: "nom",
      symbol: "nomic.NOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "nomic",
          base_denom: "unom",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-6897",
          path: "transfer/channel-6897/unom"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "nomic",
          base_denom: "unom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nom.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nomic/images/nom.svg"
      }
    },
    {
      description: "The governance and utility token of Yieldmos, the Interchain Automation Protocol",
      denom_units: [{
        denom: "factory/osmo1vdvnznwg597qngrq9mnfcfk0am9jdc9y446jewhcqdreqz4r75xq5j5zvy/ymos",
        exponent: 0
      }, {
        denom: "ymos",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo1vdvnznwg597qngrq9mnfcfk0am9jdc9y446jewhcqdreqz4r75xq5j5zvy",
      base: "factory/osmo1vdvnznwg597qngrq9mnfcfk0am9jdc9y446jewhcqdreqz4r75xq5j5zvy/ymos",
      name: "Yieldmos Coin",
      display: "ymos",
      symbol: "YMOS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ymos.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ymos.png"
      }]
    },
    {
      description: "Memecoin for The International Brane Wave",
      denom_units: [{
        denom: "factory/osmo13gu58hzw3e9aqpj25h67m7snwcjuccd7v4p55w/brnz",
        exponent: 0,
        aliases: ["brnz"]
      }],
      base: "factory/osmo13gu58hzw3e9aqpj25h67m7snwcjuccd7v4p55w/brnz",
      name: "Branez",
      display: "factory/osmo13gu58hzw3e9aqpj25h67m7snwcjuccd7v4p55w/brnz",
      symbol: "BRNZ",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/BRNZ.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/BRNZ.svg"
      }]
    },
    {
      description: "ashLAB - Burned LAB",
      extended_description: "ashLAB - receipt token recieved when burning LAB via ASH DAOs Furnace",
      denom_units: [{
        denom: "factory/osmo1svj5kd8kzj7xxtrd6ftjk0856ffpyj4egz7f9pd9dge5wr4kwansmefq07/lab.ash",
        exponent: 0
      }, {
        denom: "ashLAB",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      address: "osmo1svj5kd8kzj7xxtrd6ftjk0856ffpyj4egz7f9pd9dge5wr4kwansmefq07",
      base: "factory/osmo1svj5kd8kzj7xxtrd6ftjk0856ffpyj4egz7f9pd9dge5wr4kwansmefq07/lab.ash",
      name: "Burned LAB",
      display: "ashLAB",
      symbol: "ashLAB",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ashLAB.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ashLAB.png"
      }]
    },
    {
      description: "GRAC is the official token of Racoon.Bet's gaming platform.",
      denom_units: [{
        denom: "ibc/58E4261D2E21FE3A459C290A9F97F3DCD257B28F48AAE828298B38E048804829",
        exponent: 0,
        aliases: ["factory/migaloo1eqntnl6tzcj9h86psg4y4h6hh05g2h9nj8e09l/ugrac"]
      }, {
        denom: "grac",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/58E4261D2E21FE3A459C290A9F97F3DCD257B28F48AAE828298B38E048804829",
      name: "Gaming RAC Token",
      display: "grac",
      symbol: "GRAC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1eqntnl6tzcj9h86psg4y4h6hh05g2h9nj8e09l/ugrac",
          channel_id: "channel-5"
        },
        chain: {
          channel_id: "channel-642",
          path: "transfer/channel-642/factory/migaloo1eqntnl6tzcj9h86psg4y4h6hh05g2h9nj8e09l/ugrac"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/grac.png"
      },
      images: [{
        image_sync: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1eqntnl6tzcj9h86psg4y4h6hh05g2h9nj8e09l/ugrac"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/grac.png"
      }]
    },
    {
      description: "N43 a BitSong Music FanToken",
      denom_units: [{
        denom: "ibc/E4FFAACCDB7D55CE2D257DF637C00158CB841F11D0013B2D03E31FF7800A2C58",
        exponent: 0,
        aliases: ["ft387C1C279D962ED80C09C1D592A92C4275FD7C5D"]
      }, {
        denom: "n43",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/E4FFAACCDB7D55CE2D257DF637C00158CB841F11D0013B2D03E31FF7800A2C58",
      name: "N43 FanToken",
      display: "n43",
      symbol: "N43",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "bitsong",
          base_denom: "ft387C1C279D962ED80C09C1D592A92C4275FD7C5D",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-73",
          path: "transfer/channel-73/ft387C1C279D962ED80C09C1D592A92C4275FD7C5D"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "bitsong",
          base_denom: "ft387C1C279D962ED80C09C1D592A92C4275FD7C5D"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/bitsong/images/ft387C1C279D962ED80C09C1D592A92C4275FD7C5D.png"
      }]
    }
  ]
};
var assets_default120 = info330;

// node_modules/chain-registry/esm/mainnet/osmosis/chain.js
var info331 = {
  $schema: "../chain.schema.json",
  chain_name: "osmosis",
  status: "live",
  network_type: "mainnet",
  website: "https://osmosis.zone/",
  update_link: "https://raw.githubusercontent.com/osmosis-labs/osmosis/main/chain.schema.json",
  pretty_name: "Osmosis",
  chain_id: "osmosis-1",
  bech32_prefix: "osmo",
  daemon_name: "osmosisd",
  node_home: "$HOME/.osmosisd",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uosmo",
      fixed_min_gas_price: 25e-4,
      low_gas_price: 25e-4,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uosmo"
    }],
    lock_duration: {
      time: "1209600s"
    }
  },
  codebase: {
    cosmos_sdk_version: "osmosis-labs/cosmos-sdk v0.47.5-v25-osmo-1",
    cosmwasm_enabled: true,
    cosmwasm_version: "osmosis-labs/wasmd v0.45.0-osmo"
  },
  images: [{
    image_sync: {
      chain_name: "osmosis",
      base_denom: "uosmo"
    },
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
  }],
  logo_URIs: {
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
  },
  description: "Osmosis (OSMO) is the premier DEX and cross-chain DeFi hub within the Cosmos ecosystem, a network of over 50 sovereign, interoperable blockchains seamlessly connected through the Inter-Blockchain Communication Protocol (IBC). Pioneering in its approach, Osmosis offers a dynamic trading and liquidity provision experience, integrating non-IBC assets from other ecosystems, including Ethereum, Solana, Avalanche, and Polkadot. Initially adopting Balancer-style pools, Osmosis now also features a concentrated liquidity model that is orders of magnitude more capital efficient, meaning that significantly less liquidity is required to handle the same amount of trading volume with minimal slippage.\n\nAs a true appchain, Osmosis has greater control over the full blockchain stack than traditional smart contract DEXs, which must follow the code of the parent chain that it is built on. This fine-grained control has enabled, for example, the development of Superfluid Staking, an extension of Proof of Stake that allows assets at the application layer to be staked to secure the chain. The customizability of appchains also allows implementing features like the Protocol Revenue module, which enables Osmosis to conduct on-chain arbitrage on behalf of OSMO stakers, balancing prices across pools while generating real yield revenue from this volume. Additionally, as a sovereign appchain, Osmosis governance can vote on upgrades to the protocol. One example of this was the introduction of a Taker Fee, which switched on the collection of exchange fees to generate diverse yield from Osmosis volume and distribute it to OSMO stakers.\n\nOsmosis is bringing the full centralized exchange experience to the decentralized world by building a cross-chain native DEX and trading suite that connects all chains over IBC, including Ethereum and Bitcoin. To reach this goal, Osmosis hosts an ever-expanding suite of DeFi applications aimed at providing a one-stop experience that includes lending, credit, margin, DeFi strategy vaults, power perps, fiat on-ramps, NFTs, stablecoins, and more \u2014 all of the functionalities that centralized exchange offer and more, in the trust-minimized environment of decentralized finance.",
  apis: {
    rpc: [
      {
        address: "https://rpc.osmosis.zone/",
        provider: "Osmosis Foundation"
      },
      {
        address: "https://rpc-osmosis.blockapsis.com",
        provider: "chainapsis"
      },
      {
        address: "https://osmosis-rpc.onivalidator.com",
        provider: "Oni Validator \u26E9\uFE0F"
      },
      {
        address: "https://osmosis-rpc.quickapi.com:443",
        provider: "Chainlayer"
      },
      {
        address: "https://rpc-osmosis.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://osmosis-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc-osmosis.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://rpc-osmosis.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://osmosis-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://rpc-osmosis-ia.cosmosia.notional.ventures",
        provider: "Notional"
      },
      {
        address: "https://osmosis.rpc.stakin-nodes.com",
        provider: "Stakin"
      },
      {
        address: "https://osmosis-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://osmosis.api.onfinality.io/public",
        provider: "OnFinality"
      },
      {
        address: "https://rpc-osmosis-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://osmosis-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://osmosis-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://community.nuxian-node.ch:6797/osmosis/trpc",
        provider: "PRO Delegators"
      },
      {
        address: "http://rpc-osmosis.freshstaking.com:31657",
        provider: "FreshSTAKING"
      },
      {
        address: "https://osmosis-rpc.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://osmosis-mainnet.rpc.l0vd.com:443",
        provider: "L0vd.com \u2764\uFE0F"
      },
      {
        address: "https://osmosis-rpc.reece.sh",
        provider: "Reecepbcups"
      },
      {
        address: "https://rpc.osmosis.validatus.com",
        provider: "Validatus"
      },
      {
        address: "https://rpc.osmosis.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://osmosis.interstellar-lounge.org",
        provider: "Interstellar Lounge \u{1F378}"
      },
      {
        address: "https://public.stakewolle.com/cosmos/osmosis/rpc",
        provider: "Stakewolle"
      },
      {
        address: "https://rpc.cros-nest.com/osmosis",
        provider: "Crosnest"
      },
      {
        address: "https://rpc-osmo.kewrnode.com",
        provider: "Kewr Node"
      },
      {
        address: "https://rpc.osmosis.goldenratiostaking.net",
        provider: "Golden Ratio Staking"
      },
      {
        address: "https://osmosis-rpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    rest: [
      {
        address: "https://lcd.osmosis.zone/",
        provider: "Osmosis Foundation"
      },
      {
        address: "https://rest.osmosis.goldenratiostaking.net",
        provider: "Golden Ratio Staking"
      },
      {
        address: "https://osmosis-lcd.quickapi.com:443",
        provider: "Chainlayer"
      },
      {
        address: "https://lcd-osmosis.blockapsis.com",
        provider: "chainapsis"
      },
      {
        address: "https://osmosis-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rest-osmosis.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://api-osmosis-ia.cosmosia.notional.ventures",
        provider: "Notional"
      },
      {
        address: "https://api-osmosis.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://osmosis-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://osmosis.rest.stakin-nodes.com",
        provider: "Stakin"
      },
      {
        address: "https://osmosis-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://api-osmosis-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://osmosis-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://lcd-osmosis.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://osmosis-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://community.nuxian-node.ch:6797/osmosis/crpc",
        provider: "PRO Delegators"
      },
      {
        address: "https://osmosis-api.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://osmosis-api.reece.sh",
        provider: "Reecepbcups"
      },
      {
        address: "https://api.osmosis.validatus.com:443",
        provider: "Validatus"
      },
      {
        address: "https://lcd.osmosis.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://osmosis-rest.interstellar-lounge.org",
        provider: "Interstellar Lounge \u{1F378}"
      },
      {
        address: "https://public.stakewolle.com/cosmos/osmosis/rest",
        provider: "Stakewolle"
      },
      {
        address: "https://rest.cros-nest.com/osmosis",
        provider: "Crosnest"
      },
      {
        address: "https://rest-osmo.kewrnode.com",
        provider: "Kewr Node"
      },
      {
        address: "https://osmosis-api.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    grpc: [
      {
        address: "osmosis-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "grpc-osmosis-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "osmosis.grpc.stakin-nodes.com:443",
        provider: "Stakin"
      },
      {
        address: "osmosis-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "grpc-osmosis.cosmos-spaces.cloud:1130",
        provider: "Cosmos Spaces"
      },
      {
        address: "grpc-osmosis-01.stakeflow.io:6754",
        provider: "Stakeflow"
      },
      {
        address: "services.staketab.com:9010",
        provider: "Staketab"
      },
      {
        address: "osmosis-grpc.w3coins.io:12590",
        provider: "w3coins"
      },
      {
        address: "grpc-osmosis.mms.team:443",
        provider: "MMS"
      },
      {
        address: "osmosis-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "osmosis-grpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "https://grpc-osmosis.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "osmosis-mainnet.grpc.l0vd.com:80",
        provider: "L0vd.com \u2764\uFE0F"
      },
      {
        address: "grpc-osmosis.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "grpc.osmosis.validatus.com:443",
        provider: "Validatus"
      },
      {
        address: "https://grpc.osmosis.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "osmosis-grpc.noders.services:10090",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/osmosis",
      tx_page: "https://ezstaking.app/osmosis/txs/${txHash}",
      account_page: "https://ezstaking.app/osmosis/account/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/osmosis",
      tx_page: "https://www.mintscan.io/osmosis/transactions/${txHash}",
      account_page: "https://www.mintscan.io/osmosis/accounts/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/osmosis",
      tx_page: "https://ping.pub/osmosis/tx/${txHash}"
    },
    {
      kind: "explorers.guru",
      url: "https://osmosis.explorers.guru",
      tx_page: "https://osmosis.explorers.guru/transaction/${txHash}",
      account_page: "https://osmosis.explorers.guru/account/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/osmosis",
      tx_page: "https://atomscan.com/osmosis/transactions/${txHash}",
      account_page: "https://atomscan.com/osmosis/accounts/${accountAddress}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/osmosis",
      tx_page: "https://explorer.tcnetwork.io/osmosis/transaction/${txHash}",
      account_page: "https://explorer.tcnetwork.io/osmosis/account/${accountAddress}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/osmosis",
      account_page: "https://stakeflow.io/osmosis/accounts/${accountAddress}"
    },
    {
      kind: "Nodeist Explorer",
      url: "https://exp.nodeist.net/osmosis",
      tx_page: "https://exp.nodeist.net/osmosis/tx/${txHash}"
    },
    {
      kind: "L0vd.com \u2764\uFE0F",
      url: "https://explorers.l0vd.com/osmosis-mainnet",
      tx_page: "https://explorers.l0vd.com/osmosis-mainnet/tx/${txHash}"
    },
    {
      kind: "Chainscope",
      url: "https://chainsco.pe/osmosis",
      tx_page: "https://chainsco.pe/osmosis/tx/${txHash}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/osmosis",
      tx_page: "https://mainnet.whispernode.com/osmosis/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/osmosis/account/${accountAddress}"
    }
  ],
  keywords: ["dex"]
};
var chain_default120 = info331;

// node_modules/chain-registry/esm/mainnet/osmosis/ibc.js
var info332 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "8ball",
      client_id: "07-tendermint-2",
      connection_id: "connection-18"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2668",
      connection_id: "connection-2163"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-16",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-641",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2316",
      connection_id: "connection-1814"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-490",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2109",
      connection_id: "connection-1649"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-320",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "aioz",
      client_id: "07-tendermint-2",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2785",
      connection_id: "connection-2285"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-779",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-18",
      connection_id: "connection-11"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-0",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-2",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2850",
      connection_id: "connection-2362"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1429",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "arkh",
      client_id: "07-tendermint-34",
      connection_id: "connection-27"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2697",
      connection_id: "connection-2235"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-648",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "assetmantle",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1923",
      connection_id: "connection-1498"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-232",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "aura",
      client_id: "07-tendermint-47",
      connection_id: "connection-33"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3054",
      connection_id: "connection-2551"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-11304",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-23",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1862",
      connection_id: "connection-1453"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-208",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bandchain",
      client_id: "07-tendermint-94",
      connection_id: "connection-91"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1743",
      connection_id: "connection-1345"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-83",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-148",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "beezee",
      client_id: "07-tendermint-2",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2154",
      connection_id: "connection-1672"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-340",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bitcanna",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1499",
      connection_id: "connection-1167"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bitsong",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1551",
      connection_id: "connection-1216"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-73",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bluzelle",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2754",
      connection_id: "connection-2273"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-763",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "bostrom",
      client_id: "07-tendermint-5",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1597",
      connection_id: "connection-1255"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-95",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "canto",
      client_id: "07-tendermint-9",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2481",
      connection_id: "connection-2017"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-550",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "carbon",
      client_id: "07-tendermint-3",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1808",
      connection_id: "connection-1412"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-188",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-10",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3012",
      connection_id: "connection-2503"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6994",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cerberus",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1875",
      connection_id: "connection-1460"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-212",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "chain4energy",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3107",
      connection_id: "connection-2586"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-22172",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cheqd",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1615",
      connection_id: "connection-1268"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-108",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "chihuahua",
      client_id: "07-tendermint-45",
      connection_id: "connection-25"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1666",
      connection_id: "connection-1278"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-113",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }, {
      chain_1: {
        channel_id: "channel-73",
        port_id: "wasm.chihuahua1jwkag4yvhyj9fuddtkygvavya8hmdjuzmgxwg9vp3lw9twv6lrcq9mgl52"
      },
      chain_2: {
        channel_id: "channel-11348",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cifer",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3184",
      connection_id: "connection-2646"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-39205",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "comdex",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1587",
      connection_id: "connection-1243"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-87",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-6",
      connection_id: "connection-6"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2846",
      connection_id: "connection-2358"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1279",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "conscious",
      client_id: "07-tendermint-12",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3199",
      connection_id: "connection-2656"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-73971",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-3",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2929",
      connection_id: "connection-2426"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2188",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-259",
      connection_id: "connection-257"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-141",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-17",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2083",
      connection_id: "connection-1624"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-297",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-33",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-4",
      connection_id: "connection-5"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cudos",
      client_id: "07-tendermint-2084",
      connection_id: "connection-1626"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-298",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "decentr",
      client_id: "07-tendermint-6",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1798",
      connection_id: "connection-1403"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-181",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "desmos",
      client_id: "07-tendermint-6",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1726",
      connection_id: "connection-1315"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-135",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dhealth",
      client_id: "07-tendermint-4",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3205",
      connection_id: "connection-2662"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-75030",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dig",
      client_id: "07-tendermint-13",
      connection_id: "connection-8"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1714",
      connection_id: "connection-1304"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-128",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "doravota",
      client_id: "07-tendermint-0",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2959",
      connection_id: "connection-2454"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2694",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-3",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3009",
      connection_id: "connection-2500"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6787",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dymension",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3086",
      connection_id: "connection-2566"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-19774",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dyson",
      client_id: "07-tendermint-2",
      connection_id: "connection-5"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2407",
      connection_id: "connection-1895"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-526",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "echelon",
      client_id: "07-tendermint-107",
      connection_id: "connection-29"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2268",
      connection_id: "connection-1760"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-403",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "emoney",
      client_id: "07-tendermint-7",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1447",
      connection_id: "connection-1132"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "empowerchain",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2848",
      connection_id: "connection-2360"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1411",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1840",
      connection_id: "connection-1440"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-204",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "fetchhub",
      client_id: "07-tendermint-10",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1913",
      connection_id: "connection-1490"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-229",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "furya",
      client_id: "07-tendermint-10",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3201",
      connection_id: "connection-2658"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-74222",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "fxcore",
      client_id: "07-tendermint-23",
      connection_id: "connection-22"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2961",
      connection_id: "connection-2456"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-19",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2716",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "galaxy",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1928",
      connection_id: "connection-1500"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-236",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gateway",
      client_id: "07-tendermint-8",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2927",
      connection_id: "connection-2424"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2186",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "genesisl1",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1983",
      connection_id: "connection-1539"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-253",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gitopia",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2787",
      connection_id: "connection-2287"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-781",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-13",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1737",
      connection_id: "connection-1340"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-144",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "haqq",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2871",
      connection_id: "connection-2388"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1575",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "humans",
      client_id: "07-tendermint-13",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3091",
      connection_id: "connection-2570"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-20082",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "impacthub",
      client_id: "07-tendermint-12",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1451",
      connection_id: "connection-1137"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-38",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "imversed",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2366",
      connection_id: "connection-1866"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-517",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-19",
      connection_id: "connection-14"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1703",
      connection_id: "connection-1298"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-122",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "irisnet",
      client_id: "07-tendermint-5",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-5",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "jackal",
      client_id: "07-tendermint-2",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2273",
      connection_id: "connection-1762"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-412",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1457",
      connection_id: "connection-1142"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-42",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }, {
      chain_1: {
        channel_id: "channel-47",
        port_id: "wasm.juno1v4887y83d6g28puzvt8cl0f3cdhd3y6y9mpysnsp3k8krdm7l6jqgm0rkn"
      },
      chain_2: {
        channel_id: "channel-169",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kava",
      client_id: "07-tendermint-2",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1735",
      connection_id: "connection-1328"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-143",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kichain",
      client_id: "07-tendermint-4",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1564",
      connection_id: "connection-1225"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-77",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }, {
      chain_1: {
        channel_id: "channel-18",
        port_id: "wasm.ki1hzz0s0ucrhdp6tue2lxk3c03nj6f60qy463we7lgx0wudd72ctmsd9kgha"
      },
      chain_2: {
        channel_id: "channel-261",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "konstellation",
      client_id: "07-tendermint-1",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1778",
      connection_id: "connection-1384"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-171",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2017",
      connection_id: "connection-1559"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-259",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kyve",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2757",
      connection_id: "connection-2274"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-767",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "lambda",
      client_id: "07-tendermint-6",
      connection_id: "connection-5"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2217",
      connection_id: "connection-1733"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-378",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "likecoin",
      client_id: "07-tendermint-16",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1507",
      connection_id: "connection-1173"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-53",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "lumenx",
      client_id: "07-tendermint-0",
      connection_id: "connection-6"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2079",
      connection_id: "connection-1620"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-286",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "lumnetwork",
      client_id: "07-tendermint-7",
      connection_id: "connection-5"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1668",
      connection_id: "connection-1280"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-115",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "mars",
      client_id: "07-tendermint-4",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2602",
      connection_id: "connection-2114"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-557",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "medasdigital",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2372",
      connection_id: "connection-1869"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-519",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "meme",
      client_id: "07-tendermint-0",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1931",
      connection_id: "connection-1502"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-238",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "microtick",
      client_id: "07-tendermint-99",
      connection_id: "connection-92"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1453",
      connection_id: "connection-1139"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-16",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-39",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "migaloo",
      client_id: "07-tendermint-3",
      connection_id: "connection-11"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2669",
      connection_id: "connection-2171"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-642",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-19",
      connection_id: "connection-18"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2823",
      connection_id: "connection-2338"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-874",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-2107",
        port_id: "wasm.neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07"
      },
      chain_2: {
        channel_id: "channel-39589",
        port_id: "wasm.osmo1pfeve3esg5rhhkfhlujxtthc25akcf3zpa3t9whghvvp2v5v92ps0z30r6"
      },
      ordering: "unordered",
      version: "astroport-ibc-v1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nibiru",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3104",
      connection_id: "connection-2580"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-21113",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-0",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2704",
      connection_id: "connection-2241"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-750",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nois",
      client_id: "07-tendermint-16",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3017",
      connection_id: "connection-2507"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-8277",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }, {
      chain_1: {
        channel_id: "channel-11319",
        port_id: "wasm.osmo1tvzr8ur0ynjhqftxpkl4qwel8ly7erhy6cu6ks426xmzf92vk6eqfp9wcl"
      },
      chain_2: {
        channel_id: "channel-41",
        port_id: "wasm.nois1acyc05v6fgcdgj88nmz2t40aex9nlnptqpwp5hf8hwg7rhce9uuqgqz5wp"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nolus",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2791",
      connection_id: "connection-2289"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-783",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nomic",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3010",
      connection_id: "connection-2501"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6897",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nyx",
      client_id: "07-tendermint-17",
      connection_id: "connection-8"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3065",
      connection_id: "connection-2555"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-15464",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "odin",
      client_id: "07-tendermint-113",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2007",
      connection_id: "connection-1551"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-258",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "omniflixhub",
      client_id: "07-tendermint-8",
      connection_id: "connection-8"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1829",
      connection_id: "connection-1431"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-199",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "onex",
      client_id: "07-tendermint-7",
      connection_id: "connection-15"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3202",
      connection_id: "connection-2659"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-74628",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "onomy",
      client_id: "07-tendermint-0",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2405",
      connection_id: "connection-1892"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-525",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "oraichain",
      client_id: "07-tendermint-49",
      connection_id: "connection-21"
    },
    chain_2: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1882",
      connection_id: "connection-1464"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-216",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1576",
      connection_id: "connection-1231"
    },
    chain_2: {
      chain_name: "panacea",
      client_id: "07-tendermint-6",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-82",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2935",
      connection_id: "connection-2430"
    },
    chain_2: {
      chain_name: "passage",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2494",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-6",
      connection_id: "connection-5"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2318",
      connection_id: "connection-1815"
    },
    chain_2: {
      chain_name: "planq",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-492",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1899",
      connection_id: "connection-1472"
    },
    chain_2: {
      chain_name: "provenance",
      client_id: "07-tendermint-31",
      connection_id: "connection-9"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-222",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3206",
      connection_id: "connection-2663"
    },
    chain_2: {
      chain_name: "pryzm",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-75755",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3059",
      connection_id: "connection-2554"
    },
    chain_2: {
      chain_name: "pundix",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-12618",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3070",
      connection_id: "connection-2558"
    },
    chain_2: {
      chain_name: "pylons",
      client_id: "07-tendermint-32",
      connection_id: "connection-25"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-17683",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-29",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2703",
      connection_id: "connection-2240"
    },
    chain_2: {
      chain_name: "quasar",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-688",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2400",
      connection_id: "connection-1889"
    },
    chain_2: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-6",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-522",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2831",
      connection_id: "connection-2345"
    },
    chain_2: {
      chain_name: "qwoyn",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-880",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2849",
      connection_id: "connection-2361"
    },
    chain_2: {
      chain_name: "realio",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1424",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2173",
      connection_id: "connection-1692"
    },
    chain_2: {
      chain_name: "rebus",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-355",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-6",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "regen",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1898",
      connection_id: "connection-1471"
    },
    chain_2: {
      chain_name: "rizon",
      client_id: "07-tendermint-3",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-221",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3157",
      connection_id: "connection-2626"
    },
    chain_2: {
      chain_name: "saga",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-38946",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3098",
      connection_id: "connection-2571"
    },
    chain_2: {
      chain_name: "scorum",
      client_id: "07-tendermint-6",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-20100",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1588",
      connection_id: "connection-1244"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-2",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-88",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis",
        properties: "privacy"
      }
    }, {
      chain_1: {
        channel_id: "channel-476",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-44",
        port_id: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis",
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3204",
      connection_id: "connection-2661"
    },
    chain_2: {
      chain_name: "seda",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-75016",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2790",
      connection_id: "connection-2288"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-2",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-782",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3213",
      connection_id: "connection-2684"
    },
    chain_2: {
      chain_name: "self",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-78292",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "sentinel",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2972",
      connection_id: "connection-2468"
    },
    chain_2: {
      chain_name: "sge",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5485",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2680",
      connection_id: "connection-2182"
    },
    chain_2: {
      chain_name: "shareledger",
      client_id: "07-tendermint-1",
      connection_id: "connection-5"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-647",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1741",
      connection_id: "connection-1342"
    },
    chain_2: {
      chain_name: "shentu",
      client_id: "07-tendermint-9",
      connection_id: "connection-8"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-146",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3198",
      connection_id: "connection-2654"
    },
    chain_2: {
      chain_name: "shido",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-73755",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1484",
      connection_id: "connection-1159"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-41",
      connection_id: "connection-20"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-47",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1745",
      connection_id: "connection-1348"
    },
    chain_2: {
      chain_name: "sommelier",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-165",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3035",
      connection_id: "connection-2524"
    },
    chain_2: {
      chain_name: "source",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8945",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2969",
      connection_id: "connection-2465"
    },
    chain_2: {
      chain_name: "stafihub",
      client_id: "07-tendermint-7",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5413",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1562",
      connection_id: "connection-1223"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-75",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }, {
      chain_1: {
        channel_id: "channel-39535",
        port_id: "wasm.osmo10vzkd8pyme67z38epdr3gf027y03dxq7t8vau5fp3r28vxks7mwse02j8f"
      },
      chain_2: {
        channel_id: "channel-309",
        port_id: "wasm.stars1r0a8ygvnjfaegy4n5z9325e0ew9uy2s7rn4vt7qf4ltv49fj4tnsk6pvtv"
      },
      ordering: "unordered",
      version: "ics721-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-71",
      connection_id: "connection-42"
    },
    chain_2: {
      chain_name: "starname",
      client_id: "07-tendermint-9",
      connection_id: "connection-9"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2119",
      connection_id: "connection-1657"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-1",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-326",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2192",
      connection_id: "connection-1710"
    },
    chain_2: {
      chain_name: "teritori",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-362",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1215",
      connection_id: "connection-1549"
    },
    chain_2: {
      chain_name: "terra",
      client_id: "07-tendermint-12",
      connection_id: "connection-11"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-72",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }, {
      chain_1: {
        channel_id: "channel-78488",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-108",
        port_id: "wasm.terra19pfxzj9580h7rjd6z6sn5x2se76vgrc0etltr79g9z3t82jzp4hq63qguc"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: false,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1979",
      connection_id: "connection-1536"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-2",
      connection_id: "connection-3"
    },
    channels: [
      {
        chain_1: {
          channel_id: "channel-251",
          port_id: "transfer"
        },
        chain_2: {
          channel_id: "channel-1",
          port_id: "transfer"
        },
        ordering: "unordered",
        version: "ics20-1",
        tags: {
          status: "live",
          preferred: true,
          dex: "osmosis"
        }
      },
      {
        chain_1: {
          channel_id: "channel-559",
          port_id: "transfer"
        },
        chain_2: {
          channel_id: "channel-85",
          port_id: "wasm.terra1d90p5lacfxnqgjxjupu234lxnxyeu8fdeef4d0e0nqy3p30r7gss4myn9x"
        },
        ordering: "unordered",
        version: "ics20-1",
        tags: {
          status: "live",
          preferred: true,
          dex: "osmosis"
        }
      },
      {
        chain_1: {
          channel_id: "channel-341",
          port_id: "transfer"
        },
        chain_2: {
          channel_id: "channel-26",
          port_id: "wasm.terra1e0mrzy8077druuu42vs0hu7ugguade0cj65dgtauyaw4gsl4kv0qtdf2au"
        },
        ordering: "unordered",
        version: "ics20-1",
        tags: {
          status: "live",
          preferred: true,
          dex: "osmosis"
        }
      },
      {
        chain_1: {
          channel_id: "channel-21671",
          port_id: "transfer"
        },
        chain_2: {
          channel_id: "channel-392",
          port_id: "wasm.terra1jhfjnm39y3nn9l4520mdn4k5mw23nz0674c4gsvyrcr90z9tqcvst22fce"
        },
        ordering: "unordered",
        version: "ics20-1",
        tags: {
          status: "live",
          preferred: true,
          dex: "osmosis"
        }
      }
    ]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2025",
      connection_id: "connection-1565"
    },
    chain_2: {
      chain_name: "tgrade",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-263",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1805",
      connection_id: "connection-1410"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-6",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-184",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2229",
      connection_id: "connection-1746"
    },
    chain_2: {
      chain_name: "unification",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-382",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1705",
      connection_id: "connection-1300"
    },
    chain_2: {
      chain_name: "vidulum",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-124",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2875",
      connection_id: "connection-2389"
    },
    chain_2: {
      chain_name: "xpla",
      client_id: "07-tendermint-11",
      connection_id: "connection-19"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1634",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  }
];
var ibc_default92 = info332;

// node_modules/chain-registry/esm/mainnet/osmosis/index.js
var assets120 = assets_default120;
var chain120 = chain_default120;
var ibc92 = ibc_default92;

// node_modules/chain-registry/esm/mainnet/panacea/assets.js
var info333 = {
  $schema: "../assetlist.schema.json",
  chain_name: "panacea",
  assets: [{
    description: "Panacea is a public blockchain launched by MediBloc, which is the key infrastructure for reinventing the patient-centered healthcare data ecosystem",
    denom_units: [{
      denom: "umed",
      exponent: 0
    }, {
      denom: "med",
      exponent: 6
    }],
    base: "umed",
    name: "MediBloc",
    display: "med",
    symbol: "MED",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/panacea/images/med.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/panacea/images/med.svg"
    },
    coingecko_id: "medibloc",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/panacea/images/med.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/panacea/images/med.svg"
    }]
  }]
};
var assets_default121 = info333;

// node_modules/chain-registry/esm/mainnet/panacea/chain.js
var info334 = {
  $schema: "../chain.schema.json",
  chain_name: "panacea",
  status: "live",
  network_type: "mainnet",
  website: "https://medibloc.com/en/",
  pretty_name: "Medibloc",
  chain_id: "panacea-3",
  bech32_prefix: "panacea",
  daemon_name: "panacead",
  node_home: "$HOME/.panacead",
  key_algos: ["secp256k1"],
  slip44: 371,
  fees: {
    fee_tokens: [{
      denom: "umed",
      fixed_min_gas_price: 5,
      low_gas_price: 5,
      average_gas_price: 7,
      high_gas_price: 9
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "umed"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/panacea/images/med.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/panacea/images/med.svg"
  },
  apis: {
    rpc: [{
      address: "https://rpc.gopanacea.org",
      provider: "medibloc"
    }, {
      address: "https://panacea-rpc.staketab.org:443",
      provider: "Staketab"
    }],
    rest: [{
      address: "https://api.gopanacea.org",
      provider: "medibloc"
    }, {
      address: "https://panacea-rest.staketab.org",
      provider: "Staketab"
    }],
    grpc: [{
      address: "services.staketab.com:9400",
      provider: "Staketab"
    }]
  },
  explorers: [{
    kind: "mintscan",
    url: "https://www.mintscan.io/medibloc",
    tx_page: "https://www.mintscan.io/medibloc/transactions/${txHash}",
    account_page: "https://www.mintscan.io/medibloc/accounts/${accountAddress}"
  }, {
    kind: "bigdipper",
    url: "https://explorer.gopanacea.org",
    tx_page: "https://explorer.gopanacea.org/transactions/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/panacea/images/med.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/panacea/images/med.svg"
  }]
};
var chain_default121 = info334;

// node_modules/chain-registry/esm/mainnet/panacea/ibc.js
var info335 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosis",
    client_id: "07-tendermint-1576",
    connection_id: "connection-1231"
  },
  chain_2: {
    chain_name: "panacea",
    client_id: "07-tendermint-6",
    connection_id: "connection-1"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-82",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default93 = info335;

// node_modules/chain-registry/esm/mainnet/panacea/index.js
var assets121 = assets_default121;
var chain121 = chain_default121;
var ibc93 = ibc_default93;

// node_modules/chain-registry/esm/mainnet/passage/assets.js
var info336 = {
  $schema: "../assetlist.schema.json",
  chain_name: "passage",
  assets: [{
    description: "The native staking and governance token of the Passage chain.",
    denom_units: [{
      denom: "upasg",
      exponent: 0
    }, {
      denom: "pasg",
      exponent: 6
    }],
    base: "upasg",
    name: "Passage",
    display: "pasg",
    symbol: "PASG",
    coingecko_id: "passage",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/passage/images/pasg.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/passage/images/pasg.png"
    }]
  }]
};
var assets_default122 = info336;

// node_modules/chain-registry/esm/mainnet/passage/chain.js
var info337 = {
  $schema: "../chain.schema.json",
  chain_name: "passage",
  chain_id: "passage-2",
  pre_fork_chain_name: "passage1",
  pretty_name: "Passage",
  status: "live",
  network_type: "mainnet",
  website: "https://passage3d.com/",
  bech32_prefix: "pasg",
  daemon_name: "passage",
  node_home: "$HOME/.passage",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "upasg",
      fixed_min_gas_price: 0,
      low_gas_price: 1e-3,
      average_gas_price: 25e-4,
      high_gas_price: 0.01
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "upasg"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.45.16",
    cosmwasm_version: "v0.31.0"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.passage.vitwit.com",
        provider: "vitwit"
      },
      {
        address: "https://passage-rpc.staketab.org:443",
        provider: "Staketab"
      },
      {
        address: "https://rpc-passage.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://passage-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc-passage-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://rpc-passage.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://rpc.passage.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://passage-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://passage-rpc.ibs.team/",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://rpc-passage.d-stake.xyz",
        provider: "D-stake"
      },
      {
        address: "https://rpc-passage.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://passage-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://passage-rpc.stakerhouse.com",
        provider: "StakerHouse"
      },
      {
        address: "https://passage-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://passage-rpc.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://rpc-passage.mainnet.validatrium.club",
        provider: "Validatrium"
      },
      {
        address: "https://rpc.passage.silentvalidator.com",
        provider: "silent"
      }
    ],
    rest: [
      {
        address: "https://api.passage.vitwit.com",
        provider: "vitwit"
      },
      {
        address: "https://passage-rest.staketab.org",
        provider: "Staketab"
      },
      {
        address: "https://rest-passage.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://passage-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://api-passage.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://api-passage-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://api.passage.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://passage-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://passage-api.ibs.team/",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://api-passage.d-stake.xyz",
        provider: "D-stake"
      },
      {
        address: "https://passage-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://lcd-passage.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://passage-rest.stakerhouse.com",
        provider: "StakerHouse"
      },
      {
        address: "https://passage-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://passage-api.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://api-passage.mainnet.validatrium.club",
        provider: "Validatrium"
      },
      {
        address: "https://api.passage.silentvalidator.com",
        provider: "silent"
      }
    ],
    grpc: [
      {
        address: "grpc-passage-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "passage-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "passage-grpc.polkachu.com:15690",
        provider: "Polkachu"
      },
      {
        address: "grpc-passage.cosmos-spaces.cloud:2320",
        provider: "Cosmos Spaces"
      },
      {
        address: "grpc.passage.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "passage-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "services.staketab.com:9023",
        provider: "Staketab"
      },
      {
        address: "passage-grpc.stakerhouse.com:443",
        provider: "StakerHouse"
      },
      {
        address: "passage-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "passage-grpc.stakeandrelax.net:15690",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "grpc-passage.mainnet.validatrium.club:20590",
        provider: "Validatrium"
      },
      {
        address: "grpc.passage.silentvalidator.com:443",
        provider: "silent"
      }
    ]
  },
  explorers: [
    {
      kind: "aneka",
      url: "https://passage.aneka.io",
      tx_page: "https://passage.aneka.io/txs/${txHash}",
      account_page: "https://passage.aneka.io/accounts/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/passage",
      tx_page: "https://www.mintscan.io/passage/transactions/${txHash}",
      account_page: "https://www.mintscan.io/passage/accounts/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/passage",
      tx_page: "https://ezstaking.app/passage/txs/${txHash}",
      account_page: "https://ezstaking.app/passage/account/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/passage",
      tx_page: "https://atomscan.com/passage/transactions/${txHash}",
      account_page: "https://atomscan.com/passage/accounts/${accountAddress}"
    },
    {
      kind: "cosmotracker",
      url: "https://cosmotracker.com/passage",
      tx_page: "https://cosmotracker.com/passage/tx/${txHash}",
      account_page: "https://cosmotracker.com/passage/account/${accountAddress}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/passage",
      tx_page: "https://mainnet.whispernode.com/passage/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/passage/account/${accountAddress}"
    }
  ],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/passage/images/pasg.png"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/passage/images/pasg.png"
  }]
};
var chain_default122 = info337;

// node_modules/chain-registry/esm/mainnet/passage/ibc.js
var info338 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2935",
    connection_id: "connection-2430"
  },
  chain_2: {
    chain_name: "passage",
    client_id: "07-tendermint-1",
    connection_id: "connection-1"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-2494",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default94 = info338;

// node_modules/chain-registry/esm/mainnet/passage/index.js
var assets122 = assets_default122;
var chain122 = chain_default122;
var ibc94 = ibc_default94;

// node_modules/chain-registry/esm/mainnet/passage1/assets.js
var info339 = {
  $schema: "../assetlist.schema.json",
  chain_name: "passage1",
  assets: [{
    description: "The native staking and governance token of the Passage chain.",
    denom_units: [{
      denom: "upasg",
      exponent: 0
    }, {
      denom: "pasg",
      exponent: 6
    }],
    base: "upasg",
    name: "Passage",
    display: "pasg",
    symbol: "PASG",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/passage/images/pasg.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/passage/images/pasg.png"
    }]
  }]
};
var assets_default123 = info339;

// node_modules/chain-registry/esm/mainnet/passage1/chain.js
var info340 = {
  $schema: "../chain.schema.json",
  chain_name: "passage1",
  chain_id: "passage-1",
  pretty_name: "Passage",
  status: "killed",
  network_type: "mainnet",
  website: "https://passage3d.com/",
  bech32_prefix: "pasg",
  daemon_name: "passage",
  node_home: "$HOME/.passage",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "upasg",
      fixed_min_gas_price: 0
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "upasg"
    }]
  },
  codebase: {},
  explorers: [
    {
      kind: "aneka",
      url: "https://passage.aneka.io",
      tx_page: "https://passage.aneka.io/txs/${txHash}",
      account_page: "https://passage.aneka.io/accounts/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/passage",
      tx_page: "https://www.mintscan.io/passage/txs/${txHash}",
      account_page: "https://www.mintscan.io/passage/account/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/passage",
      tx_page: "https://ezstaking.app/passage/txs/${txHash}",
      account_page: "https://ezstaking.app/passage/account/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/passage",
      tx_page: "https://atomscan.com/passage/transactions/${txHash}",
      account_page: "https://atomscan.com/passage/accounts/${accountAddress}"
    }
  ],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/passage/images/pasg.png"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/passage/images/pasg.png"
  }]
};
var chain_default123 = info340;

// node_modules/chain-registry/esm/mainnet/passage1/index.js
var assets123 = assets_default123;
var chain123 = chain_default123;

// node_modules/chain-registry/esm/mainnet/persistence/assets.js
var info341 = {
  $schema: "../assetlist.schema.json",
  chain_name: "persistence",
  assets: [
    {
      description: "The XPRT token is primarily a governance token for the Persistence chain.",
      denom_units: [{
        denom: "uxprt",
        exponent: 0
      }, {
        denom: "xprt",
        exponent: 6
      }],
      base: "uxprt",
      name: "Persistence",
      display: "xprt",
      symbol: "XPRT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.svg"
      },
      coingecko_id: "persistence",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.svg"
      }],
      socials: {
        website: "https://persistence.one/",
        twitter: "https://twitter.com/PersistenceOne"
      }
    },
    {
      description: "PSTAKE Liquid-Staked ATOM",
      denom_units: [{
        denom: "stk/uatom",
        exponent: 0,
        aliases: []
      }, {
        denom: "stkatom",
        exponent: 6,
        aliases: ["stk/atom"]
      }],
      base: "stk/uatom",
      name: "PSTAKE staked ATOM",
      display: "stkatom",
      symbol: "stkATOM",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "cosmoshub",
          base_denom: "uatom"
        },
        provider: "pSTAKE"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.svg"
      },
      coingecko_id: "stkatom",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.svg"
      }]
    },
    {
      description: "pSTAKE is a liquid staking protocol unlocking the liquidity of staked assets.",
      denom_units: [{
        denom: "ibc/A6E3AF63B3C906416A9AF7A556C59EA4BD50E617EFFE6299B99700CCB780E444",
        exponent: 0,
        aliases: ["gravity0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006", "0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006"]
      }, {
        denom: "pstake",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/A6E3AF63B3C906416A9AF7A556C59EA4BD50E617EFFE6299B99700CCB780E444",
      name: "pSTAKE Finance",
      display: "pstake",
      symbol: "PSTAKE",
      traces: [
        {
          type: "liquid-stake",
          counterparty: {
            chain_name: "persistence",
            base_denom: "uxprt"
          },
          provider: "Persistence"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006"
          },
          provider: "Gravity Bridge"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "gravitybridge",
            base_denom: "gravity0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006",
            channel_id: "channel-24"
          },
          chain: {
            channel_id: "channel-38",
            path: "transfer/channel-38/gravity0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006"
          }
        }
      ],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/pstake.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/pstake.svg"
      },
      keywords: ["canon"],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/pstake.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/pstake.svg"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/C8A74ABBE2AF892E15680D916A7C22130585CE5704F9B17A10F184A90D53BECA",
        exponent: 0,
        aliases: ["uatom"]
      }, {
        denom: "atom",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/C8A74ABBE2AF892E15680D916A7C22130585CE5704F9B17A10F184A90D53BECA",
      name: "Cosmos Hub Atom",
      display: "atom",
      symbol: "ATOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "cosmoshub",
          base_denom: "uatom",
          channel_id: "channel-190"
        },
        chain: {
          channel_id: "channel-24",
          path: "transfer/channel-24/uatom"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "cosmoshub",
          base_denom: "uatom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }
    },
    {
      description: "Tether USDT on Persistence",
      denom_units: [{
        denom: "ibc/C559977F5797BDC1D74C0836A10C379C991D664166CB60D776A83029852431B4",
        exponent: 0
      }, {
        denom: "usdt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/C559977F5797BDC1D74C0836A10C379C991D664166CB60D776A83029852431B4",
      name: "Tether USDT",
      display: "usdt",
      symbol: "USDT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kava",
          base_denom: "erc20/tether/usdt",
          channel_id: "channel-134"
        },
        chain: {
          channel_id: "channel-129",
          path: "transfer/channel-129/erc20/tether/usdt"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "kava",
          base_denom: "erc20/tether/usdt"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/B3792E4A62DF4A934EF2DF5968556DB56F5776ED25BDE11188A4F58A7DD406F0",
        exponent: 0,
        aliases: ["uusdc"]
      }, {
        denom: "usdc",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/B3792E4A62DF4A934EF2DF5968556DB56F5776ED25BDE11188A4F58A7DD406F0",
      name: "Noble USD Coin",
      display: "usdc",
      symbol: "USDC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "noble",
          base_denom: "uusdc",
          channel_id: "channel-36"
        },
        chain: {
          channel_id: "channel-132",
          path: "transfer/channel-132/uusdc"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "noble",
          base_denom: "uusdc"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
      }
    },
    {
      description: "dydx staking token",
      denom_units: [{
        denom: "ibc/23DC3FF0E4CBB53A1915E4C62507CB7796956E84C68CA49707787CB8BDE90A1E",
        exponent: 0,
        aliases: ["adydx"]
      }, {
        denom: "dydx",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/23DC3FF0E4CBB53A1915E4C62507CB7796956E84C68CA49707787CB8BDE90A1E",
      name: "dYdX",
      display: "dydx",
      symbol: "DYDX",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "dydx",
          base_denom: "adydx",
          channel_id: "channel-4"
        },
        chain: {
          channel_id: "channel-131",
          path: "transfer/channel-131/adydx"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "dydx",
          base_denom: "adydx"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.svg"
      }
    },
    {
      description: "PSTAKE Liquid-Staked OSMO",
      denom_units: [{
        denom: "stk/uosmo",
        exponent: 0,
        aliases: []
      }, {
        denom: "stkosmo",
        exponent: 6,
        aliases: ["stk/osmo"]
      }],
      base: "stk/uosmo",
      name: "PSTAKE staked OSMO",
      display: "stkosmo",
      symbol: "stkOSMO",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "uosmo"
        },
        provider: "pSTAKE"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkosmo.svg"
      },
      coingecko_id: "pstake-staked-osmo",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkosmo.svg"
      }]
    },
    {
      description: "PSTAKE Liquid-Staked DYDX",
      denom_units: [{
        denom: "stk/adydx",
        exponent: 0,
        aliases: []
      }, {
        denom: "stkdydx",
        exponent: 18,
        aliases: ["stk/dydx"]
      }],
      base: "stk/adydx",
      name: "PSTAKE staked DYDX",
      display: "stkdydx",
      symbol: "stkDYDX",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "dydx",
          base_denom: "adydx"
        },
        provider: "pSTAKE"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkdydx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkdydx.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkdydx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkdydx.svg"
      }]
    },
    {
      description: "PSTAKE Liquid-Staked STARS",
      denom_units: [{
        denom: "stk/ustars",
        exponent: 0,
        aliases: []
      }, {
        denom: "stkstars",
        exponent: 6,
        aliases: ["stk/stars"]
      }],
      base: "stk/ustars",
      name: "PSTAKE staked STARS",
      display: "stkstars",
      symbol: "stkSTARS",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "stargaze",
          base_denom: "ustars"
        },
        provider: "pSTAKE"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkstars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkstars.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkstars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkstars.svg"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/AD8E1D4AC4EA8FC79CC46E33319A3791477D4DEBFC30D5D874074B993422B41B",
        exponent: 0,
        aliases: ["ustars"]
      }, {
        denom: "stars",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/AD8E1D4AC4EA8FC79CC46E33319A3791477D4DEBFC30D5D874074B993422B41B",
      name: "Stargaze",
      display: "stars",
      symbol: "STARS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "stargaze",
          base_denom: "ustars",
          channel_id: "channel-287"
        },
        chain: {
          channel_id: "channel-197",
          path: "transfer/channel-197/ustars"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "stargaze",
          base_denom: "ustars"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.svg"
      }
    },
    {
      description: "The native token cw20 for Shade on Secret Network",
      denom_units: [{
        denom: "ibc/5D3B6445EA1D7064C4B1CCB588638589529556E1BCBADF13475021B42EA8C73B",
        exponent: 0,
        aliases: ["cw20:secret153wu605vvp934xhd4k9dtd640zsep5jkesstdm"]
      }, {
        denom: "shd",
        exponent: 8
      }],
      type_asset: "ics20",
      base: "ibc/5D3B6445EA1D7064C4B1CCB588638589529556E1BCBADF13475021B42EA8C73B",
      name: "Shade",
      display: "shd",
      symbol: "SHD",
      traces: [{
        type: "ibc-cw20",
        counterparty: {
          chain_name: "secretnetwork",
          base_denom: "cw20:secret153wu605vvp934xhd4k9dtd640zsep5jkesstdm",
          port: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4",
          channel_id: "channel-132"
        },
        chain: {
          port: "transfer",
          channel_id: "channel-159",
          path: "transfer/channel-159/cw20:secret153wu605vvp934xhd4k9dtd640zsep5jkesstdm"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shd.svg"
      },
      images: [{
        image_sync: {
          chain_name: "secretnetwork",
          base_denom: "cw20:secret153wu605vvp934xhd4k9dtd640zsep5jkesstdm"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shd.svg"
      }]
    },
    {
      description: "PSTAKE Liquid-Staked HUAHUA",
      denom_units: [{
        denom: "stk/uhuahua",
        exponent: 0,
        aliases: []
      }, {
        denom: "stkhuahua",
        exponent: 6,
        aliases: ["stk/huahua"]
      }],
      base: "stk/uhuahua",
      name: "PSTAKE staked HUAHUA",
      display: "stkhuahua",
      symbol: "stkHUAHUA",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "chihuahua",
          base_denom: "uhuahua"
        },
        provider: "pSTAKE"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkhuahua.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkhuahua.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkhuahua.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkhuahua.svg"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/B597D779FCDD9021263C98A48F1AFA9D2BCCCE980F397CDE5681CCEDE7DEE1A4",
        exponent: 0,
        aliases: ["uhuahua"]
      }, {
        denom: "huahua",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/B597D779FCDD9021263C98A48F1AFA9D2BCCCE980F397CDE5681CCEDE7DEE1A4",
      name: "Chihuahua",
      display: "huahua",
      symbol: "HUAHUA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "chihuahua",
          base_denom: "uhuahua",
          channel_id: "channel-94"
        },
        chain: {
          channel_id: "channel-203",
          path: "transfer/channel-203/uhuahua"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "chihuahua",
          base_denom: "uhuahua"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/huahua.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/huahua.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/huahua.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chihuahua/images/huahua.svg"
      }
    },
    {
      description: "PSTAKE Liquid-Staked XPRT",
      denom_units: [{
        denom: "stk/uxprt",
        exponent: 0,
        aliases: []
      }, {
        denom: "stkxprt",
        exponent: 6,
        aliases: ["stk/xprt"]
      }],
      base: "stk/uxprt",
      name: "PSTAKE staked XPRT",
      display: "stkxprt",
      symbol: "stkXPRT",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "persistence",
          base_denom: "uxprt"
        },
        provider: "pSTAKE"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkxprt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkxprt.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkxprt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkxprt.svg"
      }]
    },
    {
      description: "Wrapped Bitcoin on Persistence",
      denom_units: [{
        denom: "ibc/CCA9F9B22D39884C09975D45E1869B73A12B87080EE53CB44905CE2C422CA228",
        exponent: 0,
        aliases: ["factory/osmo1z0qrq605sjgcqpylfl4aa6s90x738j7m58wyatt0tdzflg2ha26q67k743/wbtc"]
      }, {
        denom: "wbtc",
        exponent: 8
      }],
      type_asset: "ics20",
      base: "ibc/CCA9F9B22D39884C09975D45E1869B73A12B87080EE53CB44905CE2C422CA228",
      name: "Wrapped Bitcoin",
      display: "wbtc",
      symbol: "WBTC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1z0qrq605sjgcqpylfl4aa6s90x738j7m58wyatt0tdzflg2ha26q67k743/wbtc",
          channel_id: "channel-4"
        },
        chain: {
          channel_id: "channel-6",
          path: "transfer/channel-6/factory/osmo1z0qrq605sjgcqpylfl4aa6s90x738j7m58wyatt0tdzflg2ha26q67k743/wbtc"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.svg"
      },
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1z0qrq605sjgcqpylfl4aa6s90x738j7m58wyatt0tdzflg2ha26q67k743/wbtc"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.svg"
      }]
    }
  ]
};
var assets_default124 = info341;

// node_modules/chain-registry/esm/mainnet/persistence/chain.js
var info342 = {
  $schema: "../chain.schema.json",
  chain_name: "persistence",
  chain_id: "core-1",
  pretty_name: "Persistence",
  status: "live",
  network_type: "mainnet",
  website: "https://persistence.one/",
  bech32_prefix: "persistence",
  daemon_name: "persistenceCore",
  node_home: "$HOME/.persistenceCore",
  key_algos: ["secp256k1"],
  slip44: 118,
  alternative_slip44s: [750],
  fees: {
    fee_tokens: [{
      denom: "uxprt",
      fixed_min_gas_price: 0,
      low_gas_price: 0,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uxprt"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "persistenceOne/cosmos-sdk v0.47.10-lsm-rc0",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.45.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.svg"
  },
  description: "Persistence is an app chain for Liquid Staking powering an ecosystem of DeFi applications focused on unlocking the liquidity of staked assets.",
  apis: {
    rpc: [
      {
        address: "https://rpc.core.persistence.one",
        provider: "Persistence"
      },
      {
        address: "https://rpc-persistent-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://persistence.rpc.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://persistence-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://persistence-rpc.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://rpc-persistence.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "https://rpc-persistence.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://persistence-mainnet-rpc.cosmonautstakes.com",
        provider: "Cosmonaut Stakes"
      },
      {
        address: "https://persistence-rpc.quantnode.tech",
        provider: "QuantNode"
      },
      {
        address: "https://persistence-rpc.zenscape.one",
        provider: "Zenscape"
      },
      {
        address: "https://persistence-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://persistence-rpc.stakeandrelax.net",
        provider: "Stake&Relax Validator \u{1F9A5}"
      },
      {
        address: "https://rpc.persistence.posthuman.digital:443",
        provider: "POSTHUMAN\u221EDVS"
      },
      {
        address: "https://rpc-persistence-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://persistence-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://persistence-rpc.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://persistence-rpc.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://rpc.persistence.validatus.com",
        provider: "Validatus"
      },
      {
        address: "https://public.stakewolle.com/cosmos/persistence/rpc",
        provider: "Stakewolle"
      },
      {
        address: "https://xprt-rpc.antrixy.org/",
        provider: "Antrix Validators"
      },
      {
        address: "https://persistence-rpc.stake-town.com",
        provider: "StakeTown"
      }
    ],
    rest: [
      {
        address: "https://rest.core.persistence.one",
        provider: "Persistence"
      },
      {
        address: "https://api-persistent-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://persistence.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://persistence-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://api-persistence.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://persistence-api.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://rest-persistence.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "https://persistence-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://persistence-mainnet-rest.cosmonautstakes.com",
        provider: "Cosmonaut Stakes"
      },
      {
        address: "https://persistence-lcd.quantnode.tech",
        provider: "QuantNode"
      },
      {
        address: "https://persistence-rest.zenscape.one",
        provider: "Zenscape"
      },
      {
        address: "https://persistence-api.stakeandrelax.net",
        provider: "Stake&Relax Validator \u{1F9A5}"
      },
      {
        address: "https://rest.persistence.posthuman.digital:443",
        provider: "POSTHUMAN\u221EDVS"
      },
      {
        address: "https://api-persistence-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://persistence-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://persistence-api.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://persistence-api.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://api.persistence.validatus.com",
        provider: "Validatus"
      },
      {
        address: "https://public.stakewolle.com/cosmos/persistence/rest",
        provider: "Stakewolle"
      },
      {
        address: "https://xprt-rest.antrixy.org/",
        provider: "Antrix Validators"
      },
      {
        address: "https://persistence-api.stake-town.com",
        provider: "StakeTown"
      }
    ],
    grpc: [
      {
        address: "grpc.core.persistence.one:443",
        provider: "Persistence"
      },
      {
        address: "grpc-persistent-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "persistence.grpc.m.stavr.tech:410",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "persistence-grpc.polkachu.com:15490",
        provider: "Polkachu"
      },
      {
        address: "persistence-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "grpc.persistence.posthuman.digital:80",
        provider: "POSTHUMAN\u221EDVS"
      },
      {
        address: "grpc-persistence.cosmos-spaces.cloud:1180",
        provider: "Cosmos Spaces"
      },
      {
        address: "141.95.33.97:9090",
        provider: "Stakewolle.com | Auto-compound"
      },
      {
        address: "grpc-persistence-01.stakeflow.io:49090",
        provider: "Stakeflow"
      },
      {
        address: "persistence-grpc.w3coins.io:15490",
        provider: "w3coins"
      },
      {
        address: "persistence-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "persistence-grpc.stakeandrelax.net:15490",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "grpc.persistence.validatus.com",
        provider: "Validatus"
      },
      {
        address: "https://xprt-grpc.antrixy.org/",
        provider: "Antrix Validators"
      },
      {
        address: "persistence-grpc.stake-town.com:443",
        provider: "StakeTown"
      }
    ]
  },
  explorers: [
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/persistence",
      tx_page: "https://www.mintscan.io/persistence/transactions/${txHash}",
      account_page: "https://www.mintscan.io/persistence/accounts/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/persistence",
      tx_page: "https://ezstaking.app/persistence/txs/${txHash}",
      account_page: "https://ezstaking.app/persistence/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/persistence",
      tx_page: "https://ping.pub/persistence/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Persistence-Mainnet",
      tx_page: "https://explorer.stavr.tech/Persistence-Mainnet/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/persistence",
      tx_page: "https://atomscan.com/persistence/transactions/${txHash}",
      account_page: "https://atomscan.com/persistence/accounts/${accountAddress}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/persistence",
      account_page: "https://stakeflow.io/persistence/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.svg"
  }]
};
var chain_default124 = info342;

// node_modules/chain-registry/esm/mainnet/persistence/ibc.js
var info343 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-93",
      connection_id: "connection-91"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-167",
      connection_id: "connection-210"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-72",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-202",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-188",
      connection_id: "connection-174"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-169",
      connection_id: "connection-214"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-127",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-213",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "chihuahua",
      client_id: "07-tendermint-207",
      connection_id: "connection-137"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-168",
      connection_id: "connection-212"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-94",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-203",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "comdex",
      client_id: "07-tendermint-123",
      connection_id: "connection-65"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-94",
      connection_id: "connection-75"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-57",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-71",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-391",
      connection_id: "connection-344"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-36",
      connection_id: "connection-30"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-190",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-24",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-42",
      connection_id: "connection-41"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-88",
      connection_id: "connection-72"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-30",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-68",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-61",
      connection_id: "connection-34"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-24",
      connection_id: "connection-17"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-4",
      connection_id: "connection-8"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-159",
      connection_id: "connection-197"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-131",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-39",
      connection_id: "connection-50"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-51",
      connection_id: "connection-49"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-24",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-38",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-110",
      connection_id: "connection-91"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-57",
      connection_id: "connection-53"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-82",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-41",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "irisnet",
      client_id: "07-tendermint-34",
      connection_id: "connection-25"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-31",
      connection_id: "connection-25"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-19",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-89",
      connection_id: "connection-51"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-49",
      connection_id: "connection-48"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-33",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kava",
      client_id: "07-tendermint-148",
      connection_id: "connection-189"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-156",
      connection_id: "connection-195"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-134",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-129",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-167",
      connection_id: "connection-130"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-162",
      connection_id: "connection-200"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-158",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-152",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-73",
      connection_id: "connection-52"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-161",
      connection_id: "connection-199"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-49",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-136",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-61",
      connection_id: "connection-59"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-160",
      connection_id: "connection-198"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-132",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "persistence",
      client_id: "07-tendermint-6",
      connection_id: "connection-5"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "persistence",
      client_id: "07-tendermint-96",
      connection_id: "connection-77"
    },
    chain_2: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-15",
      connection_id: "connection-8"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-73",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-16",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "persistence",
      client_id: "07-tendermint-33",
      connection_id: "connection-27"
    },
    chain_2: {
      chain_name: "regen",
      client_id: "07-tendermint-30",
      connection_id: "connection-28"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-21",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "persistence",
      client_id: "07-tendermint-106",
      connection_id: "connection-146"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-126",
      connection_id: "connection-98"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-82",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-64",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }, {
      chain_1: {
        channel_id: "channel-159",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-132",
        port_id: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "persistence",
      client_id: "07-tendermint-34",
      connection_id: "connection-28"
    },
    chain_2: {
      chain_name: "sentinel",
      client_id: "07-tendermint-61",
      connection_id: "connection-36"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-22",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "persistence",
      client_id: "07-tendermint-38",
      connection_id: "connection-32"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-18",
      connection_id: "connection-8"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-26",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "persistence",
      client_id: "07-tendermint-166",
      connection_id: "connection-207"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-358",
      connection_id: "connection-293"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-197",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-287",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "persistence",
      client_id: "07-tendermint-39",
      connection_id: "connection-39"
    },
    chain_2: {
      chain_name: "starname",
      client_id: "07-tendermint-44",
      connection_id: "connection-30"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-27",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "persistence",
      client_id: "07-tendermint-83",
      connection_id: "connection-71"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-54",
      connection_id: "connection-33"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-67",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-53",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "persistence",
      client_id: "07-tendermint-105",
      connection_id: "connection-144"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-179",
      connection_id: "connection-119"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-81",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default95 = info343;

// node_modules/chain-registry/esm/mainnet/persistence/index.js
var assets124 = assets_default124;
var chain124 = chain_default124;
var ibc95 = ibc_default95;

// node_modules/chain-registry/esm/mainnet/planq/assets.js
var info344 = {
  $schema: "../assetlist.schema.json",
  chain_name: "planq",
  assets: [{
    description: "The native EVM, governance and staking token of the Planq Network",
    extended_description: "Planq is the very first cryptocurrency project to keep mobile platform usability at heart, taking a step away from dependency on desktop services. By focusing on easy accessibility and close integration of other blockchains via easy to use bridges, Planq will push Web 3 adoption in the mobile space to the next level.",
    denom_units: [{
      denom: "aplanq",
      exponent: 0
    }, {
      denom: "planq",
      exponent: 18
    }],
    base: "aplanq",
    name: "Planq",
    display: "planq",
    symbol: "PLQ",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/planq/images/planq.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/planq/images/planq.svg"
    },
    coingecko_id: "planq",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/planq/images/planq.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/planq/images/planq.svg"
    }],
    socials: {
      website: "https://planq.network",
      twitter: "https://twitter.com/planqfoundation"
    }
  }, {
    description: "The token of Source Protocol bridged from BSC.",
    denom_units: [{
      denom: "erc20/0x091F9A57A3F58d758b6572E9d41675918EAC7F09",
      exponent: 0
    }, {
      denom: "srcx",
      exponent: 9
    }],
    base: "erc20/0x091F9A57A3F58d758b6572E9d41675918EAC7F09",
    name: "Source Token",
    display: "srcx",
    symbol: "SRCX",
    traces: [{
      type: "bridge",
      counterparty: {
        chain_name: "binancesmartchain",
        base_denom: "0x454b90716a9435e7161a9aea5cf00e0acbe565ae",
        contract: "0xC891aBa0b42818fb4c975Bf6461033c62BCE75ff"
      },
      chain: {
        contract: "0xC891aBa0b42818fb4c975Bf6461033c62BCE75ff"
      },
      provider: "DeltaSwap.io"
    }],
    images: [{
      image_sync: {
        chain_name: "binancesmartchain",
        base_denom: "0x454b90716a9435e7161a9aea5cf00e0acbe565ae"
      },
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/srcx.png"
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/srcx.png"
    }
  }]
};
var assets_default125 = info344;

// node_modules/chain-registry/esm/mainnet/planq/chain.js
var info345 = {
  $schema: "../chain.schema.json",
  chain_name: "planq",
  status: "live",
  network_type: "mainnet",
  website: "https://planq.network/",
  pretty_name: "Planq",
  chain_id: "planq_7070-2",
  bech32_prefix: "plq",
  node_home: "$HOME/.planqd",
  daemon_name: "planqd",
  key_algos: ["ethsecp256k1"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "aplanq",
      fixed_min_gas_price: 2e10,
      low_gas_price: 3e10,
      average_gas_price: 35e9,
      high_gas_price: 4e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "aplanq"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.46.3"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/planq/images/planq.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/planq/images/planq.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.planq.network",
        provider: "planq.network"
      },
      {
        address: "https://planq.rpc.bccnodes.com",
        provider: "BccNodes"
      },
      {
        address: "https://planq.rpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc.planq.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://planq-rpc.kynraze.com",
        provider: "Kynraze"
      },
      {
        address: "https://rpc.planq.indonode.net",
        provider: "Indonode"
      },
      {
        address: "https://rpc.planq.roomit.xyz",
        provider: "RoomIT"
      },
      {
        address: "https://planq-rpc.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://rpc.planq.safeblock.space",
        provider: "Safe Block"
      },
      {
        address: "https://planq.rpc.skynodejs.net",
        provider: "skynodejs"
      },
      {
        address: "https://planq-rpc.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://mainnet-planq-rpc.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://planq_mainnet_rpc.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      },
      {
        address: "https://rpc-planq.blockval.io",
        provider: "Blockval"
      }
    ],
    rest: [
      {
        address: "https://rest.planq.network",
        provider: "planq.network"
      },
      {
        address: "https://planq.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api.planq.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://planq-api.kynraze.com",
        provider: "Kynraze"
      },
      {
        address: "https://api.planq.indonode.net",
        provider: "Indonode"
      },
      {
        address: "https://api.planq.roomit.xyz",
        provider: "RoomIT"
      },
      {
        address: "https://planq-api.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://api.planq.safeblock.space",
        provider: "Safe Block"
      },
      {
        address: "https://planq.api.skynodejs.net",
        provider: "skynodejs"
      },
      {
        address: "https://planq-api.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://mainnet-planq-api.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://planq_mainnet_api.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      },
      {
        address: "https://api-planq.blockval.io",
        provider: "Blockval"
      }
    ],
    grpc: [
      {
        address: "grpc.planq.network:443",
        provider: "planq.network"
      },
      {
        address: "planq.grpc.m.stavr.tech:2070",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "planq.grpc.bccnodes.com:443",
        provider: "BccNodes"
      },
      {
        address: "grpc.planq.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "https://grpc-planq.nodine.id",
        provider: "Nodine.id"
      },
      {
        address: "https://grpc-planq.sxlzptprjkt.xyz:443",
        provider: "sxlzptprjkt | VALIDATOR"
      },
      {
        address: "https://grpc.planq.nodexcapital.com:443",
        provider: "NodeX Validator"
      },
      {
        address: "https://grpc.planq.roomit.xyz:8443",
        provider: "RoomIT"
      },
      {
        address: "https://grpc.planq.hexnodes.co:33090",
        provider: "Hexnodes"
      },
      {
        address: "planq-grpc.genznodes.dev:28090",
        provider: "genznodes"
      },
      {
        address: "grpc.planq.safeblock.space:9090",
        provider: "Safe Block"
      },
      {
        address: "https://planq.grpc.skynodejs.net",
        provider: "skynodejs"
      },
      {
        address: "planq-grpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "mainnet-planq.konsortech.xyz:10090",
        provider: "KonsorTech"
      },
      {
        address: "https://grpc-planq.blockval.io",
        provider: "Blockval"
      }
    ],
    "evm-http-jsonrpc": [
      {
        address: "https://evm-rpc.planq.network",
        provider: "planq.network"
      },
      {
        address: "https://jsonrpc.planq.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://rpc-evm-planq.sxlzptprjkt.xyz",
        provider: "sxlzptprjkt | VALIDATOR"
      },
      {
        address: "https://jsonrpc.planq.nodexcapital.com",
        provider: "NodeX Validator"
      },
      {
        address: "https://planq-rpc-evm.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://evm.planq.safeblock.space",
        provider: "Safe Block"
      },
      {
        address: "https://planq-jsonrpc.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://mainnet-planq-evmrpc.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://planq_mainnet_evm.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      }
    ]
  },
  explorers: [
    {
      kind: "bigdipper",
      url: "https://explorer.planq.network",
      tx_page: "https://explorer.planq.network/transactions/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Planq-Mainnet",
      tx_page: "https://explorer.stavr.tech/Planq-Mainnet/tx/${txHash}"
    },
    {
      kind: "blockscout",
      url: "https://evm.planq.network",
      tx_page: "https://evm.planq.network/tx/${txHash}"
    },
    {
      kind: "NodeStake Explorer",
      url: "https://explorer.nodestake.top/planq",
      tx_page: "https://explorer.nodestake.top/planq/tx/${txHash}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/planq",
      tx_page: "https://explorer.tcnetwork.io/planq/transaction/${txHash}"
    },
    {
      kind: "RoomIT",
      url: "https://explorer.tendermint.roomit.xyz/planq",
      tx_page: "https://explorer.tendermint.roomit.xyz/planq/transaction/${txHash}"
    },
    {
      kind: "Kynraze",
      url: "https://explorer.kynraze.com/planq",
      tx_page: "https://explorer.kynraze.com/planq/tx/${txHash}"
    },
    {
      kind: "THE EXPLORER",
      url: "https://explorer.sxlzptprjkt.xyz/planq",
      tx_page: "https://explorer.sxlzptprjkt.xyz/planq/tx/${txHash}"
    },
    {
      kind: "NODEXPLORER",
      url: "https://explorer.nodexcapital.com/planq",
      tx_page: "https://explorer.nodexcapital.com/planq/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/planq",
      tx_page: "https://atomscan.com/planq/transactions/${txHash}",
      account_page: "https://atomscan.com/planq/accounts/${accountAddress}"
    },
    {
      kind: "Indonode",
      url: "https://explorer.indonode.net/planq",
      tx_page: "https://explorer.indonode.net/planq/tx/${txHash}"
    },
    {
      kind: "Safe Block",
      url: "https://explorer.safeblock.space/planq",
      tx_page: "https://explorer.safeblock.space/planq/tx/${txHash}"
    },
    {
      kind: "KonsorTech",
      url: "https://explorer.konsortech.xyz/planq",
      tx_page: "https://explorer.konsortech.xyz/planq/tx/${txHash}"
    },
    {
      kind: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}",
      url: "https://explorer.whenmoonwhenlambo.money/planq",
      tx_page: "https://explorer.whenmoonwhenlambo.money/tx/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/planq/images/planq.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/planq/images/planq.svg"
  }]
};
var chain_default125 = info345;

// node_modules/chain-registry/esm/mainnet/planq/ibc.js
var info346 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-82",
      connection_id: "connection-83"
    },
    chain_2: {
      chain_name: "planq",
      client_id: "07-tendermint-561",
      connection_id: "connection-486"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-112",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-62",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-994",
      connection_id: "connection-693"
    },
    chain_2: {
      chain_name: "planq",
      client_id: "07-tendermint-5",
      connection_id: "connection-3"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-446",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-195",
      connection_id: "connection-165"
    },
    chain_2: {
      chain_name: "planq",
      client_id: "07-tendermint-1",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-102",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-70",
      connection_id: "connection-46"
    },
    chain_2: {
      chain_name: "planq",
      client_id: "07-tendermint-144",
      connection_id: "connection-151"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-103",
      connection_id: "connection-95"
    },
    chain_2: {
      chain_name: "planq",
      client_id: "07-tendermint-567",
      connection_id: "connection-490"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-82",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-63",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2318",
      connection_id: "connection-1815"
    },
    chain_2: {
      chain_name: "planq",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-492",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "planq",
      client_id: "07-tendermint-545",
      connection_id: "connection-477"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-21",
      connection_id: "connection-12"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-59",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "planq",
      client_id: "07-tendermint-558",
      connection_id: "connection-483"
    },
    chain_2: {
      chain_name: "source",
      client_id: "07-tendermint-10",
      connection_id: "connection-5"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-61",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default96 = info346;

// node_modules/chain-registry/esm/mainnet/planq/index.js
var assets125 = assets_default125;
var chain125 = chain_default125;
var ibc96 = ibc_default96;

// node_modules/chain-registry/esm/mainnet/point/assets.js
var info347 = {
  $schema: "../assetlist.schema.json",
  chain_name: "point",
  assets: [{
    description: "The native governance and staking token of the Point network",
    denom_units: [{
      denom: "apoint",
      exponent: 0
    }, {
      denom: "point",
      exponent: 18
    }],
    base: "apoint",
    name: "Point",
    display: "point",
    symbol: "POINT",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/point/images/point-logo.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/point/images/point-logo.svg"
    },
    coingecko_id: "point-network",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/point/images/point-logo.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/point/images/point-logo.svg"
    }]
  }]
};
var assets_default126 = info347;

// node_modules/chain-registry/esm/mainnet/point/chain.js
var info348 = {
  $schema: "../chain.schema.json",
  chain_name: "point",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Point Network",
  chain_id: "point_10687-1",
  bech32_prefix: "point",
  node_home: "$HOME/.pointd",
  daemon_name: "pointd",
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "apoint",
      low_gas_price: 5e9,
      average_gas_price: 25e9,
      high_gas_price: 4e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "apoint"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/point/images/point-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/point/images/point-logo.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc-mainnet-1.point.space:26657",
        provider: "Point Network"
      },
      {
        address: "https://rpc.point.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://point.rpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc.point.indonode.net",
        provider: "Indonode"
      }
    ],
    rest: [
      {
        address: "https://rpc-mainnet-1.point.space:1317",
        provider: "Point Network"
      },
      {
        address: "https://point.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api.point.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://api.point.indonode.net",
        provider: "Indonode"
      }
    ],
    grpc: [
      {
        address: "grpc.point.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "point.grpc.m.stavr.tech:2050",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://grpc.point.nodexcapital.com",
        provider: "\u26A1NodeX Validator\u26A1"
      },
      {
        address: "https://grpc.point.indonode.net:21090",
        provider: "Indonode"
      }
    ],
    "evm-http-jsonrpc": [{
      address: "https://rpc-mainnet-1.point.space",
      provider: "Point Network"
    }, {
      address: "https://jsonrpc.point.nodestake.top",
      provider: "NodeStake"
    }]
  },
  explorers: [
    {
      kind: "blockscout",
      url: "https://explorer.pointnetwork.io/",
      tx_page: "https://explorer.pointnetwork.io/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Point-Mainnet",
      tx_page: "https://explorer.stavr.tech/Point-Mainnet/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://cosmos.pointnetwork.io/",
      tx_page: "https://cosmos.pointnetwork.io/point/tx/${txHash}"
    },
    {
      kind: "NODEXPLORER",
      url: "https://explorer.nodexcapital.com/point",
      tx_page: "https://explorer.nodexcapital.com/point/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/point",
      tx_page: "https://atomscan.com/point/transactions/${txHash}",
      account_page: "https://atomscan.com/point/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/point/images/point-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/point/images/point-logo.svg"
  }]
};
var chain_default126 = info348;

// node_modules/chain-registry/esm/mainnet/point/ibc.js
var info349 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "cosmoshub",
    client_id: "07-tendermint-926",
    connection_id: "connection-648"
  },
  chain_2: {
    chain_name: "point",
    client_id: "07-tendermint-1",
    connection_id: "connection-0"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-404",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default97 = info349;

// node_modules/chain-registry/esm/mainnet/point/index.js
var assets126 = assets_default126;
var chain126 = chain_default126;
var ibc97 = ibc_default97;

// node_modules/chain-registry/esm/mainnet/provenance/assets.js
var info350 = {
  $schema: "../assetlist.schema.json",
  chain_name: "provenance",
  assets: [{
    description: "Hash is the staking token of the Provenance Blockchain",
    denom_units: [{
      denom: "nhash",
      exponent: 0
    }, {
      denom: "hash",
      exponent: 9
    }],
    base: "nhash",
    name: "Hash",
    display: "hash",
    symbol: "HASH",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/provenance/images/prov.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/provenance/images/prov.svg"
    },
    coingecko_id: "provenance-blockchain",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/provenance/images/prov.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/provenance/images/prov.svg"
    }]
  }]
};
var assets_default127 = info350;

// node_modules/chain-registry/esm/mainnet/provenance/chain.js
var info351 = {
  $schema: "../chain.schema.json",
  chain_name: "provenance",
  status: "live",
  network_type: "mainnet",
  website: "https://provenance.io/",
  pretty_name: "Provenance",
  chain_id: "pio-mainnet-1",
  bech32_prefix: "pb",
  daemon_name: "provenanced",
  node_home: "$HOME/Provenance",
  key_algos: ["secp256k1"],
  slip44: 505,
  fees: {
    fee_tokens: [{
      denom: "nhash",
      fixed_min_gas_price: 1905,
      low_gas_price: 1905,
      average_gas_price: 2100,
      high_gas_price: 2500
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "nhash"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.46.13",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.30"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/provenance/images/prov.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/provenance/images/prov.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc-provenance.takeshi.team/",
        provider: "TAKESHI"
      },
      {
        address: "https://rpc.provenance.io/",
        provider: "Figure"
      },
      {
        address: "https://rpc-provenance-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://provenance-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://provenance-rpc.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://provenance-rpc.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://rpc.provenance.blockval.io/",
        provider: "Blockval"
      },
      {
        address: "https://provenance-rpc.panthea.eu",
        provider: "Panthea EU"
      },
      {
        address: "https://provenance_mainnet_rpc.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      }
    ],
    rest: [
      {
        address: "https://api-provenance.takeshi.team",
        provider: "TAKESHI"
      },
      {
        address: "https://provenance-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://api.provenance.io",
        provider: "Figure"
      },
      {
        address: "https://provenance.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api-provenance-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://provenance-api.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://provenance-api.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://api.provenance.blockval.io",
        provider: "Blockval"
      },
      {
        address: "https://provenance-api.panthea.eu",
        provider: "Panthea EU"
      },
      {
        address: "https://provenance_mainnet_api.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      }
    ],
    grpc: [
      {
        address: "grpc-provenance.takeshi.team:443",
        provider: "TAKESHI"
      },
      {
        address: "provenance-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "grpc-provenance-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "grpc.provenance.blockval.io:9290",
        provider: "Blockval"
      },
      {
        address: "provenance-grpc.panthea.eu:16780",
        provider: "Panthea EU"
      }
    ]
  },
  explorers: [
    {
      kind: "Provenance",
      url: "https://explorer.provenance.io",
      tx_page: "https://explorer.provenance.io/tx/${txHash}"
    },
    {
      kind: "hubble",
      url: "https://hubble.figment.io/provenance/chains/pio-mainnet-1",
      tx_page: "https://hubble.figment.io/provenance/chains/pio-mainnet-1/${block}/transactions/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/provenance",
      tx_page: "https://ping.pub/provenance/tx/${txHash}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/provenance",
      tx_page: "https://www.mintscan.io/provenance/transactions/${txHash}",
      account_page: "https://www.mintscan.io/provenance/accounts/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Provenance",
      tx_page: "https://explorer.stavr.tech/Provenance/txs/${txHash}",
      account_page: "https://explorer.stavr.tech/Provenance/account/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/provenance",
      tx_page: "https://ezstaking.app/provenance/txs/${txHash}",
      account_page: "https://ezstaking.app/provenance/account/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/provenance",
      tx_page: "https://atomscan.com/provenance/transactions/${txHash}",
      account_page: "https://atomscan.com/provenance/accounts/${accountAddress}"
    },
    {
      kind: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}",
      url: "https://explorer.whenmoonwhenlambo.money/provenance",
      tx_page: "https://explorer.whenmoonwhenlambo.money/provenance/tx/${txHash}",
      account_page: "https://explorer.whenmoonwhenlambo.money/provenance/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/provenance/images/prov.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/provenance/images/prov.svg"
  }]
};
var chain_default127 = info351;

// node_modules/chain-registry/esm/mainnet/provenance/ibc.js
var info352 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-175",
      connection_id: "connection-153"
    },
    chain_2: {
      chain_name: "provenance",
      client_id: "07-tendermint-35",
      connection_id: "connection-12"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-116",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-30",
      connection_id: "connection-37"
    },
    chain_2: {
      chain_name: "provenance",
      client_id: "07-tendermint-36",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-20",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1899",
      connection_id: "connection-1472"
    },
    chain_2: {
      chain_name: "provenance",
      client_id: "07-tendermint-31",
      connection_id: "connection-9"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-222",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  }
];
var ibc_default98 = info352;

// node_modules/chain-registry/esm/mainnet/provenance/index.js
var assets127 = assets_default127;
var chain127 = chain_default127;
var ibc98 = ibc_default98;

// node_modules/chain-registry/esm/mainnet/pryzm/assets.js
var info353 = {
  $schema: "../assetlist.schema.json",
  chain_name: "pryzm",
  assets: [{
    description: "The native token of PRYZM",
    denom_units: [{
      denom: "upryzm",
      exponent: 0
    }, {
      denom: "pryzm",
      exponent: 6
    }],
    base: "upryzm",
    name: "Pryzm",
    display: "pryzm",
    symbol: "PRYZM",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pryzm/images/pryzm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pryzm/images/pryzm.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pryzm/images/pryzm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pryzm/images/pryzm.svg"
    }]
  }, {
    description: "The meme token of PRYZM",
    denom_units: [{
      denom: "factory/pryzm1jnhcsa5ddjsjq2t97v6a82z542rduxvtw6wd9h/uauuu",
      exponent: 0
    }, {
      denom: "auuu",
      exponent: 6
    }],
    base: "factory/pryzm1jnhcsa5ddjsjq2t97v6a82z542rduxvtw6wd9h/uauuu",
    name: "AUUU",
    display: "auuu",
    symbol: "AUUU",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pryzm/images/AUUU.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pryzm/images/AUUU.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pryzm/images/AUUU.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pryzm/images/AUUU.svg"
    }]
  }]
};
var assets_default128 = info353;

// node_modules/chain-registry/esm/mainnet/pryzm/chain.js
var info354 = {
  $schema: "../chain.schema.json",
  chain_name: "pryzm",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Pryzm",
  chain_id: "pryzm-1",
  bech32_prefix: "pryzm",
  daemon_name: "pryzmd",
  node_home: "$HOME/.pryzm",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "factory/pryzm1jnhcsa5ddjsjq2t97v6a82z542rduxvtw6wd9h/uauuu",
      fixed_min_gas_price: 0,
      low_gas_price: 0.01,
      average_gas_price: 0.01,
      high_gas_price: 0.01
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "upryzm"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.47.10"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.pryzm.zone",
        provider: "PRYZM"
      },
      {
        address: "https://pryzm-rpc.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://pryzm-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      }
    ],
    rest: [
      {
        address: "https://api.pryzm.zone",
        provider: "PRYZM"
      },
      {
        address: "https://pryzm-api.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://pryzm-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      }
    ],
    grpc: [
      {
        address: "https://grpc.pryzm.zone",
        provider: "PRYZM"
      },
      {
        address: "https://pryzm-grpc.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "pryzm-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      }
    ]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pryzm/images/pryzm-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pryzm/images/pryzm-logo.svg"
  },
  explorers: [{
    kind: "Chainscope",
    url: "https://chainsco.pe/pryzm",
    tx_page: "https://chainsco.pe/pryzm/tx/${txHash}",
    account_page: "https://chainsco.pe/pryzm/address/${accountAddress}"
  }, {
    kind: "PingPub",
    url: "https://cosmosrun.info/pryzm",
    tx_page: "https://cosmosrun.info/pryzm/tx/${txHash}",
    account_page: "https://cosmosrun.info/pryzm/account/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pryzm/images/pryzm-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pryzm/images/pryzm-logo.svg"
  }]
};
var chain_default128 = info354;

// node_modules/chain-registry/esm/mainnet/pryzm/ibc.js
var info355 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-224",
      connection_id: "connection-209"
    },
    chain_2: {
      chain_name: "pryzm",
      client_id: "07-tendermint-7",
      connection_id: "connection-7"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-155",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-88",
      connection_id: "connection-57"
    },
    chain_2: {
      chain_name: "pryzm",
      client_id: "07-tendermint-3",
      connection_id: "connection-3"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-34",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1304",
      connection_id: "connection-1038"
    },
    chain_2: {
      chain_name: "pryzm",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-859",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-267",
      connection_id: "connection-268"
    },
    chain_2: {
      chain_name: "pryzm",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-284",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-98",
      connection_id: "connection-72"
    },
    chain_2: {
      chain_name: "pryzm",
      client_id: "07-tendermint-6",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4329",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-100",
      connection_id: "connection-92"
    },
    chain_2: {
      chain_name: "pryzm",
      client_id: "07-tendermint-5",
      connection_id: "connection-5"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-79",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3206",
      connection_id: "connection-2663"
    },
    chain_2: {
      chain_name: "pryzm",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-75755",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "pryzm",
      client_id: "07-tendermint-4",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-410",
      connection_id: "connection-414"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-473",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default99 = info355;

// node_modules/chain-registry/esm/mainnet/pryzm/index.js
var assets128 = assets_default128;
var chain128 = chain_default128;
var ibc99 = ibc_default99;

// node_modules/chain-registry/esm/mainnet/pundix/assets.js
var info356 = {
  $schema: "../assetlist.schema.json",
  chain_name: "pundix",
  assets: [{
    description: "PUNDIX token is the native token that functions within the Pundi X ecosystem.",
    extended_description: "PUNDIX token is the native token that functions within the Pundi X ecosystem, including PundiX Chain and XPOS. PUNDIX has several core use cases, including:\n- Payment for goods and services from merchants through XPOS\n- Gas Fee on PundiX\xA0Chain\n- Listing tokens in the XPOS\n- Merchant payments for loyalty programs and ads",
    denom_units: [{
      denom: "ibc/55367B7B6572631B78A93C66EF9FDFCE87CDE372CC4ED7848DA78C1EB1DCDD78",
      exponent: 0
    }, {
      denom: "PUNDIX",
      exponent: 18
    }],
    type_asset: "ics20",
    base: "ibc/55367B7B6572631B78A93C66EF9FDFCE87CDE372CC4ED7848DA78C1EB1DCDD78",
    name: "Pundi X Token",
    display: "PUNDIX",
    symbol: "PUNDIX",
    traces: [{
      type: "ibc",
      counterparty: {
        chain_name: "fxcore",
        base_denom: "eth0x0FD10b9899882a6f2fcb5c371E17e70FdEe00C38",
        channel_id: "channel-0"
      },
      chain: {
        channel_id: "channel-0",
        path: "transfer/channel-0/eth0x0FD10b9899882a6f2fcb5c371E17e70FdEe00C38"
      }
    }],
    images: [{
      image_sync: {
        chain_name: "fxcore",
        base_denom: "eth0x0FD10b9899882a6f2fcb5c371E17e70FdEe00C38"
      },
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/pundi-x-token-logo.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/pundi-x-token-logo.svg"
    }],
    socials: {
      website: "https://pundix.com",
      twitter: "https://twitter.com/PundiXLabs"
    }
  }, {
    description: "Purse is the decentralised loyalty program for physical stores and merchants. PURSE token shall serve as governance token of the PURSE Merchant loyalty point platform, the gas fee as well as the transaction fee on PURSE Merchant platform. To launch any merchant loyalty tokens and do transaction on the merchant platform, users and merchants need Purse tokens.",
    denom_units: [{
      denom: "bsc0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C",
      exponent: 0
    }, {
      denom: "PURSE",
      exponent: 18
    }],
    type_asset: "sdk.coin",
    base: "bsc0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C",
    name: "PURSE Token",
    display: "PURSE",
    symbol: "PURSE",
    traces: [{
      type: "bridge",
      counterparty: {
        chain_name: "binancesmartchain",
        base_denom: "0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C",
        contract: "0x84238c00c8313920826D798e3cF6793Ef4F610ad"
      },
      provider: "Function X"
    }],
    images: [{
      image_sync: {
        chain_name: "binancesmartchain",
        base_denom: "0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C"
      },
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/purse-token-logo.svg",
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/purse-token-logo.png"
    }],
    socials: {
      website: "https://purse.land",
      twitter: "https://twitter.com/Purse_Land"
    }
  }]
};
var assets_default129 = info356;

// node_modules/chain-registry/esm/mainnet/pundix/chain.js
var info357 = {
  $schema: "../chain.schema.json",
  chain_name: "pundix",
  chain_id: "PUNDIX",
  website: "https://pundix.com",
  pretty_name: "Pundi X Chain",
  status: "live",
  network_type: "mainnet",
  bech32_prefix: "px",
  daemon_name: "pundixd",
  node_home: "$HOME/.pundix",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ibc/55367B7B6572631B78A93C66EF9FDFCE87CDE372CC4ED7848DA78C1EB1DCDD78",
      fixed_min_gas_price: 2e12,
      low_gas_price: 2e12,
      average_gas_price: 25e11,
      high_gas_price: 3e12
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ibc/55367B7B6572631B78A93C66EF9FDFCE87CDE372CC4ED7848DA78C1EB1DCDD78"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.45.11"
  },
  description: "Pundi X Chain is a dedicated payment-focused blockchain in the Function X network. It is specially designed to perform high throughput transactions with low latency and low transaction fees. In addition, it provides room for future compliance requirement upgrades, hardware (XPOS) integration, and Point-of-Sales compatibility, with tokenonomics that offer incentives to merchants and payment processors.",
  apis: {
    rpc: [{
      address: "https://px-json.pundix.com",
      provider: "Pundi X"
    }, {
      address: "https://pundix.rpc.nodeshub.online:443",
      provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705"
    }],
    rest: [{
      address: "https://px-rest.pundix.com",
      provider: "Pundi X"
    }, {
      address: "https://pundix.api.nodeshub.online:443",
      provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705"
    }],
    grpc: [{
      address: "https://px-grpc.pundix.com",
      provider: "Pundi X"
    }, {
      address: "https://pundix.grpc.nodeshub.online",
      provider: "Nodes Hub"
    }]
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/pundi-x-chain-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/pundi-x-chain-logo.svg"
  }, {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/pundi-x-chain-logo.png"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/pundi-x-chain-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/pundi-x-chain-logo.svg"
  },
  explorers: [{
    kind: "starscan",
    url: "https://starscan.io",
    tx_page: "https://starscan.io/pundix/tx/${txHash}",
    account_page: "https://starscan.io/pundix/address/${accountAddress}"
  }, {
    kind: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705",
    url: "https://explorer.nodeshub.online/pundix/",
    tx_page: "https://explorer.nodeshub.online/pundix/tx/${txHash}",
    account_page: "https://explorer.nodeshub.online/pundix/accounts/${accountAddress}"
  }]
};
var chain_default129 = info357;

// node_modules/chain-registry/esm/mainnet/pundix/ibc.js
var info358 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "fxcore",
    client_id: "07-tendermint-0",
    connection_id: "connection-0"
  },
  chain_2: {
    chain_name: "pundix",
    client_id: "07-tendermint-0",
    connection_id: "connection-0"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosis",
    client_id: "07-tendermint-3059",
    connection_id: "connection-2554"
  },
  chain_2: {
    chain_name: "pundix",
    client_id: "07-tendermint-1",
    connection_id: "connection-1"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-12618",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default100 = info358;

// node_modules/chain-registry/esm/mainnet/pundix/index.js
var assets129 = assets_default129;
var chain129 = chain_default129;
var ibc100 = ibc_default100;

// node_modules/chain-registry/esm/mainnet/pylons/assets.js
var info359 = {
  $schema: "../assetlist.schema.json",
  chain_name: "pylons",
  assets: [{
    description: "The revenue token for Pylons",
    denom_units: [{
      denom: "ubedrock",
      exponent: 0
    }, {
      denom: "rock",
      exponent: 6
    }],
    base: "ubedrock",
    name: "Pylons",
    display: "rock",
    symbol: "ROCK",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pylons/images/pylons.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pylons/images/pylons.png"
    }],
    socials: {
      website: "https://pylons.tech",
      twitter: "https://twitter.com/pylonstech"
    }
  }]
};
var assets_default130 = info359;

// node_modules/chain-registry/esm/mainnet/pylons/chain.js
var info360 = {
  $schema: "../chain.schema.json",
  chain_name: "pylons",
  status: "live",
  network_type: "mainnet",
  website: "https://pylons.tech",
  pretty_name: "Pylons",
  chain_id: "pylons-mainnet-1",
  bech32_prefix: "pylo",
  node_home: "$HOME/.pylons",
  daemon_name: "pylonsd",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ubedrock",
      fixed_min_gas_price: 0,
      low_gas_price: 0,
      average_gas_price: 0.5,
      high_gas_price: 1
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ubedrock"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pylons/images/pylons.png"
  },
  apis: {
    rpc: [{
      address: "https://rpc.nodejumper.io:443/pylons",
      provider: "Nodejumper.io"
    }, {
      address: "https:/pylons-rpc.noders.services",
      provider: "[NODERS]TEAM"
    }],
    rest: [{
      address: "https://rest.nodejumper.io/pylons",
      provider: "Nodejumper.io"
    }, {
      address: "https://pylons-api.noders.services",
      provider: "[NODERS]TEAM"
    }]
  },
  explorers: [{
    kind: "Nodes.guru",
    url: "https://pylons.explorers.guru/",
    tx_page: "https://pylons.explorers.guru/transaction/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pylons/images/pylons.png"
  }]
};
var chain_default130 = info360;

// node_modules/chain-registry/esm/mainnet/pylons/ibc.js
var info361 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosis",
    client_id: "07-tendermint-3070",
    connection_id: "connection-2558"
  },
  chain_2: {
    chain_name: "pylons",
    client_id: "07-tendermint-32",
    connection_id: "connection-25"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-17683",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-29",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live"
    }
  }]
}];
var ibc_default101 = info361;

// node_modules/chain-registry/esm/mainnet/pylons/index.js
var assets130 = assets_default130;
var chain130 = chain_default130;
var ibc101 = ibc_default101;

// node_modules/chain-registry/esm/mainnet/qfs/assets.js
var info362 = {
  $schema: "../assetlist.schema.json",
  chain_name: "qfs",
  assets: [{
    description: "QFS stands for Quantum Financial Systems, the aim is to bridge traditional finance with the crypto\xA0ecosystem",
    extended_description: "QFS stands for Quantum Financial Systems, a revolutionary concept designed to integrate traditional financial systems with the rapidly evolving world of cryptocurrency and blockchain technology. The primary aim of QFS is to create a seamless interface that allows for the secure, efficient, and transparent exchange of assets between these two financial realms. By leveraging advanced quantum computing capabilities, QFS seeks to enhance the speed and security of transactions, reduce the risk of fraud, and provide a robust framework for financial innovation. This system is poised to transform how we conduct financial operations, offering unprecedented levels of trust and efficiency in the global financial landscape. Through the integration of traditional banking structures with the decentralized nature of cryptocurrencies, QFS aspires to bridge the gap between conventional and digital finance, paving the way for a more inclusive and technologically advanced financial\xA0future.",
    denom_units: [{
      denom: "qfs",
      exponent: 0
    }],
    base: "qfs",
    name: "qfs",
    display: "qfs",
    symbol: "QFS",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/qfs/images/qfs.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/qfs/images/qfs.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/qfs/images/qfs.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/qfs/images/qfs.svg"
    }],
    socials: {
      website: "https://qfsone.com/"
    }
  }]
};
var assets_default131 = info362;

// node_modules/chain-registry/esm/mainnet/qfs/chain.js
var info363 = {
  $schema: "../chain.schema.json",
  chain_name: "qfs",
  status: "live",
  network_type: "mainnet",
  website: "https://qfs.com/",
  pretty_name: "Quantum Financial Systems",
  chain_id: "qfs-1",
  bech32_prefix: "qfs",
  daemon_name: "qfs",
  node_home: "$HOME/.ssc",
  key_algos: ["secp256k1"],
  slip44: 1179993431,
  staking: {
    staking_tokens: [{
      denom: "qfs"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  fees: {
    fee_tokens: [{
      denom: "qfs",
      low_gas_price: 1e-6,
      average_gas_price: 5e-6,
      high_gas_price: 1e-4
    }]
  },
  apis: {
    rpc: [{
      address: "https://rcp.qfsone.com",
      provider: "qfs"
    }],
    rest: [{
      address: "https://lcd.qfsone.com",
      provider: "qfs"
    }],
    grpc: [{
      address: "https://grc.qfsone.com:9090",
      provider: "qfs"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/qfs/images/qfs.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/qfs/images/qfs.svg"
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://blockexplorer.qfsone.com/qfs",
    tx_page: "https://blockexplorer.qfsone.com/qfs/tx/${txHash}",
    account_page: "https://blockexplorer.qfsone.com/qfs/accounts/${accountAddress}"
  }],
  keywords: [],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/qfs/images/qfs.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/qfs/images/qfs.svg"
  }]
};
var chain_default131 = info363;

// node_modules/chain-registry/esm/mainnet/qfs/index.js
var assets131 = assets_default131;
var chain131 = chain_default131;

// node_modules/chain-registry/esm/mainnet/quasar/assets.js
var info364 = {
  $schema: "../assetlist.schema.json",
  chain_name: "quasar",
  assets: [
    {
      description: "The native token of Quasar",
      denom_units: [{
        denom: "uqsr",
        exponent: 0,
        aliases: []
      }, {
        denom: "qsr",
        exponent: 6,
        aliases: []
      }],
      type_asset: "sdk.coin",
      base: "uqsr",
      name: "Quasar",
      display: "qsr",
      symbol: "QSR",
      coingecko_id: "quasar-2",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quasar/images/quasar.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quasar/images/quasar.png"
      }],
      socials: {
        website: "https://www.quasar.fi/",
        twitter: "https://twitter.com/QuasarFi"
      }
    },
    {
      description: "OSMO from Osmosis",
      denom_units: [{
        denom: "ibc/0471F1C4E7AFD3F07702BEF6DC365268D64570F7C1FDC98EA6098DD6DE59817B",
        exponent: 0,
        aliases: ["uosmo"]
      }, {
        denom: "osmo",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/0471F1C4E7AFD3F07702BEF6DC365268D64570F7C1FDC98EA6098DD6DE59817B",
      name: "Osmosis",
      display: "osmo",
      symbol: "OSMO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "uosmo",
          channel_id: "channel-668"
        },
        chain: {
          channel_id: "channel-1",
          path: "transfer/channel-1/uosmo"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "uosmo"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      }
    },
    {
      description: "ATOM from Osmosis",
      denom_units: [{
        denom: "ibc/FA0006F056DB6719B8C16C551FC392B62F5729978FC0B125AC9A432DBB2AA1A5",
        exponent: 0,
        aliases: ["uatom"]
      }, {
        denom: "atom",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/FA0006F056DB6719B8C16C551FC392B62F5729978FC0B125AC9A432DBB2AA1A5",
      name: "Atom",
      display: "atom",
      symbol: "ATOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2",
          channel_id: "channel-668"
        },
        chain: {
          channel_id: "channel-1",
          path: "transfer/channel-1/transfer/channel-0/uatom"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }
    },
    {
      description: "USDC.axl from Osmosis",
      denom_units: [{
        denom: "ibc/FA7775734CC73176B7425910DE001A1D2AD9B6D9E93129A5D0750EAD13E4E63A",
        exponent: 0,
        aliases: ["uusdc"]
      }, {
        denom: "usdc",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/FA7775734CC73176B7425910DE001A1D2AD9B6D9E93129A5D0750EAD13E4E63A",
      name: "USD Coin",
      display: "usdc",
      symbol: "USDC.axl",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858",
          channel_id: "channel-668"
        },
        chain: {
          channel_id: "channel-1",
          path: "transfer/channel-1/transfer/channel-208/uusdc"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.axl.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/usdc.axl.svg"
      }
    }
  ]
};
var assets_default132 = info364;

// node_modules/chain-registry/esm/mainnet/quasar/chain.js
var info365 = {
  $schema: "../chain.schema.json",
  chain_name: "quasar",
  status: "live",
  network_type: "mainnet",
  website: "https://www.quasar.fi/",
  pretty_name: "Quasar",
  chain_id: "quasar-1",
  bech32_prefix: "quasar",
  daemon_name: "quasarnoded",
  node_home: "$HOME/.quasarnode",
  key_algos: ["secp256k1"],
  slip44: 118,
  staking: {
    staking_tokens: [{
      denom: "uqsr"
    }]
  },
  fees: {
    fee_tokens: [
      {
        denom: "uqsr",
        fixed_min_gas_price: 0.1,
        low_gas_price: 0.1,
        average_gas_price: 0.25,
        high_gas_price: 0.3
      },
      {
        denom: "ibc/0471F1C4E7AFD3F07702BEF6DC365268D64570F7C1FDC98EA6098DD6DE59817B",
        fixed_min_gas_price: 0.01,
        low_gas_price: 0.01,
        average_gas_price: 0.025,
        high_gas_price: 0.03
      },
      {
        denom: "ibc/FA0006F056DB6719B8C16C551FC392B62F5729978FC0B125AC9A432DBB2AA1A5",
        fixed_min_gas_price: 0.01,
        low_gas_price: 0.01,
        average_gas_price: 0.025,
        high_gas_price: 0.03
      },
      {
        denom: "ibc/FA7775734CC73176B7425910DE001A1D2AD9B6D9E93129A5D0750EAD13E4E63A",
        fixed_min_gas_price: 0.01,
        low_gas_price: 0.01,
        average_gas_price: 0.025,
        high_gas_price: 0.03
      }
    ]
  },
  codebase: {
    cosmos_sdk_version: "v0.45.16",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.31.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quasar/images/quasar.png"
  },
  description: "Quasar is the first decentralized asset management (D.A.M.) platform enabled by IBC. A secure, permissionless, composable, and diversified interchain DeFi experience is finally here.",
  apis: {
    rpc: [
      {
        address: "https://quasar-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://quasar-rpc.polkachu.com",
        provider: "polkachu"
      },
      {
        address: "https://rpc-quasar.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://quasar-rpc.enigma-validator.com",
        provider: "Enigma"
      },
      {
        address: "https://rpc-quasar.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://quasar-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://quasar.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://rpc-quasar.validavia.me",
        provider: "Validavia"
      },
      {
        address: "https://quasar-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://quasar-rpc.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://quasar-rpc.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://quasar-rpc.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://quasar-rpc.genznodes.dev",
        provider: "genznodes"
      }
    ],
    rest: [
      {
        address: "https://quasar-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://quasar-api.polkachu.com",
        provider: "polkachu"
      },
      {
        address: "https://lcd-quasar.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://api-quasar.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://quasar-lcd.enigma-validator.com",
        provider: "Enigma"
      },
      {
        address: "https://quasar-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://quasar.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://lcd-quasar.validavia.me",
        provider: "Validavia"
      },
      {
        address: "https://quasar-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://quasar-api.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://quasar-api.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://quasar-api.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://quasar-api.genznodes.dev",
        provider: "genznodes"
      }
    ],
    grpc: [
      {
        address: "https://quasar-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "quasar-grpc.polkachu.com:18290",
        provider: "polkachu"
      },
      {
        address: "grpc-quasar.cosmos-spaces.cloud:12890",
        provider: "Cosmos Spaces"
      },
      {
        address: "quasar-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "quasar.grpc.kjnodes.com:14890",
        provider: "kjnodes"
      },
      {
        address: "quasar-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "quasar-grpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "quasar-grpc.stakeandrelax.net:18290",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "quasar-grpc.genznodes.dev:29090",
        provider: "genznodes"
      }
    ]
  },
  explorers: [
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/quasar",
      tx_page: "https://www.mintscan.io/quasar/transactions/${txHash}",
      account_page: "https://www.mintscan.io/quasar/accounts/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/quasar",
      tx_page: "https://ezstaking.app/quasar/txs/${txHash}",
      account_page: "https://ezstaking.app/quasar/account/${accountAddress}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/quasar",
      tx_page: "https://mainnet.whispernode.com/quasar/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/quasar/account/${accountAddress}"
    }
  ],
  keywords: ["mainnet"],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quasar/images/quasar.png"
  }]
};
var chain_default132 = info365;

// node_modules/chain-registry/esm/mainnet/quasar/ibc.js
var info366 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2703",
    connection_id: "connection-2240"
  },
  chain_2: {
    chain_name: "quasar",
    client_id: "07-tendermint-1",
    connection_id: "connection-1"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-688",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default102 = info366;

// node_modules/chain-registry/esm/mainnet/quasar/index.js
var assets132 = assets_default132;
var chain132 = chain_default132;
var ibc102 = ibc_default102;

// node_modules/chain-registry/esm/mainnet/quicksilver/assets.js
var info367 = {
  $schema: "../assetlist.schema.json",
  chain_name: "quicksilver",
  assets: [
    {
      description: "QCK - native token of Quicksilver",
      denom_units: [{
        denom: "uqck",
        exponent: 0,
        aliases: []
      }, {
        denom: "qck",
        exponent: 6,
        aliases: []
      }],
      base: "uqck",
      name: "Quicksilver",
      display: "qck",
      symbol: "QCK",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qck.png"
      },
      coingecko_id: "quicksilver",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qck.png"
      }],
      socials: {
        website: "https://quicksilver.zone/",
        twitter: "https://twitter.com/quicksilverzone"
      }
    },
    {
      description: "Quicksilver Liquid Staked STARS",
      denom_units: [{
        denom: "uqstars",
        exponent: 0,
        aliases: []
      }, {
        denom: "qstars",
        exponent: 6,
        aliases: []
      }],
      base: "uqstars",
      name: "Quicksilver Liquid Staked STARS",
      display: "qstars",
      symbol: "qSTARS",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "stargaze",
          base_denom: "ustars"
        },
        provider: "Quicksilver"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qstars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qstars.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qstars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qstars.svg"
      }]
    },
    {
      description: "Quicksilver Liquid Staked ATOM",
      denom_units: [{
        denom: "uqatom",
        exponent: 0,
        aliases: []
      }, {
        denom: "qatom",
        exponent: 6,
        aliases: []
      }],
      base: "uqatom",
      name: "Quicksilver Liquid Staked ATOM",
      display: "qatom",
      symbol: "qATOM",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "cosmoshub",
          base_denom: "uatom"
        },
        provider: "Quicksilver"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qatom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qatom.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qatom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qatom.svg"
      }]
    },
    {
      description: "Quicksilver Liquid Staked REGEN",
      denom_units: [{
        denom: "uqregen",
        exponent: 0,
        aliases: []
      }, {
        denom: "qregen",
        exponent: 6,
        aliases: []
      }],
      base: "uqregen",
      name: "Quicksilver Liquid Staked Regen",
      display: "qregen",
      symbol: "qREGEN",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "regen",
          base_denom: "uregen"
        },
        provider: "Quicksilver"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qregen.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qregen.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qregen.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qregen.svg"
      }]
    },
    {
      description: "Quicksilver Liquid Staked OSMO",
      denom_units: [{
        denom: "uqosmo",
        exponent: 0,
        aliases: []
      }, {
        denom: "qosmo",
        exponent: 6,
        aliases: []
      }],
      base: "uqosmo",
      name: "Quicksilver Liquid Staked OSMO",
      display: "qosmo",
      symbol: "qOSMO",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "uosmo"
        },
        provider: "Quicksilver"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qosmo.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qosmo.svg"
      }]
    },
    {
      description: "Quicksilver Liquid Staked SOMM",
      denom_units: [{
        denom: "uqsomm",
        exponent: 0,
        aliases: []
      }, {
        denom: "qsomm",
        exponent: 6,
        aliases: []
      }],
      base: "uqsomm",
      name: "Quicksilver Liquid Staked SOMM",
      display: "qsomm",
      symbol: "qSOMM",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "sommelier",
          base_denom: "usomm"
        },
        provider: "Quicksilver"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qsomm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qsomm.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qsomm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qsomm.svg"
      }]
    },
    {
      description: "Quicksilver Liquid Staked JUNO",
      denom_units: [{
        denom: "uqjuno",
        exponent: 0,
        aliases: []
      }, {
        denom: "qjuno",
        exponent: 6,
        aliases: []
      }],
      base: "uqjuno",
      name: "Quicksilver Liquid Staked JUNO",
      display: "qjuno",
      symbol: "qJUNO",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "juno",
          base_denom: "ujuno"
        },
        provider: "Quicksilver"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qjuno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qjuno.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qjuno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qjuno.svg"
      }]
    },
    {
      description: "Quicksilver Liquid Staked DYDX",
      denom_units: [{
        denom: "aqdydx",
        exponent: 0,
        aliases: []
      }, {
        denom: "qdydx",
        exponent: 18,
        aliases: []
      }],
      base: "aqdydx",
      name: "Quicksilver Liquid Staked DYDX",
      display: "qdydx",
      symbol: "qDYDX",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "dydx",
          base_denom: "adydx"
        },
        provider: "Quicksilver"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qdydx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qdydx.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qdydx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qdydx.svg"
      }]
    },
    {
      description: "Quicksilver Liquid Staked SAGA",
      denom_units: [{
        denom: "uqsaga",
        exponent: 0,
        aliases: []
      }, {
        denom: "qsaga",
        exponent: 6,
        aliases: []
      }],
      base: "uqsaga",
      name: "Quicksilver Liquid Staked SAGA",
      display: "qsaga",
      symbol: "qSAGA",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "saga",
          base_denom: "usaga"
        },
        provider: "Quicksilver"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qsaga.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qsaga.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qsaga.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qsaga.svg"
      }]
    },
    {
      description: "Quicksilver Liquid Staked BLD",
      denom_units: [{
        denom: "uqbld",
        exponent: 0,
        aliases: []
      }, {
        denom: "qbld",
        exponent: 6,
        aliases: []
      }],
      base: "uqbld",
      name: "Quicksilver Liquid Staked BLD",
      display: "qbld",
      symbol: "qBLD",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "agoric",
          base_denom: "ubld"
        },
        provider: "Quicksilver"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qbld.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qbld.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qbld.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qbld.svg"
      }]
    },
    {
      description: "Noble USDC via dYdX Protocol",
      denom_units: [{
        denom: "ibc/5666A86DCC869C75F69A7938AD6DCFECAC4A09C73522599E7A85B10143E5FBD2",
        exponent: 0,
        aliases: ["uusdc"]
      }, {
        denom: "usdc",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/5666A86DCC869C75F69A7938AD6DCFECAC4A09C73522599E7A85B10143E5FBD2",
      name: "Noble USDC",
      display: "usdc",
      symbol: "USDC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "dydx",
          base_denom: "ibc/8E27BA2D5493AF5636760E354E46004562C46AB7EC0CC4C1CA14E9E20E2545B5",
          channel_id: "channel-32"
        },
        chain: {
          channel_id: "channel-164",
          path: "transfer/channel-164/transfer/channel-0/uusdc"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "noble",
          base_denom: "uusdc"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
      }]
    }
  ]
};
var assets_default133 = info367;

// node_modules/chain-registry/esm/mainnet/quicksilver/chain.js
var info368 = {
  $schema: "../chain.schema.json",
  chain_name: "quicksilver",
  status: "live",
  network_type: "mainnet",
  website: "https://quicksilver.zone/",
  pretty_name: "Quicksilver",
  chain_id: "quicksilver-2",
  daemon_name: "quicksilverd",
  node_home: "$HOME/.quicksilverd",
  bech32_prefix: "quick",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uqck",
      fixed_min_gas_price: 1e-4,
      low_gas_price: 1e-4,
      average_gas_price: 1e-4,
      high_gas_price: 25e-5
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uqck"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.46.16",
    cosmwasm_enabled: true,
    cosmwasm_version: "notional-labs/wasmd v0.29.0-sdk46.0.20221114145317-d6e67fd50956"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qck.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qck.svg"
  },
  description: "Liquid Stake your Cosmos assets with your preferred validator and receive liquid staked assets (qASSETs) that you can use for swapping, pooling, lending, and more, all while your original stake earns staking APY from securing the network.",
  apis: {
    rpc: [
      {
        address: "https://rpc-quicksilver.takeshi.team:443",
        provider: "TAKESHI"
      },
      {
        address: "https://rpc.quicksilver.zone:443",
        provider: "Quicksilver"
      },
      {
        address: "https://rpc-quicksilver-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "https://quicksilver-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc-quicksilver.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://m-quicksilver.rpc.utsa.tech",
        provider: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}"
      },
      {
        address: "http://quick.rpc.m.stavr.tech:21027",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://quicksilver-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://quicksilver-rpc.ibs.team:443",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://quicksilver.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://rpc-quicksilver.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "https://rpc.quicksilver.indonode.net",
        provider: "Indonode"
      },
      {
        address: "https://quicksilver-rpc.staketab.org:443",
        provider: "Staketab"
      },
      {
        address: "https://quicksilver-rpc.theamsolutions.info",
        provider: "AM Solutions"
      },
      {
        address: "https://quicksilver-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://rpc-quicksilver.mms.team/",
        provider: "MMS"
      },
      {
        address: "https://quicksilver-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://quicksilver-rpc.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://mainnet-quicksilver-rpc.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://quicksilver.tdrsys.com:2053",
        provider: "TdrSys"
      },
      {
        address: "https://rpc.quicksilver.validatus.com",
        provider: "Validatus"
      },
      {
        address: "https://quicksilver-rpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    rest: [
      {
        address: "https://api-quicksilver.takeshi.team:443",
        provider: "TAKESHI"
      },
      {
        address: "https://api-quicksilver-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "https://quicksilver-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://api-quicksilver.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://quicksilver-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://m-quicksilver.api.utsa.tech",
        provider: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}"
      },
      {
        address: "https://quick.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://quicksilver.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://rest-quicksilver.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "https://api.quicksilver.indonode.net",
        provider: "Indonode"
      },
      {
        address: "https://quicksilver-rest.staketab.org",
        provider: "Staketab"
      },
      {
        address: "https://quicksilver-api.theamsolutions.info",
        provider: "AM Solutions"
      },
      {
        address: "https://quicksilver-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://api-quicksilver.mms.team",
        provider: "MMS"
      },
      {
        address: "https://quicksilver-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://quicksilver-api.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://mainnet-quicksilver-api.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://quicksilver.tdrsys.com",
        provider: "TdrSys"
      },
      {
        address: "https://api.quicksilver.validatus.com",
        provider: "Validatus"
      },
      {
        address: "https://quicksilver-api.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    grpc: [
      {
        address: "grpc-quicksilver.takeshi.team:443",
        provider: "TAKESHI"
      },
      {
        address: "grpc-quicksilver-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "quicksilver-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "quicksilver.grpc.nodersteam.com:9161",
        provider: "[NODERS]TEAM"
      },
      {
        address: "grpc-quicksilver.cosmos-spaces.cloud:3300",
        provider: "Cosmos Spaces"
      },
      {
        address: "quicksilver-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "quicksilver.grpc.kjnodes.com:11190",
        provider: "kjnodes"
      },
      {
        address: "quick.grpc.m.stavr.tech:9113",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "grpc-quicksilver.architectnodes.com:1443",
        provider: "Architect Nodes"
      },
      {
        address: "archive-grpc-quicksilver.huginn.tech:9090",
        provider: "Huginn"
      },
      {
        address: "https://grpc.quicksilver.indonode.net:28090",
        provider: "Indonode"
      },
      {
        address: "services.staketab.com:9034",
        provider: "Staketab"
      },
      {
        address: "https://quicksilver-grpc.theamsolutions.info:9797",
        provider: "AM Solutions"
      },
      {
        address: "quicksilver-grpc.w3coins.io:11190",
        provider: "w3coins"
      },
      {
        address: "grpc-quicksilver.mms.team:443",
        provider: "MMS"
      },
      {
        address: "quicksilver-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "quicksilver-grpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "mainnet-quicksilver.konsortech.xyz:46090",
        provider: "KonsorTech"
      },
      {
        address: "https://quicksilver.tdrsys.com:2083",
        provider: "TdrSys"
      },
      {
        address: "grpc.quicksilver.validatus.com",
        provider: "Validatus"
      },
      {
        address: "quicksilver-grpc.noders.services:16090",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/quicksilver",
      tx_page: "https://www.mintscan.io/quicksilver/transactions/${txHash}",
      account_page: "https://www.mintscan.io/quicksilver/accounts/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/quicksilver",
      tx_page: "https://ezstaking.app/quicksilver/txs/${txHash}",
      account_page: "https://ezstaking.app/quicksilver/account/${accountAddress}"
    },
    {
      kind: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400} explorer",
      url: "https://exp.utsa.tech/quicksilver",
      tx_page: "https://exp.utsa.tech/quicksilver/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525} explorer",
      url: "https://explorer.stavr.tech/quicksilver-mainnet",
      tx_page: "https://explorer.stavr.tech/quicksilver-mainnet/tx/${txHash}"
    },
    {
      kind: "Stake-Take",
      url: "https://explorer.stake-take.com/quicksilver",
      tx_page: "https://explorer.stake-take.com/quicksilver/tx/${txHash}"
    },
    {
      kind: "AM Solutions Explorers",
      url: "https://explorer.theamsolutions.info/quicksilver-main/staking",
      tx_page: "https://explorer.theamsolutions.info/quicksilver-main/tx/${txHash}"
    },
    {
      kind: "KonsorTech",
      url: "https://explorer.konsortech.xyz/quicksilver/staking",
      tx_page: "https://explorer.konsortech.xyz/quicksilver/tx/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qck.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qck.svg"
  }]
};
var chain_default133 = info368;

// node_modules/chain-registry/esm/mainnet/quicksilver/ibc.js
var info369 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-36",
      connection_id: "connection-39"
    },
    chain_2: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-83",
      connection_id: "connection-58"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-34",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-116",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-31",
      connection_id: "connection-16"
    },
    chain_2: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-78",
      connection_id: "connection-53"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-94",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1018",
      connection_id: "connection-709"
    },
    chain_2: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-2",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-467",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1"
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-318",
      connection_id: "connection-309"
    },
    chain_2: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-17",
      connection_id: "connection-10"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-215",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-22",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1"
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2400",
      connection_id: "connection-1889"
    },
    chain_2: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-6",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-522",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "persistence",
      client_id: "07-tendermint-96",
      connection_id: "connection-77"
    },
    chain_2: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-15",
      connection_id: "connection-8"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-73",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-16",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-16",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "regen",
      client_id: "07-tendermint-113",
      connection_id: "connection-102"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-61",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1"
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-28",
      connection_id: "connection-14"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-138",
      connection_id: "connection-99"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-52",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-65",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1"
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-225",
      connection_id: "connection-159"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-124",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1"
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-27",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-183",
      connection_id: "connection-122"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-49",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-53",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1"
    }]
  }
];
var ibc_default103 = info369;

// node_modules/chain-registry/esm/mainnet/quicksilver/index.js
var assets133 = assets_default133;
var chain133 = chain_default133;
var ibc103 = ibc_default103;

// node_modules/chain-registry/esm/mainnet/qwoyn/assets.js
var info370 = {
  $schema: "../assetlist.schema.json",
  chain_name: "qwoyn",
  assets: [{
    description: "The native governance token for Qwoyn Network",
    extended_description: "The Qwoyn Network stands as a cutting-edge gaming hub that embeds Web3 technologies into the core of interactive entertainment. It revolutionizes the gaming industry by ensuring true ownership of in-game assets for players, facilitated through blockchain. This approach not only enhances gameplay but also fosters a unique ecosystem of interoperability and innovation. As a beacon in the gaming world, Qwoyn Network is dedicated to merging the excitement of traditional gaming with the transformative potential of Web3, creating a seamless and enriched gaming experience.",
    denom_units: [{
      denom: "uqwoyn",
      exponent: 0
    }, {
      denom: "qwoyn",
      exponent: 6
    }],
    base: "uqwoyn",
    name: "Qwoyn Network",
    display: "qwoyn",
    symbol: "QWOYN",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/qwoyn/images/qwoyn.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/qwoyn/images/qwoyn.png"
    }],
    coingecko_id: "qwoyn",
    keywords: ["gaming"],
    socials: {
      website: "https://qwoyn.studio",
      twitter: "https://twitter.com/Qwoyn_Studios"
    }
  }]
};
var assets_default134 = info370;

// node_modules/chain-registry/esm/mainnet/qwoyn/chain.js
var info371 = {
  $schema: "../chain.schema.json",
  chain_name: "qwoyn",
  status: "live",
  network_type: "mainnet",
  website: "https://qwoyn.studio/",
  description: "The Qwoyn Network stands as a cutting-edge gaming hub that embeds Web3 technologies into the core of interactive entertainment. It revolutionizes the gaming industry by ensuring true ownership of in-game assets for players, facilitated through blockchain. This approach not only enhances gameplay but also fosters a unique ecosystem of interoperability and innovation. As a beacon in the gaming world, Qwoyn Network is dedicated to merging the excitement of traditional gaming with the transformative potential of Web3, creating a seamless and enriched gaming experience.",
  pretty_name: "Qwoyn",
  chain_id: "qwoyn-1",
  bech32_prefix: "qwoyn",
  daemon_name: "qwoynd",
  node_home: "$HOME/.qwoynd",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uqwoyn",
      fixed_min_gas_price: 0.03,
      low_gas_price: 0.03,
      average_gas_price: 0.05,
      high_gas_price: 0.075
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uqwoyn"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.47.6",
    cosmwasm_version: "0.40.0"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.qwoyn.studio:443",
        provider: "Qwoyn Studios"
      },
      {
        address: "https://rpc-qwoyn.theamsolutions.info:443",
        provider: "AM Solutions"
      },
      {
        address: "https://qwoyn.rpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://qwoyn-rpc.staketab.org:443",
        provider: "Staketab"
      },
      {
        address: "https://qwoyn-rpc-archive.staketab.org:443",
        provider: "Staketab archive"
      },
      {
        address: "https://qwoyn-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc-qwoyn.mzonder.com:443",
        provider: "MZONDER"
      },
      {
        address: "https://rpc.qwoyn.bronbro.io:443",
        provider: "Bro_n_Bro"
      }
    ],
    grpc: [
      {
        address: "services.staketab.com:9430",
        provider: "Staketab"
      },
      {
        address: "qwoyn.grpc.m.stavr.tech:1907",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "services.staketab.com:2000",
        provider: "Staketab archive"
      },
      {
        address: "https://grpc-qwoyn.theamsolutions.info:443",
        provider: "AM Solutions"
      },
      {
        address: "https://qwoyn-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "grpc-qwoyn.mzonder.com:443",
        provider: "MZONDER"
      },
      {
        address: "https://grpc.qwoyn.bronbro.io:443",
        provider: "Bro_n_Bro"
      }
    ],
    rest: [
      {
        address: "https://rest-qwoyn.theamsolutions.info:443",
        provider: "AM Solutions"
      },
      {
        address: "https://qwoyn-rest.staketab.org",
        provider: "Staketab"
      },
      {
        address: "https://qwoyn.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://qwoyn-rest-archive.staketab.org",
        provider: "Staketab archive"
      },
      {
        address: "https://qwoyn-api.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://api-qwoyn.mzonder.com",
        provider: "MZONDER"
      },
      {
        address: "https://lcd.qwoyn.bronbro.io:443",
        provider: "Bro_n_Bro"
      }
    ]
  },
  explorers: [
    {
      kind: "ping",
      url: "https://explorer.theamsolutions.info/qwoyn-main/",
      tx_page: "https://explorer.theamsolutions.info/qwoyn-main/blocks",
      account_page: "https://explorer.theamsolutions.info/qwoyn-main/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Qwoyn-Mainnet",
      tx_page: "https://explorer.stavr.tech/Qwoyn-Mainnet/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Qwoyn-Mainnet/account/${accountAddress}"
    },
    {
      kind: "ping",
      url: "https://explorer.theamsolutions.info/QWOYN-MAIN",
      tx_page: "https://explorer.theamsolutions.info/QWOYN-MAIN/tx/${txHash}",
      account_page: "https://explorer.theamsolutions.info/QWOYN-MAIN/account/${accountAddress}"
    }
  ],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/qwoyn/images/qwoyn.png"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/qwoyn/images/qwoyn.png"
  }]
};
var chain_default134 = info371;

// node_modules/chain-registry/esm/mainnet/qwoyn/ibc.js
var info372 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "archway",
    client_id: "07-tendermint-55",
    connection_id: "connection-65"
  },
  chain_2: {
    chain_name: "qwoyn",
    client_id: "07-tendermint-8",
    connection_id: "connection-5"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-88",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-5",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "astrovault"
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2831",
    connection_id: "connection-2345"
  },
  chain_2: {
    chain_name: "qwoyn",
    client_id: "07-tendermint-0",
    connection_id: "connection-0"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-880",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default104 = info372;

// node_modules/chain-registry/esm/mainnet/qwoyn/index.js
var assets134 = assets_default134;
var chain134 = chain_default134;
var ibc104 = ibc_default104;

// node_modules/chain-registry/esm/mainnet/realio/assets.js
var info373 = {
  $schema: "../assetlist.schema.json",
  chain_name: "realio",
  assets: [{
    description: "The native currency of the Realio Network.",
    extended_description: "An interoperable Layer-1 multi-chain Web3 ecosystem focused on the issuance and management of digitally native real-world assets (RWAs). Its design is fully open-source, permissionless, and purpose-built.",
    denom_units: [{
      denom: "ario",
      exponent: 0
    }, {
      denom: "rio",
      exponent: 18
    }],
    base: "ario",
    name: "Realio Network",
    display: "rio",
    symbol: "RIO",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/realio/images/rio.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/realio/images/rio.svg"
    },
    coingecko_id: "realio-network",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/realio/images/rio.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/realio/images/rio.svg",
      theme: {
        primary_color_hex: "#000000",
        background_color_hex: "#000000",
        circle: true
      }
    }],
    socials: {
      webiste: "https://realio.network/",
      twitter: "https://x.com/realio_network"
    }
  }, {
    description: "A hybrid equity token that represent ownership of the Realio Ecosystem and provides utility functions on the Network.",
    denom_units: [{
      denom: "arst",
      exponent: 0
    }, {
      denom: "rst",
      exponent: 18
    }],
    base: "arst",
    name: "Realio Security Token",
    display: "rst",
    symbol: "RST",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/realio/images/rst.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/realio/images/rst.png"
    }]
  }]
};
var assets_default135 = info373;

// node_modules/chain-registry/esm/mainnet/realio/chain.js
var info374 = {
  $schema: "../chain.schema.json",
  chain_name: "realio",
  status: "live",
  network_type: "mainnet",
  website: "https://realio.network/",
  pretty_name: "Realio Network",
  chain_id: "realionetwork_3301-1",
  bech32_prefix: "realio",
  node_home: "$HOME/.realio-network",
  daemon_name: "realio-networkd",
  key_algos: ["ethsecp256k1"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "ario",
      fixed_min_gas_price: 1e9,
      low_gas_price: 4e9,
      average_gas_price: 5e9,
      high_gas_price: 8e9
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ario"
    }, {
      denom: "arst"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.46.12"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/realio/images/rio.png"
  },
  apis: {
    rpc: [
      {
        address: "https://realio-rpc.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://realio.rpc.bccnodes.com/",
        provider: "BccNodes"
      },
      {
        address: "https://rpc-realio-network.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "http://realio.rpc.m.stavr.tech:21097",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc.realio.indonode.net",
        provider: "Indonode"
      },
      {
        address: "https://rpc-realio.vinjan.xyz",
        provider: "vinjan"
      },
      {
        address: "https://api-realio.sr20de.xyz",
        provider: "Sr20de"
      },
      {
        address: "https://rpc.realio.safeblock.space",
        provider: "Safe Block"
      },
      {
        address: "https://realio.declab.pro:26622",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "https://realio-rpc.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://rpc-realio.blockval.io",
        provider: "Blockval"
      }
    ],
    rest: [
      {
        address: "https://realio-api.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://realio.lcd.bccnodes.com/",
        provider: "BccNodes"
      },
      {
        address: "https://api-realio-network.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "https://realio.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api.realio.indonode.net",
        provider: "Indonode"
      },
      {
        address: "https://api-realio.vinjan.xyz",
        provider: "vinjan"
      },
      {
        address: "https://rpc-realio.sr20de.xyz",
        provider: "Sr20de"
      },
      {
        address: "https://api.realio.safeblock.space",
        provider: "Safe Block"
      },
      {
        address: "https://realio.declab.pro:443",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "https://realio-api.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://api-realio.blockval.io",
        provider: "Blockval"
      }
    ],
    grpc: [
      {
        address: "realio-grpc.genznodes.dev:30090",
        provider: "genznodes"
      },
      {
        address: "realio.grpc.bccnodes.com:10990",
        provider: "BccNodes"
      },
      {
        address: "http://realio.grpc.m.stavr.tech:9062",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://grpc-realio.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "https://grpc.realio.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "https://grpc-realio.sr20de.xyz",
        provider: "Sr20de"
      },
      {
        address: "grpc.realio.safeblock.space:9090",
        provider: "Safe Block"
      },
      {
        address: "realio.grpc.skynodejs.net",
        provider: "skynodejs"
      },
      {
        address: "https://realio.declab.pro:9015",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "realio-grpc.noders.services:22090",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://grpc-realio.blockval.io",
        provider: "Blockval"
      }
    ],
    "evm-http-jsonrpc": [
      {
        address: "https://realio-rpc-evm.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://jsonrpc.realio.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://evm-realio.sr20de.xyz",
        provider: "Sr20de"
      },
      {
        address: "https://evm.realio.safeblock.space",
        provider: "Safe Block"
      },
      {
        address: "https://realio-jsonrpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "\u{1F525}STAVR\u{1F525} Explorer",
      url: "https://explorer.stavr.tech/realio-mainnet",
      tx_page: "https://explorer.stavr.tech/realio-mainnet/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/realio-mainnet/account/{$accountAddress}"
    },
    {
      kind: "NodeStake Explorer",
      url: "https://explorer.nodestake.top/realio",
      tx_page: "https://explorer.nodestake.top/realio/tx/${txHash}",
      account_page: "https://explorer.nodestake.top/realio/account/{$accountAddress}"
    },
    {
      kind: "Sr20de Explorer",
      url: "https://explorer.sr20de.xyz/Realio",
      tx_page: "https://explorer.sr20de.xyz/Realio/tx/${txHash}",
      account_page: "https://explorer.sr20de.xyz/Realio/account/{$accountAddress}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/realio",
      tx_page: "https://explorer.tcnetwork.io/realio/transaction/${txHash}",
      account_page: "https://explorer.tcnetwork.io/realio/account/${accountAddress}"
    },
    {
      kind: "Safe Block",
      url: "https://explorer.safeblock.space/realio",
      tx_page: "https://explorer.safeblock.space/realio/tx/${txHash}",
      account_page: "https://explorer.safeblock.space/realio/account/${accountAddress}"
    },
    {
      kind: "Decloud Nodes Lab",
      url: "https://explorer.declab.pro/realio",
      tx_page: "https://explorer.declab.pro/realio/tx/${txHash}",
      account_page: "https://explorer.declab.pro/realio/account/{$accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/realio/images/rio.png"
  }]
};
var chain_default135 = info374;

// node_modules/chain-registry/esm/mainnet/realio/ibc.js
var info375 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1157",
      connection_id: "connection-879"
    },
    chain_2: {
      chain_name: "realio",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-645",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-155",
      connection_id: "connection-119"
    },
    chain_2: {
      chain_name: "realio",
      client_id: "07-tendermint-6",
      connection_id: "connection-4"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-115",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2849",
      connection_id: "connection-2361"
    },
    chain_2: {
      chain_name: "realio",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1424",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default105 = info375;

// node_modules/chain-registry/esm/mainnet/realio/index.js
var assets135 = assets_default135;
var chain135 = chain_default135;
var ibc105 = ibc_default105;

// node_modules/chain-registry/esm/mainnet/rebus/assets.js
var info376 = {
  $schema: "../assetlist.schema.json",
  chain_name: "rebus",
  assets: [{
    description: "REBUS, the native coin of the Rebus chain.",
    denom_units: [{
      denom: "arebus",
      exponent: 0
    }, {
      denom: "rebus",
      exponent: 18
    }],
    base: "arebus",
    name: "Rebus",
    display: "rebus",
    symbol: "REBUS",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rebus/images/rebus.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rebus/images/rebus.svg"
    },
    coingecko_id: "rebus",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rebus/images/rebus.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rebus/images/rebus.svg"
    }]
  }]
};
var assets_default136 = info376;

// node_modules/chain-registry/esm/mainnet/rebus/chain.js
var info377 = {
  $schema: "../chain.schema.json",
  chain_name: "rebus",
  website: "https://www.rebuschain.com/",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Rebus",
  chain_id: "reb_1111-1",
  bech32_prefix: "rebus",
  daemon_name: "rebusd",
  node_home: "$HOME/.rebusd",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "arebus",
      fixed_min_gas_price: 0,
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "arebus"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rebus/images/rebus.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rebus/images/rebus.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://api.rebuschain.com:26657/",
        provider: "Rebuschain"
      },
      {
        address: "https://rebus.rpc.bccnodes.com:443",
        provider: "BccNodes"
      },
      {
        address: "https://rebus.rpc.manticore.team:443/",
        provider: "MantiCore"
      },
      {
        address: "https://rpc.rebus.nodestake.top/",
        provider: "NodeStake"
      },
      {
        address: "http://rebus.rpc.m.stavr.tech:40107",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc-1.rebus.nodes.guru",
        provider: "Nodes.Guru"
      },
      {
        address: "https://api.mainnet.rebus.money:26657",
        provider: "Rebuschain"
      },
      {
        address: "https://rebus-rpc.brocha.in",
        provider: "Brochain"
      },
      {
        address: "https://rebus-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rebus.rpc.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "https://rebus-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://rebus-rpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    rest: [
      {
        address: "https://api.rebuschain.com:1317/",
        provider: "Rebuschain"
      },
      {
        address: "https://rebus.api.manticore.team:443/",
        provider: "MantiCore"
      },
      {
        address: "https://api.rebus.nodestake.top/",
        provider: "NodeStake"
      },
      {
        address: "https://rebus.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api-1.rebus.nodes.guru",
        provider: "Nodes.Guru"
      },
      {
        address: "https://api.mainnet.rebus.money:1317",
        provider: "Rebuschain"
      },
      {
        address: "https://rebus-rest.brocha.in",
        provider: "Brochain"
      },
      {
        address: "https://rebus-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rebus.api.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "https://rebus-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https:/rebus-api.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    grpc: [
      {
        address: "rebus.grpc.manticore.team:443",
        provider: "MantiCore"
      },
      {
        address: "rebus.grpc.bccnodes.com:14090",
        provider: "BccNodes"
      },
      {
        address: "grpc.rebus.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "rebus.grpc.nodersteam.com:9181",
        provider: "[NODERS]TEAM"
      },
      {
        address: "http://rebus.grpc.m.stavr.tech:3211",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "rebus-grpc.brocha.in:443",
        provider: "Brochain"
      },
      {
        address: "rebus-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rebus.grpc.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "rebus-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "rebus-grpc.noders.services:18090",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "explorers.guru",
      url: "https://rebus.explorers.guru",
      tx_page: "https://rebus.explorers.guru/transaction/${txHash}"
    },
    {
      kind: "NodeStake",
      url: "https://explorer.nodestake.top/rebus",
      tx_page: "https://explorer.nodestake.top/rebus/tx/${txHash}"
    },
    {
      kind: "BccNodes",
      url: "https://explorer.bccnodes.com/rebus-M",
      tx_page: "https://explorer.bccnodes.com/rebus-M/tx/${txHash}"
    },
    {
      kind: "Brochain",
      url: "https://explorer.brocha.in/rebus",
      tx_page: "https://explorer.brocha.in/rebus/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525} Explorer",
      url: "https://explorer.stavr.tech/rebus",
      tx_page: "https://explorer.stavr.tech/rebus/tx/${txHash}"
    },
    {
      kind: "tcnetwork",
      url: "https://rebus.tcnetwork.io",
      tx_page: "https://rebus.tcnetwork.io/transaction/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/rebus",
      tx_page: "https://atomscan.com/rebus/transactions/${txHash}",
      account_page: "https://atomscan.com/rebus/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rebus/images/rebus.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rebus/images/rebus.svg"
  }]
};
var chain_default136 = info377;

// node_modules/chain-registry/esm/mainnet/rebus/ibc.js
var info378 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2173",
    connection_id: "connection-1692"
  },
  chain_2: {
    chain_name: "rebus",
    client_id: "07-tendermint-0",
    connection_id: "connection-0"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-355",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default106 = info378;

// node_modules/chain-registry/esm/mainnet/rebus/index.js
var assets136 = assets_default136;
var chain136 = chain_default136;
var ibc106 = ibc_default106;

// node_modules/chain-registry/esm/mainnet/regen/assets.js
var info379 = {
  $schema: "../assetlist.schema.json",
  chain_name: "regen",
  assets: [{
    description: "REGEN coin is the token for the Regen Network Platform",
    denom_units: [{
      denom: "uregen",
      exponent: 0
    }, {
      denom: "regen",
      exponent: 6
    }],
    base: "uregen",
    name: "Regen Network",
    display: "regen",
    symbol: "REGEN",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/regen.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/regen.svg"
    },
    coingecko_id: "regen",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/regen.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/regen.svg"
    }],
    socials: {
      website: "https://www.regen.network/",
      twitter: "https://twitter.com/regen_network"
    }
  }, {
    description: "Nature Carbon Ton (NCT) is a carbon token standard backed 1:1 by carbon credits issued by Verra, a global leader in the voluntary carbon market. NCT credits on Regen Network have been tokenized by Toucan.earth.",
    denom_units: [{
      denom: "eco.uC.NCT",
      exponent: 0
    }, {
      denom: "nct",
      exponent: 6
    }],
    base: "eco.uC.NCT",
    name: "Nature Carbon Ton",
    display: "nct",
    symbol: "NCT",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/nct.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/nct.svg"
    },
    coingecko_id: "toucan-protocol-nature-carbon-tonne",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/nct.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/nct.svg"
    }]
  }]
};
var assets_default137 = info379;

// node_modules/chain-registry/esm/mainnet/regen/chain.js
var info380 = {
  $schema: "../chain.schema.json",
  chain_name: "regen",
  status: "live",
  network_type: "mainnet",
  website: "https://www.regen.network/",
  pretty_name: "Regen",
  chain_id: "regen-1",
  bech32_prefix: "regen",
  daemon_name: "regen",
  node_home: "$HOME/.regen",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uregen",
      low_gas_price: 0.015,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uregen"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.46"
  },
  description: "Regen Network, a platform to originate and invest in high-integrity carbon and biodiversity credits from ecological regeneration projects.",
  apis: {
    rpc: [
      {
        address: "https://rpc-regen.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "http://public-rpc.regen.vitwit.com:26657",
        provider: "vitwit"
      },
      {
        address: "https://regen.rpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://regen.stakesystems.io:2053",
        provider: "stakesystems"
      },
      {
        address: "http://rpc.regen.forbole.com:80",
        provider: "forbole"
      },
      {
        address: "https://rpc-regen-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://regen-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://regen-rpc.easy2stake.com",
        provider: "Easy 2 Stake"
      },
      {
        address: "https://regen-rpc.theamsolutions.info",
        provider: "AM Solutions"
      },
      {
        address: "https://regen-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://regen-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    rest: [
      {
        address: "http://public-rpc.regen.vitwit.com:1317",
        provider: "vitwit"
      },
      {
        address: "https://regen.stakesystems.io",
        provider: "stakesystems"
      },
      {
        address: "https://regen.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api-regen-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://regen-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rest-regen.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://regen-lcd.easy2stake.com",
        provider: "Easy 2 Stake"
      },
      {
        address: "https://regen-api.theamsolutions.info",
        provider: "AM Solutions"
      },
      {
        address: "https://regen-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://regen-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    grpc: [
      {
        address: "grpc-regen-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "regen-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "regen.grpc.m.stavr.tech:124",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "regen-grpc.w3coins.io:22790",
        provider: "w3coins"
      },
      {
        address: "regen-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/regen",
      tx_page: "https://ezstaking.app/regen/txs/${txHash}",
      account_page: "https://ezstaking.app/regen/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Regen-Mainnet",
      tx_page: "https://explorer.stavr.tech/Regen-Mainnet/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/regen",
      tx_page: "https://ping.pub/regen/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/regen-network",
      tx_page: "https://atomscan.com/regen-network/transactions/${txHash}",
      account_page: "https://atomscan.com/regen-network/accounts/${accountAddress}"
    }
  ],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/regen.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/regen.svg"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/regen.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/regen/images/regen.svg"
  }]
};
var chain_default137 = info380;

// node_modules/chain-registry/esm/mainnet/regen/ibc.js
var info381 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-47",
      connection_id: "connection-22"
    },
    chain_2: {
      chain_name: "regen",
      client_id: "07-tendermint-20",
      connection_id: "connection-9"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-386",
      connection_id: "connection-340"
    },
    chain_2: {
      chain_name: "regen",
      client_id: "07-tendermint-27",
      connection_id: "connection-24"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-185",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-732",
      connection_id: "connection-218"
    },
    chain_2: {
      chain_name: "regen",
      client_id: "07-tendermint-28",
      connection_id: "connection-26"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-25",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "irisnet",
      client_id: "07-tendermint-35",
      connection_id: "connection-26"
    },
    chain_2: {
      chain_name: "regen",
      client_id: "07-tendermint-25",
      connection_id: "connection-22"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-16",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-106",
      connection_id: "connection-76"
    },
    chain_2: {
      chain_name: "regen",
      client_id: "07-tendermint-115",
      connection_id: "connection-104"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-68",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-100",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-104",
      connection_id: "connection-96"
    },
    chain_2: {
      chain_name: "regen",
      client_id: "07-tendermint-177",
      connection_id: "connection-149"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-83",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-165",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-6",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "regen",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "persistence",
      client_id: "07-tendermint-33",
      connection_id: "connection-27"
    },
    chain_2: {
      chain_name: "regen",
      client_id: "07-tendermint-30",
      connection_id: "connection-28"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-21",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-16",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "regen",
      client_id: "07-tendermint-113",
      connection_id: "connection-102"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-61",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1"
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "regen",
      client_id: "07-tendermint-31",
      connection_id: "connection-29"
    },
    chain_2: {
      chain_name: "sentinel",
      client_id: "07-tendermint-56",
      connection_id: "connection-32"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "regen",
      client_id: "07-tendermint-73",
      connection_id: "connection-60"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-31",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-28",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "regen",
      client_id: "07-tendermint-74",
      connection_id: "connection-61"
    },
    chain_2: {
      chain_name: "starname",
      client_id: "07-tendermint-45",
      connection_id: "connection-31"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-29",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "regen",
      client_id: "07-tendermint-176",
      connection_id: "connection-148"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-239",
      connection_id: "connection-200"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-158",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-107",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default107 = info381;

// node_modules/chain-registry/esm/mainnet/regen/index.js
var assets137 = assets_default137;
var chain137 = chain_default137;
var ibc107 = ibc_default107;

// node_modules/chain-registry/esm/mainnet/rizon/assets.js
var info382 = {
  $schema: "../assetlist.schema.json",
  chain_name: "rizon",
  assets: [{
    description: "Native token of Rizon Chain",
    denom_units: [{
      denom: "uatolo",
      exponent: 0
    }, {
      denom: "atolo",
      exponent: 6
    }],
    base: "uatolo",
    name: "Rizon Chain",
    display: "atolo",
    symbol: "ATOLO",
    coingecko_id: "rizon",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rizon/images/atolo.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rizon/images/atolo.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rizon/images/atolo.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rizon/images/atolo.svg"
    }],
    socials: {
      website: "https://rizon.world/",
      twitter: "https://twitter.com/hdac_rizon"
    }
  }]
};
var assets_default138 = info382;

// node_modules/chain-registry/esm/mainnet/rizon/chain.js
var info383 = {
  $schema: "../chain.schema.json",
  chain_name: "rizon",
  status: "live",
  network_type: "mainnet",
  website: "https://rizon.world/",
  pretty_name: "Rizon",
  chain_id: "titan-1",
  bech32_prefix: "rizon",
  daemon_name: "rizond",
  node_home: "$HOME/.rizon",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uatolo",
      low_gas_price: 0.025,
      average_gas_price: 0.025,
      high_gas_price: 0.035
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uatolo"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rizon/images/atolo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rizon/images/atolo.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpcapi.rizon.world/",
        provider: "HDAC Technology AG"
      },
      {
        address: "https://rpc.rizon.chaintools.tech/",
        provider: "ChainTools"
      },
      {
        address: "https://rizon-rpc.ibs.team/",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://rizon-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    rest: [
      {
        address: "https://restapi.rizon.world/",
        provider: "HDAC Technology AG"
      },
      {
        address: "https://api.rizon.chaintools.tech/",
        provider: "ChainTools"
      },
      {
        address: "https://rizon-api.ibs.team/",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://rizon-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://rizon.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      }
    ],
    grpc: [{
      address: "grpc-rizon.mms.team:443",
      provider: "MMS"
    }, {
      address: "rizon-grpc.publicnode.com:443",
      provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
    }]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/rizon",
      tx_page: "https://ezstaking.app/rizon/txs/${txHash}",
      account_page: "https://ezstaking.app/rizon/account/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/rizon",
      tx_page: "https://www.mintscan.io/rizon/transactions/${txHash}",
      account_page: "https://www.mintscan.io/rizon/accounts/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/rizon",
      tx_page: "https://ping.pub/rizon/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/rizon",
      tx_page: "https://atomscan.com/rizon/transactions/${txHash}",
      account_page: "https://atomscan.com/rizon/accounts/${accountAddress}"
    },
    {
      kind: "bigdipper",
      url: "https://bigdipper.live/rizon",
      tx_page: "https://bigdipper.live/rizon/transactions/${txHash}",
      account_page: "https://bigdipper.live/rizon/accounts/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Rizon",
      tx_page: "https://explorer.stavr.tech/Rizon/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Rizon/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rizon/images/atolo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/rizon/images/atolo.svg"
  }]
};
var chain_default138 = info383;

// node_modules/chain-registry/esm/mainnet/rizon/ibc.js
var info384 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosis",
    client_id: "07-tendermint-1898",
    connection_id: "connection-1471"
  },
  chain_2: {
    chain_name: "rizon",
    client_id: "07-tendermint-3",
    connection_id: "connection-1"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-221",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default108 = info384;

// node_modules/chain-registry/esm/mainnet/rizon/index.js
var assets138 = assets_default138;
var chain138 = chain_default138;
var ibc108 = ibc_default108;

// node_modules/chain-registry/esm/mainnet/saga/assets.js
var info385 = {
  $schema: "../assetlist.schema.json",
  chain_name: "saga",
  assets: [{
    description: "The native staking and governance token of Saga.",
    extended_description: "Saga is a Layer 1 protocol that allows developers to automatically spin up VM-agnostic, parallelized and interoperable dedicated chains, or \u201CChainlets,\u201D that provide applications with infinite horizontal scalability. Each Chainlet is a replica of the Saga Mainnet, with the same validator set and security model.\n\nSaga\u2019s mission is to enable the next 1000 chains in gaming and entertainment as part of the growing Saga Multiverse.",
    denom_units: [{
      denom: "usaga",
      exponent: 0
    }, {
      denom: "saga",
      exponent: 6
    }],
    base: "usaga",
    name: "Saga",
    display: "saga",
    symbol: "SAGA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.svg"
    },
    coingecko_id: "saga-2",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.svg",
      theme: {
        primary_color_hex: "#000000",
        dark_mode: false
      }
    }, {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga_white.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga_white.svg",
      theme: {
        primary_color_hex: "#FFFFFF",
        dark_mode: true
      }
    }],
    socials: {
      website: "https://www.saga.xyz/",
      twitter: "https://twitter.com/Sagaxyz__"
    }
  }]
};
var assets_default139 = info385;

// node_modules/chain-registry/esm/mainnet/saga/chain.js
var info386 = {
  $schema: "../chain.schema.json",
  chain_name: "saga",
  status: "live",
  network_type: "mainnet",
  website: "https://www.saga.xyz/",
  pretty_name: "Saga",
  chain_id: "ssc-1",
  bech32_prefix: "saga",
  daemon_name: "sscd",
  node_home: "$HOME/.ssc",
  key_algos: ["secp256k1"],
  slip44: 118,
  staking: {
    staking_tokens: [{
      denom: "usaga"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  fees: {
    fee_tokens: [{
      denom: "usaga",
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  codebase: {
    cosmos_sdk_version: "osmosis-labs/cosmos-sdk v0.47.5",
    cosmwasm_enabled: false
  },
  apis: {
    rpc: [
      {
        address: "https://rpc-saga.keplr.app",
        provider: "chainapsis"
      },
      {
        address: "https://saga-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://saga-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://rpc.saga.nodestake.org",
        provider: "NodeStake"
      },
      {
        address: "https://saga.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://rpc.saga.goldenratiostaking.net",
        provider: "Golden Ratio Staking"
      },
      {
        address: "https://rpc.saga.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://saga-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      }
    ],
    rest: [
      {
        address: "https://saga-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://saga-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://rest.saga.goldenratiostaking.net",
        provider: "Golden Ratio Staking"
      },
      {
        address: "https://api.saga.nodestake.org",
        provider: "NodeStake"
      },
      {
        address: "https://saga.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://lcd.saga.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://saga-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      }
    ],
    grpc: [
      {
        address: "saga-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "saga-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "grpc.saga.nodestake.org:443",
        provider: "NodeStake"
      },
      {
        address: "saga.grpc.kjnodes.com:443",
        provider: "kjnodes"
      },
      {
        address: "grpc.saga.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://saga-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      }
    ]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.svg"
  },
  description: "Saga is a Layer 1 protocol that allows developers to automatically spin up VM-agnostic, parallelized and interoperable dedicated chains, or \u201CChainlets,\u201D that provide applications with infinite horizontal scalability. Each Chainlet is a replica of the Saga Mainnet, with the same validator set and security model.\n\nSaga\u2019s mission is to enable the next 1000 chains in gaming and entertainment as part of the growing Saga Multiverse. ",
  explorers: [
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/saga",
      tx_page: "https://www.mintscan.io/saga/transactions/${txHash}",
      account_page: "https://www.mintscan.io/saga/accounts/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/saga",
      tx_page: "https://ezstaking.app/saga/txs/${txHash}",
      account_page: "https://ezstaking.app/saga/account/${accountAddress}"
    },
    {
      kind: "NodeStake",
      url: "https://explorer.nodestake.org/saga",
      tx_page: "https://explorer.nodestake.org/saga/tx/${txHash}",
      account_page: "https://explorer.nodestake.org/saga/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.svg"
  }]
};
var chain_default139 = info386;

// node_modules/chain-registry/esm/mainnet/saga/ibc.js
var info387 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-208",
      connection_id: "connection-189"
    },
    chain_2: {
      chain_name: "saga",
      client_id: "07-tendermint-11",
      connection_id: "connection-10"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-146",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-24",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-90",
      connection_id: "connection-66"
    },
    chain_2: {
      chain_name: "saga",
      client_id: "07-tendermint-6",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2060",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3157",
      connection_id: "connection-2626"
    },
    chain_2: {
      chain_name: "saga",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-38946",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "saga",
      client_id: "07-tendermint-7",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-202",
      connection_id: "connection-194"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-152",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "saga",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-142",
      connection_id: "connection-142"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-213",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default109 = info387;

// node_modules/chain-registry/esm/mainnet/saga/index.js
var assets139 = assets_default139;
var chain139 = chain_default139;
var ibc109 = ibc_default109;

// node_modules/chain-registry/esm/mainnet/scorum/assets.js
var info388 = {
  $schema: "../assetlist.schema.json",
  chain_name: "scorum",
  assets: [
    {
      description: "The native token of Scorum",
      extended_description: "Scorum is a dynamic Layer-1 blockchain powered by Cosmos, designed to redefine the gaming and entertainment industries. Currently, it supports Aviatrix, a compelling crash game that not only leverages blockchain technology for secure and transparent gaming outcomes but also utilizes it for the integration of Non-Fungible Tokens (NFTs). Central to Scorum\u2019s ecosystem is the SCR token, which supports both Aviatrix and future applications set to expand the platform\u2019s offerings. The adoption of the Inter-Blockchain Communication protocol significantly enhances Scorum\u2019s interoperability and scalability, paving the way for its ongoing expansion and the development of innovative, blockchain-powered entertainment solutions.",
      denom_units: [{
        denom: "nscr",
        exponent: 0
      }, {
        denom: "scr",
        exponent: 9
      }],
      base: "nscr",
      name: "Scorum",
      display: "scr",
      symbol: "SCR",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/scr.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/scr.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/scr.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/scr.svg"
      }],
      socials: {
        website: "https://scorum.network",
        twitter: "https://twitter.com/scorum_en"
      }
    },
    {
      description: "Scorum Power used for internal mechanics and staking",
      denom_units: [{
        denom: "nsp",
        exponent: 0
      }, {
        denom: "sp",
        exponent: 9
      }],
      base: "nsp",
      name: "Scorum Power",
      display: "sp",
      symbol: "SP",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/sp.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/sp.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/sp.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/sp.svg"
      }]
    },
    {
      description: "Virtual(non-transferable) coin used to pay gas",
      denom_units: [{
        denom: "gas",
        exponent: 0
      }],
      base: "gas",
      name: "GAS",
      display: "gas",
      symbol: "GAS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/gas.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/gas.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/gas.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/gas.svg"
      }]
    }
  ]
};
var assets_default140 = info388;

// node_modules/chain-registry/esm/mainnet/scorum/chain.js
var info389 = {
  $schema: "../chain.schema.json",
  chain_name: "scorum",
  status: "live",
  network_type: "mainnet",
  website: "https://scorum.com/",
  pretty_name: "Scorum Network",
  chain_id: "scorum-1",
  bech32_prefix: "scorum",
  daemon_name: "scorumd",
  node_home: "$HOME/.scorum",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "gas",
      fixed_min_gas_price: 1,
      low_gas_price: 1,
      average_gas_price: 1,
      high_gas_price: 1
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "nsp"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/scorum.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/scorum.svg"
  },
  apis: {
    rpc: [{
      address: "https://scorum-blockchain-mainnet-rpc.scorum.com",
      provider: "scorum"
    }],
    rest: [{
      address: "https://scorum-blockchain-mainnet-api.scorum.com",
      provider: "scorum"
    }],
    grpc: [{
      address: "https://scorum-blockchain-mainnet-grpc.scorum.com",
      provider: "scorum"
    }]
  },
  explorers: [{
    kind: "ezstaking",
    url: "https://ezstaking.app/scorum",
    tx_page: "https://ezstaking.app/scorum/txs/${txHash}",
    account_page: "https://ezstaking.app/scorum/account/${accountAddress}"
  }, {
    kind: "bigdipper",
    url: "https://cosmos.scorum.com/scorum",
    tx_page: "https://cosmos.scorum.com/scorum/transactions/${txHash}",
    account_page: "https://cosmos.scorum.com/scorum/accounts/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/scorum.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/scorum/images/scorum.svg"
  }]
};
var chain_default140 = info389;

// node_modules/chain-registry/esm/mainnet/scorum/ibc.js
var info390 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosis",
    client_id: "07-tendermint-3098",
    connection_id: "connection-2571"
  },
  chain_2: {
    chain_name: "scorum",
    client_id: "07-tendermint-6",
    connection_id: "connection-1"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-20100",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default110 = info390;

// node_modules/chain-registry/esm/mainnet/scorum/index.js
var assets140 = assets_default140;
var chain140 = chain_default140;
var ibc110 = ibc_default110;

// node_modules/chain-registry/esm/mainnet/secretnetwork/assets.js
var info391 = {
  $schema: "../assetlist.schema.json",
  chain_name: "secretnetwork",
  assets: [
    {
      description: "The native token of Secret Network",
      denom_units: [{
        denom: "uscrt",
        exponent: 0
      }, {
        denom: "scrt",
        exponent: 6
      }],
      base: "uscrt",
      name: "Secret Network",
      display: "scrt",
      symbol: "SCRT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.svg"
      },
      coingecko_id: "secret",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.svg"
      }],
      socials: {
        website: "https://scrt.network/",
        twitter: "https://twitter.com/SecretNetwork"
      }
    },
    {
      description: "The native token cw20 for SIENNA on Secret Network",
      denom_units: [{
        denom: "cw20:secret1rgm2m5t530tdzyd99775n6vzumxa5luxcllml4",
        exponent: 0
      }, {
        denom: "sienna",
        exponent: 18
      }],
      type_asset: "snip20",
      address: "secret1rgm2m5t530tdzyd99775n6vzumxa5luxcllml4",
      base: "cw20:secret1rgm2m5t530tdzyd99775n6vzumxa5luxcllml4",
      name: "SIENNA",
      display: "sienna",
      symbol: "SIENNA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/sienna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/sienna.svg"
      },
      coingecko_id: "sienna",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/sienna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/sienna.svg"
      }]
    },
    {
      description: "The native token cw20 for Shade on Secret Network",
      denom_units: [{
        denom: "cw20:secret1qfql357amn448duf5gvp9gr48sxx9tsnhupu3d",
        exponent: 0
      }, {
        denom: "shd",
        exponent: 8
      }],
      type_asset: "snip20",
      address: "secret1qfql357amn448duf5gvp9gr48sxx9tsnhupu3d",
      base: "cw20:secret1qfql357amn448duf5gvp9gr48sxx9tsnhupu3d",
      name: "Shade (old)",
      display: "shd",
      symbol: "SHD(old)",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shdold.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shdold.svg"
      }]
    },
    {
      description: "The native token cw20 for Shade on Secret Network",
      denom_units: [{
        denom: "cw20:secret153wu605vvp934xhd4k9dtd640zsep5jkesstdm",
        exponent: 0
      }, {
        denom: "shd",
        exponent: 8
      }],
      type_asset: "snip25",
      address: "secret153wu605vvp934xhd4k9dtd640zsep5jkesstdm",
      base: "cw20:secret153wu605vvp934xhd4k9dtd640zsep5jkesstdm",
      name: "Shade",
      display: "shd",
      symbol: "SHD",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shd.svg"
      },
      coingecko_id: "shade-protocol",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shd.svg"
      }]
    },
    {
      description: "The native token cw20 for Silk on Secret Network",
      denom_units: [{
        denom: "cw20:secret1fl449muk5yq8dlad7a22nje4p5d2pnsgymhjfd",
        exponent: 0
      }, {
        denom: "silk",
        exponent: 6
      }],
      type_asset: "snip25",
      address: "secret1fl449muk5yq8dlad7a22nje4p5d2pnsgymhjfd",
      base: "cw20:secret1fl449muk5yq8dlad7a22nje4p5d2pnsgymhjfd",
      name: "Silk",
      display: "silk",
      symbol: "SILK",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/silk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/silk.svg"
      },
      coingecko_id: "silk-bcec1136-561c-4706-a42c-8b67d0d7f7d2",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/silk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/silk.svg"
      }]
    },
    {
      description: "The native token cw20 for SCRT Staking Derivatives on Secret Network",
      denom_units: [{
        denom: "cw20:secret1k6u0cy4feepm6pehnz804zmwakuwdapm69tuc4",
        exponent: 0
      }, {
        denom: "stkd-scrt",
        exponent: 6
      }],
      type_asset: "snip20",
      address: "secret1k6u0cy4feepm6pehnz804zmwakuwdapm69tuc4",
      base: "cw20:secret1k6u0cy4feepm6pehnz804zmwakuwdapm69tuc4",
      name: "SCRT Staking Derivatives",
      display: "stkd-scrt",
      symbol: "stkd-SCRT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/stkd-scrt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/stkd-scrt.svg"
      },
      coingecko_id: "stkd-scrt",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/stkd-scrt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/stkd-scrt.svg"
      }]
    },
    {
      description: "The native token cw20 for Button on Secret Network",
      denom_units: [{
        denom: "cw20:secret1yxcexylwyxlq58umhgsjgstgcg2a0ytfy4d9lt",
        exponent: 0
      }, {
        denom: "butt",
        exponent: 6
      }],
      type_asset: "snip20",
      address: "secret1yxcexylwyxlq58umhgsjgstgcg2a0ytfy4d9lt",
      base: "cw20:secret1yxcexylwyxlq58umhgsjgstgcg2a0ytfy4d9lt",
      name: "Button",
      display: "butt",
      symbol: "BUTT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/butt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/butt.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/butt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/butt.svg"
      }]
    },
    {
      description: "The native token cw20 for Alter on Secret Network",
      denom_units: [{
        denom: "cw20:secret12rcvz0umvk875kd6a803txhtlu7y0pnd73kcej",
        exponent: 0
      }, {
        denom: "alter",
        exponent: 6
      }],
      base: "cw20:secret12rcvz0umvk875kd6a803txhtlu7y0pnd73kcej",
      name: "Alter",
      display: "alter",
      symbol: "ALTER",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/alter.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/alter.svg"
      },
      coingecko_id: "alter",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/alter.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/alter.svg"
      }],
      socials: {
        website: "http://alter.network/",
        twitter: "https://twitter.com/AlterDapp"
      }
    },
    {
      description: "The native token cw20 for Amber on Secret Network",
      denom_units: [{
        denom: "cw20:secret1s09x2xvfd2lp2skgzm29w2xtena7s8fq98v852",
        exponent: 0
      }, {
        denom: "amber",
        exponent: 6
      }],
      type_asset: "snip20",
      address: "secret1s09x2xvfd2lp2skgzm29w2xtena7s8fq98v852",
      base: "cw20:secret1s09x2xvfd2lp2skgzm29w2xtena7s8fq98v852",
      name: "Amber",
      display: "amber",
      symbol: "AMBER",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/amber.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/amber.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/amber.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/amber.svg"
      }],
      socials: {
        website: "http://amber.money/",
        twitter: "https://twitter.com/AmberDAO_"
      }
    },
    {
      description: "The native token cw20 for Shill on Secret Network",
      denom_units: [{
        denom: "cw20:secret197dvnt9yjxwn8sjdlx05f7zuk27lsdxtfnwxse",
        exponent: 0
      }, {
        denom: "shill",
        exponent: 6
      }],
      type_asset: "snip25",
      address: "secret197dvnt9yjxwn8sjdlx05f7zuk27lsdxtfnwxse",
      base: "cw20:secret197dvnt9yjxwn8sjdlx05f7zuk27lsdxtfnwxse",
      name: "Shill",
      display: "shill",
      symbol: "SHILL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shill.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shill.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shill.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/shill.svg"
      }]
    }
  ]
};
var assets_default141 = info391;

// node_modules/chain-registry/esm/mainnet/secretnetwork/chain.js
var info392 = {
  $schema: "../chain.schema.json",
  chain_name: "secretnetwork",
  status: "live",
  network_type: "mainnet",
  website: "https://scrt.network/",
  pretty_name: "Secret Network",
  chain_id: "secret-4",
  bech32_prefix: "secret",
  daemon_name: "secretd",
  node_home: "$HOME/.secretd",
  key_algos: ["secp256k1"],
  slip44: 529,
  alternative_slip44s: [118],
  fees: {
    fee_tokens: [{
      denom: "uscrt",
      fixed_min_gas_price: 0.05,
      low_gas_price: 0.05,
      average_gas_price: 0.1,
      high_gas_price: 0.25
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uscrt"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.svg"
  },
  description: "Secret Network is the first blockchain with customizable privacy. You get to choose what you share, with whom, and how. This protects users, and empowers developers to build a better Web3.",
  apis: {
    "grpc-web": [{
      address: "https://grpc.mainnet.secretsaturn.net",
      provider: "\u{1FA90} \u{1D54A}ecret \u{1D54A}aturn"
    }],
    rpc: [
      {
        address: "https://scrt.public-rpc.com",
        provider: "ANKR"
      },
      {
        address: "https://secretnetwork-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://1rpc.io/scrt-rpc",
        provider: "1RPC - Automata Network"
      },
      {
        address: "https://secretnetwork-rpc.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://rpc.mainnet.secretsaturn.net",
        provider: "\u{1FA90} \u{1D54A}ecret \u{1D54A}aturn"
      },
      {
        address: "https://rpc-secret.01node.com",
        provider: "01node"
      },
      {
        address: "https://public.stakewolle.com/cosmos/secretnetwork/rpc",
        provider: "Stakewolle"
      }
    ],
    rest: [
      {
        address: "https://secretnetwork-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "http://secretnetwork-mainnet-lcd.autostake.com:1317",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://1rpc.io/scrt-lcd",
        provider: "1RPC - Automata Network"
      },
      {
        address: "https://secretnetwork-api.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://lcd.mainnet.secretsaturn.net",
        provider: "\u{1FA90} \u{1D54A}ecret \u{1D54A}aturn"
      },
      {
        address: "https://rest-secret.01node.com",
        provider: "01node"
      },
      {
        address: "https://public.stakewolle.com/cosmos/secretnetwork/rest",
        provider: "Stakewolle"
      }
    ],
    grpc: [{
      address: "secretnetwork-grpc.lavenderfive.com:443",
      provider: "Lavender.Five Nodes \u{1F41D}"
    }, {
      address: "secretnetwork-mainnet-grpc.autostake.com:9090",
      provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
    }]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/secretnetwork",
      tx_page: "https://ezstaking.app/secretnetwork/txs/${txHash}",
      account_page: "https://ezstaking.app/secretnetwork/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/secret",
      tx_page: "https://ping.pub/secret/tx/${txHash}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/secret",
      tx_page: "https://www.mintscan.io/secret/transactions/${txHash}",
      account_page: "https://www.mintscan.io/secret/accounts/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/secret-network",
      tx_page: "https://atomscan.com/secret-network/transactions/${txHash}",
      account_page: "https://atomscan.com/secret-network/accounts/${accountAddress}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/secret",
      tx_page: "https://mainnet.whispernode.com/secret/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/secret/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.svg"
  }]
};
var chain_default141 = info392;

// node_modules/chain-registry/esm/mainnet/secretnetwork/ibc.js
var info393 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-17",
      connection_id: "connection-17"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-111",
      connection_id: "connection-80"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-102",
      connection_id: "connection-69"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-47",
      connection_id: "connection-28"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-43",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-21",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "andromeda",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-176",
      connection_id: "connection-133"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-97",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-24",
      connection_id: "connection-22"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-169",
      connection_id: "connection-119"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-21",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-84",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-40",
      connection_id: "connection-22"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-44",
      connection_id: "connection-26"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-20",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }, {
      chain_1: {
        channel_id: "channel-69",
        port_id: "transfer",
        client_id: "07-tendermint-103",
        connection_id: "connection-89"
      },
      chain_2: {
        channel_id: "channel-61",
        port_id: "wasm.secret1yxjmepvyl2c25vnt53cr2dpn8amknwausxee83",
        client_id: "07-tendermint-120",
        connection_id: "connection-93"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-52",
      connection_id: "connection-15"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-174",
      connection_id: "connection-131"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-91",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cheqd",
      client_id: "07-tendermint-85",
      connection_id: "connection-63"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-196",
      connection_id: "connection-191"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-141",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      fee_version: "ics29-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "chihuahua",
      client_id: "07-tendermint-70",
      connection_id: "connection-38"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-27",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-16",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "comdex",
      client_id: "07-tendermint-142",
      connection_id: "connection-74"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-125",
      connection_id: "connection-95"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-65",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-63",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-52",
      connection_id: "connection-21"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-166",
      connection_id: "connection-116"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-80",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-26",
        port_id: "transfer",
        client_id: "07-tendermint-52",
        connection_id: "connection-21"
      },
      chain_2: {
        channel_id: "channel-83",
        port_id: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4",
        client_id: "07-tendermint-166",
        connection_id: "connection-116"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreum",
      client_id: "07-tendermint-40",
      connection_id: "connection-27"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-186",
      connection_id: "connection-138"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-25",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-101",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-492",
      connection_id: "connection-401"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-1",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-235",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-18",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-53",
      connection_id: "connection-31"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-24",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent",
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dymension",
      client_id: "07-tendermint-29",
      connection_id: "connection-20"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-194",
      connection_id: "connection-189"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-35",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-130",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-50",
      connection_id: "connection-19"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-42",
      connection_id: "connection-24"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gravitybridge",
      client_id: "07-tendermint-140",
      connection_id: "connection-139"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-40",
      connection_id: "connection-23"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-79",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-150",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-148",
        port_id: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-97",
      connection_id: "connection-83"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-22",
      connection_id: "connection-8"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-88",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "jackal",
      client_id: "07-tendermint-6",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-124",
      connection_id: "connection-94"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-62",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-108",
      connection_id: "connection-68"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-23",
      connection_id: "connection-9"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-48",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-163",
        port_id: "transfer",
        client_id: "07-tendermint-108",
        connection_id: "connection-68"
      },
      chain_2: {
        channel_id: "channel-45",
        port_id: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4",
        client_id: "07-tendermint-23",
        connection_id: "connection-9"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-12",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-48",
      connection_id: "connection-29"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-22",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }, {
      chain_1: {
        channel_id: "channel-44",
        port_id: "transfer",
        client_id: "07-tendermint-12",
        connection_id: "connection-7"
      },
      chain_2: {
        channel_id: "channel-46",
        port_id: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4",
        client_id: "07-tendermint-48",
        connection_id: "connection-29"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "migaloo",
      client_id: "07-tendermint-6",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-116",
      connection_id: "connection-87"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-57",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-103",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-129",
        port_id: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-85",
      connection_id: "connection-63"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-199",
      connection_id: "connection-192"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1551",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-144",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-1950",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-151",
        port_id: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-24",
      connection_id: "connection-33"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-170",
      connection_id: "connection-127"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-88",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nolus",
      client_id: "07-tendermint-18",
      connection_id: "connection-14"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-201",
      connection_id: "connection-193"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13995",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-146",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "oraichain",
      client_id: "07-tendermint-178",
      connection_id: "connection-142"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-195",
      connection_id: "connection-190"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-135",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-217",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }, {
      chain_1: {
        channel_id: "channel-140",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-222",
        port_id: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1588",
      connection_id: "connection-1244"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-2",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-88",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis",
        properties: "privacy"
      }
    }, {
      chain_1: {
        channel_id: "channel-476",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-44",
        port_id: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis",
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "persistence",
      client_id: "07-tendermint-106",
      connection_id: "connection-146"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-126",
      connection_id: "connection-98"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-82",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-64",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }, {
      chain_1: {
        channel_id: "channel-159",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-132",
        port_id: "wasm.secret1tqmms5awftpuhalcv5h5mg76fa0tkdz4jv9ex4"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-28",
      connection_id: "connection-14"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-138",
      connection_id: "connection-99"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-52",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-65",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1"
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "saga",
      client_id: "07-tendermint-7",
      connection_id: "connection-7"
    },
    chain_2: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-202",
      connection_id: "connection-194"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-152",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-14",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "sentinel",
      client_id: "07-tendermint-96",
      connection_id: "connection-75"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-50",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-37",
      connection_id: "connection-19"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-171",
      connection_id: "connection-98"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-65",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-43",
      connection_id: "connection-25"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-177",
      connection_id: "connection-110"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-19",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-48",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-75",
      connection_id: "connection-40"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-37",
      connection_id: "connection-25"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-40",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-192",
      connection_id: "connection-185"
    },
    chain_2: {
      chain_name: "teritori",
      client_id: "07-tendermint-99",
      connection_id: "connection-122"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-111",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-63",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "terra",
      client_id: "07-tendermint-28",
      connection_id: "connection-29"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-16",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-38",
      connection_id: "connection-20"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-4",
      connection_id: "connection-7"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-16",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }, {
      chain_1: {
        channel_id: "channel-127",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-382",
        port_id: "wasm.terra1e0mrzy8077druuu42vs0hu7ugguade0cj65dgtauyaw4gsl4kv0qtdf2au"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-193",
      connection_id: "connection-188"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-249",
      connection_id: "connection-213"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-126",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-123",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  }
];
var ibc_default111 = info393;

// node_modules/chain-registry/esm/mainnet/secretnetwork/index.js
var assets141 = assets_default141;
var chain141 = chain_default141;
var ibc111 = ibc_default111;

// node_modules/chain-registry/esm/mainnet/seda/assets.js
var info394 = {
  $schema: "../assetlist.schema.json",
  chain_name: "seda",
  assets: [{
    description: "The native token of SEDA Chain.",
    extended_description: "SEDA is a standard for modular data transport and querying. Any data type, for all networks.",
    denom_units: [{
      denom: "aseda",
      exponent: 0
    }, {
      denom: "seda",
      exponent: 18
    }],
    base: "aseda",
    name: "Seda",
    display: "seda",
    symbol: "SEDA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/seda/images/seda.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/seda/images/seda.svg"
    },
    coingecko_id: "seda-2",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/seda/images/seda.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/seda/images/seda.svg"
    }],
    socials: {
      website: "https://www.seda.xyz/",
      twitter: "https://twitter.com/sedaprotocol"
    }
  }]
};
var assets_default142 = info394;

// node_modules/chain-registry/esm/mainnet/seda/chain.js
var info395 = {
  $schema: "../chain.schema.json",
  chain_name: "seda",
  status: "live",
  network_type: "mainnet",
  website: "https://www.seda.xyz/",
  pretty_name: "SEDA",
  chain_id: "seda-1",
  bech32_prefix: "seda",
  daemon_name: "sedad",
  node_home: "$HOME/.sedad",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "aseda",
      fixed_min_gas_price: 1e10,
      low_gas_price: 1e10,
      average_gas_price: 1e10,
      high_gas_price: 14e9
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "aseda"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.50.5"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/seda/images/seda.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/seda/images/seda.svg"
  },
  description: "SEDA is a standard for modular data transport and querying. Any data type, for all networks.",
  apis: {
    rpc: [
      {
        address: "https://rpc.mainnet.seda.xyz/",
        provider: "SEDA"
      },
      {
        address: "https://seda-rpc.polkachu.com/",
        provider: "Polkachu"
      },
      {
        address: "https://seda.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://seda-rpc.synergynodes.com/",
        provider: "Synergy Nodes"
      },
      {
        address: "https://seda-rpc.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://seda-rpc.kleomedes.network/",
        provider: "Kleomedes"
      },
      {
        address: "https://seda-rpc.ibs.team:443",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://seda-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rpc.seda.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://rpc-seda.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://seda-rpc.applejuice.256x25.tech:443",
        provider: "Apple juice \u{1F9C3}"
      },
      {
        address: "https://seda-rpc.bluestake.net:443",
        provider: "BlueStake \u{1F680}"
      }
    ],
    rest: [
      {
        address: "https://lcd.mainnet.seda.xyz/",
        provider: "SEDA"
      },
      {
        address: "https://seda-api.polkachu.com/",
        provider: "Polkachu"
      },
      {
        address: "https://seda.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://seda-api.synergynodes.com/",
        provider: "Synergy Nodes"
      },
      {
        address: "https://seda-api.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://seda-api.kleomedes.network/",
        provider: "Kleomedes"
      },
      {
        address: "https://seda-api.ibs.team:443",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://seda-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://lcd.seda.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://api-seda.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://seda-api.applejuice.256x25.tech:443",
        provider: "Apple juice \u{1F9C3}"
      },
      {
        address: "https://seda-api.bluestake.net",
        provider: "BlueStake \u{1F680}"
      }
    ],
    grpc: [
      {
        address: "seda-grpc.polkachu.com:25890",
        provider: "Polkachu"
      },
      {
        address: "https://seda-grpc.synergynodes.com/",
        provider: "Synergy Nodes"
      },
      {
        address: "seda.grpc.kjnodes.com:443",
        provider: "kjnodes"
      },
      {
        address: "https://seda-grpc.lavenderfive.com",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "seda-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://grpc.seda.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "grpc-seda.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      }
    ]
  },
  explorers: [
    {
      kind: "sedaexplorer",
      url: "https://explorer.seda.xyz/",
      tx_page: "https://explorer.seda.xyz/txs/${txHash}",
      account_page: "https://explorer.seda.xyz/account/${accountAddress}"
    },
    {
      kind: "explorers.guru",
      url: "https://seda.explorers.guru",
      tx_page: "https://seda.explorers.guru/transaction/${txHash}",
      account_page: "https://seda.explorers.guru/account/${accountAddress}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/seda",
      tx_page: "https://mainnet.whispernode.com/seda/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/seda/account/${accountAddress}"
    },
    {
      kind: "Apple juice \u{1F9C3}",
      url: "https://explorer.256x25.tech/seda-mainnet",
      tx_page: "https://explorer.256x25.tech/seda-mainnet/tx/${txHash}",
      account_page: "https://explorer.256x25.tech/seda-mainnet/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/seda/images/seda.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/seda/images/seda.svg"
  }]
};
var chain_default142 = info395;

// node_modules/chain-registry/esm/mainnet/seda/ibc.js
var info396 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosis",
    client_id: "07-tendermint-3204",
    connection_id: "connection-2661"
  },
  chain_2: {
    chain_name: "seda",
    client_id: "07-tendermint-0",
    connection_id: "connection-0"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-75016",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default112 = info396;

// node_modules/chain-registry/esm/mainnet/seda/index.js
var assets142 = assets_default142;
var chain142 = chain_default142;
var ibc112 = ibc_default112;

// node_modules/chain-registry/esm/mainnet/sei/assets.js
var info397 = {
  $schema: "../assetlist.schema.json",
  chain_name: "sei",
  assets: [
    {
      description: "The native staking token of Sei.",
      denom_units: [{
        denom: "usei",
        exponent: 0
      }, {
        denom: "sei",
        exponent: 6
      }],
      base: "usei",
      name: "Sei",
      display: "sei",
      symbol: "SEI",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/sei.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/sei.svg"
      },
      coingecko_id: "sei-network",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/sei.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/sei.svg"
      }],
      socials: {
        website: "https://www.sei.io/",
        twitter: "https://twitter.com/SeiNetwork"
      }
    },
    {
      description: "OIN Token ($OIN) is a groundbreaking digital asset developed on the $SEI Blockchain. It transcends being merely a cryptocurrency; $OIN stands as a robust store of value, symbolizing the future of decentralized finance and its potential to reshape the crypto landscape.",
      denom_units: [{
        denom: "factory/sei1thgp6wamxwqt7rthfkeehktmq0ujh5kspluw6w/OIN",
        exponent: 0
      }, {
        denom: "oin",
        exponent: 6
      }],
      address: "sei1thgp6wamxwqt7rthfkeehktmq0ujh5kspluw6w",
      base: "factory/sei1thgp6wamxwqt7rthfkeehktmq0ujh5kspluw6w/OIN",
      name: "OIN STORE OF VALUE",
      display: "oin",
      symbol: "OIN",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/oin.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/oin.png"
      }]
    },
    {
      description: "ERIS liquid staked SEI",
      denom_units: [{
        denom: "factory/sei1x2fgaaqecvk8kwuqkjqcj27clw5p5g99uawdzy9sc4rku8avumcq3cky4k/ampSEI",
        exponent: 0
      }, {
        denom: "ampSEI",
        exponent: 6
      }],
      base: "factory/sei1x2fgaaqecvk8kwuqkjqcj27clw5p5g99uawdzy9sc4rku8avumcq3cky4k/ampSEI",
      name: "ERIS Amplified SEI",
      display: "ampSEI",
      symbol: "ampSEI",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/ampsei.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/ampsei.svg"
      }]
    },
    {
      description: "Popeye the Seilor",
      denom_units: [{
        denom: "factory/sei1fl8pg59wfsgw2wp4aruk38zqccfnc2g8ptrm24/popeye",
        exponent: 0
      }, {
        denom: "popeye",
        exponent: 6
      }],
      base: "factory/sei1fl8pg59wfsgw2wp4aruk38zqccfnc2g8ptrm24/popeye",
      name: "Popeye",
      display: "popeye",
      symbol: "POPEYE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/popeye.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/popeye.png"
      }]
    },
    {
      description: "A wise dog and a marshal arts master",
      denom_units: [{
        denom: "factory/sei1ta5rkr6y2qlkj7px8w2cvear7m2822q4f4ea0m/sensei",
        exponent: 0
      }, {
        denom: "sensei",
        exponent: 6
      }],
      base: "factory/sei1ta5rkr6y2qlkj7px8w2cvear7m2822q4f4ea0m/sensei",
      name: "Sensei Dog",
      display: "sensei",
      symbol: "SENSEI",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/SenseiDog.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/SenseiDog.png"
      }]
    },
    {
      description: "The first memecoin on osmosis.",
      denom_units: [{
        denom: "ibc/AB7C92666DE8C7A977666B8080CABF0127B652B9D40F7251E6914DE942D9942B",
        exponent: 0
      }, {
        denom: "WOSMO",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/AB7C92666DE8C7A977666B8080CABF0127B652B9D40F7251E6914DE942D9942B",
      name: "Wosmo",
      display: "WOSMO",
      symbol: "WOSMO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3/WOSMO",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-782",
          path: "transfer/channel-782/factory/osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3/WOSMO"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3/WOSMO"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wosmo.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wosmo.png"
      }
    },
    {
      description: "OOZARU is a meme token on SEI Network inspired by the iconic transformation in the Dragon Ball series",
      denom_units: [{
        denom: "sei1wlf9j5uv50rcg0u5j6xk00px5tflptzprj39keck27eg8g7qd7hqq6kvda",
        exponent: 0
      }, {
        denom: "oozaru",
        exponent: 6
      }],
      base: "sei1wlf9j5uv50rcg0u5j6xk00px5tflptzprj39keck27eg8g7qd7hqq6kvda",
      name: "Oozaru",
      display: "oozaru",
      symbol: "OOZARU",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/oozaru.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/oozaru.png"
      }]
    },
    {
      description: "The Original Meme Coin of SEI Network",
      type_asset: "cw20",
      address: "sei1hrndqntlvtmx2kepr0zsfgr7nzjptcc72cr4ppk4yav58vvy7v3s4er8ed",
      denom_units: [{
        denom: "cw20:sei1hrndqntlvtmx2kepr0zsfgr7nzjptcc72cr4ppk4yav58vvy7v3s4er8ed",
        exponent: 0
      }, {
        denom: "SEIYAN",
        exponent: 6
      }],
      base: "cw20:sei1hrndqntlvtmx2kepr0zsfgr7nzjptcc72cr4ppk4yav58vvy7v3s4er8ed",
      name: "SEIYAN",
      display: "SEIYAN",
      symbol: "SEIYAN",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/SEIYAN.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/SEIYAN.png"
      }]
    },
    {
      description: "Astroport is a neutral marketplace where anyone, from anywhere in the galaxy, can dock to trade their wares.",
      denom_units: [{
        denom: "ibc/1FF96B82FDE4B0E38FA0A8EC24A83E1EAC2615F338468A47473BAD3B45E066D2",
        exponent: 0,
        aliases: ["uastro"]
      }, {
        denom: "astro",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/1FF96B82FDE4B0E38FA0A8EC24A83E1EAC2615F338468A47473BAD3B45E066D2",
      name: "Astroport token",
      display: "astro",
      symbol: "ASTRO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "neutron",
          base_denom: "factory/neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07/astro",
          channel_id: "channel-2016"
        },
        chain: {
          channel_id: "channel-66",
          path: "transfer/channel-177/factory/neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07/astro"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "neutron",
          base_denom: "factory/neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07/astro"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.svg"
      }
    }
  ]
};
var assets_default143 = info397;

// node_modules/chain-registry/esm/mainnet/sei/chain.js
var info398 = {
  $schema: "../chain.schema.json",
  chain_name: "sei",
  status: "live",
  website: "https://www.sei.io/",
  network_type: "mainnet",
  pretty_name: "Sei",
  chain_id: "pacific-1",
  bech32_prefix: "sei",
  daemon_name: "seid",
  node_home: "$HOME/.sei",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "usei",
      fixed_min_gas_price: 0.02,
      low_gas_price: 0.02,
      average_gas_price: 0.02,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "usei"
    }]
  },
  codebase: {
    cosmos_sdk_version: "sei-cosmos v0.3.19",
    cosmwasm_enabled: true,
    cosmwasm_version: "sei-wasmd v0.1.5"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/sei.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/sei.svg"
  },
  description: "Sei is the fastest Layer 1 blockchain, designed to scale with the industry.",
  apis: {
    rpc: [
      {
        address: "https://sei-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://sei-rpc.polkachu.com/",
        provider: "polkachu.com"
      },
      {
        address: "https://sei-rpc.brocha.in/",
        provider: "Brochain"
      },
      {
        address: "https://rpc-sei.stingray.plus/",
        provider: "StingRay"
      },
      {
        address: "https://rpc-sei.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://sei.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://sei-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    rest: [
      {
        address: "https://sei-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://sei-api.polkachu.com/",
        provider: "polkachu.com"
      },
      {
        address: "https://sei-rest.brocha.in/",
        provider: "Brochain"
      },
      {
        address: "https://api-sei.stingray.plus/",
        provider: "StingRay"
      },
      {
        address: "https://lcd-sei.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://sei.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://sei-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    grpc: [
      {
        address: "https://sei-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://sei-grpc.polkachu.com:11990/",
        provider: "polkachu.com"
      },
      {
        address: "sei-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "grpc-sei.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "sei.grpc.kjnodes.com:443",
        provider: "kjnodes"
      },
      {
        address: "sei-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    "evm-http-jsonrpc": [
      {
        address: "https://evm-rpc.sei-apis.com",
        provider: "Rhino"
      },
      {
        address: "https://seievm-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://sei-jsonrpc.lavenderfive.com",
        provider: "Lavender.Five Nodes"
      }
    ]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://ping.pub/sei",
      tx_page: "https://ping.pub/sei/tx/${txHash}",
      account_page: "https://ping.pub/sei/account/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/sei",
      tx_page: "https://www.mintscan.io/sei/transactions/${txHash}",
      account_page: "https://www.mintscan.io/sei/accounts/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/sei",
      tx_page: "https://ezstaking.app/sei/txs/${txHash}",
      account_page: "https://ezstaking.app/sei/account/${accountAddress}"
    },
    {
      kind: "seiscan",
      url: "https://www.seiscan.app/pacific-1",
      tx_page: "https://www.seiscan.app/pacific-1/txs/${txHash}",
      account_page: "https://www.seiscan.app/pacific-1/accounts/${accountAddress}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/sei",
      tx_page: "https://mainnet.whispernode.com/sei/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/sei/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/sei.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/sei.svg"
  }]
};
var chain_default143 = info398;

// node_modules/chain-registry/esm/mainnet/sei/ibc.js
var info399 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-151",
      connection_id: "connection-136"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-8",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-103",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1140",
      connection_id: "connection-827"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-3",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-584",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "doravota",
      client_id: "07-tendermint-21",
      connection_id: "connection-27"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-109",
      connection_id: "connection-153"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-64",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kava",
      client_id: "07-tendermint-146",
      connection_id: "connection-181"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-38",
      connection_id: "connection-33"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-132",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "migaloo",
      client_id: "07-tendermint-108",
      connection_id: "connection-84"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-22",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-57",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-89",
      connection_id: "connection-65"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-123",
      connection_id: "connection-157"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2016",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-66",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-2110",
        port_id: "wasm.neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07"
      },
      chain_2: {
        channel_id: "channel-71",
        port_id: "wasm.sei12fykm2xhg5ces2vmf4q2aem8c958exv3v0wmvrspa8zucrdwjeds2e2ntx"
      },
      ordering: "unordered",
      version: "astroport-ibc-v1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-45",
      connection_id: "connection-61"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-45",
      connection_id: "connection-77"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-39",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-45",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nois",
      client_id: "07-tendermint-19",
      connection_id: "connection-11"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-106",
      connection_id: "connection-144"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-43",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-58",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-44",
        port_id: "wasm.nois1acyc05v6fgcdgj88nmz2t40aex9nlnptqpwp5hf8hwg7rhce9uuqgqz5wp"
      },
      chain_2: {
        channel_id: "channel-59",
        port_id: "wasm.sei1vxlzhn6qvf95syha2tgr0ct23sk5359s2vqzylgthuyy7kd7ql5qcxa4r0"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2790",
      connection_id: "connection-2288"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-2",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-782",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "planq",
      client_id: "07-tendermint-545",
      connection_id: "connection-477"
    },
    chain_2: {
      chain_name: "sei",
      client_id: "07-tendermint-21",
      connection_id: "connection-12"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-59",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "sei",
      client_id: "07-tendermint-18",
      connection_id: "connection-11"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-130",
      connection_id: "connection-119"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-149",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default113 = info399;

// node_modules/chain-registry/esm/mainnet/sei/index.js
var assets143 = assets_default143;
var chain143 = chain_default143;
var ibc113 = ibc_default113;

// node_modules/chain-registry/esm/mainnet/self/assets.js
var info400 = {
  $schema: "../assetlist.schema.json",
  chain_name: "self",
  assets: [{
    description: "The native staking token of Self Chain.",
    denom_units: [{
      denom: "uslf",
      exponent: 0
    }, {
      denom: "slf",
      exponent: 6
    }],
    base: "uslf",
    name: "Self",
    display: "slf",
    symbol: "SLF",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/self/images/self.png"
    },
    coingecko_id: "self-chain",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/self/images/self.png"
    }],
    socials: {
      website: "https://selfchain.xyz",
      twitter: "https://x.com/selfchainxyz"
    }
  }]
};
var assets_default144 = info400;

// node_modules/chain-registry/esm/mainnet/self/chain.js
var info401 = {
  $schema: "../chain.schema.json",
  chain_name: "self",
  status: "live",
  website: "https://selfchain.xyz",
  network_type: "mainnet",
  pretty_name: "Self Chain",
  chain_id: "self-1",
  bech32_prefix: "self",
  daemon_name: "selfchaind",
  node_home: "$HOME/.selfchain",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uslf",
      fixed_min_gas_price: 5e-3,
      low_gas_price: 5e-3,
      average_gas_price: 0.025,
      high_gas_price: 0.03
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uslf"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/self/images/self.png"
  },
  description: "Self Chain Is The First Modular Intent-Centric Access Layer L1 Blockchain And Keyless Wallet Infrastructure Service That Uses MPC-TSS/AA For Multi-Chain Web3 Access.",
  apis: {
    rpc: [{
      address: "https://rpc.selfchain.io:26657",
      provider: "Self Chain"
    }],
    rest: [{
      address: "https://api.selfchain.io",
      provider: "Self Chain"
    }, {
      address: "https://selfchain.api.m.stavr.tech",
      provider: "\u{1F525}STAVR\u{1F525}"
    }],
    grpc: []
  },
  explorers: [{
    kind: "Self Chain",
    url: "https://explorer.selfchain.xyz/selfchain",
    tx_page: "https://explorer.selfchain.xyz/selfchain/tx/${txHash}",
    account_page: "https://explorer.selfchain.xyz/selfchain/account/${accountAddress}"
  }, {
    kind: "\u{1F525}STAVR\u{1F525}",
    url: "https://explorer.stavr.tech/Selfchain-Mainnet",
    tx_page: "https://explorer.stavr.tech/Selfchain-Mainnet/tx/${txHash}",
    account_page: "https://explorer.stavr.tech/Selfchain-Mainnet/account/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/self/images/self.png"
  }]
};
var chain_default144 = info401;

// node_modules/chain-registry/esm/mainnet/self/ibc.js
var info402 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-226",
      connection_id: "connection-211"
    },
    chain_2: {
      chain_name: "self",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-157",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1310",
      connection_id: "connection-1043"
    },
    chain_2: {
      chain_name: "self",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-892",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3213",
      connection_id: "connection-2684"
    },
    chain_2: {
      chain_name: "self",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-78292",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default114 = info402;

// node_modules/chain-registry/esm/mainnet/self/index.js
var assets144 = assets_default144;
var chain144 = chain_default144;
var ibc114 = ibc_default114;

// node_modules/chain-registry/esm/mainnet/sentinel/assets.js
var info403 = {
  $schema: "../assetlist.schema.json",
  chain_name: "sentinel",
  assets: [{
    description: "DVPN is the native token of the Sentinel Hub.",
    denom_units: [{
      denom: "udvpn",
      exponent: 0
    }, {
      denom: "dvpn",
      exponent: 6
    }],
    base: "udvpn",
    name: "Sentinel",
    display: "dvpn",
    symbol: "DVPN",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sentinel/images/dvpn.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sentinel/images/dvpn.svg"
    },
    coingecko_id: "sentinel",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sentinel/images/dvpn.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sentinel/images/dvpn.svg"
    }],
    socials: {
      website: "https://www.sentinel.co/",
      twitter: "https://twitter.com/SentinelVPN"
    }
  }]
};
var assets_default145 = info403;

// node_modules/chain-registry/esm/mainnet/sentinel/chain.js
var info404 = {
  $schema: "../chain.schema.json",
  chain_name: "sentinel",
  status: "live",
  network_type: "mainnet",
  website: "https://sentinel.co/",
  pretty_name: "Sentinel",
  chain_id: "sentinelhub-2",
  bech32_prefix: "sent",
  daemon_name: "sentinelhub",
  node_home: "$HOME/.sentinelhub",
  slip44: 118,
  key_algos: ["secp256k1"],
  fees: {
    fee_tokens: [{
      denom: "udvpn",
      low_gas_price: 0.1,
      average_gas_price: 0.25,
      high_gas_price: 0.4
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "udvpn"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sentinel/images/dvpn.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sentinel/images/dvpn.svg"
  },
  description: "The Sentinel ecosystem is a global network of autonomous dVPN applications that enable private and censorship resistant internet access.",
  apis: {
    rpc: [
      {
        address: "https://rpc-sentinel.busurnode.com",
        provider: "Busurnode"
      },
      {
        address: "https://rpc-sentinel-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://rpc-sentinel.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://rpc.sentinel.chaintools.tech/",
        provider: "ChainTools"
      },
      {
        address: "https://rpc.sentinel.quokkastake.io",
        provider: "\u{1F439} Quokka Stake"
      },
      {
        address: "https://rpc.dvpn.roomit.xyz",
        provider: "RoomIT"
      },
      {
        address: "https://sentinel-rpc.badgerbite.io/",
        provider: "BadgerBite"
      },
      {
        address: "https://sentinel-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://sentinel-rpc.validatornode.com/",
        provider: "ValidatorNode"
      },
      {
        address: "https://rpc.trinityvalidator.com",
        provider: "Trinity Validator"
      },
      {
        address: "https://rpc.sentinelgrowthdao.com",
        provider: "Sentinel Growth DAO"
      },
      {
        address: "https://public.stakewolle.com/cosmos/sentinel/rpc",
        provider: "Stakewolle"
      },
      {
        address: "http://163.197.193.2:26657",
        provider: "Tesla Full Node"
      },
      {
        address: "https://sentinel.declab.pro:26628",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "https://sentinel.rpc.nodeshub.online:443",
        provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705"
      },
      {
        address: "https://rpc.dvpn.me:443",
        provider: "MathNodes China"
      },
      {
        address: "https://rpc.ro.mathnodes.com:443",
        provider: "MathNodes Romania"
      },
      {
        address: "https://rpc.noncompliant.network:443",
        provider: "Noncompliant Network"
      }
    ],
    rest: [
      {
        address: "https://api-sentinel.busurnode.com",
        provider: "Busurnode"
      },
      {
        address: "https://api-sentinel-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://lcd-sentinel.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://api.sentinel.quokkastake.io",
        provider: "\u{1F439} Quokka Stake"
      },
      {
        address: "https://api.dvpn.roomit.xyz",
        provider: "RoomIT"
      },
      {
        address: "https://sentinel-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://sentinel-api.validatornode.com",
        provider: "ValidatorNode"
      },
      {
        address: "https://api.trinityvalidator.com",
        provider: "Trinity Validator"
      },
      {
        address: "https://api.sentinelgrowthdao.com",
        provider: "Sentinel Growth DAO"
      },
      {
        address: "https://public.stakewolle.com/cosmos/sentinel/rest",
        provider: "Stakewolle"
      },
      {
        address: "http://163.197.193.2:26657",
        provider: "Tesla Full Node"
      },
      {
        address: "https://sentinel.declab.pro:443",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "https://sentinel.api.nodeshub.online:443",
        provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705"
      },
      {
        address: "https://api.dvpn.me:443",
        provider: "MathNodes China"
      },
      {
        address: "https://api.ro.mathnodes.com:443",
        provider: "MathNodes Romania"
      },
      {
        address: "https://api.noncompliant.network:443",
        provider: "Noncompliant Network"
      }
    ],
    grpc: [
      {
        address: "grpc-sentinel-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "sentinel.grpcui.chaintools.host:443",
        provider: "ChainTools"
      },
      {
        address: "sentinel-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "grpc.dvpn.roomit.xyz:8443",
        provider: "RoomIT"
      },
      {
        address: "sentinel-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://sentinel.declab.pro:9019",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "https://sentinel.grpc.nodeshub.online",
        provider: "Nodes Hub"
      },
      {
        address: "https://grpc.dvpn.me:443",
        provider: "MathNodes China"
      },
      {
        address: "https://grc.mathnodes.com:443",
        provider: "MathNodes Romania"
      },
      {
        address: "https://grpc.noncompliant.network:443",
        provider: "Noncompliant Network"
      },
      {
        address: "https://grpc.dvpn.me:9090",
        provider: "MathNodes China (Insecure)"
      },
      {
        address: "https://grc.mathnodes.com:9000",
        provider: "MathNodes Romania (Insecure)"
      },
      {
        address: "https://grpc.noncompliant.network:9090",
        provider: "Noncompliant Network (Insecure)"
      }
    ]
  },
  explorers: [
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/sentinel",
      tx_page: "https://www.mintscan.io/sentinel/transactions/${txHash}",
      account_page: "https://www.mintscan.io/sentinel/accounts/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/sentinel",
      tx_page: "https://ezstaking.app/sentinel/txs/${txHash}",
      account_page: "https://ezstaking.app/sentinel/account/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/sentinel",
      tx_page: "https://atomscan.com/sentinel/transactions/${txHash}",
      account_page: "https://atomscan.com/sentinel/accounts/${accountAddress}"
    },
    {
      kind: "RoomIT",
      url: "https://explorer.tendermint.roomit.xyz/sentinel-mainnet",
      tx_page: "https://explorer.tendermint.roomit.xyz/sentinel-mainnet/transactions/${txHash}",
      account_page: "https://explorer.tendermint.roomit.xyz/sentinel-mainnet/accounts/${accountAddress}"
    },
    {
      kind: "ValidatorNode",
      url: "https://explorer.validatornode.com/sentinel",
      tx_page: "https://explorer.validatornode.com/sentinel/tx/${txHash}"
    },
    {
      kind: "Decloud Nodes Lab",
      url: "https://explorer.declab.pro/Sentinel",
      tx_page: "https://explorer.declab.pro/Sentinel/tx/${txHash}"
    },
    {
      kind: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705",
      url: "https://explorer.nodeshub.online/sentinel/",
      tx_page: "https://explorer.nodeshub.online/sentinel/tx/${txHash}",
      account_page: "https://explorer.nodeshub.online/sentinel/accounts/${accountAddress}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/sentinel",
      tx_page: "https://mainnet.whispernode.com/sentinel/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/sentinel/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sentinel/images/dvpn.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sentinel/images/dvpn.svg"
  }]
};
var chain_default145 = info404;

// node_modules/chain-registry/esm/mainnet/sentinel/ibc.js
var info405 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-45",
      connection_id: "connection-21"
    },
    chain_2: {
      chain_name: "sentinel",
      client_id: "07-tendermint-42",
      connection_id: "connection-27"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-388",
      connection_id: "connection-341"
    },
    chain_2: {
      chain_name: "sentinel",
      client_id: "07-tendermint-58",
      connection_id: "connection-33"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-186",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-63",
      connection_id: "connection-36"
    },
    chain_2: {
      chain_name: "sentinel",
      client_id: "07-tendermint-43",
      connection_id: "connection-28"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-19",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "decentr",
      client_id: "07-tendermint-13",
      connection_id: "connection-5"
    },
    chain_2: {
      chain_name: "sentinel",
      client_id: "07-tendermint-103",
      connection_id: "connection-81"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-55",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "irisnet",
      client_id: "07-tendermint-36",
      connection_id: "connection-28"
    },
    chain_2: {
      chain_name: "sentinel",
      client_id: "07-tendermint-54",
      connection_id: "connection-30"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "medasdigital",
      client_id: "07-tendermint-4",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "sentinel",
      client_id: "07-tendermint-110",
      connection_id: "connection-87"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-60",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "sentinel",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "persistence",
      client_id: "07-tendermint-34",
      connection_id: "connection-28"
    },
    chain_2: {
      chain_name: "sentinel",
      client_id: "07-tendermint-61",
      connection_id: "connection-36"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-22",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "regen",
      client_id: "07-tendermint-31",
      connection_id: "connection-29"
    },
    chain_2: {
      chain_name: "sentinel",
      client_id: "07-tendermint-56",
      connection_id: "connection-32"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-14",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "sentinel",
      client_id: "07-tendermint-96",
      connection_id: "connection-75"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-50",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "sentinel",
      client_id: "07-tendermint-84",
      connection_id: "connection-58"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-9",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "sentinel",
      client_id: "07-tendermint-88",
      connection_id: "connection-70"
    },
    chain_2: {
      chain_name: "starname",
      client_id: "07-tendermint-46",
      connection_id: "connection-32"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-40",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  }
];
var ibc_default115 = info405;

// node_modules/chain-registry/esm/mainnet/sentinel/index.js
var assets145 = assets_default145;
var chain145 = chain_default145;
var ibc115 = ibc_default115;

// node_modules/chain-registry/esm/mainnet/sge/assets.js
var info406 = {
  $schema: "../assetlist.schema.json",
  chain_name: "sge",
  assets: [{
    description: "The native token of SGE Network",
    extended_description: "The Sports, Gaming, and Entertainment Network (SGE Network) is a Cosmos SDK-based layer-1 blockchain that uses its own native utility token (SGE Token). The SGE Network leverages the modular components, blockchain interoperability and minimal gas fees of the Cosmos-based design to support applications at the intersection of blockchain, sports, gaming and entertainment that are pioneering novel ways of engaging users with a UX, value proposition and utility never before seen in the space.",
    denom_units: [{
      denom: "usge",
      exponent: 0
    }, {
      denom: "sge",
      exponent: 6
    }],
    base: "usge",
    name: "SGE",
    display: "sge",
    symbol: "SGE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.svg"
    },
    coingecko_id: "six-sigma",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.svg",
      theme: {
        primary_color_hex: "#C0A15B",
        background_color_hex: "#00000000",
        circle: false
      }
    }],
    socials: {
      website: "https://sgenetwork.io/",
      twitter: "https://x.com/sge_network"
    }
  }]
};
var assets_default146 = info406;

// node_modules/chain-registry/esm/mainnet/sge/chain.js
var info407 = {
  $schema: "../chain.schema.json",
  chain_name: "sge",
  status: "live",
  network_type: "mainnet",
  pretty_name: "SGE",
  chain_id: "sgenet-1",
  bech32_prefix: "sge",
  daemon_name: "sged",
  node_home: "$HOME/.sge",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "usge",
      fixed_min_gas_price: 1e-3,
      low_gas_price: 0.1,
      average_gas_price: 0.25,
      high_gas_price: 0.5
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "usge"
    }]
  },
  codebase: {
    cosmos_sdk_version: "sge-network/cosmos-sdk v0.47.9-0.20240409081440-054c8c413d45"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://sge-rpc.lavenderfive.com/",
        provider: "Lavenderfive"
      },
      {
        address: "https://sge-rpc.polkachu.com/",
        provider: "Polkachu"
      },
      {
        address: "https://rpc.sge.nodestake.top/",
        provider: "Nodestake"
      },
      {
        address: "https://rpc.sge.roomit.xyz/",
        provider: "RoomIT"
      },
      {
        address: "https://sge.rpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc-sge.nodeist.net/",
        provider: "Nodeist"
      },
      {
        address: "https://sge-rpc.ramuchi.tech",
        provider: "ramuchi.tech"
      },
      {
        address: "https://sge-rpc.stakerhouse.com",
        provider: "StakerHouse"
      },
      {
        address: "https://rpc.sge.tcnetwork.io",
        provider: "TC Network"
      },
      {
        address: "https://sge-rpc.sr20de.xyz",
        provider: "Sr20de"
      },
      {
        address: "https://rpc.sge.safeblock.space",
        provider: "Safe Block"
      },
      {
        address: "https://mainnet-sge-rpc.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://sge-rpc.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://sge_mainnet_rpc.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      }
    ],
    rest: [
      {
        address: "https://sge-api.lavenderfive.com/",
        provider: "Lavenderfive"
      },
      {
        address: "https://sge-api.polkachu.com/",
        provider: "Polkachu"
      },
      {
        address: "https://api.sge.nodestake.top/",
        provider: "Nostake"
      },
      {
        address: "https://api-sge.nodeist.net/",
        provider: "Nodeist"
      },
      {
        address: "https://sge.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://sge-api.ramuchi.tech/",
        provider: "ramuchi.tech"
      },
      {
        address: "https://sge-rest.stakerhouse.com",
        provider: "StakerHouse"
      },
      {
        address: "https://rest.sge.tcnetwork.io",
        provider: "TC Network"
      },
      {
        address: "https://sge-api.sr20de.xyz",
        provider: "Sr20de"
      },
      {
        address: "https://api.sge.safeblock.space",
        provider: "Safe Block"
      },
      {
        address: "https://mainnet-sge-api.konsortech.xyz",
        provider: "KonsorTech"
      },
      {
        address: "https://sge-api.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://api.sge.roomit.xyz/",
        provider: "RoomIT"
      },
      {
        address: "https://sge_mainnet_api.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      }
    ],
    grpc: [
      {
        address: "sge-grpc.lavenderfive.com:443",
        provider: "Lavenderfive"
      },
      {
        address: "https://grpc.sge.nodestake.top/",
        provider: "Nodestake"
      },
      {
        address: "https://grpc-sge.nodeist.net/",
        provider: "Nodeist"
      },
      {
        address: "https://sge-grpc.ramuchi.tech:443",
        provider: "ramuchi.tech"
      },
      {
        address: "http://sge.grpc.m.stavr.tech:543",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "sge-grpc.stakerhouse.com:443",
        provider: "StakerHouse"
      },
      {
        address: "https://sge-grpc.sr20de.xyz",
        provider: "Sr20de"
      },
      {
        address: "mainnet-sge.konsortech.xyz:22090",
        provider: "KonsorTech"
      },
      {
        address: "sge-grpc.genznodes.dev:5090",
        provider: "genznodes"
      },
      {
        address: "grpc.sge.roomit.xyz:8443",
        provider: "RoomIT"
      }
    ]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://blockexplorer.sgenetwork.io/sge",
      tx_page: "https://blockexplorer.sgenetwork.io/sge/tx/${txHash}"
    },
    {
      kind: "nodestake.top",
      url: "https://explorer.nodestake.top/sge",
      tx_page: "https://explorer.nodestake.top/sge/tx/${txHash}"
    },
    {
      kind: "stakerhouse",
      url: "https://cosmotracker.com/sge",
      tx_page: "https://cosmotracker.com/sge/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Sge-Mainnet",
      tx_page: "https://explorer.stavr.tech/Sge-Mainnet/transaction/${txHash}",
      account_page: "https://explorer.stavr.tech/Sge-Mainnet/account/${accountAddress}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/sge",
      tx_page: "https://explorer.tcnetwork.io/sge/transaction/${txHash}",
      account_page: "https://explorer.tcnetwork.io/sge/account/${accountAddress}"
    },
    {
      kind: "Safe Block",
      url: "https://explorer.safeblock.space/sge",
      tx_page: "https://explorer.safeblock.space/sge/tx/${txHash}",
      account_page: "https://explorer.safeblock.space/sge/account/${accountAddress}"
    },
    {
      kind: "KonsorTech",
      url: "https://explorer.konsortech.xyz/sge",
      tx_page: "https://explorer.konsortech.xyz/sge/tx/${txHash}",
      account_page: "https://explorer.konsortech.xyz/sge/account/${accountAddress}"
    },
    {
      kind: "RoomIT",
      url: "https://explorer.tendermint.roomit.xyz/sge-mainnet",
      tx_page: "https://explorer.tendermint.roomit.xyz/sge-mainnet/tx/${txHash}",
      account_page: "https://explorer.tendermint.roomit.xyz/sge-mainnet/account/${accountAddress}"
    },
    {
      kind: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}",
      url: "https://explorer.whenmoonwhenlambo.money/sge",
      tx_page: "https://explorer.whenmoonwhenlambo.money/sge/tx/${txHash}",
      account_page: "https://explorer.whenmoonwhenlambo.money/sge/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.svg"
  }]
};
var chain_default146 = info407;

// node_modules/chain-registry/esm/mainnet/sge/ibc.js
var info408 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2972",
    connection_id: "connection-2468"
  },
  chain_2: {
    chain_name: "sge",
    client_id: "07-tendermint-0",
    connection_id: "connection-0"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-5485",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default116 = info408;

// node_modules/chain-registry/esm/mainnet/sge/index.js
var assets146 = assets_default146;
var chain146 = chain_default146;
var ibc116 = ibc_default116;

// node_modules/chain-registry/esm/mainnet/shareledger/assets.js
var info409 = {
  $schema: "../assetlist.schema.json",
  chain_name: "shareledger",
  assets: [{
    description: "The native token of Shareledger",
    denom_units: [{
      denom: "nshr",
      exponent: 0
    }, {
      denom: "shr",
      exponent: 9
    }],
    base: "nshr",
    name: "Shareledger",
    display: "shr",
    symbol: "SHR",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shareledger/images/token.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shareledger/images/token.svg"
    },
    coingecko_id: "shareledger",
    keywords: ["id"],
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shareledger/images/token.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shareledger/images/token.svg"
    }]
  }]
};
var assets_default147 = info409;

// node_modules/chain-registry/esm/mainnet/shareledger/chain.js
var info410 = {
  $schema: "../chain.schema.json",
  chain_name: "shareledger",
  status: "live",
  network_type: "mainnet",
  website: "https://www.sharering.network/",
  pretty_name: "Shareledger",
  chain_id: "ShareRing-VoyagerNet",
  bech32_prefix: "shareledger",
  daemon_name: "shareledger",
  node_home: "$HOME/.shareledger",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "nshr",
      fixed_min_gas_price: 0,
      low_gas_price: 2e3,
      average_gas_price: 3e3,
      high_gas_price: 4e3
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "nshr"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.45",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.27"
  },
  apis: {
    rpc: [{
      address: "https://rpc.explorer.shareri.ng",
      provider: "ShareRing"
    }],
    rest: [{
      address: "https://lcd.explorer.shareri.ng/",
      provider: "ShareRing"
    }],
    grpc: [{
      address: "rpc.explorer.shareri.ng:443",
      provider: "ShareRing"
    }]
  },
  explorers: [{
    kind: "big dipper",
    url: "https://explorer.shareri.ng",
    tx_page: "https://explorer.shareri.ng/transactions/${txHash}",
    account_page: "https://explorer.shareri.ng/accounts/${accountAddress}"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shareledger/images/chain-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shareledger/images/token.svg"
  },
  keywords: ["id"],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shareledger/images/chain-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shareledger/images/token.svg"
  }]
};
var chain_default147 = info410;

// node_modules/chain-registry/esm/mainnet/shareledger/ibc.js
var info411 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2680",
    connection_id: "connection-2182"
  },
  chain_2: {
    chain_name: "shareledger",
    client_id: "07-tendermint-1",
    connection_id: "connection-5"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-647",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default117 = info411;

// node_modules/chain-registry/esm/mainnet/shareledger/index.js
var assets147 = assets_default147;
var chain147 = chain_default147;
var ibc117 = ibc_default117;

// node_modules/chain-registry/esm/mainnet/shentu/assets.js
var info412 = {
  $schema: "../assetlist.schema.json",
  chain_name: "shentu",
  assets: [{
    description: "The native token of Shentu",
    denom_units: [{
      denom: "uctk",
      exponent: 0
    }, {
      denom: "ctk",
      exponent: 6
    }],
    base: "uctk",
    name: "Shentu",
    display: "ctk",
    symbol: "CTK",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shentu/images/ctk.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shentu/images/ctk.svg"
    },
    coingecko_id: "certik",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shentu/images/ctk.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shentu/images/ctk.svg"
    }]
  }]
};
var assets_default148 = info412;

// node_modules/chain-registry/esm/mainnet/shentu/chain.js
var info413 = {
  $schema: "../chain.schema.json",
  chain_name: "shentu",
  status: "live",
  network_type: "mainnet",
  website: "https://www.shentu.technology/",
  pretty_name: "Shentu",
  chain_id: "shentu-2.2",
  bech32_prefix: "shentu",
  daemon_name: "shentud",
  node_home: "$HOME/.shentud",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uctk",
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uctk"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shentu/images/ctk.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shentu/images/ctk.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://shenturpc.noopsbycertik.com/",
        provider: "Shentu"
      },
      {
        address: "https://shentu-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://shentu.rpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://shentu-rpc.ramuchi.tech",
        provider: "ramuchi.tech"
      },
      {
        address: "https://rpc-shentu-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://shentu-rpc.tienthuattoan.ventures",
        provider: "TienThuatToan"
      },
      {
        address: "https://shentu-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://shentu-rpc.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://shentu-rpc.panthea.eu",
        provider: "Panthea EU"
      },
      {
        address: "https://shentu-rpc.kleomedes.network",
        provider: "Kleomedes"
      }
    ],
    rest: [
      {
        address: "https://rest.noopsbycertik.com/",
        provider: "Shentu"
      },
      {
        address: "https://shentu-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://shentu.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://shentu-api.ramuchi.tech",
        provider: "ramuchi.tech"
      },
      {
        address: "https://api-shentu-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://shentu-api.tienthuattoan.ventures",
        provider: "TienThuatToan"
      },
      {
        address: "https://shentu-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://shentu-api.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://shentu-api.panthea.eu",
        provider: "Panthea EU"
      },
      {
        address: "https://shentu-api.kleomedes.network",
        provider: "Kleomedes"
      }
    ],
    grpc: [
      {
        address: "shentu-grpc.polkachu.com:14090",
        provider: "Polkachu"
      },
      {
        address: "shentu.grpc.m.stavr.tech:9593",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://shentu-grpc.ramuchi.tech:12090",
        provider: "ramuchi.tech"
      },
      {
        address: "grpc-shentu-01.stakeflow.io:2402",
        provider: "Stakeflow"
      },
      {
        address: "shentu-grpc.tienthuattoan.ventures:9490",
        provider: "TienThuatToan"
      },
      {
        address: "shentu-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "shentu-grpc.panthea.eu:16700",
        provider: "Panthea EU"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/shentu",
      tx_page: "https://ezstaking.app/shentu/txs/${txHash}",
      account_page: "https://ezstaking.app/shentu/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Shentu-Mainnet",
      tx_page: "https://explorer.stavr.tech/Shentu-Mainnet/txs/${txHash}",
      account_page: "https://explorer.stavr.tech/Shentu-Mainnet/account/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/shentu",
      tx_page: "https://www.mintscan.io/shentu/transactions/${txHash}",
      account_page: "https://www.mintscan.io/shentu/accounts/${accountAddress}"
    },
    {
      kind: "Shentu Explorer",
      url: "https://explorer.shentu.technology/?net=shentu-2.2",
      tx_page: "https://explorer.shentu.technology/transactions/${txHash}?net=shentu-2.2"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/shentu",
      tx_page: "https://ping.pub/shentu/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/shentu",
      tx_page: "https://atomscan.com/shentu/transactions/${txHash}",
      account_page: "https://atomscan.com/shentu/accounts/${accountAddress}"
    },
    {
      kind: "bigdipper",
      url: "https://bigdipper.live/shentu",
      tx_page: "https://bigdipper.live/shentu/transactions/${txHash}",
      account_page: "https://bigdipper.live/shentu/accounts/${accountAddress}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/shentu",
      account_page: "https://stakeflow.io/shentu/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shentu/images/ctk.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shentu/images/ctk.svg"
  }]
};
var chain_default148 = info413;

// node_modules/chain-registry/esm/mainnet/shentu/ibc.js
var info414 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosis",
    client_id: "07-tendermint-1741",
    connection_id: "connection-1342"
  },
  chain_2: {
    chain_name: "shentu",
    client_id: "07-tendermint-9",
    connection_id: "connection-8"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-146",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-8",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default118 = info414;

// node_modules/chain-registry/esm/mainnet/shentu/index.js
var assets148 = assets_default148;
var chain148 = chain_default148;
var ibc118 = ibc_default118;

// node_modules/chain-registry/esm/mainnet/shido/assets.js
var info415 = {
  $schema: "../assetlist.schema.json",
  chain_name: "shido",
  assets: [{
    description: "The native EVM and Wasm, governance and staking token of the Shido Chain",
    denom_units: [{
      denom: "shido",
      exponent: 0
    }, {
      denom: "SHIDO",
      exponent: 18
    }],
    base: "shido",
    name: "Shido",
    display: "SHIDO",
    symbol: "SHIDO",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shido/images/shido.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shido/images/shido.svg"
    },
    coingecko_id: "shido-2",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shido/images/shido.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shido/images/shido.svg"
    }],
    socials: {
      website: "https://shido.io/",
      twitter: "https://twitter.com/ShidoGlobal"
    }
  }]
};
var assets_default149 = info415;

// node_modules/chain-registry/esm/mainnet/shido/chain.js
var info416 = {
  $schema: "../chain.schema.json",
  chain_name: "shido",
  status: "live",
  network_type: "mainnet",
  website: "https://shido.io/",
  pretty_name: "Shido",
  chain_id: "shido_9008-1",
  bech32_prefix: "shido",
  node_home: "$HOME/.shidod",
  daemon_name: "shidod",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "shido",
      fixed_min_gas_price: 25e7,
      low_gas_price: 2e10,
      average_gas_price: 25e9,
      high_gas_price: 4e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "shido"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.47.4",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.45.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shido/images/shido.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shido/images/shido.svg"
  },
  description: "Developers use Shido as the Ethereum and Wasm Chain to deploy applications of the future. Get all the functionalities of Ethereum and Wasm with the power of IBC and Interchain composability.",
  apis: {
    rpc: [
      {
        address: "https://tendermint.shidoscan.com",
        provider: "Shido"
      },
      {
        address: "https://shidochain_mainnet_rpc.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      },
      {
        address: "https://s2.shido-rpc.applejuice.256x25.tech:443",
        provider: "Apple juice \u{1F9C3}"
      },
      {
        address: "https://rpc.shido.indonode.net:443",
        provider: "Indonode"
      }
    ],
    rest: [
      {
        address: "https://swagger.shidoscan.com",
        provider: "Shido"
      },
      {
        address: "https://shidochain_mainnet_api.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      },
      {
        address: "https://s2.shido-api.applejuice.256x25.tech:443",
        provider: "Apple juice \u{1F9C3}"
      },
      {
        address: "https://api.shido.indonode.net",
        provider: "Indonode"
      }
    ],
    grpc: [
      {
        address: "https://grpc.shidoscan.com",
        provider: "shido.io"
      },
      {
        address: "https://grpc-web.shidoscan.com",
        provider: "shido.io"
      },
      {
        address: "https://s2.shido-grpc.applejuice.256x25.tech",
        provider: "Apple juice \u{1F9C3}"
      }
    ],
    "evm-http-jsonrpc": [
      {
        address: "https://rpc-nodes.shidoscan.com",
        provider: "Shido"
      },
      {
        address: "https://rpc-delta-nodes.shidoscan.com",
        provider: "Shido"
      },
      {
        address: "https://shidochain_mainnet_evm.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      },
      {
        address: "https://s2.shido-evm.applejuice.256x25.tech:443",
        provider: "Apple juice \u{1F9C3}"
      }
    ]
  },
  explorers: [
    {
      kind: "shido",
      url: "https://shidoscan.com",
      tx_page: "https://shidoscan.com/tx/${txHash}",
      account_page: "https://shidoscan.com/address/${accountAddress}"
    },
    {
      kind: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}",
      url: "https://explorer.whenmoonwhenlambo.money/shido",
      tx_page: "https://explorer.whenmoonwhenlambo.money/shido/tx/${txHash}",
      account_page: "https://explorer.whenmoonwhenlambo.money/shido/account/${accountAddress}"
    },
    {
      kind: "Apple juice \u{1F9C3}",
      url: "https://explorer.256x25.tech/shido",
      tx_page: "https://explorer.256x25.tech/shido/tx/${txHash}",
      account_page: "https://explorer.256x25.tech//shido/account/${accountAddress}"
    },
    {
      kind: "MavNode",
      url: "https://explorer.mavnode.io/shido",
      tx_page: "https://explorer.mavnode.io/shido/tx/${txHash}",
      account_page: "https://explorer.mavnode.io/shido/account/${accountAddress}"
    },
    {
      kind: "Indonode",
      url: "https://explorer.indonode.net/shido",
      tx_page: "https://explorer.indonode.net/shido/tx/${txHash}",
      account_page: "https://explorer.indonode.net/shido/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shido/images/shido.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/shido/images/shido.svg"
  }]
};
var chain_default149 = info416;

// node_modules/chain-registry/esm/mainnet/shido/ibc.js
var info417 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-210",
      connection_id: "connection-191"
    },
    chain_2: {
      chain_name: "shido",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-148",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-105",
      connection_id: "connection-97"
    },
    chain_2: {
      chain_name: "shido",
      client_id: "07-tendermint-8",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-84",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-3198",
      connection_id: "connection-2654"
    },
    chain_2: {
      chain_name: "shido",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-73755",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  }
];
var ibc_default119 = info417;

// node_modules/chain-registry/esm/mainnet/shido/index.js
var assets149 = assets_default149;
var chain149 = chain_default149;
var ibc119 = ibc_default119;

// node_modules/chain-registry/esm/mainnet/sifchain/assets.js
var info418 = {
  $schema: "../assetlist.schema.json",
  chain_name: "sifchain",
  assets: [{
    description: "Rowan Token (ROWAN) is the Sifchain Network's native utility token, used as the primary means to govern, provide liquidity, secure the blockchain, incentivize participants, and provide a default mechanism to store and exchange value.",
    denom_units: [{
      denom: "rowan",
      exponent: 0
    }, {
      denom: "ROWAN",
      exponent: 18
    }],
    base: "rowan",
    name: "Sifchain Rowan",
    display: "ROWAN",
    symbol: "ROWAN",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sifchain/images/rowan.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sifchain/images/rowan.svg"
    },
    coingecko_id: "sifchain",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sifchain/images/rowan.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sifchain/images/rowan.svg"
    }]
  }]
};
var assets_default150 = info418;

// node_modules/chain-registry/esm/mainnet/sifchain/chain.js
var info419 = {
  $schema: "../chain.schema.json",
  chain_name: "sifchain",
  status: "live",
  network_type: "mainnet",
  website: "https://sifchain.finance/",
  pretty_name: "Sifchain",
  chain_id: "sifchain-1",
  bech32_prefix: "sif",
  daemon_name: "sifnoded",
  node_home: "$HOME/.sifnoded",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "rowan",
      low_gas_price: 1e12,
      average_gas_price: 15e11,
      high_gas_price: 2e12
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "rowan"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sifchain/images/rowan.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sifchain/images/rowan.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://sifchain-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://sifchain-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://sifchain-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    rest: [
      {
        address: "https://api-sifchain-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://sifchain-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://sifchain-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://sifchain-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://sifchain.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      }
    ],
    grpc: [
      {
        address: "sifchain-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "sifchain-grpc.polkachu.com:13290",
        provider: "Polkachu"
      },
      {
        address: "sifchain-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://ping.pub/sifchain",
      tx_page: "https://ping.pub/sifchain/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/sifchain",
      tx_page: "https://atomscan.com/sifchain/transactions/${txHash}",
      account_page: "https://atomscan.com/sifchain/accounts/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Sifchain",
      tx_page: "https://explorer.stavr.tech/Sifchain/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Sifchain/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sifchain/images/rowan.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sifchain/images/rowan.svg"
  }]
};
var chain_default150 = info419;

// node_modules/chain-registry/esm/mainnet/sifchain/ibc.js
var info420 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-61",
      connection_id: "connection-36"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-11",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-24",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-395",
      connection_id: "connection-347"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-192",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-1103",
      connection_id: "connection-239"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-20",
      connection_id: "connection-10"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-33",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "impacthub",
      client_id: "07-tendermint-25",
      connection_id: "connection-25"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-39",
      connection_id: "connection-18"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "irisnet",
      client_id: "07-tendermint-42",
      connection_id: "connection-30"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-19",
      connection_id: "connection-9"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-19",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-9",
      connection_id: "connection-8"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-37",
      connection_id: "connection-17"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1484",
      connection_id: "connection-1159"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-41",
      connection_id: "connection-20"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-47",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-17",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "persistence",
      client_id: "07-tendermint-38",
      connection_id: "connection-32"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-18",
      connection_id: "connection-8"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-26",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "regen",
      client_id: "07-tendermint-73",
      connection_id: "connection-60"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-31",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-28",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-37",
      connection_id: "connection-19"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-171",
      connection_id: "connection-98"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-65",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "sentinel",
      client_id: "07-tendermint-84",
      connection_id: "connection-58"
    },
    chain_2: {
      chain_name: "sifchain",
      client_id: "07-tendermint-9",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  }
];
var ibc_default120 = info420;

// node_modules/chain-registry/esm/mainnet/sifchain/index.js
var assets150 = assets_default150;
var chain150 = chain_default150;
var ibc120 = ibc_default120;

// node_modules/chain-registry/esm/mainnet/six/assets.js
var info421 = {
  $schema: "../assetlist.schema.json",
  chain_name: "six",
  assets: [{
    description: "The native staking token of the SIX Protocol.",
    denom_units: [{
      denom: "usix",
      exponent: 0
    }, {
      denom: "six",
      exponent: 6
    }],
    base: "usix",
    name: "Six token",
    display: "six",
    symbol: "SIX",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/six/images/six.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/six/images/six.png"
    }]
  }]
};
var assets_default151 = info421;

// node_modules/chain-registry/esm/mainnet/six/chain.js
var info422 = {
  $schema: "../chain.schema.json",
  chain_name: "six",
  status: "live",
  network_type: "mainnet",
  pretty_name: "SIX Protocol",
  chain_id: "sixnet",
  bech32_prefix: "6x",
  daemon_name: "sixd",
  node_home: "$HOME/.six",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "usix",
      fixed_min_gas_price: 1.25,
      low_gas_price: 1.25,
      average_gas_price: 1.5,
      high_gas_price: 1.75
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "usix"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.45"
  },
  apis: {
    rpc: [{
      address: "https://sixnet-rpc.sixprotocol.net:443"
    }],
    rest: [{
      address: "https://sixnet-api.sixprotocol.net:443"
    }]
  },
  explorers: [{
    kind: "sixscan",
    url: "https://sixscan.io/sixnet",
    tx_page: "https://sixscan.io/sixnet/tx/${txHash}"
  }],
  keywords: [
    "sixprotocol",
    "sixnetwork",
    "sixnet",
    "six"
  ]
};
var chain_default151 = info422;

// node_modules/chain-registry/esm/mainnet/six/index.js
var assets151 = assets_default151;
var chain151 = chain_default151;

// node_modules/chain-registry/esm/mainnet/sommelier/assets.js
var info423 = {
  $schema: "../assetlist.schema.json",
  chain_name: "sommelier",
  assets: [{
    description: "Somm Token (SOMM) is the native staking token of the Sommelier Chain",
    denom_units: [
      {
        denom: "usomm",
        exponent: 0,
        aliases: ["microsomm"]
      },
      {
        denom: "msomm",
        exponent: 3,
        aliases: ["millisomm"]
      },
      {
        denom: "somm",
        exponent: 6
      }
    ],
    base: "usomm",
    name: "Sommelier",
    display: "somm",
    symbol: "SOMM",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sommelier/images/somm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sommelier/images/somm.svg"
    },
    coingecko_id: "sommelier",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sommelier/images/somm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sommelier/images/somm.svg"
    }],
    socials: {
      website: "https://www.sommelier.finance/",
      twitter: "https://twitter.com/sommfinance"
    }
  }]
};
var assets_default152 = info423;

// node_modules/chain-registry/esm/mainnet/sommelier/chain.js
var info424 = {
  $schema: "../chain.schema.json",
  chain_name: "sommelier",
  status: "live",
  network_type: "mainnet",
  website: "https://sommelier.finance/",
  pretty_name: "Sommelier",
  chain_id: "sommelier-3",
  bech32_prefix: "somm",
  daemon_name: "sommelier",
  node_home: "$HOME/.sommelier",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "usomm",
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "usomm"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.46.14"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sommelier/images/somm.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sommelier/images/somm.svg"
  },
  description: "Automated vaults find best-in-class yields while mitigating risk.",
  apis: {
    rpc: [
      {
        address: "https://sommelier-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://rpc-sommelier.pupmos.network",
        provider: "PUPM\xD8S"
      },
      {
        address: "https://somm.rpc.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://sommelier-rpc.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://sommelier-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://somm-rpc.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://sommelier-rpc.w3coins.io",
        provider: "w3coins"
      }
    ],
    rest: [
      {
        address: "https://api-sommelier.pupmos.network",
        provider: "PUPM\xD8S"
      },
      {
        address: "https://sommelier-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://som.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://sommelier-api.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://sommelier-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://somm-api.kleomedes.network",
        provider: "Kleomedes"
      }
    ],
    grpc: [
      {
        address: "sommelier-grpc.polkachu.com:14190",
        provider: "Polkachu"
      },
      {
        address: "somm.grpc.m.stavr.tech:114",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "sommelier-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "sommelier-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://grpc.sommelier.nodexcapital.com",
        provider: "\u26A1NodeX Validator\u26A1"
      },
      {
        address: "sommelier-grpc.w3coins.io:14190",
        provider: "w3coins"
      },
      {
        address: "grpc.sommelier.validatus.com",
        provider: "Validatus"
      }
    ]
  },
  explorers: [
    {
      kind: "sommscan",
      url: "https://sommscan.io",
      tx_page: "https://sommscan.io"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/sommelier",
      tx_page: "https://www.mintscan.io/sommelier/transactions/${txHash}",
      account_page: "https://www.mintscan.io/sommelier/accounts/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/sommelier",
      tx_page: "https://ezstaking.app/sommelier/txs/${txHash}",
      account_page: "https://ezstaking.app/sommelier/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Sommelier-Mainnet",
      tx_page: "https://explorer.stavr.tech/Sommelier-Mainnet/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Sommelier-Mainnet/account/${accountAddress}"
    },
    {
      kind: "NODEXPLORER",
      url: "https://explorer.nodexcapital.com/sommelier",
      tx_page: "https://explorer.nodexcapital.com/sommelier/tx/${txHash}",
      account_page: "https://explorer.nodexcapital.com/sommelier/account/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/sommelier",
      tx_page: "https://atomscan.com/sommelier/transactions/${txHash}",
      account_page: "https://atomscan.com/sommelier/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sommelier/images/somm.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sommelier/images/somm.svg"
  }]
};
var chain_default152 = info424;

// node_modules/chain-registry/esm/mainnet/sommelier/ibc.js
var info425 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-109",
      connection_id: "connection-96"
    },
    chain_2: {
      chain_name: "sommelier",
      client_id: "07-tendermint-13",
      connection_id: "connection-10"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-72",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics-20",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-135",
      connection_id: "connection-108"
    },
    chain_2: {
      chain_name: "sommelier",
      client_id: "07-tendermint-4",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-93",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-107",
      connection_id: "connection-77"
    },
    chain_2: {
      chain_name: "sommelier",
      client_id: "07-tendermint-12",
      connection_id: "connection-8"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-69",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1745",
      connection_id: "connection-1348"
    },
    chain_2: {
      chain_name: "sommelier",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-165",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "sommelier",
      client_id: "07-tendermint-60",
      connection_id: "connection-75"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-131",
      connection_id: "connection-122"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-71",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-150",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default121 = info425;

// node_modules/chain-registry/esm/mainnet/sommelier/index.js
var assets152 = assets_default152;
var chain152 = chain_default152;
var ibc121 = ibc_default121;

// node_modules/chain-registry/esm/mainnet/source/assets.js
var info426 = {
  $schema: "../assetlist.schema.json",
  chain_name: "source",
  assets: [{
    description: "The native token of SOURCE Chain",
    extended_description: "Enterprises, developers, and individuals are empowered to use SOURCE's sustainable and value backed network to easily access, build, and integrate web3 applications and services.",
    denom_units: [{
      denom: "usource",
      exponent: 0
    }, {
      denom: "source",
      exponent: 6
    }],
    base: "usource",
    name: "Source",
    display: "source",
    symbol: "SOURCE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/source/images/source.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/source/images/source.svg"
    },
    coingecko_id: "source",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/source/images/source.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/source/images/source.svg"
    }],
    socials: {
      website: "https://www.sourceprotocol.io/",
      twitter: "https://twitter.com/sourceprotocol_"
    }
  }, {
    description: "Source Protocol's SRCX Token Bridged from BNB Through Planq",
    denom_units: [{
      denom: "ibc/FC5A7360EEED0713AE3E83E9D55A69AF873056A172AC495890ACE4582FF9685A",
      exponent: 0,
      aliases: ["nsrcx"]
    }, {
      denom: "srcx",
      exponent: 9
    }],
    type_asset: "ics20",
    base: "ibc/FC5A7360EEED0713AE3E83E9D55A69AF873056A172AC495890ACE4582FF9685A",
    name: "SRCX",
    display: "srcx",
    symbol: "SRCX",
    traces: [{
      type: "ibc",
      counterparty: {
        chain_name: "planq",
        base_denom: "erc20/0x091F9A57A3F58d758b6572E9d41675918EAC7F09",
        channel_id: "channel-61"
      },
      chain: {
        channel_id: "channel-1",
        path: "transfer/channel-1/erc20/0x091F9A57A3F58d758b6572E9d41675918EAC7F09"
      }
    }],
    images: [{
      image_sync: {
        chain_name: "binancesmartchain",
        base_denom: "0x454b90716a9435e7161a9aea5cf00e0acbe565ae"
      },
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/srcx.png"
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/srcx.png"
    }
  }]
};
var assets_default153 = info426;

// node_modules/chain-registry/esm/mainnet/source/chain.js
var info427 = {
  $schema: "../chain.schema.json",
  chain_name: "source",
  status: "live",
  network_type: "mainnet",
  website: "https://www.sourceprotocol.io/",
  pretty_name: "Source",
  chain_id: "source-1",
  bech32_prefix: "source",
  daemon_name: "sourced",
  node_home: "$HOME/.source",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "usource",
      fixed_min_gas_price: 0.05,
      low_gas_price: 0.05,
      average_gas_price: 0.075,
      high_gas_price: 0.1
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "usource"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.45",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.30"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.source.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://source.rpc.bccnodes.com/",
        provider: "BccNodes"
      },
      {
        address: "https://source.rpc.moonbridge.team/",
        provider: "MoonBridge"
      },
      {
        address: "https://source.rpc.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc-source.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "https://source-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://source-mainnet-rpc.itrocket.net:443",
        provider: "ITRocket"
      },
      {
        address: "https://rpc-source.sr20de.xyz:443",
        provider: "Sr20de"
      },
      {
        address: "https://source-rpc.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://rpc.source.tcnetwork.io",
        provider: "TC Network"
      },
      {
        address: "https://rpc.source.indonode.net",
        provider: "Indonode"
      },
      {
        address: "https://source.rpc.skynodejs.net/",
        provider: "skynodejs"
      },
      {
        address: "https://source.rpc.nodeshub.online/",
        provider: "Nodes Hub"
      },
      {
        address: "https://rpc.source.roomit.xyz/",
        provider: "RoomIT"
      },
      {
        address: "https://rpc.source.posthuman.digital",
        provider: "posthuman"
      },
      {
        address: "https://source.declab.pro:26604",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "https://rpc.source.stakeup.tech",
        provider: "StakeUp"
      },
      {
        address: "https://source_mainnet_rpc.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      }
    ],
    rest: [
      {
        address: "https://api.source.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://source.lcd.bccnodes.com/",
        provider: "BccNodes"
      },
      {
        address: "https://api-source.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "https://source.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://source-mainnet-api.itrocket.net:443",
        provider: "ITRocket"
      },
      {
        address: "https://source-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://source.api.moonbridge.team/",
        provider: "MoonBridge"
      },
      {
        address: "https://api-source.sr20de.xyz",
        provider: "Sr20de"
      },
      {
        address: "https://source-api.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://rest.source.tcnetwork.io",
        provider: "TC Network"
      },
      {
        address: "https://api.source.indonode.net",
        provider: "Indonode"
      },
      {
        address: "https://source.api.nodeshub.online/",
        provider: "Nodes Hub"
      },
      {
        address: "https://api.source.validatus.com",
        provider: "Validatus"
      },
      {
        address: "https://api.source.roomit.xyz",
        provider: "RoomIT"
      },
      {
        address: "https://rest.source.posthuman.digital",
        provider: "posthuman"
      },
      {
        address: "https://source.api.staking-explorer.com",
        provider: "Daily DROP | 3% Fee"
      },
      {
        address: "https://source.declab.pro:443",
        provider: "Decloud Nodes Lab"
      },
      {
        address: "https://api.source.stakeup.tech",
        provider: "StakeUp"
      },
      {
        address: "https://source_mainnet_api.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      }
    ],
    grpc: [
      {
        address: "source-mainnet-grpc.itrocket.net:32090",
        provider: "ITRocket"
      },
      {
        address: "source.grpc.bccnodes.com:443",
        provider: "BccNodes"
      },
      {
        address: "http://source.grpc.m.stavr.tech:9590",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://grpc-source.nodeist.net:443",
        provider: "Nodeist"
      },
      {
        address: "https://grpc.source.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "https://grpc-source.sr20de.xyz:443",
        provider: "Sr20de"
      },
      {
        address: "source-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "source-grpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "https://source.grpc.skynodejs.net",
        provider: "skynodejs"
      },
      {
        address: "https://source.grpc.nodeshub.online",
        provider: "Nodes Hub"
      },
      {
        address: "https://grpc.source.validatus.com",
        provider: "Validatus"
      },
      {
        address: "grpc.source.roomit.xyz:8443",
        provider: "RoomIT"
      },
      {
        address: "https://source.declab.pro:9003",
        provider: "Decloud Nodes Lab"
      }
    ]
  },
  explorers: [
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Source-Mainnet/",
      tx_page: "https://explorer.stavr.tech/Source-Mainnet/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Source-Mainnet/accounts/${accountAddress}"
    },
    {
      kind: "Nodeist",
      url: "https://exp.nodeist.net/source/",
      tx_page: "https://exp.nodeist.net/source/tx/${txHash}",
      account_page: "https://exp.nodeist.net/source/accounts/${accountAddress}"
    },
    {
      kind: "MoonBridge",
      url: "https://explorer.moonbridge.team/source",
      tx_page: "https://explorer.moonbridge.team/source/tx/${txHash}",
      account_page: "https://explorer.moonbridge.team/source/accounts/${accountAddress}"
    },
    {
      kind: "NodeStake",
      url: "https://explorer.nodestake.top/source",
      tx_page: "https://explorer.nodestake.top/source/tx/${txHash}",
      account_page: "https://explorer.nodestake.top/source/accounts/${accountAddress}"
    },
    {
      kind: "Sr20de",
      url: "https://explorer.sr20de.xyz/Source-mainnet",
      tx_page: "https://explorer.sr20de.xyz/Source-mainnet/tx/${txHash}",
      account_page: "https://explorer.sr20de.xyz/Source-mainnet/accounts/${accountAddress}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/source",
      tx_page: "https://explorer.tcnetwork.io/source/transaction/${txHash}"
    },
    {
      kind: "Indonode",
      url: "https://explorer.indonode.net/source",
      tx_page: "https://explorer.indonode.net/source/tx/${txHash}"
    },
    {
      kind: "RoomIT",
      url: "https://explorer.tendermint.roomit.xyz/source-mainnet/",
      tx_page: "https://explorer.tendermint.roomit.xyz/source-mainnet/tx/${txHash}"
    },
    {
      kind: "posthuman",
      url: "https://explorer.posthuman.digital/source",
      tx_page: "https://explorer.posthuman.digital/source/tx/${txHash}",
      account_page: "https://explorer.posthuman.digital/source/account/${accountAddress}"
    },
    {
      kind: "Decloud Nodes Lab",
      url: "https://explorer.declab.pro/Source",
      tx_page: "https://explorer.declab.pro/Source/tx/${txHash}",
      account_page: "https://explorer.declab.pro/Source/account/${accountAddress}"
    },
    {
      kind: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}",
      url: "https://explorer.whenmoonwhenlambo.money/source",
      tx_page: "https://explorer.whenmoonwhenlambo.money/source/tx/${txHash}",
      account_page: "https://explorer.whenmoonwhenlambo.money/source/account/${accountAddress}"
    },
    {
      kind: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705",
      url: "https://explorer.nodeshub.online/source/",
      tx_page: "https://explorer.nodeshub.online/source/tx/${txHash}",
      account_page: "https://explorer.nodeshub.online/source/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/source/images/source.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/source/images/source.svg"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/source/images/source.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/source/images/source.svg"
  }
};
var chain_default153 = info427;

// node_modules/chain-registry/esm/mainnet/source/ibc.js
var info428 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosis",
    client_id: "07-tendermint-3035",
    connection_id: "connection-2524"
  },
  chain_2: {
    chain_name: "source",
    client_id: "07-tendermint-0",
    connection_id: "connection-0"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-8945",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "planq",
    client_id: "07-tendermint-558",
    connection_id: "connection-483"
  },
  chain_2: {
    chain_name: "source",
    client_id: "07-tendermint-10",
    connection_id: "connection-5"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-61",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default122 = info428;

// node_modules/chain-registry/esm/mainnet/source/index.js
var assets153 = assets_default153;
var chain153 = chain_default153;
var ibc122 = ibc_default122;

// node_modules/chain-registry/esm/mainnet/stafihub/assets.js
var info429 = {
  $schema: "../assetlist.schema.json",
  chain_name: "stafihub",
  assets: [
    {
      description: "The native staking and governance token of the StaFi Hub.",
      denom_units: [{
        denom: "ufis",
        exponent: 0
      }, {
        denom: "fis",
        exponent: 6
      }],
      base: "ufis",
      name: "FIS",
      display: "fis",
      symbol: "FIS",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stafihub/images/fis.svg"
      },
      coingecko_id: "stafi",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stafihub/images/fis.svg"
      }]
    },
    {
      description: "A liquid staking representation of staked ATOMs",
      denom_units: [{
        denom: "uratom",
        exponent: 0
      }, {
        denom: "ratom",
        exponent: 6
      }],
      base: "uratom",
      name: "rATOM",
      display: "ratom",
      symbol: "rATOM",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "cosmoshub",
          base_denom: "uatom"
        },
        provider: "StaFiHub"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stafihub/images/ratom.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stafihub/images/ratom.svg"
      }]
    },
    {
      description: "A liquid staking representation of staked IRISs",
      denom_units: [{
        denom: "uriris",
        exponent: 0
      }, {
        denom: "riris",
        exponent: 6
      }],
      base: "uriris",
      name: "rIRIS",
      display: "riris",
      symbol: "rIRIS",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "irisnet",
          base_denom: "uiris"
        },
        provider: "StaFiHub"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stafihub/images/riris.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stafihub/images/riris.svg"
      }]
    },
    {
      description: "A liquid staking representation of staked HUAHUAs",
      denom_units: [{
        denom: "urhuahua",
        exponent: 0
      }, {
        denom: "rhuahua",
        exponent: 6
      }],
      base: "urhuahua",
      name: "rHUAHUA",
      display: "rhuahua",
      symbol: "rHUAHUA",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "chihuahua",
          base_denom: "uhuahua"
        },
        provider: "StaFiHub"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stafihub/images/rhuahua.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stafihub/images/rhuahua.svg"
      }]
    },
    {
      description: "A liquid staking representation of staked SWTHs",
      denom_units: [{
        denom: "urswth",
        exponent: 0
      }, {
        denom: "rswth",
        exponent: 8
      }],
      base: "urswth",
      name: "rSWTH",
      display: "rswth",
      symbol: "rSWTH",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "carbon",
          base_denom: "swth"
        },
        provider: "StaFiHub"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stafihub/images/rswth.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stafihub/images/rswth.svg"
      }]
    }
  ]
};
var assets_default154 = info429;

// node_modules/chain-registry/esm/mainnet/stafihub/chain.js
var info430 = {
  $schema: "../chain.schema.json",
  chain_name: "stafihub",
  chain_id: "stafihub-1",
  website: "https://stafihub.io/",
  pretty_name: "StaFi Hub",
  status: "live",
  network_type: "mainnet",
  bech32_prefix: "stafi",
  daemon_name: "stafihubd",
  node_home: "$HOME/.stafihub",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ufis",
      fixed_min_gas_price: 0,
      low_gas_price: 0,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ufis"
    }],
    lock_duration: {
      time: "1209600s"
    }
  },
  codebase: {
    cosmos_sdk_version: "0.46"
  },
  apis: {
    rpc: [
      {
        address: "https://public-rpc1.stafihub.io:443",
        provider: "StaFiHub"
      },
      {
        address: "https://public-rpc2.stafihub.io:443",
        provider: "StaFiHub"
      },
      {
        address: "https://rpc.stafihub.nodestake.top:443",
        provider: "NodeStake"
      }
    ],
    rest: [
      {
        address: "https://public-rest-rpc1.stafihub.io",
        provider: "StaFiHub"
      },
      {
        address: "https://public-rest-rpc2.stafihub.io",
        provider: "StaFiHub"
      },
      {
        address: "https://api.stafihub.nodestake.top",
        provider: "NodeStake"
      }
    ],
    grpc: [
      {
        address: "public-grpc-rpc1.stafihub.io:443",
        provider: "StaFiHub"
      },
      {
        address: "public-grpc-rpc2.stafihub.io:443",
        provider: "StaFiHub"
      },
      {
        address: "grpc.stafihub.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "stafihub.nodejumper.io:9090",
        provider: "NODEJUMPER"
      }
    ]
  },
  explorers: [
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/stafi",
      tx_page: "https://www.mintscan.io/stafi/transactions/${txHash}",
      account_page: "https://www.mintscan.io/stafi/accounts/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/stafihub",
      tx_page: "https://ezstaking.app/stafihub/txs/${txHash}",
      account_page: "https://ezstaking.app/stafihub/account/${accountAddress}"
    },
    {
      kind: "ping-pub",
      url: "https://ping.pub/stafihub",
      tx_page: "https://ping.pub/stafihub/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/stafihub",
      tx_page: "https://atomscan.com/stafihub/transactions/${txHash}",
      account_page: "https://atomscan.com/stafihub/accounts/${accountAddress}"
    }
  ],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stafihub/images/stafihub-chain-logo.png"
  },
  keywords: ["liquid staking"],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stafihub/images/stafihub-chain-logo.png"
  }]
};
var chain_default154 = info430;

// node_modules/chain-registry/esm/mainnet/stafihub/ibc.js
var info431 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "chihuahua",
      client_id: "07-tendermint-86",
      connection_id: "connection-55"
    },
    chain_2: {
      chain_name: "stafihub",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-25",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-892",
      connection_id: "connection-618"
    },
    chain_2: {
      chain_name: "stafihub",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-369",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "irisnet",
      client_id: "07-tendermint-63",
      connection_id: "connection-44"
    },
    chain_2: {
      chain_name: "stafihub",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-33",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-96",
      connection_id: "connection-68"
    },
    chain_2: {
      chain_name: "stafihub",
      client_id: "07-tendermint-4",
      connection_id: "connection-4"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-63",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2969",
      connection_id: "connection-2465"
    },
    chain_2: {
      chain_name: "stafihub",
      client_id: "07-tendermint-7",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5413",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "stafihub",
      client_id: "07-tendermint-5",
      connection_id: "connection-5"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-317",
      connection_id: "connection-233"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-204",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default123 = info431;

// node_modules/chain-registry/esm/mainnet/stafihub/index.js
var assets154 = assets_default154;
var chain154 = chain_default154;
var ibc123 = ibc_default123;

// node_modules/chain-registry/esm/mainnet/stargaze/assets.js
var info432 = {
  $schema: "../assetlist.schema.json",
  chain_name: "stargaze",
  assets: [
    {
      description: "The native token of Stargaze",
      denom_units: [{
        denom: "ustars",
        exponent: 0
      }, {
        denom: "stars",
        exponent: 6
      }],
      base: "ustars",
      name: "Stargaze",
      display: "stars",
      symbol: "STARS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.svg"
      },
      coingecko_id: "stargaze",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.svg"
      }],
      socials: {
        website: "https://www.stargaze.zone/",
        twitter: "https://twitter.com/StargazeZone"
      }
    },
    {
      description: "The native token of ohhNFT.",
      denom_units: [{
        denom: "factory/stars16da2uus9zrsy83h23ur42v3lglg5rmyrpqnju4/dust",
        exponent: 0
      }, {
        denom: "strdst",
        exponent: 6
      }],
      base: "factory/stars16da2uus9zrsy83h23ur42v3lglg5rmyrpqnju4/dust",
      name: "Stardust STRDST",
      display: "strdst",
      symbol: "STRDST",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/dust.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/dust.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/dust.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/dust.svg"
      }]
    },
    {
      description: "The native meme token of stargaze.",
      denom_units: [{
        denom: "factory/stars16da2uus9zrsy83h23ur42v3lglg5rmyrpqnju4/mGAZE",
        exponent: 0
      }, {
        denom: "GAZE",
        exponent: 6
      }],
      base: "factory/stars16da2uus9zrsy83h23ur42v3lglg5rmyrpqnju4/mGAZE",
      name: "Gaze GAZE",
      display: "GAZE",
      symbol: "GAZE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/gaze.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/gaze.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/gaze.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/gaze.svg"
      }]
    },
    {
      description: "ohhNFT LP token.",
      denom_units: [{
        denom: "factory/stars16da2uus9zrsy83h23ur42v3lglg5rmyrpqnju4/uBRNCH",
        exponent: 0
      }, {
        denom: "BRNCH",
        exponent: 6
      }],
      base: "factory/stars16da2uus9zrsy83h23ur42v3lglg5rmyrpqnju4/uBRNCH",
      name: "Branch",
      display: "BRNCH",
      symbol: "BRNCH",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/brnch.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/brnch.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/brnch.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/brnch.svg"
      }]
    },
    {
      description: "Social token for the ohhVAULT.",
      denom_units: [{
        denom: "factory/stars16da2uus9zrsy83h23ur42v3lglg5rmyrpqnju4/uOHH",
        exponent: 0
      }, {
        denom: "OHH",
        exponent: 6
      }],
      base: "factory/stars16da2uus9zrsy83h23ur42v3lglg5rmyrpqnju4/uOHH",
      name: "ohhVAULT ohh",
      display: "OHH",
      symbol: "OHH",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/ohh.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/ohh.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/ohh.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/ohh.svg"
      }]
    },
    {
      description: "The native coin of Sneaky Productions.",
      denom_units: [{
        denom: "factory/stars1xx5976njvxpl9n4v8huvff6cudhx7yuu8e7rt4/usneaky",
        exponent: 0
      }, {
        denom: "sneaky",
        exponent: 6
      }],
      base: "factory/stars1xx5976njvxpl9n4v8huvff6cudhx7yuu8e7rt4/usneaky",
      name: "Sneaky Productions",
      display: "sneaky",
      symbol: "SNEAKY",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/sneaky.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/sneaky.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/sneaky.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/sneaky.svg"
      }]
    },
    {
      description: "LAB - Everything is an Experiment",
      extended_description: "LAB - Everything is an Experiment\n\nUse 10 $LAB tokens to mint 1 Mad Scientist NFT on Backbone Labs Osmosis Launchpad. You will then be able to trade your NFTs on the marketplace. You can also choose to hold onto your $LAB tokens as unrevealed NFTs and trade it.\n\n Fair Launch: The event was marked by the absence of whitelists (WLs), no bots and no lock, ensuring an equitable opportunity for all interested parties.\n\nPreparation for the Launch: Participants were given a 52.91-hour window to deposit $OSMO into a pool on Streamswap.\n\nThe Swap Process: After the initial deposit period, $OSMO was converted into $LAB tokens over an additional hour, allowing for a smooth transition and fair distribution.",
      denom_units: [{
        denom: "ibc/93B1AE0AD5E88242745B245064A2A51DDA1319C18176A966D5F8F9E02ED5373E",
        exponent: 0
      }, {
        denom: "LAB",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/93B1AE0AD5E88242745B245064A2A51DDA1319C18176A966D5F8F9E02ED5373E",
      name: "LAB",
      display: "LAB",
      symbol: "LAB",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/LAB.png"
      },
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "factory/osmo17fel472lgzs87ekt9dvk0zqyh5gl80sqp4sk4n/LAB",
          channel_id: "channel-75"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/factory/osmo17fel472lgzs87ekt9dvk0zqyh5gl80sqp4sk4n/LAB"
        }
      }],
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/LAB.png",
        image_sync: {
          chain_name: "osmosis",
          base_denom: "factory/osmo17fel472lgzs87ekt9dvk0zqyh5gl80sqp4sk4n/LAB"
        }
      }]
    },
    {
      description: "CDT - Membrane's solvency preserving stablecoin",
      denom_units: [{
        denom: "ibc/B0263C28B6F44651F4596413B41FDB749EA010BD1220816DAC0ABF9947C1E806",
        exponent: 0
      }, {
        denom: "CDT",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/B0263C28B6F44651F4596413B41FDB749EA010BD1220816DAC0ABF9947C1E806",
      name: "CDT",
      display: "CDT",
      symbol: "CDT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1s794h9rxggytja3a4pmwul53u98k06zy2qtrdvjnfuxruh7s8yjs6cyxgd/ucdt",
          channel_id: "channel-75"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/factory/osmo1s794h9rxggytja3a4pmwul53u98k06zy2qtrdvjnfuxruh7s8yjs6cyxgd/ucdt"
        }
      }],
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/CDT.svg",
        image_sync: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1s794h9rxggytja3a4pmwul53u98k06zy2qtrdvjnfuxruh7s8yjs6cyxgd/ucdt"
        }
      }]
    },
    {
      description: "MBRN - Membrane's network token",
      denom_units: [{
        denom: "ibc/E94BB144B818CB8061F43E202BEA1E9273B87D6326C8C6F4E6AE71C62FD37854",
        exponent: 0
      }, {
        denom: "MBRN",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/E94BB144B818CB8061F43E202BEA1E9273B87D6326C8C6F4E6AE71C62FD37854",
      name: "MBRN",
      display: "MBRN",
      symbol: "MBRN",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1s794h9rxggytja3a4pmwul53u98k06zy2qtrdvjnfuxruh7s8yjs6cyxgd/umbrn",
          channel_id: "channel-75"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/factory/osmo1s794h9rxggytja3a4pmwul53u98k06zy2qtrdvjnfuxruh7s8yjs6cyxgd/umbrn"
        }
      }],
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/MBRN.svg",
        image_sync: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1s794h9rxggytja3a4pmwul53u98k06zy2qtrdvjnfuxruh7s8yjs6cyxgd/umbrn"
        }
      }]
    },
    {
      description: "Astroport is a neutral marketplace where anyone, from anywhere in the galaxy, can dock to trade their wares.",
      denom_units: [{
        denom: "ibc/C9C8D88917374F27F03CBCEAF4F1B85F45A62F9F2316CBAADAAC5FDB3675DD3F",
        exponent: 0,
        aliases: ["uastro"]
      }, {
        denom: "astro",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/C9C8D88917374F27F03CBCEAF4F1B85F45A62F9F2316CBAADAAC5FDB3675DD3F",
      name: "Astroport token",
      display: "astro",
      symbol: "ASTRO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "neutron",
          base_denom: "factory/neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07/astro",
          channel_id: "channel-18"
        },
        chain: {
          channel_id: "channel-191",
          path: "transfer/channel-191/factory/neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07/astro"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.svg"
      },
      images: [{
        image_sync: {
          chain_name: "neutron",
          base_denom: "factory/neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07/astro"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.svg"
      }]
    }
  ]
};
var assets_default155 = info432;

// node_modules/chain-registry/esm/mainnet/stargaze/chain.js
var info433 = {
  $schema: "../chain.schema.json",
  chain_name: "stargaze",
  status: "live",
  network_type: "mainnet",
  website: "https://stargaze.zone/",
  pretty_name: "Stargaze",
  chain_id: "stargaze-1",
  bech32_prefix: "stars",
  daemon_name: "starsd",
  node_home: "$HOME/.starsd",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ustars",
      fixed_min_gas_price: 1,
      low_gas_price: 1,
      average_gas_price: 1.1,
      high_gas_price: 1.2
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ustars"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.47.10",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.45.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.svg"
  },
  description: "The premier community-focused blockchain for NFTs. Stargaze empowers creators, developers, collectors, and traders to participate on the platform. The Stargaze chain consists of various NFT-related apps such as a Launchpad, and a Marketplace with offers and auctions.",
  apis: {
    rpc: [
      {
        address: "https://rpc.stargaze-apis.com/",
        provider: "Stargaze Foundation"
      },
      {
        address: "https://rpc-stargaze.pupmos.network",
        provider: "PUPM\xD8S"
      },
      {
        address: "https://rpc-stargaze.ezstaking.dev",
        provider: "EZStaking.io"
      },
      {
        address: "https://stargaze-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://rpc-stargaze-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://stargaze.c29r3.xyz:443/rpc/",
        provider: "c29r3"
      },
      {
        address: "https://rpc-stargaze.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://stargaze-rpc.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://rpc-stargaze.d-stake.xyz",
        provider: "D-stake"
      },
      {
        address: "https://rpc.stargaze.silentvalidator.com/",
        provider: "silent"
      },
      {
        address: "https://rpc-stargaze.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://stargaze-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://stargaze-rpc.ramuchi.tech",
        provider: "ramuchi.tech"
      },
      {
        address: "https://stargaze-rpc.staketab.org:443",
        provider: "Staketab"
      },
      {
        address: "https://stargaze-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://stargaze-rpc.stakerhouse.com",
        provider: "StakerHouse"
      },
      {
        address: "https://stargaze-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://stargaze-rpc.reece.sh:443",
        provider: "Reecepbcups"
      },
      {
        address: "https://rpc.stargaze.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://stargaze-rpc.kleomedes.network",
        provider: "Kleomedes"
      }
    ],
    rest: [
      {
        address: "https://rest.stargaze-apis.com/",
        provider: "Stargaze Foundation"
      },
      {
        address: "https://api-stargaze.pupmos.network",
        provider: "PUPM\xD8S"
      },
      {
        address: "https://api-stargaze.ezstaking.dev",
        provider: "EZStaking.io"
      },
      {
        address: "https://api-stargaze-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://stargaze.c29r3.xyz:443/api/",
        provider: "c29r3"
      },
      {
        address: "https://stargaze-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://stargaze-api.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://api-stargaze.d-stake.xyz",
        provider: "D-stake"
      },
      {
        address: "https://api-stargaze.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://api.stargaze.silentvalidator.com/",
        provider: "silent"
      },
      {
        address: "https://stargaze-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://lcd-stargaze.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://stargaze-api.ramuchi.tech",
        provider: "ramuchi.tech"
      },
      {
        address: "https://stargaze-rest.staketab.org",
        provider: "Staketab"
      },
      {
        address: "https://stargaze-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://stargaze-rest.stakerhouse.com",
        provider: "StakerHouse"
      },
      {
        address: "https://stargaze-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://stargaze-api.reece.sh:443",
        provider: "Reecepbcups"
      },
      {
        address: "https://lcd.stargaze.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://stargaze-api.kleomedes.network",
        provider: "Kleomedes"
      }
    ],
    grpc: [
      {
        address: "grpc-stargaze-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "stargaze-grpc.polkachu.com:13790",
        provider: "Polkachu"
      },
      {
        address: "stargaze-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "grpc-stargaze.cosmos-spaces.cloud:1150",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://stargaze-grpc.ramuchi.tech:9090",
        provider: "ramuchi.tech"
      },
      {
        address: "services.staketab.com:9092",
        provider: "Staketab"
      },
      {
        address: "stargaze-grpc.w3coins.io:13790",
        provider: "w3coins"
      },
      {
        address: "stargaze-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "stargaze-grpc.stakerhouse.com:443",
        provider: "StakerHouse"
      },
      {
        address: "https://grpc.stargaze.bronbro.io:443",
        provider: "Bro_n_Bro"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/stargaze",
      tx_page: "https://ezstaking.app/stargaze/txs/${txHash}",
      account_page: "https://ezstaking.app/stargaze/account/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/stargaze/",
      tx_page: "https://www.mintscan.io/stargaze/transactions/${txHash}",
      account_page: "https://www.mintscan.io/stargaze/accounts/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/stargaze",
      tx_page: "https://ping.pub/stargaze/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/stargaze",
      tx_page: "https://atomscan.com/stargaze/transactions/${txHash}",
      account_page: "https://atomscan.com/stargaze/accounts/${accountAddress}"
    },
    {
      kind: "Starscan",
      url: "https://starscan.net/",
      tx_page: "https://starscan.net/stargaze-1/tx/${txHash}",
      account_page: "https://starscan.net/stargaze-1/address/${accountAddress}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/stargaze",
      tx_page: "https://mainnet.whispernode.com/stargaze/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/stargaze/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.svg"
  }]
};
var chain_default155 = info433;

// node_modules/chain-registry/esm/mainnet/stargaze/ibc.js
var info434 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-3",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-222",
      connection_id: "connection-156"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-121",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "aura",
      client_id: "07-tendermint-48",
      connection_id: "connection-47"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-339",
      connection_id: "connection-288"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-270",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-24",
        port_id: "wasm.aura1y3244guwexyvn6yx6kqkj5s0f56lzfdnuja3culygnuwxgrxyuqsaz4xvv"
      },
      chain_2: {
        channel_id: "channel-271",
        port_id: "wasm.stars1r0a8ygvnjfaegy4n5z9325e0ew9uy2s7rn4vt7qf4ltv49fj4tnsk6pvtv"
      },
      ordering: "unordered",
      version: "ics721-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "carbon",
      client_id: "07-tendermint-36",
      connection_id: "connection-19"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-224",
      connection_id: "connection-158"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-123",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "demex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-86",
      connection_id: "connection-56"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-359",
      connection_id: "connection-296"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-33",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-291",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-25",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-279",
      connection_id: "connection-207"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-184",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-1188",
      connection_id: "connection-918"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-320",
      connection_id: "connection-256"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-730",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-239",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-24",
      connection_id: "connection-27"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-180",
      connection_id: "connection-114"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-21",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-41",
      connection_id: "connection-17"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-173",
      connection_id: "connection-104"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-46",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "gateway",
      client_id: "07-tendermint-16",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-354",
      connection_id: "connection-290"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-278",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-44",
      connection_id: "connection-30"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-13",
      connection_id: "connection-11"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-20",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-9",
      connection_id: "connection-5"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-178",
      connection_id: "connection-111"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-49",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "migaloo",
      client_id: "07-tendermint-118",
      connection_id: "connection-90"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-352",
      connection_id: "connection-287"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-69",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-269",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-31",
      connection_id: "connection-23"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-283",
      connection_id: "connection-211"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-18",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-191",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-16",
      connection_id: "connection-25"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-287",
      connection_id: "connection-214"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-204",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nois",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-237",
      connection_id: "connection-171"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-137",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }, {
      chain_1: {
        channel_id: "channel-238",
        port_id: "wasm.stars1mw5y55f53mnara7g3pn2pylxl8dpauscyn83c68442hz9nwktzrq8tjzyf"
      },
      chain_2: {
        channel_id: "channel-38",
        port_id: "wasm.nois1acyc05v6fgcdgj88nmz2t40aex9nlnptqpwp5hf8hwg7rhce9uuqgqz5wp"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1562",
      connection_id: "connection-1223"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-75",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }, {
      chain_1: {
        channel_id: "channel-39535",
        port_id: "wasm.osmo10vzkd8pyme67z38epdr3gf027y03dxq7t8vau5fp3r28vxks7mwse02j8f"
      },
      chain_2: {
        channel_id: "channel-309",
        port_id: "wasm.stars1r0a8ygvnjfaegy4n5z9325e0ew9uy2s7rn4vt7qf4ltv49fj4tnsk6pvtv"
      },
      ordering: "unordered",
      version: "ics721-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "persistence",
      client_id: "07-tendermint-166",
      connection_id: "connection-207"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-358",
      connection_id: "connection-293"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-197",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-287",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-225",
      connection_id: "connection-159"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-124",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1"
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-43",
      connection_id: "connection-25"
    },
    chain_2: {
      chain_name: "stargaze",
      client_id: "07-tendermint-177",
      connection_id: "connection-110"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-19",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-48",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "stargaze",
      client_id: "07-tendermint-195",
      connection_id: "connection-128"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-30",
      connection_id: "connection-18"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-106",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-19",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "stargaze",
      client_id: "07-tendermint-337",
      connection_id: "connection-275"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-405",
      connection_id: "connection-408"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-266",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-324",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default124 = info434;

// node_modules/chain-registry/esm/mainnet/stargaze/index.js
var assets155 = assets_default155;
var chain155 = chain_default155;
var ibc124 = ibc_default124;

// node_modules/chain-registry/esm/mainnet/starname/assets.js
var info435 = {
  $schema: "../assetlist.schema.json",
  chain_name: "starname",
  assets: [{
    description: "IOV coin is the token for the Starname (IOV) Asset Name Service",
    denom_units: [{
      denom: "uiov",
      exponent: 0
    }, {
      denom: "iov",
      exponent: 6
    }],
    base: "uiov",
    name: "Starname",
    display: "iov",
    symbol: "IOV",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/starname/images/iov.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/starname/images/iov.svg"
    },
    coingecko_id: "starname",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/starname/images/iov.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/starname/images/iov.svg"
    }],
    socials: {
      website: "https://app.starname.me/",
      twitter: "https://twitter.com/starname_me"
    }
  }]
};
var assets_default156 = info435;

// node_modules/chain-registry/esm/mainnet/starname/chain.js
var info436 = {
  $schema: "../chain.schema.json",
  chain_name: "starname",
  status: "live",
  network_type: "mainnet",
  website: "https://www.starname.me/",
  pretty_name: "Starname",
  chain_id: "iov-mainnet-ibc",
  bech32_prefix: "star",
  slip44: 234,
  alternative_slip44s: [118],
  fees: {
    fee_tokens: [{
      denom: "uiov",
      low_gas_price: 1,
      average_gas_price: 2,
      high_gas_price: 3
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uiov"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/starname/images/iov.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/starname/images/iov.svg"
  },
  description: "Starname is the best way to claim your part of the blockchain. You can use it for decentralized identification, payments, ownership and applications. Starname can be integrated into digital wallets, dapps and exchanges.",
  apis: {
    rpc: [{
      address: "https://rpc-starname-ia.cosmosia.notional.ventures/",
      provider: "Notional"
    }, {
      address: "https://rpc.starname.app",
      provider: "Chainmasters"
    }],
    rest: [{
      address: "https://api-starname-ia.cosmosia.notional.ventures/",
      provider: "Notional"
    }, {
      address: "https://rest.starname.app",
      provider: "Chainmasters"
    }],
    grpc: [{
      address: "grpc-starname-ia.cosmosia.notional.ventures:443",
      provider: "starname"
    }]
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://ping.pub/starname",
    tx_page: "https://ping.pub/starname/tx/${txHash}"
  }, {
    kind: "atomscan",
    url: "https://atomscan.com/starname",
    tx_page: "https://atomscan.com/starname/transactions/${txHash}",
    account_page: "https://atomscan.com/starname/accounts/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/starname/images/iov.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/starname/images/iov.svg"
  }]
};
var chain_default156 = info436;

// node_modules/chain-registry/esm/mainnet/starname/ibc.js
var info437 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-59",
      connection_id: "connection-35"
    },
    chain_2: {
      chain_name: "starname",
      client_id: "07-tendermint-29",
      connection_id: "connection-18"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-23",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-326",
      connection_id: "connection-300"
    },
    chain_2: {
      chain_name: "starname",
      client_id: "07-tendermint-6",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-158",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cryptoorgchain",
      client_id: "07-tendermint-66",
      connection_id: "connection-39"
    },
    chain_2: {
      chain_name: "starname",
      client_id: "07-tendermint-16",
      connection_id: "connection-11"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-22",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "irisnet",
      client_id: "07-tendermint-44",
      connection_id: "connection-32"
    },
    chain_2: {
      chain_name: "starname",
      client_id: "07-tendermint-41",
      connection_id: "connection-27"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-21",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-71",
      connection_id: "connection-42"
    },
    chain_2: {
      chain_name: "starname",
      client_id: "07-tendermint-9",
      connection_id: "connection-9"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "persistence",
      client_id: "07-tendermint-39",
      connection_id: "connection-39"
    },
    chain_2: {
      chain_name: "starname",
      client_id: "07-tendermint-44",
      connection_id: "connection-30"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-27",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "regen",
      client_id: "07-tendermint-74",
      connection_id: "connection-61"
    },
    chain_2: {
      chain_name: "starname",
      client_id: "07-tendermint-45",
      connection_id: "connection-31"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-29",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-14",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "sentinel",
      client_id: "07-tendermint-88",
      connection_id: "connection-70"
    },
    chain_2: {
      chain_name: "starname",
      client_id: "07-tendermint-46",
      connection_id: "connection-32"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-40",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  }
];
var ibc_default125 = info437;

// node_modules/chain-registry/esm/mainnet/starname/index.js
var assets156 = assets_default156;
var chain156 = chain_default156;
var ibc125 = ibc_default125;

// node_modules/chain-registry/esm/mainnet/stratos/assets.js
var info438 = {
  $schema: "../assetlist.schema.json",
  chain_name: "stratos",
  assets: [{
    description: "STOS coin is the token for the Stratos (STOS) cosmos based blockchain",
    denom_units: [
      {
        denom: "wei",
        exponent: 0
      },
      {
        denom: "gwei",
        exponent: 9
      },
      {
        denom: "stos",
        exponent: 18
      }
    ],
    base: "wei",
    name: "Stratos",
    display: "stos",
    symbol: "STOS",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stratos/images/stratos.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stratos/images/stratos.svg"
    },
    coingecko_id: "stratos",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stratos/images/stratos.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stratos/images/stratos.svg"
    }]
  }]
};
var assets_default157 = info438;

// node_modules/chain-registry/esm/mainnet/stratos/chain.js
var info439 = {
  $schema: "../chain.schema.json",
  chain_name: "stratos",
  status: "live",
  network_type: "mainnet",
  website: "https://www.thestratos.org",
  pretty_name: "Stratos",
  chain_id: "stratos-1",
  bech32_prefix: "st",
  daemon_name: "stchaind",
  node_home: "$HOME/.stchaind",
  key_algos: ["ethsecp256k1"],
  extra_codecs: [],
  slip44: 606,
  fees: {
    fee_tokens: [{
      denom: "wei"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stratos/images/stratos.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stratos/images/stratos.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.thestratos.org",
        provider: "thestratos.org"
      },
      {
        address: "http://stratos.rpc.nodersteam.com:26657/",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://rpc-stratos.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://stratos-rpc.noders.services:443",
        provider: "[NODERS]TEAM"
      }
    ],
    rest: [
      {
        address: "https://rest.thestratos.org",
        provider: "thestratos.org"
      },
      {
        address: "https://lcd-stratos.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://stratos-api.noders.services:443",
        provider: "[NODERS]TEAM"
      }
    ],
    grpc: [
      {
        address: "https://grpc.thestratos.org",
        provider: "thestratos.org"
      },
      {
        address: "https://grpc.stratos.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "stratos.grpc.nodersteam.com:9090",
        provider: "[NODERS]TEAM"
      },
      {
        address: "stratos-grpc.noders.services:29090",
        provider: "[NODERS]TEAM"
      }
    ],
    "evm-http-jsonrpc": [
      {
        address: "https://web3-rpc.thestratos.org",
        provider: "thestratos.org"
      },
      {
        address: "https://jsonrpc.stratos.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://stratos-jsonrpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "bigdipper",
      url: "https://explorer.thestratos.org",
      tx_page: "https://explorer.thestratos.org/transactions/${txHash}",
      account_page: "https://explorer.thestratos.org/accounts/${accountAddress}"
    },
    {
      kind: "blockscout",
      url: "https://web3-explorer.thestratos.org",
      tx_page: "https://web3-explorer.thestratos.org/tx/${txHash}",
      account_page: "https://web3-explorer.thestratos.org/address/${accountAddress}"
    },
    {
      kind: "NodeStake",
      url: "https://explorer.nodestake.top/stratos",
      tx_page: "https://explorer.nodestake.top/stratos/tx/${txHash}",
      account_page: "https://explorer.nodestake.top/stratos/accounts/${accountAddress}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/stratos",
      tx_page: "https://explorer.tcnetwork.io/stratos/transaction/${txHash}",
      account_page: "https://explorer.tcnetwork.io/stratos/account/${accountAddress}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/stratos",
      tx_page: "https://mainnet.whispernode.com/stratos/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/stratos/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stratos/images/stratos.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stratos/images/stratos.svg"
  }]
};
var chain_default157 = info439;

// node_modules/chain-registry/esm/mainnet/stratos/index.js
var assets157 = assets_default157;
var chain157 = chain_default157;

// node_modules/chain-registry/esm/mainnet/stride/assets.js
var info440 = {
  $schema: "../assetlist.schema.json",
  chain_name: "stride",
  assets: [
    {
      description: "The native token of Stride",
      denom_units: [{
        denom: "ustrd",
        exponent: 0
      }, {
        denom: "strd",
        exponent: 6
      }],
      base: "ustrd",
      name: "Stride",
      display: "strd",
      symbol: "STRD",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.svg"
      },
      coingecko_id: "stride",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.svg"
      }],
      socials: {
        website: "https://stride.zone/",
        twitter: "https://twitter.com/stride_zone"
      }
    },
    {
      denom_units: [{
        denom: "stuatom",
        exponent: 0
      }, {
        denom: "statom",
        exponent: 6
      }],
      base: "stuatom",
      name: "Stride Staked ATOM",
      display: "statom",
      symbol: "stATOM",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "cosmoshub",
          base_denom: "uatom"
        },
        provider: "Stride"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.svg"
      },
      coingecko_id: "stride-staked-atom",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/statom.svg"
      }]
    },
    {
      denom_units: [{
        denom: "stustars",
        exponent: 0
      }, {
        denom: "ststars",
        exponent: 6
      }],
      base: "stustars",
      name: "Stride Staked STARS",
      display: "ststars",
      symbol: "stSTARS",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "stargaze",
          base_denom: "ustars"
        },
        provider: "Stride"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/ststars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/ststars.svg"
      },
      coingecko_id: "stride-staked-stars",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/ststars.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/ststars.svg"
      }]
    },
    {
      denom_units: [{
        denom: "stuosmo",
        exponent: 0
      }, {
        denom: "stosmo",
        exponent: 6
      }],
      base: "stuosmo",
      name: "Stride Staked OSMO",
      display: "stosmo",
      symbol: "stOSMO",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "uosmo"
        },
        provider: "Stride"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.svg"
      },
      coingecko_id: "stride-staked-osmo",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stosmo.svg"
      }]
    },
    {
      denom_units: [{
        denom: "stujuno",
        exponent: 0
      }, {
        denom: "stjuno",
        exponent: 6
      }],
      base: "stujuno",
      name: "Stride Staked JUNO",
      display: "stjuno",
      symbol: "stJUNO",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "juno",
          base_denom: "ujuno"
        },
        provider: "Stride"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stjuno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stjuno.svg"
      },
      coingecko_id: "stride-staked-juno",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stjuno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stjuno.svg"
      }]
    },
    {
      denom_units: [{
        denom: "stuluna",
        exponent: 0
      }, {
        denom: "stluna",
        exponent: 6
      }],
      base: "stuluna",
      name: "Stride Staked LUNA",
      display: "stluna",
      symbol: "stLUNA",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "terra2",
          base_denom: "uluna"
        },
        provider: "Stride"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stluna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stluna.svg"
      },
      coingecko_id: "stride-staked-luna",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stluna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stluna.svg"
      }]
    },
    {
      denom_units: [{
        denom: "stinj",
        exponent: 0
      }, {
        denom: "stINJ",
        exponent: 18
      }],
      base: "stinj",
      name: "Stride Staked INJ",
      display: "stINJ",
      symbol: "stINJ",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "injective",
          base_denom: "inj"
        },
        provider: "Stride"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stinj.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stinj.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stinj.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stinj.svg"
      }]
    },
    {
      denom_units: [{
        denom: "staevmos",
        exponent: 0
      }, {
        denom: "stevmos",
        exponent: 18
      }],
      base: "staevmos",
      name: "Stride Staked EVMOS",
      display: "stevmos",
      symbol: "stEVMOS",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "evmos",
          base_denom: "aevmos"
        },
        provider: "Stride"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stevmos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stevmos.svg"
      },
      coingecko_id: "stride-staked-evmos",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stevmos.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stevmos.svg"
      }]
    },
    {
      description: "Stride's liquid staked DYDX",
      denom_units: [{
        denom: "stadydx",
        exponent: 0
      }, {
        denom: "stDYDX",
        exponent: 18
      }],
      base: "stadydx",
      name: "Stride Staked DYDX",
      display: "stDYDX",
      symbol: "stDYDX",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "dydx",
          base_denom: "adydx"
        },
        provider: "Stride"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stdydx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stdydx.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stdydx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stdydx.svg"
      }]
    },
    {
      description: "Stride's liquid staked TIA",
      denom_units: [{
        denom: "stutia",
        exponent: 0
      }, {
        denom: "stTIA",
        exponent: 6
      }],
      base: "stutia",
      name: "Stride Staked TIA",
      display: "stTIA",
      symbol: "stTIA",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "celestia",
          base_denom: "utia"
        },
        provider: "Stride"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/sttia.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/sttia.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/sttia.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/sttia.svg"
      }]
    },
    {
      description: "Stride's liquid staked DYM",
      denom_units: [{
        denom: "stadym",
        exponent: 0
      }, {
        denom: "stDYM",
        exponent: 18
      }],
      base: "stadym",
      name: "Stride Staked DYM",
      display: "stDYM",
      symbol: "stDYM",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "dymension",
          base_denom: "adym"
        },
        provider: "Stride"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stdym.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stdym.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stdym.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stdym.svg"
      }]
    },
    {
      denom_units: [{
        denom: "stuumee",
        exponent: 0
      }, {
        denom: "stumee",
        exponent: 6
      }],
      base: "stuumee",
      name: "Stride Staked UMEE",
      display: "stumee",
      symbol: "stUMEE",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "umee",
          base_denom: "uumee"
        },
        provider: "Stride"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stumee.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stumee.svg"
      },
      coingecko_id: "stride-staked-umee",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stumee.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stumee.svg"
      }]
    },
    {
      denom_units: [{
        denom: "stucmdx",
        exponent: 0
      }, {
        denom: "stcmdx",
        exponent: 6
      }],
      base: "stucmdx",
      name: "Stride Staked CMDX",
      display: "stcmdx",
      symbol: "stCMDX",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "comdex",
          base_denom: "ucmdx"
        },
        provider: "Stride"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stcmdx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stcmdx.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stcmdx.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stcmdx.svg"
      }]
    },
    {
      denom_units: [{
        denom: "stusomm",
        exponent: 0
      }, {
        denom: "stsomm",
        exponent: 6
      }],
      base: "stusomm",
      name: "Stride Staked SOMM",
      display: "stsomm",
      symbol: "stSOMM",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "sommelier",
          base_denom: "usomm"
        },
        provider: "Stride"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stsomm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stsomm.svg"
      },
      coingecko_id: "stride-staked-sommelier",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stsomm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stsomm.svg"
      }]
    },
    {
      description: "Stride's liquid staked SAGA",
      denom_units: [{
        denom: "stusaga",
        exponent: 0
      }, {
        denom: "stSAGA",
        exponent: 6
      }],
      base: "stusaga",
      name: "Stride Staked SAGA",
      display: "stSAGA",
      symbol: "stSAGA",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "saga",
          base_denom: "usaga"
        },
        provider: "Stride"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stsaga.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stsaga.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stsaga.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stsaga.svg"
      }]
    },
    {
      description: "The native token of Celestia",
      denom_units: [{
        denom: "ibc/BF3B4F53F3694B66E13C23107C84B6485BD2B96296BB7EC680EA77BBA75B4801",
        exponent: 0,
        aliases: ["utia"]
      }, {
        denom: "TIA",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/BF3B4F53F3694B66E13C23107C84B6485BD2B96296BB7EC680EA77BBA75B4801",
      name: "Celestia",
      display: "TIA",
      symbol: "TIA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "celestia",
          base_denom: "utia",
          channel_id: "channel-4"
        },
        chain: {
          channel_id: "channel-162",
          path: "transfer/channel-162/utia"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.svg"
      },
      images: [{
        image_sync: {
          chain_name: "celestia",
          base_denom: "utia"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/celestia/images/celestia.svg"
      }]
    },
    {
      denom_units: [{
        denom: "staISLM",
        exponent: 0
      }, {
        denom: "stISLM",
        exponent: 18
      }],
      base: "staISLM",
      name: "Stride Staked ISLM",
      display: "stISLM",
      symbol: "stISLM",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "haqq",
          base_denom: "aISLM"
        },
        provider: "Stride"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stislm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stislm.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stislm.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stislm.svg"
      }]
    }
  ]
};
var assets_default158 = info440;

// node_modules/chain-registry/esm/mainnet/stride/chain.js
var info441 = {
  $schema: "../chain.schema.json",
  chain_name: "stride",
  status: "live",
  network_type: "mainnet",
  website: "https://stride.zone/",
  pretty_name: "Stride",
  chain_id: "stride-1",
  bech32_prefix: "stride",
  daemon_name: "strided",
  node_home: "$HOME/.stride",
  key_algos: ["ed25519"],
  slip44: 118,
  fees: {
    fee_tokens: [
      {
        denom: "ustrd",
        fixed_min_gas_price: 5e-4,
        low_gas_price: 5e-3,
        average_gas_price: 5e-3,
        high_gas_price: 0.05
      },
      {
        denom: "stuatom",
        fixed_min_gas_price: 1e-4,
        low_gas_price: 1e-4,
        average_gas_price: 2e-4,
        high_gas_price: 5e-4
      },
      {
        denom: "stuosmo",
        fixed_min_gas_price: 1e-3,
        low_gas_price: 1e-3,
        average_gas_price: 2e-3,
        high_gas_price: 4e-3
      },
      {
        denom: "stustars",
        fixed_min_gas_price: 1,
        low_gas_price: 1,
        average_gas_price: 1.1,
        high_gas_price: 1.2
      },
      {
        denom: "stujuno",
        fixed_min_gas_price: 0.075,
        low_gas_price: 0.075,
        average_gas_price: 0.1,
        high_gas_price: 0.125
      },
      {
        denom: "stuluna",
        fixed_min_gas_price: 0.0125,
        low_gas_price: 0.0125,
        average_gas_price: 0.015,
        high_gas_price: 0.04
      },
      {
        denom: "staevmos",
        fixed_min_gas_price: 25e7,
        low_gas_price: 2e10,
        average_gas_price: 25e9,
        high_gas_price: 4e10
      },
      {
        denom: "stinj",
        fixed_min_gas_price: 5e8,
        low_gas_price: 5e8,
        average_gas_price: 7e8,
        high_gas_price: 9e8
      },
      {
        denom: "stucmdx",
        fixed_min_gas_price: 0.02,
        low_gas_price: 0.02,
        average_gas_price: 0.025,
        high_gas_price: 0.04
      },
      {
        denom: "stuumee",
        fixed_min_gas_price: 0.1,
        low_gas_price: 0.1,
        average_gas_price: 0.12,
        high_gas_price: 0.2
      },
      {
        denom: "stutia",
        fixed_min_gas_price: 2e-3,
        low_gas_price: 0.01,
        average_gas_price: 0.02,
        high_gas_price: 0.1
      },
      {
        denom: "stadydx",
        fixed_min_gas_price: 15e9,
        low_gas_price: 15e9,
        average_gas_price: 15e9,
        high_gas_price: 2e10
      },
      {
        denom: "stadym",
        fixed_min_gas_price: 15e9,
        low_gas_price: 15e9,
        average_gas_price: 15e9,
        high_gas_price: 2e10
      },
      {
        denom: "stusaga",
        fixed_min_gas_price: 0.01,
        low_gas_price: 0.01,
        average_gas_price: 0.015,
        high_gas_price: 0.03
      },
      {
        denom: "ibc/BF3B4F53F3694B66E13C23107C84B6485BD2B96296BB7EC680EA77BBA75B4801",
        fixed_min_gas_price: 2e-3,
        low_gas_price: 0.01,
        average_gas_price: 0.02,
        high_gas_price: 0.1
      }
    ]
  },
  staking: {
    staking_tokens: [{
      denom: "ustrd"
    }]
  },
  codebase: {
    cosmos_sdk_version: "Stride-Labs/cosmos-sdk v0.47.10-stride-distribution-fix-0"
  },
  description: "Stride is a blockchain that provides liquidity for staked tokens. Using Stride, you can earn both taking and DeFi yields across the Cosmos IBC ecosystem.",
  apis: {
    rpc: [
      {
        address: "https://stride-rpc.polkachu.com/",
        provider: "Polkachu"
      },
      {
        address: "https://stride-rpc.onivalidator.com",
        provider: "Oni Validator \u26E9\uFE0F"
      },
      {
        address: "https://stride-rpc.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc.stride.silentvalidator.com/",
        provider: "silent"
      },
      {
        address: "https://rpc-stride.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://stride.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://rpc-stride.pupmos.network",
        provider: "PUPM\xD8S"
      },
      {
        address: "https://rpc-stride.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "https://rpc-stride.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://stride-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rpc-stride-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://stride-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://stride-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://community.nuxian-node.ch:6797/stride/trpc",
        provider: "PRO Delegators"
      },
      {
        address: "https://stride-rpc.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://rpc.stride.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://public.stakewolle.com/cosmos/stride/rpc",
        provider: "Stakewolle"
      }
    ],
    rest: [
      {
        address: "https://stride-api.polkachu.com/",
        provider: "Polkachu"
      },
      {
        address: "https://api-stride.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://stride-api.lavenderfive.com/",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://api.stride.silentvalidator.com/",
        provider: "silent"
      },
      {
        address: "https://stride.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://api-stride.pupmos.network",
        provider: "PUPM\xD8S"
      },
      {
        address: "https://stride-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rest-stride.architectnodes.com",
        provider: "Architect Nodes"
      },
      {
        address: "https://lcd-stride.whispernode.com:443",
        provider: "WhisperNode \u{1F910}"
      },
      {
        address: "https://api-stride-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://stride-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://stride-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://community.nuxian-node.ch:6797/stride/crpc",
        provider: "PRO Delegators"
      },
      {
        address: "https://stride-api.stakeandrelax.net",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://lcd.stride.bronbro.io:443",
        provider: "Bro_n_Bro"
      },
      {
        address: "https://public.stakewolle.com/cosmos/stride/rest",
        provider: "Stakewolle"
      }
    ],
    grpc: [
      {
        address: "stride.grpc.bccnodes.com:443",
        provider: "BccNodes"
      },
      {
        address: "stride-grpc.polkachu.com:12290",
        provider: "Polkachu"
      },
      {
        address: "stride-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "http://stride.grpc.m.stavr.tech:9986",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "grpc-stride.cosmos-spaces.cloud:1140",
        provider: "Cosmos Spaces"
      },
      {
        address: "stride-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "stride.grpc.kjnodes.com:11690",
        provider: "kjnodes"
      },
      {
        address: "grpc-stride-01.stakeflow.io:1802",
        provider: "Stakeflow"
      },
      {
        address: "stride-grpc.w3coins.io:12290",
        provider: "w3coins"
      },
      {
        address: "stride-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "stride-grpc.stakeandrelax.net:12290",
        provider: "Stake&Relax \u{1F9A5}"
      },
      {
        address: "https://grpc.stride.bronbro.io:443",
        provider: "Bro_n_Bro"
      }
    ]
  },
  explorers: [
    {
      kind: "BccNodes",
      url: "https://explorer.bccnodes.com/stride-M",
      tx_page: "https://explorer.bccnodes.com/stride-M/tx/${txHash}",
      account_page: "https://explorer.bccnodes.com/stride-M/account/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/stride",
      tx_page: "https://ezstaking.app/stride/txs/${txHash}",
      account_page: "https://ezstaking.app/stride/account/${accountAddress}"
    },
    {
      kind: "Apollo",
      url: "https://apollo.chandrastation.com/stride",
      tx_page: "https://apollo.chandrastation.com/stride/tx/${txHash}",
      account_page: "https://apollo.chandrastation.com/stride/account/${accountAddress}"
    },
    {
      kind: "Stride Ping Pub",
      url: "https://explorer.stride.zone/stride",
      tx_page: "https://explorer.stride.zone/stride/tx/${txHash}",
      account_page: "https://explorer.stride.zone/stride/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525} Explorer",
      url: "https://explorer.stavr.tech/stride",
      tx_page: "https://explorer.stavr.tech/stride/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/stride/account/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/stride",
      tx_page: "https://www.mintscan.io/stride/transactions/${txHash}",
      account_page: "https://www.mintscan.io/stride/accounts/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/stride",
      tx_page: "https://atomscan.com/stride/transactions/${txHash}",
      account_page: "https://atomscan.com/stride/accounts/${accountAddress}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/stride",
      account_page: "https://stakeflow.io/stride/accounts/${accountAddress}"
    },
    {
      kind: "Stake-Take",
      url: "https://explorer.stake-take.com/stride",
      tx_page: "https://explorer.stake-take.com/stride/tx/${txHash}",
      account_page: "https://explorer.stake-take.com/stride/account/${accountAddress}"
    },
    {
      kind: "WhisperNode \u{1F910}",
      url: "https://mainnet.whispernode.com/stride",
      tx_page: "https://mainnet.whispernode.com/stride/tx/${txHash}",
      account_page: "https://mainnet.whispernode.com/stride/account/${accountAddress}"
    }
  ],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stride-chain-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.svg"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/stride-chain-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.svg"
  }]
};
var chain_default158 = info441;

// node_modules/chain-registry/esm/mainnet/stride/ibc.js
var info442 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-14",
      connection_id: "connection-15"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-70",
      connection_id: "connection-48"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-57",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-74",
      connection_id: "connection-68"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-129",
      connection_id: "connection-118"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-59",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-148",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-93",
      connection_id: "connection-78"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-75",
      connection_id: "connection-60"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-64",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-69",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "carbon",
      client_id: "07-tendermint-13",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-40",
      connection_id: "connection-27"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-47",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "demex"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-0",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-137",
      connection_id: "connection-125"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-162",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "comdex",
      client_id: "07-tendermint-83",
      connection_id: "connection-50"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-41",
      connection_id: "connection-28"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-45",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-49",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composable",
      client_id: "07-tendermint-14",
      connection_id: "connection-8"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-126",
      connection_id: "connection-116"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-134",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-913",
      connection_id: "connection-635"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-391",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-38",
      connection_id: "connection-39"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-44",
      connection_id: "connection-30"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-29",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-133",
      connection_id: "connection-123"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-160",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dymension",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-140",
      connection_id: "connection-131"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-197",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "evmos",
      client_id: "07-tendermint-77",
      connection_id: "connection-33"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-8",
      connection_id: "connection-7"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-25",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "haqq",
      client_id: "07-tendermint-6",
      connection_id: "connection-8"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-143",
      connection_id: "connection-143"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-240",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-131",
      connection_id: "connection-103"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-2",
      connection_id: "connection-3"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-89",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-263",
      connection_id: "connection-205"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-31",
      connection_id: "connection-19"
    },
    channels: [
      {
        chain_1: {
          channel_id: "channel-139",
          port_id: "transfer"
        },
        chain_2: {
          channel_id: "channel-24",
          port_id: "transfer"
        },
        ordering: "unordered",
        version: "ics20-1",
        tags: {
          status: "live",
          preferred: true
        }
      },
      {
        chain_1: {
          channel_id: "channel-202",
          port_id: "icahost"
        },
        chain_2: {
          channel_id: "channel-48",
          port_id: "icacontroller-juno-1.DELEGATION"
        },
        ordering: "ordered",
        version: "ics27-1",
        tags: {
          status: "live",
          preferred: true,
          properties: "liquid staking"
        }
      },
      {
        chain_1: {
          channel_id: "channel-143",
          port_id: "icahost"
        },
        chain_2: {
          channel_id: "channel-26",
          port_id: "icacontroller-juno-1.FEE"
        },
        ordering: "ordered",
        version: "ics27-1",
        tags: {
          status: "live",
          preferred: true,
          properties: "liquid staking"
        }
      },
      {
        chain_1: {
          channel_id: "channel-142",
          port_id: "icahost"
        },
        chain_2: {
          channel_id: "channel-27",
          port_id: "icacontroller-juno-1.WITHDRAWAL"
        },
        ordering: "ordered",
        version: "ics27-1",
        tags: {
          status: "live",
          preferred: true,
          properties: "liquid staking"
        }
      },
      {
        chain_1: {
          channel_id: "channel-140",
          port_id: "icahost"
        },
        chain_2: {
          channel_id: "channel-28",
          port_id: "icacontroller-juno-1.REDEMPTION"
        },
        ordering: "ordered",
        version: "ics27-1",
        tags: {
          status: "live",
          preferred: true,
          properties: "liquid staking"
        }
      }
    ]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-37",
      connection_id: "connection-31"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-5",
      connection_id: "connection-5"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-32",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-18",
      connection_id: "connection-15"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-125",
      connection_id: "connection-113"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-123",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2119",
      connection_id: "connection-1657"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-1",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-326",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "persistence",
      client_id: "07-tendermint-83",
      connection_id: "connection-71"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-54",
      connection_id: "connection-33"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-67",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-53",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "saga",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-142",
      connection_id: "connection-142"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-213",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-75",
      connection_id: "connection-40"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-37",
      connection_id: "connection-25"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-40",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "sei",
      client_id: "07-tendermint-18",
      connection_id: "connection-11"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-130",
      connection_id: "connection-119"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-149",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "sommelier",
      client_id: "07-tendermint-60",
      connection_id: "connection-75"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-131",
      connection_id: "connection-122"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-71",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-150",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "stargaze",
      client_id: "07-tendermint-195",
      connection_id: "connection-128"
    },
    chain_2: {
      chain_name: "stride",
      client_id: "07-tendermint-30",
      connection_id: "connection-18"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-106",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-19",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "stride",
      client_id: "07-tendermint-51",
      connection_id: "connection-32"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-87",
      connection_id: "connection-72"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-52",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-46",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "stride",
      client_id: "07-tendermint-32",
      connection_id: "connection-20"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-64",
      connection_id: "connection-45"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-29",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-34",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default126 = info442;

// node_modules/chain-registry/esm/mainnet/stride/index.js
var assets158 = assets_default158;
var chain158 = chain_default158;
var ibc126 = ibc_default126;

// node_modules/chain-registry/esm/mainnet/sunrise/assets.js
var info443 = {
  $schema: "../assetlist.schema.json",
  chain_name: "sunrise",
  assets: [{
    description: "The native token of the Sunrise network for staking. This token is non transferrable. This token can be retrieved by providing liquidity.",
    denom_units: [{
      denom: "uvrise",
      exponent: 0,
      aliases: ["microvRISE", "microvrise"]
    }, {
      denom: "vrise",
      exponent: 6
    }],
    base: "uvrise",
    name: "Sunrise vRISE",
    display: "vrise",
    symbol: "vRISE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/vrise.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/vrise.svg"
    },
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/vrise.svg",
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/vrise.png"
    }],
    socials: {
      website: "https://sunriselayer.io/",
      twitter: "https://twitter.com/SunriseLayer"
    }
  }, {
    description: "The native token of the Sunrise network for fees.",
    denom_units: [{
      denom: "urise",
      exponent: 0,
      aliases: ["microRISE", "microrise"]
    }, {
      denom: "rise",
      exponent: 6
    }],
    base: "urise",
    name: "Sunrise RISE",
    display: "rise",
    symbol: "RISE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/sunrise.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/sunrise.svg"
    },
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/sunrise.svg",
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/sunrise.png"
    }],
    socials: {
      website: "https://sunriselayer.io/",
      twitter: "https://twitter.com/SunriseLayer"
    }
  }]
};
var assets_default159 = info443;

// node_modules/chain-registry/esm/mainnet/sunrise/chain.js
var info444 = {
  $schema: "../chain.schema.json",
  chain_name: "sunrise",
  status: "upcoming",
  network_type: "mainnet",
  website: "https://sunriselayer.io/",
  pretty_name: "Sunrise",
  chain_id: "sunrise-1",
  bech32_prefix: "sunrise",
  daemon_name: "sunrised",
  node_home: "$HOME/.sunrise",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "urise",
      fixed_min_gas_price: 2e-3,
      low_gas_price: 0.01,
      average_gas_price: 0.02,
      high_gas_price: 0.1
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uvrise"
    }],
    lock_duration: {
      time: "1209600s"
    }
  },
  codebase: {
    cosmos_sdk_version: "0.50.2"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/sunrise.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/sunrise.svg"
  },
  apis: {
    rpc: [],
    rest: [],
    grpc: []
  },
  explorers: [],
  images: [{
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/sunrise.svg",
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/sunrise.png"
  }]
};
var chain_default159 = info444;

// node_modules/chain-registry/esm/mainnet/sunrise/index.js
var assets159 = assets_default159;
var chain159 = chain_default159;

// node_modules/chain-registry/esm/mainnet/taketitan/assets.js
var info445 = {
  $schema: "../assetlist.schema.json",
  chain_name: "taketitan",
  assets: [{
    description: "Taketitan the future of the asset management industry.",
    extended_description: "Taketitan is seen as the future of the asset management industry. This new blockchain technology is changing how asset management works in exciting ways.\n\nTaketitan aims to make managing assets simpler, faster, and more secure. By using blockchain technology, it provides a transparent and trustworthy system where all transactions are recorded in a secure and unchangeable way. This helps reduce the risk of fraud and errors, making asset management safer for everyone.\n\nWith Taketitan, managing assets becomes more efficient. Transactions are processed quickly, and the costs are lower compared to traditional methods. This means more people can benefit from high-quality asset management services without the high fees usually involved.\n\nTaketitan also makes it easier for people to track and manage their investments. Everything is done through a digital platform that is easy to use and always available. This gives users better control and visibility over their assets.\n\nIn short, Taketitan is revolutionizing the asset management industry by making it more secure, efficient, and accessible for everyone. This blockchain technology is paving the way for a new era in how we manage and grow our financial\xA0assets.",
    denom_units: [{
      denom: "ttnc",
      exponent: 0
    }],
    base: "ttnc",
    name: "taketitan",
    display: "ttnc",
    symbol: "TTNC",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/taketitan/images/taketitan.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/taketitan/images/taketitan.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/taketitan/images/taketitan.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/taketitan/images/taketitan.svg"
    }],
    socials: {
      website: "https://taketitan.com/"
    }
  }]
};
var assets_default160 = info445;

// node_modules/chain-registry/esm/mainnet/taketitan/chain.js
var info446 = {
  $schema: "../chain.schema.json",
  chain_name: "taketitan",
  status: "live",
  network_type: "mainnet",
  website: "https://taketitan.com/",
  pretty_name: "TakeTitan",
  chain_id: "taketitan-12",
  bech32_prefix: "taketitan",
  daemon_name: "ttnc",
  node_home: "$HOME/.ssc",
  key_algos: ["secp256k1"],
  slip44: 1179993421,
  staking: {
    staking_tokens: [{
      denom: "ttnc"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  fees: {
    fee_tokens: [{
      denom: "ttnc",
      low_gas_price: 1e-6,
      average_gas_price: 5e-6,
      high_gas_price: 1e-4
    }]
  },
  apis: {
    rpc: [{
      address: "https://rcpttnc.taketitan.com",
      provider: "taketitan"
    }],
    rest: [{
      address: "https://lcdttnc.taketitan.com",
      provider: "taketitan"
    }],
    grpc: [{
      address: "https://grcpttnc.taketitan.com:8090",
      provider: "taketitan"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/taketitan/images/taketitan.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/taketitan/images/taketitan.svg"
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://scan.taketitan.com/taketitan",
    tx_page: "https://scan.taketitan.com/taketitan/tx/${txHash}",
    account_page: "https://scan.taketitan.com/taketitan/accounts/${accountAddress}"
  }],
  keywords: [],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/taketitan/images/taketitan.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/taketitan/images/taketitan.svg"
  }]
};
var chain_default160 = info446;

// node_modules/chain-registry/esm/mainnet/taketitan/index.js
var assets160 = assets_default160;
var chain160 = chain_default160;

// node_modules/chain-registry/esm/mainnet/tenet/assets.js
var info447 = {
  $schema: "../assetlist.schema.json",
  chain_name: "tenet",
  assets: [{
    description: "The native EVM, governance and staking token of the Tenet",
    denom_units: [{
      denom: "atenet",
      exponent: 0
    }, {
      denom: "tenet",
      exponent: 18
    }],
    base: "atenet",
    name: "Tenet",
    display: "tenet",
    symbol: "TENET",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tenet/images/tenet.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tenet/images/tenet.svg"
    },
    coingecko_id: "tenet-1b000f7b-59cb-4e06-89ce-d62b32d362b9",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tenet/images/tenet.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tenet/images/tenet.svg"
    }]
  }]
};
var assets_default161 = info447;

// node_modules/chain-registry/esm/mainnet/tenet/chain.js
var info448 = {
  $schema: "../chain.schema.json",
  chain_name: "tenet",
  status: "live",
  network_type: "mainnet",
  website: "https://tenet.org/",
  pretty_name: "Tenet",
  chain_id: "tenet_1559-1",
  bech32_prefix: "tenet",
  node_home: "$HOME/.tenetd",
  daemon_name: "tenetd",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "atenet",
      fixed_min_gas_price: 25e7,
      low_gas_price: 2e10,
      average_gas_price: 25e9,
      high_gas_price: 4e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "atenet"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.46"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tenet/images/tenet.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tenet/images/tenet.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://tendermint-1.rpc.tenet.org",
        provider: "tenet"
      },
      {
        address: "https://tenet-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://tenet_mainnet_rpc.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      }
    ],
    rest: [
      {
        address: "https://app.rpc.tenet.org",
        provider: "tenet"
      },
      {
        address: "https://tenet-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://tenet_mainnet_api.chain.whenmoonwhenlambo.money",
        provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
      }
    ],
    grpc: [{
      address: "tenet-grpc.publicnode.com:443",
      provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
    }, {
      address: "kichain-mainnet-grpc.autostake.com:443",
      provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
    }],
    "evm-http-jsonrpc": [{
      address: "https://rpc.tenet.org",
      provider: "tenet"
    }, {
      address: "https://tenet-evm.publicnode.com",
      provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
    }]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://ping.pub/tenet",
      tx_page: "https://ping.pub/tenet/tx/${txHash}"
    },
    {
      kind: "Nodeist Explorer",
      url: "https://exp.nodeist.net/Tenet",
      tx_page: "https://exp.nodeist.net/Tenet/tx/${txHash}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/tenet",
      tx_page: "https://explorer.tcnetwork.io/tenet/transaction/${txHash}",
      account_page: "https://explorer.tcnetwork.io/tenet/account/${accountAddress}"
    },
    {
      kind: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}",
      url: "https://explorer.whenmoonwhenlambo.money/tenet",
      tx_page: "https://explorer.whenmoonwhenlambo.money/tenet/tx/${txHash}",
      account_page: "https://explorer.whenmoonwhenlambo.money/tenet/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tenet/images/tenet.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tenet/images/tenet.svg"
  }]
};
var chain_default161 = info448;

// node_modules/chain-registry/esm/mainnet/tenet/index.js
var assets161 = assets_default161;
var chain161 = chain_default161;

// node_modules/chain-registry/esm/mainnet/teritori/assets.js
var info449 = {
  $schema: "../assetlist.schema.json",
  chain_name: "teritori",
  assets: [
    {
      description: "The native token of Teritori",
      denom_units: [{
        denom: "utori",
        exponent: 0
      }, {
        denom: "tori",
        exponent: 6
      }],
      base: "utori",
      name: "Teritori",
      display: "tori",
      symbol: "TORI",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/teritori/images/utori.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/teritori/images/utori.svg"
      },
      coingecko_id: "teritori",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/teritori/images/utori.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/teritori/images/utori.svg"
      }]
    },
    {
      description: "The native token of Osmosis",
      denom_units: [{
        denom: "ibc/ED07A3391A112B175915CD8FAF43A2DA8E4790EDE12566649D0C2F97716B8518",
        exponent: 0
      }, {
        denom: "osmo",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/ED07A3391A112B175915CD8FAF43A2DA8E4790EDE12566649D0C2F97716B8518",
      name: "Osmosis",
      display: "osmo",
      symbol: "OSMO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "uosmo",
          channel_id: "channel-362"
        },
        chain: {
          channel_id: "channel-0",
          path: "transfer/channel-0/uosmo"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      },
      coingecko_id: "osmosis",
      keywords: ["dex", "staking"],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "uosmo"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/A670D9568B3E399316EEDE40C1181B7AA4BD0695F0B37513CE9B95B977DFC12E",
        exponent: 0,
        aliases: ["uatom"]
      }, {
        denom: "atom",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/A670D9568B3E399316EEDE40C1181B7AA4BD0695F0B37513CE9B95B977DFC12E",
      name: "Cosmos Hub Atom",
      display: "atom",
      symbol: "ATOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "cosmoshub",
          base_denom: "uatom",
          channel_id: "channel-431"
        },
        chain: {
          channel_id: "channel-10",
          path: "transfer/channel-10/uatom"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "cosmoshub",
          base_denom: "uatom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }
    },
    {
      description: "The native staking and governance token of the Kujira chain.",
      denom_units: [{
        denom: "ibc/1FECA3491D88F4AD24DE0948ED96718CA6D93F6730CEE7708E621B953594BB5E",
        exponent: 0,
        aliases: ["ukuji"]
      }, {
        denom: "kuji",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/1FECA3491D88F4AD24DE0948ED96718CA6D93F6730CEE7708E621B953594BB5E",
      name: "Kujira",
      display: "kuji",
      symbol: "KUJI",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kujira",
          base_denom: "ukuji",
          channel_id: "channel-89"
        },
        chain: {
          channel_id: "channel-30",
          path: "transfer/channel-30/ukuji"
        }
      }],
      coingecko_id: "kujira",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kuji.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kuji.svg"
      },
      images: [{
        image_sync: {
          chain_name: "kujira",
          base_denom: "ukuji"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kuji.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kujira/images/kuji.svg"
      }]
    },
    {
      description: "USD Coin",
      denom_units: [{
        denom: "ibc/FE98AAD68F02F03565E9FA39A5E627946699B2B07115889ED812D8BA639576A9",
        exponent: 0
      }, {
        denom: "usdc",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/FE98AAD68F02F03565E9FA39A5E627946699B2B07115889ED812D8BA639576A9",
      display: "usdc",
      name: "USD Coin",
      symbol: "USDC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "noble",
          base_denom: "uusdc",
          channel_id: "channel-54"
        },
        chain: {
          channel_id: "channel-62",
          path: "transfer/channel-62/uusdc"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
      },
      images: [{
        image_sync: {
          chain_name: "noble",
          base_denom: "uusdc"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
      }]
    },
    {
      description: "The native staking and governance token of the Secret chain.",
      denom_units: [{
        denom: "ibc/F3F6BDEE1A79664B169D742651107BF4E03FA67E931452E27380B75F5917B7E9",
        exponent: 0
      }, {
        denom: "scrt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/F3F6BDEE1A79664B169D742651107BF4E03FA67E931452E27380B75F5917B7E9",
      name: "Secret Network",
      display: "scrt",
      symbol: "SCRT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "secretnetwork",
          base_denom: "uscrt",
          channel_id: "channel-111"
        },
        chain: {
          channel_id: "channel-63",
          path: "transfer/channel-63/uscrt"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.svg"
      },
      images: [{
        image_sync: {
          chain_name: "secretnetwork",
          base_denom: "uscrt"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.svg"
      }]
    }
  ]
};
var assets_default162 = info449;

// node_modules/chain-registry/esm/mainnet/teritori/chain.js
var info450 = {
  $schema: "../chain.schema.json",
  chain_name: "teritori",
  status: "live",
  network_type: "mainnet",
  website: "https://teritori.com/",
  pretty_name: "Teritori",
  chain_id: "teritori-1",
  daemon_name: "teritorid",
  node_home: "$HOME/.teritorid",
  bech32_prefix: "tori",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "utori",
      low_gas_price: 0,
      average_gas_price: 0.25,
      high_gas_price: 0.5
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "utori"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.47.6",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.41.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/teritori/images/chain.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/teritori/images/chain.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://teritori-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://teritori.rpc.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc.teritori.silentvalidator.com/",
        provider: "silent"
      },
      {
        address: "https://teritori-rpc.brocha.in",
        provider: "Brochain"
      },
      {
        address: "https://teritori-rpc.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://teritori.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://rpc.tori.bh.rocks",
        provider: "BlockHunters \u{1F3AF}"
      },
      {
        address: "https://teritori-rpc.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://m-teritori.rpc.utsa.tech",
        provider: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}"
      },
      {
        address: "https://rpc-teritori.pupmos.network",
        provider: "PUPM\xD8S"
      },
      {
        address: "https://teritori-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rpc-teritori.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://teritori-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    rest: [
      {
        address: "https://teritori-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://teritori.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api.teritori.silentvalidator.com/",
        provider: "silent"
      },
      {
        address: "https://teritori-api.ibs.team",
        provider: "Inter Blockchain Services"
      },
      {
        address: "https://teritori.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://api.tori.bh.rocks",
        provider: "BlockHunters \u{1F3AF}"
      },
      {
        address: "https://teritori-api.kleomedes.network",
        provider: "Kleomedes"
      },
      {
        address: "https://m-teritori.api.utsa.tech",
        provider: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}"
      },
      {
        address: "https://api-teritori.pupmos.network",
        provider: "PUPM\xD8S"
      },
      {
        address: "https://teritori-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://rest-teritori.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://teritori-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    grpc: [
      {
        address: "grpc.teritori.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "teritori.grpc.m.stavr.tech:6705",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "teritori-grpc.brocha.in:443",
        provider: "Brochain"
      },
      {
        address: "teritori-grpc.polkachu.com:15990",
        provider: "Polkachu"
      },
      {
        address: "teritori.grpc.silknodes.io:443",
        provider: "Silk Nodes"
      },
      {
        address: "teritori-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "teritori.grpc.kjnodes.com:11990",
        provider: "kjnodes"
      },
      {
        address: "teritori-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/teritori",
      tx_page: "https://ezstaking.app/teritori/txs/${txHash}",
      account_page: "https://ezstaking.app/teritori/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://explorer.teritori.com/teritori",
      tx_page: "https://explorer.teritori.com/teritori/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525} Explorer",
      url: "https://explorer.stavr.tech/teritori-main",
      tx_page: "https://explorer.stavr.tech/teritori-main/tx/${txHash}"
    },
    {
      kind: "guru",
      url: "https://teritori.explorers.guru/",
      tx_page: "https://teritori.explorers.guru/transaction/${txHash}"
    },
    {
      kind: "Brochain",
      url: "https://explorer.brocha.in/teritori",
      tx_page: "https://explorer.brocha.in/teritori/tx/${txHash}"
    },
    {
      kind: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}",
      url: "https://exp.utsa.tech/teritori",
      tx_page: "https://exp.utsa.tech/teritori/tx/${txHash}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/teritori",
      tx_page: "https://www.mintscan.io/teritori/transactions/${txHash}",
      account_page: "https://www.mintscan.io/teritori/accounts/${accountAddress}"
    },
    {
      kind: "TC Network",
      url: "https://explorer.tcnetwork.io/teritori",
      tx_page: "https://explorer.tcnetwork.io/teritori/transaction/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/teritori",
      tx_page: "https://atomscan.com/teritori/transactions/${txHash}",
      account_page: "https://atomscan.com/teritori/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/teritori/images/chain.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/teritori/images/chain.svg"
  }]
};
var chain_default162 = info450;

// node_modules/chain-registry/esm/mainnet/teritori/ibc.js
var info451 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-962",
      connection_id: "connection-1710"
    },
    chain_2: {
      chain_name: "teritori",
      client_id: "07-tendermint-32",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-431",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-132",
      connection_id: "connection-100"
    },
    chain_2: {
      chain_name: "teritori",
      client_id: "07-tendermint-61",
      connection_id: "connection-38"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-89",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-30",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-76",
      connection_id: "connection-77"
    },
    chain_2: {
      chain_name: "teritori",
      client_id: "07-tendermint-97",
      connection_id: "connection-97"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-54",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-62",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-2192",
      connection_id: "connection-1710"
    },
    chain_2: {
      chain_name: "teritori",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-362",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-192",
      connection_id: "connection-185"
    },
    chain_2: {
      chain_name: "teritori",
      client_id: "07-tendermint-99",
      connection_id: "connection-122"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-111",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-63",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  }
];
var ibc_default127 = info451;

// node_modules/chain-registry/esm/mainnet/teritori/index.js
var assets162 = assets_default162;
var chain162 = chain_default162;
var ibc127 = ibc_default127;

// node_modules/chain-registry/esm/mainnet/terpnetwork/assets.js
var info452 = {
  $schema: "../assetlist.schema.json",
  chain_name: "terpnetwork",
  assets: [{
    description: "Terp Token (TERP) is the Terp Network's native utility token, used as the primary means to govern & secure the blockchain.",
    denom_units: [{
      denom: "uterp",
      exponent: 0
    }, {
      denom: "terp",
      exponent: 6
    }],
    base: "uterp",
    name: "Terp Network Native Token",
    display: "terp",
    symbol: "TERP",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terpnetwork/images/terp.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terpnetwork/images/terp.png"
    }]
  }, {
    description: "Thiol Gas Token (Thiols) is the Terp Network's native utility token, used as the primary means to govern, secure the blockchain & incentivize participants.",
    denom_units: [{
      denom: "uthiol",
      exponent: 0
    }, {
      denom: "thiol",
      exponent: 6
    }],
    base: "uthiol",
    name: "Thiol Terp Gas Token",
    display: "thiol",
    symbol: "THIOL",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terpnetwork/images/thiol.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terpnetwork/images/thiol.png"
    }]
  }]
};
var assets_default163 = info452;

// node_modules/chain-registry/esm/mainnet/terpnetwork/chain.js
var info453 = {
  $schema: "../chain.schema.json",
  chain_name: "terpnetwork",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Terp-Network",
  chain_id: "morocco-1",
  bech32_prefix: "terp",
  daemon_name: "terp",
  node_home: "$HOME/.terp",
  codebase: {},
  fees: {
    fee_tokens: [{
      denom: "uthiol",
      fixed_min_gas_price: 0.05
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uterp"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terpnetwork/images/logo.png"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc-terp.zenchainlabs.io/",
        provider: "ZenChainLabs"
      },
      {
        address: "https://terp-mainnet-rpc.itrocket.net:443",
        provider: "itrocket.net"
      },
      {
        address: " https://terp.rpc.nodex.one:443",
        provider: "nodex.one"
      }
    ],
    rest: [
      {
        address: "https://api-terp.zenchainlabs.io:443",
        provider: "ZenChainLabs"
      },
      {
        address: "https://terp-mainnet-api.itrocket.net:443",
        provider: "itrocket.net"
      },
      {
        address: " https://terp.api.nodex.one:443",
        provider: "nodex.one"
      },
      {
        address: "https://terp.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      }
    ],
    grpc: [
      {
        address: "https://grpc.terp.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "terp-mainnet-grpc.itrocket.net:13090",
        provider: "itrocket.net"
      },
      {
        address: " https://terp.grpc.nodex.one:443",
        provider: "nodex.one"
      }
    ]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://ping.pub/terp",
      tx_page: "https://ping.pub/terp/tx/${txHash}",
      account_page: "https://ping.pub/terp/account/{$accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://explorer.nodestake.top",
      tx_page: "https://explorer.nodestake.top/terp/tx/${txHash}",
      account_page: "https://explorer.nodestake.top/terp/account/{$accountAddress}"
    },
    {
      kind: "ZenChainLabs",
      url: "https://terp.zenscan.io/",
      tx_page: "https://terp.zenscan.io/transaction.php?hash=${txHash}",
      account_page: "https://terp.zenscan.io/address.php?address=${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Terp-Mainnet",
      tx_page: "https://explorer.stavr.tech/Terp-Mainnet/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Terp-Mainnet/account/{$accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terpnetwork/images/logo.png"
  }],
  slip44: 118
};
var chain_default163 = info453;

// node_modules/chain-registry/esm/mainnet/terpnetwork/index.js
var assets163 = assets_default163;
var chain163 = chain_default163;

// node_modules/chain-registry/esm/mainnet/terra/assets.js
var info454 = {
  $schema: "../assetlist.schema.json",
  chain_name: "terra",
  assets: [
    {
      description: "The native staking token of Terra Classic.",
      denom_units: [
        {
          denom: "uluna",
          exponent: 0,
          aliases: ["microluna"]
        },
        {
          denom: "mluna",
          exponent: 3,
          aliases: ["milliluna"]
        },
        {
          denom: "luna",
          exponent: 6,
          aliases: ["lunc"]
        }
      ],
      base: "uluna",
      name: "Luna Classic",
      display: "luna",
      symbol: "LUNC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/luna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/luna.svg"
      },
      coingecko_id: "terra-luna",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/luna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/luna.svg"
      }]
    },
    {
      description: "The USD stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "uusd",
          exponent: 0,
          aliases: ["microusd"]
        },
        {
          denom: "musd",
          exponent: 3,
          aliases: ["milliusd"]
        },
        {
          denom: "ust",
          exponent: 6,
          aliases: ["ustc"]
        }
      ],
      base: "uusd",
      name: "TerraClassicUSD",
      display: "ust",
      symbol: "USTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/ust.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/ust.svg"
      },
      coingecko_id: "terrausd",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/ust.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/ust.svg"
      }]
    },
    {
      description: "The KRW stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "ukrw",
          exponent: 0,
          aliases: ["microkrw"]
        },
        {
          denom: "mkrw",
          exponent: 3,
          aliases: ["millikrw"]
        },
        {
          denom: "krt",
          exponent: 6,
          aliases: ["krtc"]
        }
      ],
      base: "ukrw",
      name: "TerraClassicKRW",
      display: "krt",
      symbol: "KRTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/krt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/krt.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/krt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/krt.svg"
      }]
    },
    {
      description: "The governance token of the White Whale protocol on Terra.",
      type_asset: "cw20",
      address: "terra1php5m8a6qd68z02t3zpw4jv2pj4vgw4wz0t8mz",
      denom_units: [{
        denom: "cw20:terra1php5m8a6qd68z02t3zpw4jv2pj4vgw4wz0t8mz",
        exponent: 0
      }, {
        denom: "whale",
        exponent: 6
      }],
      base: "cw20:terra1php5m8a6qd68z02t3zpw4jv2pj4vgw4wz0t8mz",
      name: "Whale Token",
      display: "whale",
      symbol: "WHALE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/whale.png"
      },
      coingecko_id: "white-whale",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/whale.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1kc87mu460fwkqte29rquh4hc20m54fxwtsx7gp",
        exponent: 0
      }, {
        denom: "bluna",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1kc87mu460fwkqte29rquh4hc20m54fxwtsx7gp",
      base: "cw20:terra1kc87mu460fwkqte29rquh4hc20m54fxwtsx7gp",
      name: "Bonded Luna",
      display: "bluna",
      symbol: "bLuna",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/bluna.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/bluna.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1dzhzukyezv0etz22ud940z7adyv7xgcjkahuun",
        exponent: 0
      }, {
        denom: "beth",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1dzhzukyezv0etz22ud940z7adyv7xgcjkahuun",
      base: "cw20:terra1dzhzukyezv0etz22ud940z7adyv7xgcjkahuun",
      name: "Bonded ETH",
      display: "beth",
      symbol: "bETH",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/beth.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/beth.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1hzh9vpxhsk8253se0vv5jj6etdvxu3nv8z07zu",
        exponent: 0
      }, {
        denom: "aust",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1hzh9vpxhsk8253se0vv5jj6etdvxu3nv8z07zu",
      base: "cw20:terra1hzh9vpxhsk8253se0vv5jj6etdvxu3nv8z07zu",
      name: "Anchor Terra USD",
      display: "aust",
      symbol: "aUST",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/aust.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/aust.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra14z56l0fp2lsf86zy3hty2z47ezkhnthtr9yq76",
        exponent: 0
      }, {
        denom: "anc",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra14z56l0fp2lsf86zy3hty2z47ezkhnthtr9yq76",
      base: "cw20:terra14z56l0fp2lsf86zy3hty2z47ezkhnthtr9yq76",
      name: "Anchor Token",
      display: "anc",
      symbol: "ANC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/anc.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/anc.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra15gwkyepfc6xgca5t5zefzwy42uts8l2m4g40k6",
        exponent: 0
      }, {
        denom: "mir",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra15gwkyepfc6xgca5t5zefzwy42uts8l2m4g40k6",
      base: "cw20:terra15gwkyepfc6xgca5t5zefzwy42uts8l2m4g40k6",
      name: "Mirror",
      display: "mir",
      symbol: "MIR",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mir.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mir.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1vxtwu4ehgzz77mnfwrntyrmgl64qjs75mpwqaz",
        exponent: 0
      }, {
        denom: "maapl",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1vxtwu4ehgzz77mnfwrntyrmgl64qjs75mpwqaz",
      base: "cw20:terra1vxtwu4ehgzz77mnfwrntyrmgl64qjs75mpwqaz",
      name: "Apple Inc.",
      display: "maapl",
      symbol: "mAAPL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/maapl.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/maapl.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1g4x2pzmkc9z3mseewxf758rllg08z3797xly0n",
        exponent: 0
      }, {
        denom: "mabnb",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1g4x2pzmkc9z3mseewxf758rllg08z3797xly0n",
      base: "cw20:terra1g4x2pzmkc9z3mseewxf758rllg08z3797xly0n",
      name: "Airbnb Inc.",
      display: "mabnb",
      symbol: "mABNB",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mabnb.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mabnb.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1qelfthdanju7wavc5tq0k5r0rhsyzyyrsn09qy",
        exponent: 0
      }, {
        denom: "mamc",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1qelfthdanju7wavc5tq0k5r0rhsyzyyrsn09qy",
      base: "cw20:terra1qelfthdanju7wavc5tq0k5r0rhsyzyyrsn09qy",
      name: "AMC Entertainment Holdings Inc.",
      display: "mamc",
      symbol: "mAMC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mamc.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mamc.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra18ej5nsuu867fkx4tuy2aglpvqjrkcrjjslap3z",
        exponent: 0
      }, {
        denom: "mamd",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra18ej5nsuu867fkx4tuy2aglpvqjrkcrjjslap3z",
      base: "cw20:terra18ej5nsuu867fkx4tuy2aglpvqjrkcrjjslap3z",
      name: "Advanced Micro Devices, Inc.",
      display: "mamd",
      symbol: "mAMD",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mamd.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mamd.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra165nd2qmrtszehcfrntlplzern7zl4ahtlhd5t2",
        exponent: 0
      }, {
        denom: "mamzn",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra165nd2qmrtszehcfrntlplzern7zl4ahtlhd5t2",
      base: "cw20:terra165nd2qmrtszehcfrntlplzern7zl4ahtlhd5t2",
      name: "Amazon.com, Inc.",
      display: "mamzn",
      symbol: "mAMZN",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mamzn.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mamzn.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1qqfx5jph0rsmkur2zgzyqnfucra45rtjae5vh6",
        exponent: 0
      }, {
        denom: "markk",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1qqfx5jph0rsmkur2zgzyqnfucra45rtjae5vh6",
      base: "cw20:terra1qqfx5jph0rsmkur2zgzyqnfucra45rtjae5vh6",
      name: "ARK Innovation ETF",
      display: "markk",
      symbol: "mARKK",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/markk.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/markk.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1w7zgkcyt7y4zpct9dw8mw362ywvdlydnum2awa",
        exponent: 0
      }, {
        denom: "mbaba",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1w7zgkcyt7y4zpct9dw8mw362ywvdlydnum2awa",
      base: "cw20:terra1w7zgkcyt7y4zpct9dw8mw362ywvdlydnum2awa",
      name: "Alibaba Group Holding Limited",
      display: "mbaba",
      symbol: "mBABA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mbaba.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mbaba.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1rhhvx8nzfrx5fufkuft06q5marfkucdqwq5sjw",
        exponent: 0
      }, {
        denom: "mbtc",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1rhhvx8nzfrx5fufkuft06q5marfkucdqwq5sjw",
      base: "cw20:terra1rhhvx8nzfrx5fufkuft06q5marfkucdqwq5sjw",
      name: "Bitcoin",
      display: "mbtc",
      symbol: "mBTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mbtc.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mbtc.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra18wayjpyq28gd970qzgjfmsjj7dmgdk039duhph",
        exponent: 0
      }, {
        denom: "mcoin",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra18wayjpyq28gd970qzgjfmsjj7dmgdk039duhph",
      base: "cw20:terra18wayjpyq28gd970qzgjfmsjj7dmgdk039duhph",
      name: "Coinbase Global, Inc.",
      display: "mcoin",
      symbol: "mCOIN",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mcoin.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mcoin.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra149755r3y0rve30e209awkhn5cxgkn5c8ju9pm5",
        exponent: 0
      }, {
        denom: "mdis",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra149755r3y0rve30e209awkhn5cxgkn5c8ju9pm5",
      base: "cw20:terra149755r3y0rve30e209awkhn5cxgkn5c8ju9pm5",
      name: "The Walt Disney Company",
      display: "mdis",
      symbol: "mDIS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mdis.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mdis.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra19ya4jpvjvvtggepvmmj6ftmwly3p7way0tt08r",
        exponent: 0
      }, {
        denom: "mdot",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra19ya4jpvjvvtggepvmmj6ftmwly3p7way0tt08r",
      base: "cw20:terra19ya4jpvjvvtggepvmmj6ftmwly3p7way0tt08r",
      name: "Polkadot",
      display: "mdot",
      symbol: "mDOT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mdot.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mdot.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1dk3g53js3034x4v5c3vavhj2738une880yu6kx",
        exponent: 0
      }, {
        denom: "meth",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1dk3g53js3034x4v5c3vavhj2738une880yu6kx",
      base: "cw20:terra1dk3g53js3034x4v5c3vavhj2738une880yu6kx",
      name: "Ether",
      display: "meth",
      symbol: "mETH",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/meth.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/meth.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1mqsjugsugfprn3cvgxsrr8akkvdxv2pzc74us7",
        exponent: 0
      }, {
        denom: "mfb",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1mqsjugsugfprn3cvgxsrr8akkvdxv2pzc74us7",
      base: "cw20:terra1mqsjugsugfprn3cvgxsrr8akkvdxv2pzc74us7",
      name: "Facebook Inc.",
      display: "mfb",
      symbol: "mFB",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mfb.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mfb.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1l5lrxtwd98ylfy09fn866au6dp76gu8ywnudls",
        exponent: 0
      }, {
        denom: "mglxy",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1l5lrxtwd98ylfy09fn866au6dp76gu8ywnudls",
      base: "cw20:terra1l5lrxtwd98ylfy09fn866au6dp76gu8ywnudls",
      name: "Galaxy Digital Holdings Ltd",
      display: "mglxy",
      symbol: "mGLXY",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mglxy.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mglxy.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1m6j6j9gw728n82k78s0j9kq8l5p6ne0xcc820p",
        exponent: 0
      }, {
        denom: "mgme",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1m6j6j9gw728n82k78s0j9kq8l5p6ne0xcc820p",
      base: "cw20:terra1m6j6j9gw728n82k78s0j9kq8l5p6ne0xcc820p",
      name: "GameStop Corp",
      display: "mgme",
      symbol: "mGME",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mgme.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mgme.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1h8arz2k547uvmpxctuwush3jzc8fun4s96qgwt",
        exponent: 0
      }, {
        denom: "mgoogl",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1h8arz2k547uvmpxctuwush3jzc8fun4s96qgwt",
      base: "cw20:terra1h8arz2k547uvmpxctuwush3jzc8fun4s96qgwt",
      name: "Alphabet Inc.",
      display: "mgoogl",
      symbol: "mGOOGL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mgoogl.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mgoogl.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra137drsu8gce5thf6jr5mxlfghw36rpljt3zj73v",
        exponent: 0
      }, {
        denom: "mgs",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra137drsu8gce5thf6jr5mxlfghw36rpljt3zj73v",
      base: "cw20:terra137drsu8gce5thf6jr5mxlfghw36rpljt3zj73v",
      name: "Goldman Sachs Group Inc.",
      display: "mgs",
      symbol: "mGS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mgs.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mgs.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra18yqdfzfhnguerz9du5mnvxsh5kxlknqhcxzjfr",
        exponent: 0
      }, {
        denom: "mhood",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra18yqdfzfhnguerz9du5mnvxsh5kxlknqhcxzjfr",
      base: "cw20:terra18yqdfzfhnguerz9du5mnvxsh5kxlknqhcxzjfr",
      name: "Robinhood Markets, Inc.",
      display: "mhood",
      symbol: "mHOOD",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mhood.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mhood.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra10h7ry7apm55h4ez502dqdv9gr53juu85nkd4aq",
        exponent: 0
      }, {
        denom: "miau",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra10h7ry7apm55h4ez502dqdv9gr53juu85nkd4aq",
      base: "cw20:terra10h7ry7apm55h4ez502dqdv9gr53juu85nkd4aq",
      name: "iShares Gold Trust",
      display: "miau",
      symbol: "mIAU",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/miau.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/miau.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra15hp9pr8y4qsvqvxf3m4xeptlk7l8h60634gqec",
        exponent: 0
      }, {
        denom: "miau",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra15hp9pr8y4qsvqvxf3m4xeptlk7l8h60634gqec",
      base: "cw20:terra15hp9pr8y4qsvqvxf3m4xeptlk7l8h60634gqec",
      name: "iShares Gold Trust",
      display: "miau",
      symbol: "mIAU",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/miau.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/miau.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1ptdxmj3xmmljzx02nr4auwfuelmj0cnkh8egs2",
        exponent: 0
      }, {
        denom: "mjnj",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1ptdxmj3xmmljzx02nr4auwfuelmj0cnkh8egs2",
      base: "cw20:terra1ptdxmj3xmmljzx02nr4auwfuelmj0cnkh8egs2",
      name: "Johnson & Johnson",
      display: "mjnj",
      symbol: "mJNJ",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mjnj.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mjnj.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1qsnj5gvq8rgs7yws8x5u02gwd5wvtu4tks0hjm",
        exponent: 0
      }, {
        denom: "mko",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1qsnj5gvq8rgs7yws8x5u02gwd5wvtu4tks0hjm",
      base: "cw20:terra1qsnj5gvq8rgs7yws8x5u02gwd5wvtu4tks0hjm",
      name: "Coca-Cola",
      display: "mko",
      symbol: "mKO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mko.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mko.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1227ppwxxj3jxz8cfgq00jgnxqcny7ryenvkwj6",
        exponent: 0
      }, {
        denom: "mmsft",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1227ppwxxj3jxz8cfgq00jgnxqcny7ryenvkwj6",
      base: "cw20:terra1227ppwxxj3jxz8cfgq00jgnxqcny7ryenvkwj6",
      name: "Microsoft Corporation",
      display: "mmsft",
      symbol: "mMSFT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mmsft.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mmsft.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1jsxngqasf2zynj5kyh0tgq9mj3zksa5gk35j4k",
        exponent: 0
      }, {
        denom: "mnflx",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1jsxngqasf2zynj5kyh0tgq9mj3zksa5gk35j4k",
      base: "cw20:terra1jsxngqasf2zynj5kyh0tgq9mj3zksa5gk35j4k",
      name: "Netflix, Inc.",
      display: "mnflx",
      symbol: "mNFLX",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mnflx.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mnflx.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1dj2cj02zak0nvwy3uj9r9dhhxhdwxnw6psse6p",
        exponent: 0
      }, {
        denom: "mnio",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1dj2cj02zak0nvwy3uj9r9dhhxhdwxnw6psse6p",
      base: "cw20:terra1dj2cj02zak0nvwy3uj9r9dhhxhdwxnw6psse6p",
      name: "NIO Inc.",
      display: "mnio",
      symbol: "mNIO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mnio.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mnio.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra17ana8hvzea0q7w367dm0dw48sxwql39qekpt7g",
        exponent: 0
      }, {
        denom: "mnke",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra17ana8hvzea0q7w367dm0dw48sxwql39qekpt7g",
      base: "cw20:terra17ana8hvzea0q7w367dm0dw48sxwql39qekpt7g",
      name: "NIKE, Inc.",
      display: "mnke",
      symbol: "mNKE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mnke.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mnke.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1drsjzvzej4h4qlehcfwclxg4w5l3h5tuvd3jd8",
        exponent: 0
      }, {
        denom: "mnvda",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1drsjzvzej4h4qlehcfwclxg4w5l3h5tuvd3jd8",
      base: "cw20:terra1drsjzvzej4h4qlehcfwclxg4w5l3h5tuvd3jd8",
      name: "NVIDIA Corporation",
      display: "mnvda",
      symbol: "mNVDA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mnvda.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mnvda.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1rh2907984nudl7vh56qjdtvv7947z4dujj92sx",
        exponent: 0
      }, {
        denom: "mpypl",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1rh2907984nudl7vh56qjdtvv7947z4dujj92sx",
      base: "cw20:terra1rh2907984nudl7vh56qjdtvv7947z4dujj92sx",
      name: "PayPal Holdings Inc",
      display: "mpypl",
      symbol: "mPYPL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mpypl.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mpypl.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1csk6tc7pdmpr782w527hwhez6gfv632tyf72cp",
        exponent: 0
      }, {
        denom: "mqqq",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1csk6tc7pdmpr782w527hwhez6gfv632tyf72cp",
      base: "cw20:terra1csk6tc7pdmpr782w527hwhez6gfv632tyf72cp",
      name: "Invesco QQQ Trust",
      display: "mqqq",
      symbol: "mQQQ",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mqqq.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mqqq.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1246zy658dfgtausf0c4a6ly8sc2e285q4kxqga",
        exponent: 0
      }, {
        denom: "msbux",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1246zy658dfgtausf0c4a6ly8sc2e285q4kxqga",
      base: "cw20:terra1246zy658dfgtausf0c4a6ly8sc2e285q4kxqga",
      name: "Starbucks Corporation",
      display: "msbux",
      symbol: "mSBUX",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/msbux.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/msbux.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1kscs6uhrqwy6rx5kuw5lwpuqvm3t6j2d6uf2lp",
        exponent: 0
      }, {
        denom: "mslv",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1kscs6uhrqwy6rx5kuw5lwpuqvm3t6j2d6uf2lp",
      base: "cw20:terra1kscs6uhrqwy6rx5kuw5lwpuqvm3t6j2d6uf2lp",
      name: "iShares Silver Trust",
      display: "mslv",
      symbol: "mSLV",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mslv.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mslv.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1aa00lpfexyycedfg5k2p60l9djcmw0ue5l8fhc",
        exponent: 0
      }, {
        denom: "mspy",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1aa00lpfexyycedfg5k2p60l9djcmw0ue5l8fhc",
      base: "cw20:terra1aa00lpfexyycedfg5k2p60l9djcmw0ue5l8fhc",
      name: "SPDR S&P 500",
      display: "mspy",
      symbol: "mSPY",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mspy.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mspy.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1u43zu5amjlsgty5j64445fr9yglhm53m576ugh",
        exponent: 0
      }, {
        denom: "msq",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1u43zu5amjlsgty5j64445fr9yglhm53m576ugh",
      base: "cw20:terra1u43zu5amjlsgty5j64445fr9yglhm53m576ugh",
      name: "Square, Inc.",
      display: "msq",
      symbol: "mSQ",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/msq.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/msq.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra14y5affaarufk3uscy2vr6pe6w6zqf2wpjzn5sh",
        exponent: 0
      }, {
        denom: "mtsla",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra14y5affaarufk3uscy2vr6pe6w6zqf2wpjzn5sh",
      base: "cw20:terra14y5affaarufk3uscy2vr6pe6w6zqf2wpjzn5sh",
      name: "Tesla, Inc.",
      display: "mtsla",
      symbol: "mTSLA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mtsla.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mtsla.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1cc3enj9qgchlrj34cnzhwuclc4vl2z3jl7tkqg",
        exponent: 0
      }, {
        denom: "mtwtr",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1cc3enj9qgchlrj34cnzhwuclc4vl2z3jl7tkqg",
      base: "cw20:terra1cc3enj9qgchlrj34cnzhwuclc4vl2z3jl7tkqg",
      name: "Twitter, Inc.",
      display: "mtwtr",
      symbol: "mTWTR",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mtwtr.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mtwtr.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1lvmx8fsagy70tv0fhmfzdw9h6s3sy4prz38ugf",
        exponent: 0
      }, {
        denom: "muso",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1lvmx8fsagy70tv0fhmfzdw9h6s3sy4prz38ugf",
      base: "cw20:terra1lvmx8fsagy70tv0fhmfzdw9h6s3sy4prz38ugf",
      name: "United States Oil Fund, LP",
      display: "muso",
      symbol: "mUSO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/muso.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/muso.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra19cmt6vzvhnnnfsmccaaxzy2uaj06zjktu6yzjx",
        exponent: 0
      }, {
        denom: "mvixy",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra19cmt6vzvhnnnfsmccaaxzy2uaj06zjktu6yzjx",
      base: "cw20:terra19cmt6vzvhnnnfsmccaaxzy2uaj06zjktu6yzjx",
      name: "ProShares VIX Short-Term Futures ETF",
      display: "mvixy",
      symbol: "mVIXY",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mvixy.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mvixy.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1zp3a6q6q4953cz376906g5qfmxnlg77hx3te45",
        exponent: 0
      }, {
        denom: "mvixy",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1zp3a6q6q4953cz376906g5qfmxnlg77hx3te45",
      base: "cw20:terra1zp3a6q6q4953cz376906g5qfmxnlg77hx3te45",
      name: "ProShares VIX Short-Term Futures ETF",
      display: "mvixy",
      symbol: "mVIXY",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mvixy.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mvixy.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1ez46kxtulsdv07538fh5ra5xj8l68mu8eg24vr",
        exponent: 0
      }, {
        denom: "lota",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1ez46kxtulsdv07538fh5ra5xj8l68mu8eg24vr",
      base: "cw20:terra1ez46kxtulsdv07538fh5ra5xj8l68mu8eg24vr",
      name: "loterra",
      display: "lota",
      symbol: "LOTA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/lota.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/lota.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra17jnhankdfl8vyzj6vejt7ag8uz0cjc9crkl2h7",
        exponent: 0
      }, {
        denom: "dph",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra17jnhankdfl8vyzj6vejt7ag8uz0cjc9crkl2h7",
      base: "cw20:terra17jnhankdfl8vyzj6vejt7ag8uz0cjc9crkl2h7",
      name: "Digipharm",
      display: "dph",
      symbol: "DPH",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/dph.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/dph.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1kcthelkax4j9x8d3ny6sdag0qmxxynl3qtcrpy",
        exponent: 0
      }, {
        denom: "mine",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1kcthelkax4j9x8d3ny6sdag0qmxxynl3qtcrpy",
      base: "cw20:terra1kcthelkax4j9x8d3ny6sdag0qmxxynl3qtcrpy",
      name: "Pylon MINE Token",
      display: "mine",
      symbol: "MINE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mine.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mine.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1zsaswh926ey8qa5x4vj93kzzlfnef0pstuca0y",
        exponent: 0
      }, {
        denom: "bpsidp-24m",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1zsaswh926ey8qa5x4vj93kzzlfnef0pstuca0y",
      base: "cw20:terra1zsaswh926ey8qa5x4vj93kzzlfnef0pstuca0y",
      name: "Pylon bDP Token for Gateway Psi 24m Pool",
      display: "bpsidp-24m",
      symbol: "bPsiDP-24m",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/bpsidp-24m.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/bpsidp-24m.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1s5eczhe0h0jutf46re52x5z4r03c8hupacxmdr",
        exponent: 0
      }, {
        denom: "spec",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1s5eczhe0h0jutf46re52x5z4r03c8hupacxmdr",
      base: "cw20:terra1s5eczhe0h0jutf46re52x5z4r03c8hupacxmdr",
      name: "Spectrum Token",
      display: "spec",
      symbol: "SPEC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/spec.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/spec.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1nef5jf6c7js9x6gkntlehgywvjlpytm7pcgkn4",
        exponent: 0
      }, {
        denom: "loop",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1nef5jf6c7js9x6gkntlehgywvjlpytm7pcgkn4",
      base: "cw20:terra1nef5jf6c7js9x6gkntlehgywvjlpytm7pcgkn4",
      name: "LOOP token",
      display: "loop",
      symbol: "LOOP",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/loop.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/loop.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1jx4lmmke2srcvpjeereetc9hgegp4g5j0p9r2q",
        exponent: 0
      }, {
        denom: "loopr",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1jx4lmmke2srcvpjeereetc9hgegp4g5j0p9r2q",
      base: "cw20:terra1jx4lmmke2srcvpjeereetc9hgegp4g5j0p9r2q",
      name: "LOOPR token",
      display: "loopr",
      symbol: "LOOPR",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/loopr.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/loopr.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra13xujxcrc9dqft4p9a8ls0w3j0xnzm6y2uvve8n",
        exponent: 0
      }, {
        denom: "stt",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra13xujxcrc9dqft4p9a8ls0w3j0xnzm6y2uvve8n",
      base: "cw20:terra13xujxcrc9dqft4p9a8ls0w3j0xnzm6y2uvve8n",
      name: "StarTerra Token",
      display: "stt",
      symbol: "STT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/stt.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/stt.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra19djkaepjjswucys4npd5ltaxgsntl7jf0xz7w6",
        exponent: 0
      }, {
        denom: "twd",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra19djkaepjjswucys4npd5ltaxgsntl7jf0xz7w6",
      base: "cw20:terra19djkaepjjswucys4npd5ltaxgsntl7jf0xz7w6",
      name: "TWD Token",
      display: "twd",
      symbol: "TWD",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/twd.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/twd.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1kvjscdgwuvwc6uzm4rqfjl6nlmuhj28tequlnc",
        exponent: 0
      }, {
        denom: "xtra",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1kvjscdgwuvwc6uzm4rqfjl6nlmuhj28tequlnc",
      base: "cw20:terra1kvjscdgwuvwc6uzm4rqfjl6nlmuhj28tequlnc",
      name: "xterra Token",
      display: "xtra",
      symbol: "XTRA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/xtra.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/xtra.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1vtr50tw0pgqpes34zqu60n554p9x4950wk8f63",
        exponent: 0
      }, {
        denom: "miaw",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1vtr50tw0pgqpes34zqu60n554p9x4950wk8f63",
      base: "cw20:terra1vtr50tw0pgqpes34zqu60n554p9x4950wk8f63",
      name: "MIAW Token",
      display: "miaw",
      symbol: "MIAW",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/miaw.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/miaw.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra12897djskt9rge8dtmm86w654g7kzckkd698608",
        exponent: 0
      }, {
        denom: "psi",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra12897djskt9rge8dtmm86w654g7kzckkd698608",
      base: "cw20:terra12897djskt9rge8dtmm86w654g7kzckkd698608",
      name: "Nexus Governance Token",
      display: "psi",
      symbol: "Psi",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/psi.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/psi.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra10f2mt82kjnkxqj2gepgwl637u2w4ue2z5nhz5j",
        exponent: 0
      }, {
        denom: "nluna",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra10f2mt82kjnkxqj2gepgwl637u2w4ue2z5nhz5j",
      base: "cw20:terra10f2mt82kjnkxqj2gepgwl637u2w4ue2z5nhz5j",
      name: "Nexus nLuna Token",
      display: "nluna",
      symbol: "nLuna",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/nluna.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/nluna.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra178v546c407pdnx5rer3hu8s2c0fc924k74ymnn",
        exponent: 0
      }, {
        denom: "neth",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra178v546c407pdnx5rer3hu8s2c0fc924k74ymnn",
      base: "cw20:terra178v546c407pdnx5rer3hu8s2c0fc924k74ymnn",
      name: "Nexus nETH Token",
      display: "neth",
      symbol: "nETH",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/neth.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/neth.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1u553zk43jd4rwzc53qrdrq4jc2p8rextyq09dj",
        exponent: 0
      }, {
        denom: "cnluna",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1u553zk43jd4rwzc53qrdrq4jc2p8rextyq09dj",
      base: "cw20:terra1u553zk43jd4rwzc53qrdrq4jc2p8rextyq09dj",
      name: "nLuna autocompounder share representation",
      display: "cnluna",
      symbol: "cnLuna",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cnluna.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cnluna.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1nagqpmyw55yjphea4rhntlfv87ugmeaj8ym756",
        exponent: 0
      }, {
        denom: "cneth",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1nagqpmyw55yjphea4rhntlfv87ugmeaj8ym756",
      base: "cw20:terra1nagqpmyw55yjphea4rhntlfv87ugmeaj8ym756",
      name: "nETH autocompounder share representation",
      display: "cneth",
      symbol: "cnETH",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cneth.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cneth.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra13k62n0285wj8ug0ngcgpf7dgnkzqeu279tz636",
        exponent: 0
      }, {
        denom: "navax",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra13k62n0285wj8ug0ngcgpf7dgnkzqeu279tz636",
      base: "cw20:terra13k62n0285wj8ug0ngcgpf7dgnkzqeu279tz636",
      name: "Nexus nAVAX Token",
      display: "navax",
      symbol: "nAVAX",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/navax.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/navax.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1jtdc6zpf95tvh9peuaxwp3v0yqszcnwl8j5ade",
        exponent: 0
      }, {
        denom: "natom",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1jtdc6zpf95tvh9peuaxwp3v0yqszcnwl8j5ade",
      base: "cw20:terra1jtdc6zpf95tvh9peuaxwp3v0yqszcnwl8j5ade",
      name: "Nexus nATOM Token",
      display: "natom",
      symbol: "nATOM",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/natom.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/natom.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1dy9kmlm4anr92e42mrkjwzyvfqwz66un00rwr5",
        exponent: 0
      }, {
        denom: "vkr",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1dy9kmlm4anr92e42mrkjwzyvfqwz66un00rwr5",
      base: "cw20:terra1dy9kmlm4anr92e42mrkjwzyvfqwz66un00rwr5",
      name: "VKR Token",
      display: "vkr",
      symbol: "VKR",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/vkr.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/vkr.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1mddcdx0ujx89f38gu7zspk2r2ffdl5enyz2u03",
        exponent: 0
      }, {
        denom: "orion",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1mddcdx0ujx89f38gu7zspk2r2ffdl5enyz2u03",
      base: "cw20:terra1mddcdx0ujx89f38gu7zspk2r2ffdl5enyz2u03",
      name: "Orion Money (Portal)",
      display: "orion",
      symbol: "ORION",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/orion.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/orion.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1r5506ckw5tfr3z52jwlek8vg9sn3yflrqrzfsc",
        exponent: 0
      }, {
        denom: "tland",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1r5506ckw5tfr3z52jwlek8vg9sn3yflrqrzfsc",
      base: "cw20:terra1r5506ckw5tfr3z52jwlek8vg9sn3yflrqrzfsc",
      name: "TerraLand Token",
      display: "tland",
      symbol: "TLAND",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tland.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tland.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1w0p5zre38ecdy3ez8efd5h9fvgum5s206xknrg",
        exponent: 0
      }, {
        denom: "vust",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1w0p5zre38ecdy3ez8efd5h9fvgum5s206xknrg",
      base: "cw20:terra1w0p5zre38ecdy3ez8efd5h9fvgum5s206xknrg",
      name: "Vault UST",
      display: "vust",
      symbol: "vUST",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/vust.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/vust.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra14tl83xcwqjy0ken9peu4pjjuu755lrry2uy25r",
        exponent: 0
      }, {
        denom: "eth",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra14tl83xcwqjy0ken9peu4pjjuu755lrry2uy25r",
      base: "cw20:terra14tl83xcwqjy0ken9peu4pjjuu755lrry2uy25r",
      name: "Ether (Portal)",
      display: "eth",
      symbol: "ETH",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/eth.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/eth.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1aa7upykmmqqc63l924l5qfap8mrmx5rfdm0v55",
        exponent: 0
      }, {
        denom: "wbtc",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1aa7upykmmqqc63l924l5qfap8mrmx5rfdm0v55",
      base: "cw20:terra1aa7upykmmqqc63l924l5qfap8mrmx5rfdm0v55",
      name: "Wrapped BTC (Portal)",
      display: "wbtc",
      symbol: "WBTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/wbtc.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/wbtc.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra190tqwgqx7s8qrknz6kckct7v607cu068gfujpk",
        exponent: 0
      }, {
        denom: "sol",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra190tqwgqx7s8qrknz6kckct7v607cu068gfujpk",
      base: "cw20:terra190tqwgqx7s8qrknz6kckct7v607cu068gfujpk",
      name: "SOL (Portal)",
      display: "sol",
      symbol: "SOL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sol.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sol.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1dfasranqm4uyaz72r960umxy0w8t6zewqlnkuq",
        exponent: 0
      }, {
        denom: "maticet",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1dfasranqm4uyaz72r960umxy0w8t6zewqlnkuq",
      base: "cw20:terra1dfasranqm4uyaz72r960umxy0w8t6zewqlnkuq",
      name: "MATIC (Portal from Ethereum)",
      display: "maticet",
      symbol: "MATICet",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/maticet.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/maticet.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1cetg5wruw2wsdjp7j46rj44xdel00z006e9yg8",
        exponent: 0
      }, {
        denom: "bnb",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1cetg5wruw2wsdjp7j46rj44xdel00z006e9yg8",
      base: "cw20:terra1cetg5wruw2wsdjp7j46rj44xdel00z006e9yg8",
      name: "Binance Coin (Portal)",
      display: "bnb",
      symbol: "BNB",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/bnb.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/bnb.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1xvqlpjl2dxyel9qrp6qvtrg04xe3jh9cyxc6av",
        exponent: 0
      }, {
        denom: "cake",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1xvqlpjl2dxyel9qrp6qvtrg04xe3jh9cyxc6av",
      base: "cw20:terra1xvqlpjl2dxyel9qrp6qvtrg04xe3jh9cyxc6av",
      name: "PancakeSwap Token (Portal)",
      display: "cake",
      symbol: "CAKE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cake.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cake.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra12dfv3f0e6m22z6cnhfn3nxk2en3z3zeqy6ctym",
        exponent: 0
      }, {
        denom: "link",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra12dfv3f0e6m22z6cnhfn3nxk2en3z3zeqy6ctym",
      base: "cw20:terra12dfv3f0e6m22z6cnhfn3nxk2en3z3zeqy6ctym",
      name: "Chainlink (Portal)",
      display: "link",
      symbol: "LINK",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/link.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/link.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1csvuzlf92nyemu6tv25h0l79etpe8hz3h5vn4a",
        exponent: 0
      }, {
        denom: "sushi",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1csvuzlf92nyemu6tv25h0l79etpe8hz3h5vn4a",
      base: "cw20:terra1csvuzlf92nyemu6tv25h0l79etpe8hz3h5vn4a",
      name: "SushiToken (Portal)",
      display: "sushi",
      symbol: "SUSHI",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sushi.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sushi.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1wyxkuy5jq545fn7xfn3enpvs5zg9f9dghf6gxf",
        exponent: 0
      }, {
        denom: "uni",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1wyxkuy5jq545fn7xfn3enpvs5zg9f9dghf6gxf",
      base: "cw20:terra1wyxkuy5jq545fn7xfn3enpvs5zg9f9dghf6gxf",
      name: "Uniswap (Portal)",
      display: "uni",
      symbol: "UNI",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/uni.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/uni.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1ce06wkrdm4vl6t0hvc0g86rsy27pu8yadg3dva",
        exponent: 0
      }, {
        denom: "usdtet",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1ce06wkrdm4vl6t0hvc0g86rsy27pu8yadg3dva",
      base: "cw20:terra1ce06wkrdm4vl6t0hvc0g86rsy27pu8yadg3dva",
      name: "Tether USD (Portal from Ethereum)",
      display: "usdtet",
      symbol: "USDTet",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/usdtet.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/usdtet.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1pepwcav40nvj3kh60qqgrk8k07ydmc00xyat06",
        exponent: 0
      }, {
        denom: "usdcet",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1pepwcav40nvj3kh60qqgrk8k07ydmc00xyat06",
      base: "cw20:terra1pepwcav40nvj3kh60qqgrk8k07ydmc00xyat06",
      name: "USD Coin (Portal from Ethereum)",
      display: "usdcet",
      symbol: "USDCet",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/usdcet.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/usdcet.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1xfsdgcemqwxp4hhnyk4rle6wr22sseq7j07dnn",
        exponent: 0
      }, {
        denom: "kuji",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1xfsdgcemqwxp4hhnyk4rle6wr22sseq7j07dnn",
      base: "cw20:terra1xfsdgcemqwxp4hhnyk4rle6wr22sseq7j07dnn",
      name: "Kujira Token",
      display: "kuji",
      symbol: "KUJI",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/kuji.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/kuji.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra188w26t95tf4dz77raftme8p75rggatxjxfeknw",
        exponent: 0
      }, {
        denom: "skuji",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra188w26t95tf4dz77raftme8p75rggatxjxfeknw",
      base: "cw20:terra188w26t95tf4dz77raftme8p75rggatxjxfeknw",
      name: "Staked KUJI",
      display: "skuji",
      symbol: "sKUJI",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/skuji.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/skuji.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra133chr09wu8sakfte5v7vd8qzq9vghtkv4tn0ur",
        exponent: 0
      }, {
        denom: "wsteth",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra133chr09wu8sakfte5v7vd8qzq9vghtkv4tn0ur",
      base: "cw20:terra133chr09wu8sakfte5v7vd8qzq9vghtkv4tn0ur",
      name: "Lido wstETH (Portal)",
      display: "wsteth",
      symbol: "wstETH",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/wsteth.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/wsteth.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1t9ul45l7m6jw6sxgvnp8e5hj8xzkjsg82g84ap",
        exponent: 0
      }, {
        denom: "wstsol",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1t9ul45l7m6jw6sxgvnp8e5hj8xzkjsg82g84ap",
      base: "cw20:terra1t9ul45l7m6jw6sxgvnp8e5hj8xzkjsg82g84ap",
      name: "Lido wstSOL (Portal)",
      display: "wstsol",
      symbol: "wstSOL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/wstsol.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/wstsol.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1c3xd5s2j3ejx2d94tvcjfkrdeu6rmz48ghzznj",
        exponent: 0
      }, {
        denom: "wsbsol",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1c3xd5s2j3ejx2d94tvcjfkrdeu6rmz48ghzznj",
      base: "cw20:terra1c3xd5s2j3ejx2d94tvcjfkrdeu6rmz48ghzznj",
      name: "Lido bonded SOL (Portal)",
      display: "wsbsol",
      symbol: "wsbSOL",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/wsbsol.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/wsbsol.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1jxypgnfa07j6w92wazzyskhreq2ey2a5crgt6z",
        exponent: 0
      }, {
        denom: "ldo",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1jxypgnfa07j6w92wazzyskhreq2ey2a5crgt6z",
      base: "cw20:terra1jxypgnfa07j6w92wazzyskhreq2ey2a5crgt6z",
      name: "Lido DAO (Portal)",
      display: "ldo",
      symbol: "LDO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/ldo.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/ldo.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1u5szg038ur9kzuular3cae8hq6q5rk5u27tuvz",
        exponent: 0
      }, {
        denom: "webeth",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1u5szg038ur9kzuular3cae8hq6q5rk5u27tuvz",
      base: "cw20:terra1u5szg038ur9kzuular3cae8hq6q5rk5u27tuvz",
      name: "Lido Bonded ETH (Wormhole)",
      display: "webeth",
      symbol: "webETH",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/webeth.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/webeth.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1yg3j2s986nyp5z7r2lvt0hx3r0lnd7kwvwwtsc",
        exponent: 0
      }, {
        denom: "stluna",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1yg3j2s986nyp5z7r2lvt0hx3r0lnd7kwvwwtsc",
      base: "cw20:terra1yg3j2s986nyp5z7r2lvt0hx3r0lnd7kwvwwtsc",
      name: "Lido staked Luna",
      display: "stluna",
      symbol: "stLuna",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/stluna.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/stluna.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra169edevav3pdrtjcx35j6pvzuv54aevewar4nlh",
        exponent: 0
      }, {
        denom: "xdefi",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra169edevav3pdrtjcx35j6pvzuv54aevewar4nlh",
      base: "cw20:terra169edevav3pdrtjcx35j6pvzuv54aevewar4nlh",
      name: "XDEFI (Portal)",
      display: "xdefi",
      symbol: "XDEFI"
    },
    {
      denom_units: [{
        denom: "cw20:terra193c42lfwmlkasvcw22l9qqzc5q2dx208tkd7wl",
        exponent: 0
      }, {
        denom: "btl",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra193c42lfwmlkasvcw22l9qqzc5q2dx208tkd7wl",
      base: "cw20:terra193c42lfwmlkasvcw22l9qqzc5q2dx208tkd7wl",
      name: "Bitlocus Token",
      display: "btl",
      symbol: "BTL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/btl.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/btl.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra17y9qkl8dfkeg4py7n0g5407emqnemc3yqk5rup",
        exponent: 0
      }, {
        denom: "lunax",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra17y9qkl8dfkeg4py7n0g5407emqnemc3yqk5rup",
      base: "cw20:terra17y9qkl8dfkeg4py7n0g5407emqnemc3yqk5rup",
      name: "LunaX Token",
      display: "lunax",
      symbol: "LunaX",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/lunax.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/lunax.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1m3tdguf59xq3pa2twk5fjte5g6szj5y9x5npy7",
        exponent: 0
      }, {
        denom: "luni",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1m3tdguf59xq3pa2twk5fjte5g6szj5y9x5npy7",
      base: "cw20:terra1m3tdguf59xq3pa2twk5fjte5g6szj5y9x5npy7",
      name: "LUNI",
      display: "luni",
      symbol: "LUNI",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/luni.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/luni.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra13awdgcx40tz5uygkgm79dytez3x87rpg4uhnvu",
        exponent: 0
      }, {
        denom: "ply",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra13awdgcx40tz5uygkgm79dytez3x87rpg4uhnvu",
      base: "cw20:terra13awdgcx40tz5uygkgm79dytez3x87rpg4uhnvu",
      name: "PlayNity Token",
      display: "ply",
      symbol: "PLY",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/ply.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/ply.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1u2k0nkenw0p25ljsr4ksh7rxm65y466vkdewwj",
        exponent: 0
      }, {
        denom: "tfloki",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1u2k0nkenw0p25ljsr4ksh7rxm65y466vkdewwj",
      base: "cw20:terra1u2k0nkenw0p25ljsr4ksh7rxm65y466vkdewwj",
      name: "TFLOKI",
      display: "tfloki",
      symbol: "TFLOKI",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tfloki.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tfloki.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1a8k3jyv3wf6k3zngza5h6srrxcckdf7zv90p6u",
        exponent: 0
      }, {
        denom: "tftic",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1a8k3jyv3wf6k3zngza5h6srrxcckdf7zv90p6u",
      base: "cw20:terra1a8k3jyv3wf6k3zngza5h6srrxcckdf7zv90p6u",
      name: "TFLOKI Genesis Ticket",
      display: "tftic",
      symbol: "TFTIC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tftic.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tftic.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1xt9fgu7965kgvunnjts9zkprd8986kcc444q86",
        exponent: 0
      }, {
        denom: "tfticii",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1xt9fgu7965kgvunnjts9zkprd8986kcc444q86",
      base: "cw20:terra1xt9fgu7965kgvunnjts9zkprd8986kcc444q86",
      name: "TFLOKI New World Ticket",
      display: "tfticii",
      symbol: "TFTICII",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tfticii.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tfticii.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1vte2xv7dr8sfnrnwdf9arcyprqgr0hty5ads28",
        exponent: 0
      }, {
        denom: "tfticiii",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1vte2xv7dr8sfnrnwdf9arcyprqgr0hty5ads28",
      base: "cw20:terra1vte2xv7dr8sfnrnwdf9arcyprqgr0hty5ads28",
      name: "TFLOKI Aviator Ticket",
      display: "tfticiii",
      symbol: "TFTICIII",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tfticiii.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tfticiii.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1hmxxq0y8h79f3228vs0czc4uz5jdgjt0appp26",
        exponent: 0
      }, {
        denom: "moon",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1hmxxq0y8h79f3228vs0czc4uz5jdgjt0appp26",
      base: "cw20:terra1hmxxq0y8h79f3228vs0czc4uz5jdgjt0appp26",
      name: "Moon Token",
      display: "moon",
      symbol: "MOON",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/moon.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/moon.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1xj49zyqrwpv5k928jwfpfy2ha668nwdgkwlrg3",
        exponent: 0
      }, {
        denom: "astro",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1xj49zyqrwpv5k928jwfpfy2ha668nwdgkwlrg3",
      base: "cw20:terra1xj49zyqrwpv5k928jwfpfy2ha668nwdgkwlrg3",
      name: "Astroport Token",
      display: "astro",
      symbol: "ASTRO",
      traces: [{
        type: "additional-mintage",
        counterparty: {
          chain_name: "terra2",
          base_denom: "cw20:terra1nsuqsk6kh58ulczatwev87ttq2z6r3pusulg9r24mfj2fvtzd4uq3exn26"
        },
        provider: "Astroport"
      }],
      images: [{
        image_sync: {
          chain_name: "terra2",
          base_denom: "cw20:terra1nsuqsk6kh58ulczatwev87ttq2z6r3pusulg9r24mfj2fvtzd4uq3exn26"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/astro-cw20.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/astro-cw20.svg"
      }
    },
    {
      denom_units: [{
        denom: "cw20:terra14lpnyzc9z4g3ugr4lhm8s4nle0tq8vcltkhzh7",
        exponent: 0
      }, {
        denom: "xastro.cw20",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra14lpnyzc9z4g3ugr4lhm8s4nle0tq8vcltkhzh7",
      base: "cw20:terra14lpnyzc9z4g3ugr4lhm8s4nle0tq8vcltkhzh7",
      name: "Staked Astroport Token",
      display: "xastro.cw20",
      symbol: "xASTRO.cw20",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/xastro-cw20.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/xastro-cw20.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1w8kvd6cqpsthupsk4l0clwnmek4l3zr7c84kwq",
        exponent: 0
      }, {
        denom: "halo",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1w8kvd6cqpsthupsk4l0clwnmek4l3zr7c84kwq",
      base: "cw20:terra1w8kvd6cqpsthupsk4l0clwnmek4l3zr7c84kwq",
      name: "Angel Protocol Token",
      display: "halo",
      symbol: "HALO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/halo.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/halo.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1kdfsdm3c4reun9j3m4mk3nmyw4a4ns7mj24q3j",
        exponent: 0
      }, {
        denom: "pug",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1kdfsdm3c4reun9j3m4mk3nmyw4a4ns7mj24q3j",
      base: "cw20:terra1kdfsdm3c4reun9j3m4mk3nmyw4a4ns7mj24q3j",
      name: "AstroPug Token",
      display: "pug",
      symbol: "PUG",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/pug.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/pug.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1hnezwjqlhzawcrfysczcxs6xqxu2jawn729kkf",
        exponent: 0
      }, {
        denom: "orne",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1hnezwjqlhzawcrfysczcxs6xqxu2jawn729kkf",
      base: "cw20:terra1hnezwjqlhzawcrfysczcxs6xqxu2jawn729kkf",
      name: "Orne Token",
      display: "orne",
      symbol: "ORNE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/orne.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/orne.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra14vz4v8adanzph278xyeggll4tfww7teh0xtw2y",
        exponent: 0
      }, {
        denom: "tns",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra14vz4v8adanzph278xyeggll4tfww7teh0xtw2y",
      base: "cw20:terra14vz4v8adanzph278xyeggll4tfww7teh0xtw2y",
      name: "Terra Name Service",
      display: "tns",
      symbol: "TNS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tns.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tns.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1td743l5k5cmfy7tqq202g7vkmdvq35q48u2jfm",
        exponent: 0
      }, {
        denom: "xrune",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1td743l5k5cmfy7tqq202g7vkmdvq35q48u2jfm",
      base: "cw20:terra1td743l5k5cmfy7tqq202g7vkmdvq35q48u2jfm",
      name: "Thorstarter",
      display: "xrune",
      symbol: "XRUNE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/xrune.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/xrune.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1366wmr8t8rrkh6mag8fagqxntmf2qe4kyte784",
        exponent: 0
      }, {
        denom: "alot",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1366wmr8t8rrkh6mag8fagqxntmf2qe4kyte784",
      base: "cw20:terra1366wmr8t8rrkh6mag8fagqxntmf2qe4kyte784",
      name: "Alpha Pack Token",
      display: "alot",
      symbol: "aLOT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/alot.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/alot.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1z09gnzufuflz6ckd9k0u456l9dnpgsynu0yyhe",
        exponent: 0
      }, {
        denom: "sity",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1z09gnzufuflz6ckd9k0u456l9dnpgsynu0yyhe",
      base: "cw20:terra1z09gnzufuflz6ckd9k0u456l9dnpgsynu0yyhe",
      name: "CurioSITY play to earn token",
      display: "sity",
      symbol: "SITY",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sity.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sity.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra13zx49nk8wjavedjzu8xkk95r3t0ta43c9ptul7",
        exponent: 0
      }, {
        denom: "glow",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra13zx49nk8wjavedjzu8xkk95r3t0ta43c9ptul7",
      base: "cw20:terra13zx49nk8wjavedjzu8xkk95r3t0ta43c9ptul7",
      name: "Glow Token",
      display: "glow",
      symbol: "GLOW",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/glow.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/glow.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra100yeqvww74h4yaejj6h733thgcafdaukjtw397",
        exponent: 0
      }, {
        denom: "apollo",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra100yeqvww74h4yaejj6h733thgcafdaukjtw397",
      base: "cw20:terra100yeqvww74h4yaejj6h733thgcafdaukjtw397",
      name: "Apollo DAO Token",
      display: "apollo",
      symbol: "APOLLO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/apollo.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/apollo.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1a7ye2splpfzyenu0yrdu8t83uzgusx2malkc7u",
        exponent: 0
      }, {
        denom: "abr",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1a7ye2splpfzyenu0yrdu8t83uzgusx2malkc7u",
      base: "cw20:terra1a7ye2splpfzyenu0yrdu8t83uzgusx2malkc7u",
      name: "Allbridge",
      display: "abr",
      symbol: "ABR",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/abr.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/abr.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1y3d5qexmyac0fg53pfglh2pjk0664ymfvcq9mc",
        exponent: 0
      }, {
        denom: "whgtps",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1y3d5qexmyac0fg53pfglh2pjk0664ymfvcq9mc",
      base: "cw20:terra1y3d5qexmyac0fg53pfglh2pjk0664ymfvcq9mc",
      name: "Global Transaction Payment Solu",
      display: "whgtps",
      symbol: "whGTPS"
    },
    {
      denom_units: [{
        denom: "cw20:terra1dh9478k2qvqhqeajhn75a2a7dsnf74y5ukregw",
        exponent: 0
      }, {
        denom: "prism",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1dh9478k2qvqhqeajhn75a2a7dsnf74y5ukregw",
      base: "cw20:terra1dh9478k2qvqhqeajhn75a2a7dsnf74y5ukregw",
      name: "Prism Protocol Token",
      display: "prism",
      symbol: "PRISM",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/prism.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/prism.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1l0y8yg0s86x299nqw0p6fhh7ngex3r4phtjeuq",
        exponent: 0
      }, {
        denom: "sdollar",
        exponent: 2
      }],
      type_asset: "cw20",
      address: "terra1l0y8yg0s86x299nqw0p6fhh7ngex3r4phtjeuq",
      base: "cw20:terra1l0y8yg0s86x299nqw0p6fhh7ngex3r4phtjeuq",
      name: "Space Dollar",
      display: "sdollar",
      symbol: "SDOLLAR"
    },
    {
      denom_units: [{
        denom: "cw20:terra1ku5e0dhutxhuxudsmsn5647wwcz6ndr3rsh90k",
        exponent: 0
      }, {
        denom: "whsail",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1ku5e0dhutxhuxudsmsn5647wwcz6ndr3rsh90k",
      base: "cw20:terra1ku5e0dhutxhuxudsmsn5647wwcz6ndr3rsh90k",
      name: "SAIL",
      display: "whsail",
      symbol: "whSAIL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/whsail.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/whsail.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1rl0cpwgtwl4utnaynugevdje37fnmsea7rv4uu",
        exponent: 0
      }, {
        denom: "whgsail",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1rl0cpwgtwl4utnaynugevdje37fnmsea7rv4uu",
      base: "cw20:terra1rl0cpwgtwl4utnaynugevdje37fnmsea7rv4uu",
      name: "SolanaSail Governance Token V2",
      display: "whgsail",
      symbol: "whgSAIL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/whgsail.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/whgsail.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1042wzrwg2uk6jqxjm34ysqquyr9esdgm5qyswz",
        exponent: 0
      }, {
        denom: "xprism",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1042wzrwg2uk6jqxjm34ysqquyr9esdgm5qyswz",
      base: "cw20:terra1042wzrwg2uk6jqxjm34ysqquyr9esdgm5qyswz",
      name: "Prism Governance Token",
      display: "xprism",
      symbol: "xPRISM",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/xprism.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/xprism.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra13fs83g5atgjwuh7c5ydzh6n7gecel6xyhhy2t5",
        exponent: 0
      }, {
        denom: "cde",
        exponent: 9
      }],
      type_asset: "cw20",
      address: "terra13fs83g5atgjwuh7c5ydzh6n7gecel6xyhhy2t5",
      base: "cw20:terra13fs83g5atgjwuh7c5ydzh6n7gecel6xyhhy2t5",
      name: "CAPITRADE TOKEN",
      display: "cde",
      symbol: "CDE"
    },
    {
      denom_units: [{
        denom: "cw20:terra1rl20t79ffsrqfa29rke48tj05gj9jxumm92vg8",
        exponent: 0
      }, {
        denom: "ctx",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1rl20t79ffsrqfa29rke48tj05gj9jxumm92vg8",
      base: "cw20:terra1rl20t79ffsrqfa29rke48tj05gj9jxumm92vg8",
      name: "C2X Token",
      display: "ctx",
      symbol: "CTX",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/ctx.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/ctx.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra13zaagrrrxj47qjwczsczujlvnnntde7fdt0mau",
        exponent: 0
      }, {
        denom: "cluna",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra13zaagrrrxj47qjwczsczujlvnnntde7fdt0mau",
      base: "cw20:terra13zaagrrrxj47qjwczsczujlvnnntde7fdt0mau",
      name: "Prism cLuna Token",
      display: "cluna",
      symbol: "cLuna",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cluna.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cluna.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1tlgelulz9pdkhls6uglfn5lmxarx7f2gxtdzh2",
        exponent: 0
      }, {
        denom: "pluna",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1tlgelulz9pdkhls6uglfn5lmxarx7f2gxtdzh2",
      base: "cw20:terra1tlgelulz9pdkhls6uglfn5lmxarx7f2gxtdzh2",
      name: "Prism pLuna Token",
      display: "pluna",
      symbol: "pLuna",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/pluna.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/pluna.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra17wkadg0tah554r35x6wvff0y5s7ve8npcjfuhz",
        exponent: 0
      }, {
        denom: "yluna",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra17wkadg0tah554r35x6wvff0y5s7ve8npcjfuhz",
      base: "cw20:terra17wkadg0tah554r35x6wvff0y5s7ve8npcjfuhz",
      name: "Prism yLuna Token",
      display: "yluna",
      symbol: "yLuna",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/yluna.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/yluna.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1cl7whtrqmz5ldr553q69qahck8xvk80fm33qjx",
        exponent: 0
      }, {
        denom: "atlo",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1cl7whtrqmz5ldr553q69qahck8xvk80fm33qjx",
      base: "cw20:terra1cl7whtrqmz5ldr553q69qahck8xvk80fm33qjx",
      name: "Atlo Token",
      display: "atlo",
      symbol: "ATLO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/atlo.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/atlo.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1vchw83qt25j89zqwdpmdzj722sqxthnckqzxxp",
        exponent: 0
      }, {
        denom: "local",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1vchw83qt25j89zqwdpmdzj722sqxthnckqzxxp",
      base: "cw20:terra1vchw83qt25j89zqwdpmdzj722sqxthnckqzxxp",
      name: "LOCAL Token",
      display: "local",
      symbol: "LOCAL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/local.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/local.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra15k5r9r8dl8r7xlr29pry8a9w7sghehcnv5mgp6",
        exponent: 0
      }, {
        denom: "luv",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra15k5r9r8dl8r7xlr29pry8a9w7sghehcnv5mgp6",
      base: "cw20:terra15k5r9r8dl8r7xlr29pry8a9w7sghehcnv5mgp6",
      name: "Lunaverse",
      display: "luv",
      symbol: "LUV",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/luv.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/luv.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1f62tqesptvmhtzr8sudru00gsdtdz24srgm7wp",
        exponent: 0
      }, {
        denom: "robo",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1f62tqesptvmhtzr8sudru00gsdtdz24srgm7wp",
      base: "cw20:terra1f62tqesptvmhtzr8sudru00gsdtdz24srgm7wp",
      name: "RoboHero",
      display: "robo",
      symbol: "ROBO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/robo.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/robo.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1vwz7t30q76s7xx6qgtxdqnu6vpr3ak3vw62ygk",
        exponent: 0
      }, {
        denom: "luart",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1vwz7t30q76s7xx6qgtxdqnu6vpr3ak3vw62ygk",
      base: "cw20:terra1vwz7t30q76s7xx6qgtxdqnu6vpr3ak3vw62ygk",
      name: "Luart Token",
      display: "luart",
      symbol: "LUART",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/luart.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/luart.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra12hgwnpupflfpuual532wgrxu2gjp0tcagzgx4n",
        exponent: 0
      }, {
        denom: "mars",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra12hgwnpupflfpuual532wgrxu2gjp0tcagzgx4n",
      base: "cw20:terra12hgwnpupflfpuual532wgrxu2gjp0tcagzgx4n",
      name: "Mars Token",
      display: "mars",
      symbol: "MARS",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mars.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mars.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1a04v570f9cxp49mk06vjsm8axsswndpwwt67k4",
        exponent: 0
      }, {
        denom: "xmars",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1a04v570f9cxp49mk06vjsm8axsswndpwwt67k4",
      base: "cw20:terra1a04v570f9cxp49mk06vjsm8axsswndpwwt67k4",
      name: "xMars Token",
      display: "xmars",
      symbol: "XMARS",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/xmars.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/xmars.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1vpws4hmpmpsqwnz3gljn8zj42rv7rkpc5atgt4",
        exponent: 0
      }, {
        denom: "dfiat",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1vpws4hmpmpsqwnz3gljn8zj42rv7rkpc5atgt4",
      base: "cw20:terra1vpws4hmpmpsqwnz3gljn8zj42rv7rkpc5atgt4",
      name: "DeFiato",
      display: "dfiat",
      symbol: "DFIAT"
    },
    {
      denom_units: [{
        denom: "cw20:terra1hppnw4jppmrzzga4yvd8s87y3dwkhe27xwwl5d",
        exponent: 0
      }, {
        denom: "ceres",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1hppnw4jppmrzzga4yvd8s87y3dwkhe27xwwl5d",
      base: "cw20:terra1hppnw4jppmrzzga4yvd8s87y3dwkhe27xwwl5d",
      name: "Ceres Governance Token",
      display: "ceres",
      symbol: "CERES",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/ceres.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/ceres.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1z3e2e4jpk4n0xzzwlkgcfvc95pc5ldq0xcny58",
        exponent: 0
      }, {
        denom: "wasavax",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1z3e2e4jpk4n0xzzwlkgcfvc95pc5ldq0xcny58",
      base: "cw20:terra1z3e2e4jpk4n0xzzwlkgcfvc95pc5ldq0xcny58",
      name: "BENQI Staked AVAX (Portal)",
      display: "wasavax",
      symbol: "wasAVAX",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/wasavax.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/wasavax.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1zd6let0zg0xjn2sestagxv4ax24a4ml6j40qdr",
        exponent: 0
      }, {
        denom: "mint",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1zd6let0zg0xjn2sestagxv4ax24a4ml6j40qdr",
      base: "cw20:terra1zd6let0zg0xjn2sestagxv4ax24a4ml6j40qdr",
      name: "MintDAO",
      display: "mint",
      symbol: "MINT",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mint.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mint.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1ustvnmngueq0p4jd7gfnutgvdc6ujpsjhsjd02",
        exponent: 0
      }, {
        denom: "sd",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1ustvnmngueq0p4jd7gfnutgvdc6ujpsjhsjd02",
      base: "cw20:terra1ustvnmngueq0p4jd7gfnutgvdc6ujpsjhsjd02",
      name: "Stader SD (Portal)",
      display: "sd",
      symbol: "SD",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sd.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sd.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1ln2z938phz0nc2wepxpzfkwp6ezn9yrz9zv9ep",
        exponent: 0
      }, {
        denom: "xsd",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1ln2z938phz0nc2wepxpzfkwp6ezn9yrz9zv9ep",
      base: "cw20:terra1ln2z938phz0nc2wepxpzfkwp6ezn9yrz9zv9ep",
      name: "Stader xSD",
      display: "xsd",
      symbol: "xSD",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/xsd.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/xsd.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1uux6gwd6pzr0gfzrru5kne55cxex9d0700c72r",
        exponent: 0
      }, {
        denom: "paxg",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1uux6gwd6pzr0gfzrru5kne55cxex9d0700c72r",
      base: "cw20:terra1uux6gwd6pzr0gfzrru5kne55cxex9d0700c72r",
      name: "Paxos Gold (Portal)",
      display: "paxg",
      symbol: "PAXG",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/paxg.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/paxg.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1efjugpjc50d8sha7lr8s48cr7wmsthz94eevcl",
        exponent: 0
      }, {
        denom: "whdao",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1efjugpjc50d8sha7lr8s48cr7wmsthz94eevcl",
      base: "cw20:terra1efjugpjc50d8sha7lr8s48cr7wmsthz94eevcl",
      name: "DAO Maker",
      display: "whdao",
      symbol: "whDAO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/whdao.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/whdao.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1su6g4t4vwx7y0uh3ksancyaurj4l6w9pfs40qt",
        exponent: 0
      }, {
        denom: "link",
        exponent: 18
      }],
      type_asset: "cw20",
      address: "terra1su6g4t4vwx7y0uh3ksancyaurj4l6w9pfs40qt",
      base: "cw20:terra1su6g4t4vwx7y0uh3ksancyaurj4l6w9pfs40qt",
      name: "ChainLink Token",
      display: "link",
      symbol: "LINK",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/link.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/link.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra14v9wrjs55qsn9lkvylsqela3w2ytwxzkycqzcr",
        exponent: 0
      }, {
        denom: "sayve",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra14v9wrjs55qsn9lkvylsqela3w2ytwxzkycqzcr",
      base: "cw20:terra14v9wrjs55qsn9lkvylsqela3w2ytwxzkycqzcr",
      name: "Sayve Token",
      display: "sayve",
      symbol: "SAYVE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sayve.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sayve.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1z55rhw0ut70jxdmpvge98mvj0rkwcz74q77z0u",
        exponent: 0
      }, {
        denom: "guides",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1z55rhw0ut70jxdmpvge98mvj0rkwcz74q77z0u",
      base: "cw20:terra1z55rhw0ut70jxdmpvge98mvj0rkwcz74q77z0u",
      name: "Guides Token",
      display: "guides",
      symbol: "GUIDES"
    },
    {
      denom_units: [{
        denom: "cw20:terra1mt2ytlrxhvd5c4d4fshxxs3zcus3fkdmuv4mk2",
        exponent: 0
      }, {
        denom: "bro",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1mt2ytlrxhvd5c4d4fshxxs3zcus3fkdmuv4mk2",
      base: "cw20:terra1mt2ytlrxhvd5c4d4fshxxs3zcus3fkdmuv4mk2",
      name: "BRO token",
      display: "bro",
      symbol: "BRO",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/bro.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/bro.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1qryq5wreecx2wd3cdtzz94syr4z0a92l60asds",
        exponent: 0
      }, {
        denom: "bbro",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1qryq5wreecx2wd3cdtzz94syr4z0a92l60asds",
      base: "cw20:terra1qryq5wreecx2wd3cdtzz94syr4z0a92l60asds",
      name: "bBRO token",
      display: "bbro",
      symbol: "bBRO",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/bbro.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/bbro.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra15zvyhmv6gwddht7kt4q6w5nasn4tcpgzcdfmgr",
        exponent: 0
      }, {
        denom: "gtps",
        exponent: 18
      }],
      type_asset: "cw20",
      address: "terra15zvyhmv6gwddht7kt4q6w5nasn4tcpgzcdfmgr",
      base: "cw20:terra15zvyhmv6gwddht7kt4q6w5nasn4tcpgzcdfmgr",
      name: "Global Transaction Payment Solut",
      display: "gtps",
      symbol: "GTPS"
    },
    {
      denom_units: [{
        denom: "cw20:terra15pkdjxv2ewjzn9x665y26pfz2h6ymak4d4e8se",
        exponent: 0
      }, {
        denom: "gfi",
        exponent: 18
      }],
      type_asset: "cw20",
      address: "terra15pkdjxv2ewjzn9x665y26pfz2h6ymak4d4e8se",
      base: "cw20:terra15pkdjxv2ewjzn9x665y26pfz2h6ymak4d4e8se",
      name: "Gtps.Finance",
      display: "gfi",
      symbol: "GFI"
    },
    {
      denom_units: [{
        denom: "cw20:terra1fyjsxx73jrufw8ufgtuswa773dvdkny92k70wa",
        exponent: 0
      }, {
        denom: "ulc",
        exponent: 18
      }],
      type_asset: "cw20",
      address: "terra1fyjsxx73jrufw8ufgtuswa773dvdkny92k70wa",
      base: "cw20:terra1fyjsxx73jrufw8ufgtuswa773dvdkny92k70wa",
      name: "Ultimatalioniscoin",
      display: "ulc",
      symbol: "ULC"
    },
    {
      denom_units: [{
        denom: "cw20:terra1689ys6p6gfu0q6xrjqkzfn80sdyhurjqn0jfdl",
        exponent: 0
      }, {
        denom: "sst",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1689ys6p6gfu0q6xrjqkzfn80sdyhurjqn0jfdl",
      base: "cw20:terra1689ys6p6gfu0q6xrjqkzfn80sdyhurjqn0jfdl",
      name: "Sooah Studio Token",
      display: "sst",
      symbol: "SST",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sst.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sst.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1rg8f993m9834afwazersesgx7jjxv4p87q9wvc",
        exponent: 0
      }, {
        denom: "atlas",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1rg8f993m9834afwazersesgx7jjxv4p87q9wvc",
      base: "cw20:terra1rg8f993m9834afwazersesgx7jjxv4p87q9wvc",
      name: "Star Atlas (Portal)",
      display: "atlas",
      symbol: "ATLAS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/atlas.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/atlas.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1nc6flp57m5hsr6y5y8aexzszy43ksr0drdr8rp",
        exponent: 0
      }, {
        denom: "audio",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1nc6flp57m5hsr6y5y8aexzszy43ksr0drdr8rp",
      base: "cw20:terra1nc6flp57m5hsr6y5y8aexzszy43ksr0drdr8rp",
      name: "Audius (Portal)",
      display: "audio",
      symbol: "AUDIO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/audio.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/audio.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1hj8de24c3yqvcsv9r8chr03fzwsak3hgd8gv3m",
        exponent: 0
      }, {
        denom: "avax",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1hj8de24c3yqvcsv9r8chr03fzwsak3hgd8gv3m",
      base: "cw20:terra1hj8de24c3yqvcsv9r8chr03fzwsak3hgd8gv3m",
      name: "AVAX (Portal)",
      display: "avax",
      symbol: "AVAX",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/avax.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/avax.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1apxgj5agkkfdm2tprwvykug0qtahxvfmugnhx2",
        exponent: 0
      }, {
        denom: "bat",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1apxgj5agkkfdm2tprwvykug0qtahxvfmugnhx2",
      base: "cw20:terra1apxgj5agkkfdm2tprwvykug0qtahxvfmugnhx2",
      name: "Basic Attention Token (Portal)",
      display: "bat",
      symbol: "BAT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/bat.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/bat.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1skjr69exm6v8zellgjpaa2emhwutrk5a6dz7dd",
        exponent: 0
      }, {
        denom: "busdbs",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1skjr69exm6v8zellgjpaa2emhwutrk5a6dz7dd",
      base: "cw20:terra1skjr69exm6v8zellgjpaa2emhwutrk5a6dz7dd",
      name: "Binance USD (Portal from BSC)",
      display: "busdbs",
      symbol: "BUSDbs",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/busdbs.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/busdbs.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1zmclyfepfmqvfqflu8r3lv6f75trmg05z7xq95",
        exponent: 0
      }, {
        denom: "dai",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1zmclyfepfmqvfqflu8r3lv6f75trmg05z7xq95",
      base: "cw20:terra1zmclyfepfmqvfqflu8r3lv6f75trmg05z7xq95",
      name: "DAI (Portal)",
      display: "dai",
      symbol: "DAI",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/dai.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/dai.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1dtqlfecglk47yplfrtwjzyagkgcqqngd5lgjp8",
        exponent: 0
      }, {
        denom: "maticpo",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1dtqlfecglk47yplfrtwjzyagkgcqqngd5lgjp8",
      base: "cw20:terra1dtqlfecglk47yplfrtwjzyagkgcqqngd5lgjp8",
      name: "MATIC (Portal from Polygon)",
      display: "maticpo",
      symbol: "MATICpo",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/maticpo.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/maticpo.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra15a9dr3a2a2lj5fclrw35xxg9yuxg0d908wpf2y",
        exponent: 0
      }, {
        denom: "mimet",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra15a9dr3a2a2lj5fclrw35xxg9yuxg0d908wpf2y",
      base: "cw20:terra15a9dr3a2a2lj5fclrw35xxg9yuxg0d908wpf2y",
      name: "Magic Internet Money",
      display: "mimet",
      symbol: "MIMet",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mimet.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mimet.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1ht5sepn28z999jx33sdduuxm9acthad507jg9q",
        exponent: 0
      }, {
        denom: "ray",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1ht5sepn28z999jx33sdduuxm9acthad507jg9q",
      base: "cw20:terra1ht5sepn28z999jx33sdduuxm9acthad507jg9q",
      name: "Raydium (Portal)",
      display: "ray",
      symbol: "RAY",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/ray.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/ray.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra17h82zsq6q8x5tsgm5ugcx4gytw3axguvzt4pkc",
        exponent: 0
      }, {
        denom: "sbr",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra17h82zsq6q8x5tsgm5ugcx4gytw3axguvzt4pkc",
      base: "cw20:terra17h82zsq6q8x5tsgm5ugcx4gytw3axguvzt4pkc",
      name: "Saber (Portal)",
      display: "sbr",
      symbol: "SBR",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sbr.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sbr.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1huku2lecfjhq9d00k5a8dh73gw7dwe6vvuf2dd",
        exponent: 0
      }, {
        denom: "shib",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1huku2lecfjhq9d00k5a8dh73gw7dwe6vvuf2dd",
      base: "cw20:terra1huku2lecfjhq9d00k5a8dh73gw7dwe6vvuf2dd",
      name: "Shiba Inu (Portal)",
      display: "shib",
      symbol: "SHIB",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/shib.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/shib.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1dkam9wd5yvaswv4yq3n2aqd4wm5j8n82qc0c7c",
        exponent: 0
      }, {
        denom: "srmso",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1dkam9wd5yvaswv4yq3n2aqd4wm5j8n82qc0c7c",
      base: "cw20:terra1dkam9wd5yvaswv4yq3n2aqd4wm5j8n82qc0c7c",
      name: "Serum (Portal from Solana)",
      display: "srmso",
      symbol: "SRMso",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/srmso.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/srmso.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1pvel56a2hs93yd429pzv9zp5aptcjg5ulhkz7w",
        exponent: 0
      }, {
        denom: "usdcav",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1pvel56a2hs93yd429pzv9zp5aptcjg5ulhkz7w",
      base: "cw20:terra1pvel56a2hs93yd429pzv9zp5aptcjg5ulhkz7w",
      name: "USD Coin (Portal from Avalanche)",
      display: "usdcav",
      symbol: "USDCav",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/usdcav.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/usdcav.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1yljlrxvkar0c6ujpvf8g57m5rpcwl7r032zyvu",
        exponent: 0
      }, {
        denom: "usdcbs",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1yljlrxvkar0c6ujpvf8g57m5rpcwl7r032zyvu",
      base: "cw20:terra1yljlrxvkar0c6ujpvf8g57m5rpcwl7r032zyvu",
      name: "USD Coin (Portal from BSC)",
      display: "usdcbs",
      symbol: "USDCbs",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/usdcbs.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/usdcbs.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1kkyyh7vganlpkj0gkc2rfmhy858ma4rtwywe3x",
        exponent: 0
      }, {
        denom: "usdcpo",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1kkyyh7vganlpkj0gkc2rfmhy858ma4rtwywe3x",
      base: "cw20:terra1kkyyh7vganlpkj0gkc2rfmhy858ma4rtwywe3x",
      name: "USD Coin (Portal from Polygon)",
      display: "usdcpo",
      symbol: "USDCpo",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/usdcpo.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/usdcpo.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1e6mq63y64zcxz8xyu5van4tgkhemj3r86yvgu4",
        exponent: 0
      }, {
        denom: "usdcso",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1e6mq63y64zcxz8xyu5van4tgkhemj3r86yvgu4",
      base: "cw20:terra1e6mq63y64zcxz8xyu5van4tgkhemj3r86yvgu4",
      name: "USD Coin (Portal from Solana)",
      display: "usdcso",
      symbol: "USDCso",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/usdcso.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/usdcso.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1eqvq3thjhye7anv6f6mhxpjhyvww8zjvqcdgjx",
        exponent: 0
      }, {
        denom: "usdtav",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1eqvq3thjhye7anv6f6mhxpjhyvww8zjvqcdgjx",
      base: "cw20:terra1eqvq3thjhye7anv6f6mhxpjhyvww8zjvqcdgjx",
      name: "Tether USD (Portal from Avalanche)",
      display: "usdtav",
      symbol: "USDTav",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/usdtav.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/usdtav.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1vlqeghv5mt5udh96kt5zxlh2wkh8q4kewkr0dd",
        exponent: 0
      }, {
        denom: "usdtbs",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1vlqeghv5mt5udh96kt5zxlh2wkh8q4kewkr0dd",
      base: "cw20:terra1vlqeghv5mt5udh96kt5zxlh2wkh8q4kewkr0dd",
      name: "Tether USD (Portal from BSC)",
      display: "usdtbs",
      symbol: "USDTbs",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/usdtbs.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/usdtbs.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1hd9n65snaluvf7en0p4hqzse9eqecejz2k8rl5",
        exponent: 0
      }, {
        denom: "usdtso",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1hd9n65snaluvf7en0p4hqzse9eqecejz2k8rl5",
      base: "cw20:terra1hd9n65snaluvf7en0p4hqzse9eqecejz2k8rl5",
      name: "Tether USD (Portal from Solana)",
      display: "usdtso",
      symbol: "USDTso",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/usdtso.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/usdtso.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1fpfn2kkr8mv390wx4dtpfk3vkjx9ch3thvykl3",
        exponent: 0
      }, {
        denom: "gohm",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1fpfn2kkr8mv390wx4dtpfk3vkjx9ch3thvykl3",
      base: "cw20:terra1fpfn2kkr8mv390wx4dtpfk3vkjx9ch3thvykl3",
      name: "Governance OHM (Portal)",
      display: "gohm",
      symbol: "gOHM",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/gohm.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/gohm.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1qvlpf2v0zmru3gtex40sqq02wxp39x3cjh359y",
        exponent: 0
      }, {
        denom: "msol",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1qvlpf2v0zmru3gtex40sqq02wxp39x3cjh359y",
      base: "cw20:terra1qvlpf2v0zmru3gtex40sqq02wxp39x3cjh359y",
      name: "Marinade staked SOL (Portal)",
      display: "msol",
      symbol: "mSOL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/msol.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/msol.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1w7ywr6waxtjuvn5svk5wqydqpjj0q9ps7qct4d",
        exponent: 0
      }, {
        denom: "steth",
        exponent: 8
      }],
      type_asset: "cw20",
      address: "terra1w7ywr6waxtjuvn5svk5wqydqpjj0q9ps7qct4d",
      base: "cw20:terra1w7ywr6waxtjuvn5svk5wqydqpjj0q9ps7qct4d",
      name: "Lido Staked Ether (Portal)",
      display: "steth",
      symbol: "stETH",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/steth.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/steth.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1srp2u95kxps35nvan88gn96nfqhukqya2d0ffc",
        exponent: 0
      }, {
        denom: "lct",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1srp2u95kxps35nvan88gn96nfqhukqya2d0ffc",
      base: "cw20:terra1srp2u95kxps35nvan88gn96nfqhukqya2d0ffc",
      name: "LCT Token",
      display: "lct",
      symbol: "LCT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/lct.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/lct.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra18zqcnl83z98tf6lly37gghm7238k7lh79u4z9a",
        exponent: 0
      }, {
        denom: "batom",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra18zqcnl83z98tf6lly37gghm7238k7lh79u4z9a",
      base: "cw20:terra18zqcnl83z98tf6lly37gghm7238k7lh79u4z9a",
      name: "Bonded ATOM",
      display: "batom",
      symbol: "bATOM",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/batom.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/batom.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra128pe5jpempxu0nws5lw28se9zknhsr78626cpn",
        exponent: 0
      }, {
        denom: "webatom",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra128pe5jpempxu0nws5lw28se9zknhsr78626cpn",
      base: "cw20:terra128pe5jpempxu0nws5lw28se9zknhsr78626cpn",
      name: "pStake Bonded ATOM (Wormhole)",
      display: "webatom",
      symbol: "webATOM",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/webatom.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/webatom.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1laczhlpxlgmrwr9un9ds74qxd2fj4754nf82dn",
        exponent: 0
      }, {
        denom: "wcoin",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1laczhlpxlgmrwr9un9ds74qxd2fj4754nf82dn",
      base: "cw20:terra1laczhlpxlgmrwr9un9ds74qxd2fj4754nf82dn",
      name: "Willisch Coin",
      display: "wcoin",
      symbol: "WCOIN",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/wcoin.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/wcoin.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1thhm2u93m2stytzynhsxh5h3jrtg540x4punqy",
        exponent: 0
      }, {
        denom: "lctfancard",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1thhm2u93m2stytzynhsxh5h3jrtg540x4punqy",
      base: "cw20:terra1thhm2u93m2stytzynhsxh5h3jrtg540x4punqy",
      name: "LCT Fancard Token",
      display: "lctfancard",
      symbol: "LCTfancard",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/lctfancard.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/lctfancard.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1yeyr6taynkwdl85ppaggr3zr8txhf66cny2ang",
        exponent: 0
      }, {
        denom: "kntc",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1yeyr6taynkwdl85ppaggr3zr8txhf66cny2ang",
      base: "cw20:terra1yeyr6taynkwdl85ppaggr3zr8txhf66cny2ang",
      name: "Kinetic Token",
      display: "kntc",
      symbol: "KNTC",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/kntc.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/kntc.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1g53pyke8jtmt4lwvk4yl0xaqc4u0qlsl8dz3ex",
        exponent: 0
      }, {
        denom: "kust",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1g53pyke8jtmt4lwvk4yl0xaqc4u0qlsl8dz3ex",
      base: "cw20:terra1g53pyke8jtmt4lwvk4yl0xaqc4u0qlsl8dz3ex",
      name: "Kinetic kUST Token",
      display: "kust",
      symbol: "kUST",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/kust.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/kust.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1rl4zyexjphwgx6v3ytyljkkc4mrje2pyznaclv",
        exponent: 0
      }, {
        denom: "steak",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1rl4zyexjphwgx6v3ytyljkkc4mrje2pyznaclv",
      base: "cw20:terra1rl4zyexjphwgx6v3ytyljkkc4mrje2pyznaclv",
      name: "Steak Token",
      display: "steak",
      symbol: "STEAK",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/steak.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/steak.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1jkkt5638cd5pur0u5jnr2juw0v6hz5d6z8xu8m",
        exponent: 0
      }, {
        denom: "cst",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1jkkt5638cd5pur0u5jnr2juw0v6hz5d6z8xu8m",
      base: "cw20:terra1jkkt5638cd5pur0u5jnr2juw0v6hz5d6z8xu8m",
      name: "CST Token",
      display: "cst",
      symbol: "CST",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cst.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cst.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1kz7qszu7p4dg9lts7m9m7lpuarsnan47jh3fam",
        exponent: 0
      }, {
        denom: "cstfancard",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1kz7qszu7p4dg9lts7m9m7lpuarsnan47jh3fam",
      base: "cw20:terra1kz7qszu7p4dg9lts7m9m7lpuarsnan47jh3fam",
      name: "CST Fancard Token",
      display: "cstfancard",
      symbol: "CSTfancard",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cstfancard.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cstfancard.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1amz5c45l34n7w8m5a3z7rd7u0k037x4nnsemwj",
        exponent: 0
      }, {
        denom: "nwld",
        exponent: 9
      }],
      type_asset: "cw20",
      address: "terra1amz5c45l34n7w8m5a3z7rd7u0k037x4nnsemwj",
      base: "cw20:terra1amz5c45l34n7w8m5a3z7rd7u0k037x4nnsemwj",
      name: "Neworld Labs Develpper Token",
      display: "nwld",
      symbol: "NWLD",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/nwld.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/nwld.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1cdc6nlsx0l6jmt3nnx7gxjggf902wge3n2z76k",
        exponent: 0
      }, {
        denom: "fury",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1cdc6nlsx0l6jmt3nnx7gxjggf902wge3n2z76k",
      base: "cw20:terra1cdc6nlsx0l6jmt3nnx7gxjggf902wge3n2z76k",
      name: "FURY",
      display: "fury",
      symbol: "FURY",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/fury.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/fury.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra17n223dxpkypc5c48la7aqjvverczg82ga3cr93",
        exponent: 0
      }, {
        denom: "rct",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra17n223dxpkypc5c48la7aqjvverczg82ga3cr93",
      base: "cw20:terra17n223dxpkypc5c48la7aqjvverczg82ga3cr93",
      name: "Reactor Token",
      display: "rct",
      symbol: "RCT",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/rct.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/rct.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra14vw4sfqwe7jw8ppcc7u44vq7hy9qa2nlstnxmu",
        exponent: 0
      }, {
        denom: "vitc",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra14vw4sfqwe7jw8ppcc7u44vq7hy9qa2nlstnxmu",
      base: "cw20:terra14vw4sfqwe7jw8ppcc7u44vq7hy9qa2nlstnxmu",
      name: "Vitamin Coin",
      display: "vitc",
      symbol: "VITC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/vitc.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/vitc.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1948uvsah8aw40dhsa9mhl3htq8lraj0smlh77g",
        exponent: 0
      }, {
        denom: "sb",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1948uvsah8aw40dhsa9mhl3htq8lraj0smlh77g",
      base: "cw20:terra1948uvsah8aw40dhsa9mhl3htq8lraj0smlh77g",
      name: "DragonSB",
      display: "sb",
      symbol: "SB",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sb.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sb.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1rz964297kvt86rteajhtp4hsffhcum0ye8eljh",
        exponent: 0
      }, {
        denom: "toad",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1rz964297kvt86rteajhtp4hsffhcum0ye8eljh",
      base: "cw20:terra1rz964297kvt86rteajhtp4hsffhcum0ye8eljh",
      name: "RESToad Token",
      display: "toad",
      symbol: "TOAD",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/toad.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/toad.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1yhlhrea3rgyx2xdnsswsfakn28qa8z7yp5gmhd",
        exponent: 0
      }, {
        denom: "orionastro",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1yhlhrea3rgyx2xdnsswsfakn28qa8z7yp5gmhd",
      base: "cw20:terra1yhlhrea3rgyx2xdnsswsfakn28qa8z7yp5gmhd",
      name: "Orion Money xASTRO Derivative Token",
      display: "orionastro",
      symbol: "orionASTRO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/orionastro.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/orionastro.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1j4hwavavmtsafa6zr0npalfz3tk9gf3p4787mp",
        exponent: 0
      }, {
        denom: "retro",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1j4hwavavmtsafa6zr0npalfz3tk9gf3p4787mp",
      base: "cw20:terra1j4hwavavmtsafa6zr0npalfz3tk9gf3p4787mp",
      name: "Retrograde",
      display: "retro",
      symbol: "RETRO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/retro.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/retro.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra16wggm67a34msdxasg2vergm2pt289y7930wv7d",
        exponent: 0
      }, {
        denom: "tnd",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra16wggm67a34msdxasg2vergm2pt289y7930wv7d",
      base: "cw20:terra16wggm67a34msdxasg2vergm2pt289y7930wv7d",
      name: "TerrnadoCash",
      display: "tnd",
      symbol: "TND",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tnd.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tnd.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1n9k2he20h5vpyn4mgv7pg4pzvw2n3wc4a86v3g",
        exponent: 0
      }, {
        denom: "stnd",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1n9k2he20h5vpyn4mgv7pg4pzvw2n3wc4a86v3g",
      base: "cw20:terra1n9k2he20h5vpyn4mgv7pg4pzvw2n3wc4a86v3g",
      name: "TerrnadoCash",
      display: "stnd",
      symbol: "sTND",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/stnd.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/stnd.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1ezz5xply2v3xdyv32gy5tcd7zq4k235q4xtzwe",
        exponent: 0
      }, {
        denom: "nwt",
        exponent: 9
      }],
      type_asset: "cw20",
      address: "terra1ezz5xply2v3xdyv32gy5tcd7zq4k235q4xtzwe",
      base: "cw20:terra1ezz5xply2v3xdyv32gy5tcd7zq4k235q4xtzwe",
      name: "Neworld Token",
      display: "nwt",
      symbol: "NWT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/nwt.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/nwt.png"
      }]
    },
    {
      description: "The AUD stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "uaud",
          exponent: 0,
          aliases: ["microaud"]
        },
        {
          denom: "maud",
          exponent: 3,
          aliases: ["milliaud"]
        },
        {
          denom: "aut",
          exponent: 6,
          aliases: ["autc"]
        }
      ],
      base: "uaud",
      display: "aut",
      name: "TerraClassicAUD",
      symbol: "AUTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/aut.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/aut.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/aut.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/aut.svg"
      }]
    },
    {
      description: "The CAD stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "ucad",
          exponent: 0,
          aliases: ["microcad"]
        },
        {
          denom: "mcad",
          exponent: 3,
          aliases: ["millicad"]
        },
        {
          denom: "cat",
          exponent: 6,
          aliases: ["catc"]
        }
      ],
      base: "ucad",
      display: "cat",
      name: "TerraClassicCAD",
      symbol: "CATC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cat.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cat.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cat.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cat.svg"
      }]
    },
    {
      description: "The CHF stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "uchf",
          exponent: 0,
          aliases: ["microchf"]
        },
        {
          denom: "mchf",
          exponent: 3,
          aliases: ["millichf"]
        },
        {
          denom: "cht",
          exponent: 6,
          aliases: ["chtc"]
        }
      ],
      base: "uchf",
      display: "cht",
      name: "TerraClassicCHF",
      symbol: "CHTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cht.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cht.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cht.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cht.svg"
      }]
    },
    {
      description: "The CNY stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "ucny",
          exponent: 0,
          aliases: ["microcny"]
        },
        {
          denom: "mcny",
          exponent: 3,
          aliases: ["millicny"]
        },
        {
          denom: "cnt",
          exponent: 6,
          aliases: ["cntc"]
        }
      ],
      base: "ucny",
      display: "cnt",
      name: "TerraClassicCNY",
      symbol: "CNTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cnt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cnt.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cnt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/cnt.svg"
      }]
    },
    {
      description: "The DKK stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "udkk",
          exponent: 0,
          aliases: ["microdkk"]
        },
        {
          denom: "mdkk",
          exponent: 3,
          aliases: ["millidkk"]
        },
        {
          denom: "dkt",
          exponent: 6,
          aliases: ["dktc"]
        }
      ],
      base: "udkk",
      display: "dkt",
      name: "TerraClassicDKK",
      symbol: "DKTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/dkt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/dkt.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/dkt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/dkt.svg"
      }]
    },
    {
      description: "The EUR stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "ueur",
          exponent: 0,
          aliases: ["microeur"]
        },
        {
          denom: "meur",
          exponent: 3,
          aliases: ["millieur"]
        },
        {
          denom: "eut",
          exponent: 6,
          aliases: ["eutc"]
        }
      ],
      base: "ueur",
      display: "eut",
      name: "TerraClassicEUR",
      symbol: "EUTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/eut.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/eut.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/eut.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/eut.svg"
      }]
    },
    {
      description: "The GBP stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "ugbp",
          exponent: 0,
          aliases: ["microgbp"]
        },
        {
          denom: "mgbp",
          exponent: 3,
          aliases: ["milligbp"]
        },
        {
          denom: "gbt",
          exponent: 6,
          aliases: ["gbtc"]
        }
      ],
      base: "ugbp",
      display: "gbt",
      name: "TerraClassicGBP",
      symbol: "GBTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/gbt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/gbt.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/gbt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/gbt.svg"
      }]
    },
    {
      description: "The HKD stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "uhkd",
          exponent: 0,
          aliases: ["microhkd"]
        },
        {
          denom: "mhkd",
          exponent: 3,
          aliases: ["millihkd"]
        },
        {
          denom: "hkt",
          exponent: 6,
          aliases: ["hktc"]
        }
      ],
      base: "uhkd",
      display: "hkt",
      name: "TerraClassicHKD",
      symbol: "HKTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/hkt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/hkt.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/hkt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/hkt.svg"
      }]
    },
    {
      description: "The IDR stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "uidr",
          exponent: 0,
          aliases: ["microidr"]
        },
        {
          denom: "midr",
          exponent: 3,
          aliases: ["milliidr"]
        },
        {
          denom: "idt",
          exponent: 6,
          aliases: ["idtc"]
        }
      ],
      base: "uidr",
      display: "idt",
      name: "TerraClassicIDR",
      symbol: "IDTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/idt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/idt.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/idt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/idt.svg"
      }]
    },
    {
      description: "The INR stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "uinr",
          exponent: 0,
          aliases: ["microinr"]
        },
        {
          denom: "minr",
          exponent: 3,
          aliases: ["milliinr"]
        },
        {
          denom: "int",
          exponent: 6,
          aliases: ["intc"]
        }
      ],
      base: "uinr",
      display: "int",
      name: "TerraClassicINR",
      symbol: "INTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/int.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/int.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/int.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/int.svg"
      }]
    },
    {
      description: "The JPY stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "ujpy",
          exponent: 0,
          aliases: ["microjpy"]
        },
        {
          denom: "mjpy",
          exponent: 3,
          aliases: ["millijpy"]
        },
        {
          denom: "jpt",
          exponent: 6,
          aliases: ["jptc"]
        }
      ],
      base: "ujpy",
      display: "jpt",
      name: "TerraClassicJPY",
      symbol: "JPTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/jpt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/jpt.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/jpt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/jpt.svg"
      }]
    },
    {
      description: "The MNT stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "umnt",
          exponent: 0,
          aliases: ["micromnt"]
        },
        {
          denom: "mmnt",
          exponent: 3,
          aliases: ["millimnt"]
        },
        {
          denom: "mnt",
          exponent: 6,
          aliases: ["mntc"]
        }
      ],
      base: "umnt",
      display: "mnt",
      name: "TerraClassicMNT",
      symbol: "MNTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mnt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mnt.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mnt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/mnt.svg"
      }]
    },
    {
      description: "The MYR stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "umyr",
          exponent: 0,
          aliases: ["micromyr"]
        },
        {
          denom: "mmyr",
          exponent: 3,
          aliases: ["millimyr"]
        },
        {
          denom: "myt",
          exponent: 6,
          aliases: ["mytc"]
        }
      ],
      base: "umyr",
      display: "myt",
      name: "TerraClassicMYR",
      symbol: "MYTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/myt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/myt.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/myt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/myt.svg"
      }]
    },
    {
      description: "The NOK stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "unok",
          exponent: 0,
          aliases: ["micronok"]
        },
        {
          denom: "mnok",
          exponent: 3,
          aliases: ["millinok"]
        },
        {
          denom: "not",
          exponent: 6,
          aliases: ["notc"]
        }
      ],
      base: "unok",
      display: "not",
      name: "TerraClassicNOK",
      symbol: "NOTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/not.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/not.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/not.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/not.svg"
      }]
    },
    {
      description: "The PHP stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "uphp",
          exponent: 0,
          aliases: ["microphp"]
        },
        {
          denom: "mphp",
          exponent: 3,
          aliases: ["milliphp"]
        },
        {
          denom: "pht",
          exponent: 6,
          aliases: ["phtc"]
        }
      ],
      base: "uphp",
      display: "pht",
      name: "TerraClassicPHP",
      symbol: "PHTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/pht.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/pht.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/pht.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/pht.svg"
      }]
    },
    {
      description: "The SDR stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "usdr",
          exponent: 0,
          aliases: ["microsdr"]
        },
        {
          denom: "msdr",
          exponent: 3,
          aliases: ["millisdr"]
        },
        {
          denom: "sdt",
          exponent: 6,
          aliases: ["sdtc"]
        }
      ],
      base: "usdr",
      display: "sdt",
      name: "TerraClassicSDR",
      symbol: "SDTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sdt.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sdt.svg"
      }]
    },
    {
      description: "The SEK stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "usek",
          exponent: 0,
          aliases: ["microsek"]
        },
        {
          denom: "msek",
          exponent: 3,
          aliases: ["millisek"]
        },
        {
          denom: "set",
          exponent: 6,
          aliases: ["setc"]
        }
      ],
      base: "usek",
      display: "set",
      name: "TerraClassicSEK",
      symbol: "SETC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/set.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/set.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/set.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/set.svg"
      }]
    },
    {
      description: "The SGD stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "usgd",
          exponent: 0,
          aliases: ["microsgd"]
        },
        {
          denom: "msgd",
          exponent: 3,
          aliases: ["millisgd"]
        },
        {
          denom: "sgt",
          exponent: 6,
          aliases: ["sgtc"]
        }
      ],
      base: "usgd",
      display: "sgt",
      name: "TerraClassicSGD",
      symbol: "SGTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sgt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sgt.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sgt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/sgt.svg"
      }]
    },
    {
      description: "The THB stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "uthb",
          exponent: 0,
          aliases: ["microthb"]
        },
        {
          denom: "mthb",
          exponent: 3,
          aliases: ["millithb"]
        },
        {
          denom: "tht",
          exponent: 6,
          aliases: ["thtc"]
        }
      ],
      base: "uthb",
      display: "tht",
      name: "TerraClassicTHB",
      symbol: "THTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tht.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tht.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tht.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tht.svg"
      }]
    },
    {
      description: "The TWD stablecoin of Terra Classic.",
      denom_units: [
        {
          denom: "utwd",
          exponent: 0,
          aliases: ["microtwd"]
        },
        {
          denom: "mtwd",
          exponent: 3,
          aliases: ["millitwd"]
        },
        {
          denom: "twt",
          exponent: 6,
          aliases: ["twtc"]
        }
      ],
      base: "utwd",
      display: "twt",
      name: "TerraClassicTWD",
      symbol: "TWTC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/twt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/twt.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/twt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/twt.svg"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1mpq5zkkm39nmjrjg9raknpfrfmcfwv0nh0whvn",
        exponent: 0
      }, {
        denom: "neb",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1mpq5zkkm39nmjrjg9raknpfrfmcfwv0nh0whvn",
      base: "cw20:terra1mpq5zkkm39nmjrjg9raknpfrfmcfwv0nh0whvn",
      name: "Nebula Token",
      display: "neb",
      symbol: "NEB",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/neb.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/neb.png"
      }]
    },
    {
      denom_units: [{
        denom: "cw20:terra1g6fm3yu79gv0rc8067n2nnfpf0vks6n0wpzaf4u7w48tdrmj98zsy7uu00",
        exponent: 0
      }, {
        denom: "trit",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1g6fm3yu79gv0rc8067n2nnfpf0vks6n0wpzaf4u7w48tdrmj98zsy7uu00",
      base: "cw20:terra1g6fm3yu79gv0rc8067n2nnfpf0vks6n0wpzaf4u7w48tdrmj98zsy7uu00",
      name: "Terra Tritium Token",
      display: "trit",
      symbol: "TRIT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/trit.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/trit.png"
      }]
    },
    {
      description: "Rakoff Token is the Meme Token for Terra Classic",
      type_asset: "cw20",
      address: "terra1vhgq25vwuhdhn9xjll0rhl2s67jzw78a4g2t78y5kz89q9lsdskq2pxcj2",
      denom_units: [{
        denom: "cw20:terra1vhgq25vwuhdhn9xjll0rhl2s67jzw78a4g2t78y5kz89q9lsdskq2pxcj2",
        exponent: 0
      }, {
        denom: "rakoff",
        exponent: 6
      }],
      base: "cw20:terra1vhgq25vwuhdhn9xjll0rhl2s67jzw78a4g2t78y5kz89q9lsdskq2pxcj2",
      name: "Rakoff Token",
      display: "rakoff",
      symbol: "RAKOFF",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/rakoff.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/rakoff.png"
      }]
    },
    {
      description: "Tadpole Frogztrik Token meme",
      type_asset: "cw20",
      address: "terra19gzvkw5hft3ulp8n6ws3p9yradhc802axqal59lzxau6rqxktj9q0dwf9c",
      display: "tadf",
      denom_units: [{
        denom: "cw20:terra19gzvkw5hft3ulp8n6ws3p9yradhc802axqal59lzxau6rqxktj9q0dwf9c",
        exponent: 0
      }, {
        denom: "tadf",
        exponent: 6
      }],
      base: "cw20:terra19gzvkw5hft3ulp8n6ws3p9yradhc802axqal59lzxau6rqxktj9q0dwf9c",
      name: "Tadpole Frogztrik Token",
      symbol: "TADF",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tadf.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/tadf.png"
      }
    },
    {
      description: "Frogztrik NFT Token",
      type_asset: "cw20",
      address: "terra1wez9puj43v4s25vrex7cv3ut3w75w4h6j5e537sujyuxj0r5ne2qp9uwl9",
      display: "frog",
      denom_units: [{
        denom: "cw20:terra1wez9puj43v4s25vrex7cv3ut3w75w4h6j5e537sujyuxj0r5ne2qp9uwl9",
        exponent: 0
      }, {
        denom: "frog",
        exponent: 6
      }],
      base: "cw20:terra1wez9puj43v4s25vrex7cv3ut3w75w4h6j5e537sujyuxj0r5ne2qp9uwl9",
      name: "Frogztrik NFT Token",
      symbol: "FROG",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/FROG.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/FROG.png"
      }
    }
  ]
};
var assets_default164 = info454;

// node_modules/chain-registry/esm/mainnet/terra/chain.js
var info455 = {
  $schema: "../chain.schema.json",
  chain_name: "terra",
  status: "live",
  network_type: "mainnet",
  pretty_name: "Terra Classic",
  chain_id: "columbus-5",
  daemon_name: "terrad",
  node_home: "$HOME/.terra",
  bech32_prefix: "terra",
  slip44: 330,
  fees: {
    fee_tokens: [
      {
        denom: "uluna",
        low_gas_price: 28.325,
        average_gas_price: 28.325,
        high_gas_price: 50
      },
      {
        denom: "usdr",
        low_gas_price: 0.52469,
        average_gas_price: 0.52469,
        high_gas_price: 0.52469
      },
      {
        denom: "uusd",
        low_gas_price: 0.75,
        average_gas_price: 0.75,
        high_gas_price: 0.75
      },
      {
        denom: "ukrw",
        low_gas_price: 850,
        average_gas_price: 850,
        high_gas_price: 850
      },
      {
        denom: "umnt",
        low_gas_price: 2142.855,
        average_gas_price: 2142.855,
        high_gas_price: 2142.855
      },
      {
        denom: "ueur",
        low_gas_price: 0.625,
        average_gas_price: 0.625,
        high_gas_price: 0.625
      },
      {
        denom: "ucny",
        low_gas_price: 4.9,
        average_gas_price: 4.9,
        high_gas_price: 4.9
      },
      {
        denom: "ujpy",
        low_gas_price: 81.85,
        average_gas_price: 81.85,
        high_gas_price: 81.85
      },
      {
        denom: "ugbp",
        low_gas_price: 0.55,
        average_gas_price: 0.55,
        high_gas_price: 0.55
      },
      {
        denom: "uinr",
        low_gas_price: 54.4,
        average_gas_price: 54.4,
        high_gas_price: 54.4
      },
      {
        denom: "ucad",
        low_gas_price: 0.95,
        average_gas_price: 0.95,
        high_gas_price: 0.95
      },
      {
        denom: "uchf",
        low_gas_price: 0.7,
        average_gas_price: 0.7,
        high_gas_price: 0.7
      },
      {
        denom: "uaud",
        low_gas_price: 0.95,
        average_gas_price: 0.95,
        high_gas_price: 0.95
      },
      {
        denom: "usgd",
        low_gas_price: 1,
        average_gas_price: 1,
        high_gas_price: 1
      },
      {
        denom: "uthb",
        low_gas_price: 23.1,
        average_gas_price: 23.1,
        high_gas_price: 23.1
      },
      {
        denom: "usek",
        low_gas_price: 6.25,
        average_gas_price: 6.25,
        high_gas_price: 6.25
      },
      {
        denom: "unok",
        low_gas_price: 6.25,
        average_gas_price: 6.25,
        high_gas_price: 6.25
      },
      {
        denom: "udkk",
        low_gas_price: 4.5,
        average_gas_price: 4.5,
        high_gas_price: 4.5
      },
      {
        denom: "uidr",
        low_gas_price: 10900,
        average_gas_price: 10900,
        high_gas_price: 10900
      },
      {
        denom: "uphp",
        low_gas_price: 38,
        average_gas_price: 38,
        high_gas_price: 38
      },
      {
        denom: "uhkd",
        low_gas_price: 5.85,
        average_gas_price: 5.85,
        high_gas_price: 5.85
      },
      {
        denom: "umyr",
        low_gas_price: 3,
        average_gas_price: 3,
        high_gas_price: 3
      },
      {
        denom: "utwd",
        low_gas_price: 20,
        average_gas_price: 20,
        high_gas_price: 20
      }
    ]
  },
  staking: {
    staking_tokens: [{
      denom: "uluna"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/luna.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/luna.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://terra-classic-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://rpc-terra-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://terraclassic-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://terraclassic-rpc-server-01.stakely.io",
        provider: "Stakely"
      }
    ],
    rest: [
      {
        address: "https://terra-classic-lcd.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://api-terra-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://terraclassic-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://terraclassic-lcd-server-01.stakely.io",
        provider: "Stakely"
      }
    ],
    grpc: [
      {
        address: "grpc.terrarebels.net",
        provider: "Terra Rebels"
      },
      {
        address: "terra-classic-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "grpc-terra-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "terraclassic-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      }
    ]
  },
  explorers: [
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/terra",
      tx_page: "https://ezstaking.app/terra/txs/${txHash}",
      account_page: "https://ezstaking.app/terra/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/terra-luna",
      tx_page: "https://ping.pub/terra-luna/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/terra",
      tx_page: "https://atomscan.com/terra/transactions/${txHash}",
      account_page: "https://atomscan.com/terra/accounts/${accountAddress}"
    },
    {
      kind: "finder",
      url: "https://finder.terra.money/classic",
      tx_page: "https://finder.terra.money/classic/tx/${txHash}",
      account_page: "https://finder.terra.money/classic/address/${accountAddress}"
    },
    {
      kind: "finder",
      url: "https://finder.terrarebels.net/classic",
      tx_page: "https://finder.terrarebels.net/classic/tx/${txHash}",
      account_page: "https://finder.terrarebels.net/classic/address/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/luna.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra/images/luna.svg"
  }]
};
var chain_default164 = info455;

// node_modules/chain-registry/esm/mainnet/terra/ibc.js
var info456 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-13",
      connection_id: "connection-14"
    },
    chain_2: {
      chain_name: "terra",
      client_id: "07-tendermint-172",
      connection_id: "connection-99"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-69",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "terra",
      client_id: "07-tendermint-101",
      connection_id: "connection-70"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-49",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-63",
      connection_id: "connection-43"
    },
    chain_2: {
      chain_name: "terra",
      client_id: "07-tendermint-32",
      connection_id: "connection-34"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-27",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-20",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "migaloo",
      client_id: "07-tendermint-122",
      connection_id: "connection-92"
    },
    chain_2: {
      chain_name: "terra",
      client_id: "07-tendermint-244",
      connection_id: "connection-151"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-114",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-87",
        port_id: "wasm.terra19pfxzj9580h7rjd6z6sn5x2se76vgrc0etltr79g9z3t82jzp4hq63qguc"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1215",
      connection_id: "connection-1549"
    },
    chain_2: {
      chain_name: "terra",
      client_id: "07-tendermint-12",
      connection_id: "connection-11"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-72",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }, {
      chain_1: {
        channel_id: "channel-78488",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-108",
        port_id: "wasm.terra19pfxzj9580h7rjd6z6sn5x2se76vgrc0etltr79g9z3t82jzp4hq63qguc"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: false,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "terra",
      client_id: "07-tendermint-28",
      connection_id: "connection-29"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-16",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "terra",
      client_id: "07-tendermint-235",
      connection_id: "connection-142"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-394",
      connection_id: "connection-384"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-85",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-314",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default128 = info456;

// node_modules/chain-registry/esm/mainnet/terra/index.js
var assets164 = assets_default164;
var chain164 = chain_default164;
var ibc128 = ibc_default128;

// node_modules/chain-registry/esm/mainnet/terra2/assets.js
var info457 = {
  $schema: "../assetlist.schema.json",
  chain_name: "terra2",
  assets: [
    {
      description: "The native staking token of Terra.",
      denom_units: [{
        denom: "uluna",
        exponent: 0
      }, {
        denom: "luna",
        exponent: 6
      }],
      base: "uluna",
      name: "Luna",
      display: "luna",
      symbol: "LUNA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.svg"
      },
      coingecko_id: "terra-luna-2",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.svg"
      }],
      socials: {
        website: "https://www.terra.money/",
        twitter: "https://twitter.com/terra_money"
      }
    },
    {
      description: "Astroport is a neutral marketplace where anyone, from anywhere in the galaxy, can dock to trade their wares.",
      denom_units: [{
        denom: "cw20:terra1nsuqsk6kh58ulczatwev87ttq2z6r3pusulg9r24mfj2fvtzd4uq3exn26",
        exponent: 0
      }, {
        denom: "astro.cw20",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1nsuqsk6kh58ulczatwev87ttq2z6r3pusulg9r24mfj2fvtzd4uq3exn26",
      base: "cw20:terra1nsuqsk6kh58ulczatwev87ttq2z6r3pusulg9r24mfj2fvtzd4uq3exn26",
      name: "Astroport CW20 Token",
      display: "astro.cw20",
      symbol: "ASTRO.cw20",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/astro-cw20.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/astro-cw20.svg"
      }],
      socials: {
        website: "https://astroport.fi/",
        twitter: "https://twitter.com/astroport_fi"
      }
    },
    {
      description: "Astroport is a neutral marketplace where anyone, from anywhere in the galaxy, can dock to trade their wares.",
      denom_units: [{
        denom: "ibc/8D8A7F7253615E5F76CB6252A1E1BD921D5EDB7BBAAF8913FB1C77FF125D9995",
        exponent: 0,
        aliases: ["uastro"]
      }, {
        denom: "astro",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/8D8A7F7253615E5F76CB6252A1E1BD921D5EDB7BBAAF8913FB1C77FF125D9995",
      name: "Astroport token",
      display: "astro",
      symbol: "ASTRO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "neutron",
          base_denom: "factory/neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07/astro",
          channel_id: "channel-25"
        },
        chain: {
          channel_id: "channel-229",
          path: "transfer/channel-229/factory/neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07/astro"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "neutron",
          base_denom: "factory/neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07/astro"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/astro.svg"
      }
    },
    {
      description: "Dinheiros is the reserve currency of dioalma.protocol, an undivisible and rare token.",
      denom_units: [{
        denom: "cw20:terra1spkm49wd9dqkranhrks4cupecl3rtgeqqljq3qrvrrts2ev2gw6sy5vz3k",
        exponent: 0,
        aliases: ["Dinheiros"]
      }],
      type_asset: "cw20",
      address: "terra1spkm49wd9dqkranhrks4cupecl3rtgeqqljq3qrvrrts2ev2gw6sy5vz3k",
      base: "cw20:terra1spkm49wd9dqkranhrks4cupecl3rtgeqqljq3qrvrrts2ev2gw6sy5vz3k",
      name: "dinheiro",
      display: "cw20:terra1spkm49wd9dqkranhrks4cupecl3rtgeqqljq3qrvrrts2ev2gw6sy5vz3k",
      symbol: "DINHEIROS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/Dinheiros.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/Dinheiros.png"
      }]
    },
    {
      description: "Reis is the king of trading, high volume high liquidity, sibling of Dinheiros, Reis and Alem, a token of dioalma.protocol.",
      denom_units: [{
        denom: "cw20:terra1sdglum2dt4f3fmq7jrt2phf2tegmnudc7qqqqujkpqcm9ujuxxkqakv5u8",
        exponent: 0
      }, {
        denom: "Reis",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1sdglum2dt4f3fmq7jrt2phf2tegmnudc7qqqqujkpqcm9ujuxxkqakv5u8",
      base: "cw20:terra1sdglum2dt4f3fmq7jrt2phf2tegmnudc7qqqqujkpqcm9ujuxxkqakv5u8",
      name: "real",
      display: "Reis",
      symbol: "REIS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/Reis.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/Reis.png"
      }]
    },
    {
      description: "Escudos is the everyday currency of dioalma.protocol, good to send money back and forward.",
      denom_units: [{
        denom: "cw20:terra1qj5hs3e86qn4vm9dvtgtlkdp550r0rayk9wpay44mfw3gn3tr8nq5jw3dg",
        exponent: 0
      }, {
        denom: "Escudos",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1qj5hs3e86qn4vm9dvtgtlkdp550r0rayk9wpay44mfw3gn3tr8nq5jw3dg",
      base: "cw20:terra1qj5hs3e86qn4vm9dvtgtlkdp550r0rayk9wpay44mfw3gn3tr8nq5jw3dg",
      name: "escudo",
      display: "Escudos",
      symbol: "ESCUDOS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/Escudos.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/Escudos.png"
      }]
    },
    {
      description: "Alem is a local currency for the region of Alentejo in Portugal, sibling of Dinheiros, Reis and Alem, a token of dioalma.protocol.",
      denom_units: [{
        denom: "cw20:terra1cmf8ytutcwrjrv08zskj9phuh46a3w3nkjax7en4hxezsrdr58lqvzy05q",
        exponent: 0
      }, {
        denom: "Alem",
        exponent: 6
      }],
      type_asset: "cw20",
      address: "terra1cmf8ytutcwrjrv08zskj9phuh46a3w3nkjax7en4hxezsrdr58lqvzy05q",
      base: "cw20:terra1cmf8ytutcwrjrv08zskj9phuh46a3w3nkjax7en4hxezsrdr58lqvzy05q",
      name: "alentejo.money",
      display: "Alem",
      symbol: "ALEM",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/Alem.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/Alem.png"
      }]
    },
    {
      description: "ERIS liquid staked LUNA.",
      type_asset: "cw20",
      address: "terra1ecgazyd0waaj3g7l9cmy5gulhxkps2gmxu9ghducvuypjq68mq2s5lvsct",
      denom_units: [{
        denom: "cw20:terra1ecgazyd0waaj3g7l9cmy5gulhxkps2gmxu9ghducvuypjq68mq2s5lvsct",
        exponent: 0
      }, {
        denom: "ampluna",
        exponent: 6
      }],
      base: "cw20:terra1ecgazyd0waaj3g7l9cmy5gulhxkps2gmxu9ghducvuypjq68mq2s5lvsct",
      name: "ERIS Amplified LUNA",
      display: "ampluna",
      symbol: "ampLUNA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/ampluna.svg"
      },
      coingecko_id: "eris-amplified-luna",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/ampluna.svg"
      }]
    },
    {
      description: "Lion DAO is a community DAO that lives on the Terra blockchain with the mission to reactivate the LUNAtic community and showcase Terra protocols & tooling",
      type_asset: "cw20",
      address: "terra1lxx40s29qvkrcj8fsa3yzyehy7w50umdvvnls2r830rys6lu2zns63eelv",
      denom_units: [{
        denom: "cw20:terra1lxx40s29qvkrcj8fsa3yzyehy7w50umdvvnls2r830rys6lu2zns63eelv",
        exponent: 0
      }, {
        denom: "roar",
        exponent: 6
      }],
      base: "cw20:terra1lxx40s29qvkrcj8fsa3yzyehy7w50umdvvnls2r830rys6lu2zns63eelv",
      name: "Lion DAO",
      display: "roar",
      symbol: "ROAR",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/roar.png"
      },
      coingecko_id: "lion-dao",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/roar.png"
      }]
    },
    {
      description: "GEM DAO, building a decentralized, community-owned, low-supply store of value",
      type_asset: "cw20",
      address: "terra1ynvsz80w9xmhdxucv96gkwpxlwvjgsq75xh2f3pf825c4wfmkfxskq6pqv",
      denom_units: [{
        denom: "cw20:terra1ynvsz80w9xmhdxucv96gkwpxlwvjgsq75xh2f3pf825c4wfmkfxskq6pqv",
        exponent: 0
      }, {
        denom: "gem",
        exponent: 6
      }],
      base: "cw20:terra1ynvsz80w9xmhdxucv96gkwpxlwvjgsq75xh2f3pf825c4wfmkfxskq6pqv",
      name: "GEM DAO",
      display: "gem",
      symbol: "GEM",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/gem.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/gem.png"
      }]
    },
    {
      description: "Lion Cub DAO is a useless meme community DAO on Terra",
      type_asset: "cw20",
      address: "terra1lalvk0r6nhruel7fvzdppk3tup3mh5j4d4eadrqzfhle4zrf52as58hh9t",
      denom_units: [{
        denom: "cw20:terra1lalvk0r6nhruel7fvzdppk3tup3mh5j4d4eadrqzfhle4zrf52as58hh9t",
        exponent: 0
      }, {
        denom: "cub",
        exponent: 6
      }],
      base: "cw20:terra1lalvk0r6nhruel7fvzdppk3tup3mh5j4d4eadrqzfhle4zrf52as58hh9t",
      name: "Lion Cub DAO",
      display: "cub",
      symbol: "CUB",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/cub.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/cub.png"
      }]
    },
    {
      description: "BLUE CUB DAO is a community DAO on Terra",
      type_asset: "cw20",
      address: "terra1gwrz9xzhqsygyr5asrgyq3pu0ewpn00mv2zenu86yvx2nlwpe8lqppv584",
      denom_units: [{
        denom: "cw20:terra1gwrz9xzhqsygyr5asrgyq3pu0ewpn00mv2zenu86yvx2nlwpe8lqppv584",
        exponent: 0
      }, {
        denom: "blue",
        exponent: 6
      }],
      base: "cw20:terra1gwrz9xzhqsygyr5asrgyq3pu0ewpn00mv2zenu86yvx2nlwpe8lqppv584",
      name: "BLUE CUB DAO",
      display: "blue",
      symbol: "BLUE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/blue.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/blue.png"
      }]
    },
    {
      description: "Liquidity token, NFT, HARVEST FOR VALUE",
      type_asset: "cw20",
      address: "terra10se906awphtccf4vd83m0ulpmpt9v4msuakmpy0pwvmtxmup3kdq25rayn",
      denom_units: [{
        denom: "cw20:terra10se906awphtccf4vd83m0ulpmpt9v4msuakmpy0pwvmtxmup3kdq25rayn",
        exponent: 0
      }, {
        denom: "xxx",
        exponent: 10
      }],
      base: "cw20:terra10se906awphtccf4vd83m0ulpmpt9v4msuakmpy0pwvmtxmup3kdq25rayn",
      name: "TheOnlyOne",
      display: "xxx",
      symbol: "xxx",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/xxx3.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/xxx3.png"
      }]
    },
    {
      description: "Just a meme coin on Terra",
      type_asset: "cw20",
      address: "terra19nu4q2y0xe3vza6ve5ymup33uzm049pnrqq5ddeuulmrg279t57qstcces",
      denom_units: [{
        denom: "cw20:terra19nu4q2y0xe3vza6ve5ymup33uzm049pnrqq5ddeuulmrg279t57qstcces",
        exponent: 0
      }, {
        denom: "GUGU",
        exponent: 6
      }],
      base: "cw20:terra19nu4q2y0xe3vza6ve5ymup33uzm049pnrqq5ddeuulmrg279t57qstcces",
      name: "GUGU",
      display: "GUGU",
      symbol: "GUGU",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/gugu.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/gugu.png"
      }]
    },
    {
      description: "BackBone Labs Liquid Staked LUNA",
      type_asset: "cw20",
      address: "terra17aj4ty4sz4yhgm08na8drc0v03v2jwr3waxcqrwhajj729zhl7zqnpc0ml",
      denom_units: [{
        denom: "cw20:terra17aj4ty4sz4yhgm08na8drc0v03v2jwr3waxcqrwhajj729zhl7zqnpc0ml",
        exponent: 0
      }, {
        denom: "bLUNA",
        exponent: 6
      }],
      base: "cw20:terra17aj4ty4sz4yhgm08na8drc0v03v2jwr3waxcqrwhajj729zhl7zqnpc0ml",
      name: "BackBone Labs Liquid Staked LUNA",
      display: "bLUNA",
      symbol: "bLUNA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/bLUNA.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/bLUNA.png"
      }],
      coingecko_id: "backbone-labs-staked-luna"
    },
    {
      description: "Sayve is a revolutionary language learning app in the Web3 era that combines gamification, blockchain technology, and a Metaverse experience to motivate users to learn languages while earning rewards.",
      type_asset: "cw20",
      address: "terra1xp9hrhthzddnl7j5du83gqqr4wmdjm5t0guzg9jp6jwrtpukwfjsjgy4f3",
      denom_units: [{
        denom: "cw20:terra1xp9hrhthzddnl7j5du83gqqr4wmdjm5t0guzg9jp6jwrtpukwfjsjgy4f3",
        exponent: 0
      }, {
        denom: "sayve",
        exponent: 6
      }],
      base: "cw20:terra1xp9hrhthzddnl7j5du83gqqr4wmdjm5t0guzg9jp6jwrtpukwfjsjgy4f3",
      name: "sayve",
      display: "sayve",
      symbol: "SAYVE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/sayve.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/sayve.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/sayve.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/sayve.svg"
      }]
    },
    {
      description: "ERIS Alliance Staked ampWHALE on Terra",
      denom_units: [{
        denom: "factory/terra1j35ta0llaxcf55auv2cjqau5a7aee6g8fz7md7my7005cvh23jfsaw83dy/ampWHALEt",
        exponent: 0
      }, {
        denom: "ampWHALEt",
        exponent: 6
      }],
      base: "factory/terra1j35ta0llaxcf55auv2cjqau5a7aee6g8fz7md7my7005cvh23jfsaw83dy/ampWHALEt",
      name: "ERIS Alliance Staked ampWHALE",
      display: "ampWHALEt",
      symbol: "ampWHALEt",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/ampwhalet.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/ampwhalet.svg"
      }]
    },
    {
      description: "ERIS Alliance Staked boneWHALE on Terra",
      denom_units: [{
        denom: "factory/terra10j3zrymfrkta2pxe0gklc79gu06tqyuy8c3kh6tqdsrrprsjqkrqzfl4df/boneWHALEt",
        exponent: 0
      }, {
        denom: "boneWHALEt",
        exponent: 6
      }],
      base: "factory/terra10j3zrymfrkta2pxe0gklc79gu06tqyuy8c3kh6tqdsrrprsjqkrqzfl4df/boneWHALEt",
      name: "ERIS Alliance Staked boneWHALE",
      display: "boneWHALEt",
      symbol: "boneWHALEt",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/bonewhalet.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/bonewhalet.svg"
      }]
    },
    {
      description: "ERIS Liquid Enterprise Staked ROAR",
      denom_units: [{
        denom: "factory/terra1vklefn7n6cchn0u962w3gaszr4vf52wjvd4y95t2sydwpmpdtszsqvk9wy/ampROAR",
        exponent: 0
      }, {
        denom: "ampROAR",
        exponent: 6
      }],
      base: "factory/terra1vklefn7n6cchn0u962w3gaszr4vf52wjvd4y95t2sydwpmpdtszsqvk9wy/ampROAR",
      name: "ERIS Amplified ROAR",
      display: "ampROAR",
      symbol: "ampROAR",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/amproar.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/amproar.png"
      }]
    },
    {
      description: "Nico Dao Money",
      type_asset: "cw20",
      address: "terra1e0efrrrj8d55pflme3dmtyuj7klzcef5cfmz6r2jyqz77kk2jz3qa6drg3",
      denom_units: [{
        denom: "cw20:terra1e0efrrrj8d55pflme3dmtyuj7klzcef5cfmz6r2jyqz77kk2jz3qa6drg3",
        exponent: 0
      }, {
        denom: "nico",
        exponent: 18
      }],
      base: "cw20:terra1e0efrrrj8d55pflme3dmtyuj7klzcef5cfmz6r2jyqz77kk2jz3qa6drg3",
      name: "nico",
      display: "nico",
      symbol: "NICO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/nicodao.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/nicodao.png"
      }]
    },
    {
      description: "Sailing the Seas DAO is a community DAO built on Enterprise on Terra",
      type_asset: "cw20",
      address: "terra1rc6ssp5rym7a0hg29xpj4cc9e67tl56kg5jyzgl9qrhfxxc2ugvsnrkala",
      denom_units: [{
        denom: "cw20:terra1rc6ssp5rym7a0hg29xpj4cc9e67tl56kg5jyzgl9qrhfxxc2ugvsnrkala",
        exponent: 0
      }, {
        denom: "seas",
        exponent: 6
      }],
      base: "cw20:terra1rc6ssp5rym7a0hg29xpj4cc9e67tl56kg5jyzgl9qrhfxxc2ugvsnrkala",
      name: "Sailing The SeaS DAO",
      display: "seas",
      symbol: "SEAS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/SEAS.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/SEAS.png"
      }]
    },
    {
      description: "A community DAO built on Enterprise",
      type_asset: "cw20",
      address: "terra18vp5s0r7keezm35hdxsgw8zgfnyn8wejdkk893ag2kqncgpqxhjqwjpc0v",
      denom_units: [{
        denom: "cw20:terra18vp5s0r7keezm35hdxsgw8zgfnyn8wejdkk893ag2kqncgpqxhjqwjpc0v",
        exponent: 0
      }, {
        denom: "bitz",
        exponent: 6
      }],
      base: "cw20:terra18vp5s0r7keezm35hdxsgw8zgfnyn8wejdkk893ag2kqncgpqxhjqwjpc0v",
      name: "BitzDAO",
      display: "bitz",
      symbol: "BITZ",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/BITZ.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/BITZ.png"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/A356EC90DC3AE43D485514DA7260EDC7ABB5CFAA0654CE2524C739392975AD3C",
        exponent: 0,
        aliases: ["wstETH"]
      }, {
        denom: "factory/neutron1ug740qrkquxzrk2hh29qrlx3sktkfml3je7juusc2te7xmvsscns0n2wry/wstETH",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/A356EC90DC3AE43D485514DA7260EDC7ABB5CFAA0654CE2524C739392975AD3C",
      name: "Wrapped Lido Staked Ether",
      display: "wstETH",
      symbol: "wstETH",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "neutron",
          base_denom: "factory/neutron1ug740qrkquxzrk2hh29qrlx3sktkfml3je7juusc2te7xmvsscns0n2wry/wstETH",
          channel_id: "channel-25"
        },
        chain: {
          channel_id: "channel-229",
          path: "transfer/channel-229/factory/neutron1ug740qrkquxzrk2hh29qrlx3sktkfml3je7juusc2te7xmvsscns0n2wry/wstETH"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "neutron",
          base_denom: "factory/neutron1ug740qrkquxzrk2hh29qrlx3sktkfml3je7juusc2te7xmvsscns0n2wry/wstETH"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wsteth.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wsteth.svg"
      }
    },
    {
      description: "SEUL DAO",
      type_asset: "cw20",
      address: "terra13s5pxw5j2p4ssvzwvxd8l7h30vke8vjgtng75vqgv6p9vddfk3hskfka0l",
      denom_units: [{
        denom: "cw20:terra13s5pxw5j2p4ssvzwvxd8l7h30vke8vjgtng75vqgv6p9vddfk3hskfka0l",
        exponent: 0
      }, {
        denom: "seul",
        exponent: 6
      }],
      base: "cw20:terra13s5pxw5j2p4ssvzwvxd8l7h30vke8vjgtng75vqgv6p9vddfk3hskfka0l",
      name: "seul",
      display: "seul",
      symbol: "SEUL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/seul.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/seul.png"
      }]
    },
    {
      description: "SEUL DAO",
      type_asset: "cw20",
      address: "terra1q328gl40az3cf9x67cgudn8e8w2az9vsmhtkwsgdu7a43rhy5caqc82yr5",
      denom_units: [{
        denom: "cw20:terra1q328gl40az3cf9x67cgudn8e8w2az9vsmhtkwsgdu7a43rhy5caqc82yr5",
        exponent: 0
      }, {
        denom: "xseul",
        exponent: 6
      }],
      base: "cw20:terra1q328gl40az3cf9x67cgudn8e8w2az9vsmhtkwsgdu7a43rhy5caqc82yr5",
      name: "xseul",
      display: "xseul",
      symbol: "xSEUL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/xseul.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/xseul.png"
      }]
    },
    {
      description: "ITO DAO",
      type_asset: "cw20",
      address: "terra1c77xqv746m7ghxayrge79dxr4kcezev8g6cnrfled4f3n4ufj0vs5gz28s",
      denom_units: [{
        denom: "cw20:terra1c77xqv746m7ghxayrge79dxr4kcezev8g6cnrfled4f3n4ufj0vs5gz28s",
        exponent: 0
      }, {
        denom: "ito",
        exponent: 6
      }],
      base: "cw20:terra1c77xqv746m7ghxayrge79dxr4kcezev8g6cnrfled4f3n4ufj0vs5gz28s",
      name: "ito",
      display: "ito",
      symbol: "ITO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/I.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/I.png"
      }]
    },
    {
      description: "Chris Armani Token",
      type_asset: "cw20",
      address: "terra1aa7stl3fytvave9xtcexgv0kne4k7ks068dcljkrfj37hy8q270sjadav8",
      denom_units: [{
        denom: "cw20:terra1aa7stl3fytvave9xtcexgv0kne4k7ks068dcljkrfj37hy8q270sjadav8",
        exponent: 0
      }, {
        denom: "ARMANI",
        exponent: 6
      }],
      base: "cw20:terra1aa7stl3fytvave9xtcexgv0kne4k7ks068dcljkrfj37hy8q270sjadav8",
      name: "ARMANI",
      display: "ARMANI",
      symbol: "ARMANI",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/armani.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/armani.png"
      }]
    },
    {
      description: "useless meme coin",
      type_asset: "cw20",
      address: "terra1cl273523kmr2uwjhhznq54je69mted2u3ljffm8kp2ap4z3drdksftwqun",
      denom_units: [{
        denom: "cw20:terra1cl273523kmr2uwjhhznq54je69mted2u3ljffm8kp2ap4z3drdksftwqun",
        exponent: 0
      }, {
        denom: "DROGO",
        exponent: 6
      }],
      base: "cw20:terra1cl273523kmr2uwjhhznq54je69mted2u3ljffm8kp2ap4z3drdksftwqun",
      name: "DROGO",
      display: "DROGO",
      symbol: "DROGO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/drogo.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/drogo.png"
      }]
    },
    {
      description: "ado the flower of night",
      type_asset: "cw20",
      address: "terra1w8xk6rtu40st6lvl3yv7ynw5urm2n686u9cchvrzltmnktzwdesqcwy0nu",
      denom_units: [{
        denom: "cw20:terra1w8xk6rtu40st6lvl3yv7ynw5urm2n686u9cchvrzltmnktzwdesqcwy0nu",
        exponent: 0
      }, {
        denom: "ADO",
        exponent: 6
      }],
      base: "cw20:terra1w8xk6rtu40st6lvl3yv7ynw5urm2n686u9cchvrzltmnktzwdesqcwy0nu",
      name: "ADO",
      display: "ADO",
      symbol: "ADO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/ADO.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/ADO.png"
      }]
    },
    {
      description: "The first memecoin on osmosis.",
      denom_units: [{
        denom: "ibc/7CB33A66F90533ED1E168CB3251253C719CF4B04FF1290AFD795F14CA1D67278",
        exponent: 0
      }, {
        denom: "WOSMO",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/7CB33A66F90533ED1E168CB3251253C719CF4B04FF1290AFD795F14CA1D67278",
      name: "Wosmo",
      display: "WOSMO",
      symbol: "WOSMO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3/WOSMO",
          channel_id: "channel-1"
        },
        chain: {
          channel_id: "channel-251",
          path: "transfer/channel-251/factory/osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3/WOSMO"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosis",
          base_denom: "factory/osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3/WOSMO"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wosmo.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/wosmo.png"
      }
    },
    {
      description: "DNA DAO",
      type_asset: "cw20",
      address: "terra1epka8wevu90rxlvt6g5x9veevd800a760vtuftc5kqdfmrh47qds9f0m8h",
      denom_units: [{
        denom: "cw20:terra1epka8wevu90rxlvt6g5x9veevd800a760vtuftc5kqdfmrh47qds9f0m8h",
        exponent: 0
      }, {
        denom: "DNA",
        exponent: 6
      }],
      base: "cw20:terra1epka8wevu90rxlvt6g5x9veevd800a760vtuftc5kqdfmrh47qds9f0m8h",
      name: "DNA",
      display: "DNA",
      symbol: "DNA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/DNA.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/DNA.png"
      }]
    },
    {
      description: "Bitmos opens doors for BRC20 tokens to thrive alongside established players in the Cosmos Network, revolutionizing decentralized finance (DeFi) for all.",
      type_asset: "cw20",
      address: "terra1sxe8u2hjczlekwfkcq0rs28egt38pg3wqzfx4zcrese4fnvzzupsk9gjkq",
      denom_units: [{
        denom: "cw20:terra1sxe8u2hjczlekwfkcq0rs28egt38pg3wqzfx4zcrese4fnvzzupsk9gjkq",
        exponent: 0
      }, {
        denom: "bitmos",
        exponent: 6
      }],
      base: "cw20:terra1sxe8u2hjczlekwfkcq0rs28egt38pg3wqzfx4zcrese4fnvzzupsk9gjkq",
      name: "Bitmos",
      display: "bitmos",
      symbol: "BMOS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/bitmos.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/bitmos.png"
      }]
    },
    {
      type_asset: "cw20",
      address: "terra1eh8eq60cjy997w5dc3a6exfzanlaurupav8klx7m9u9ddfgh25mqjwl5vj",
      denom_units: [{
        denom: "cw20:terra1eh8eq60cjy997w5dc3a6exfzanlaurupav8klx7m9u9ddfgh25mqjwl5vj",
        exponent: 0
      }, {
        denom: "lads",
        exponent: 6
      }],
      base: "cw20:terra1eh8eq60cjy997w5dc3a6exfzanlaurupav8klx7m9u9ddfgh25mqjwl5vj",
      name: "LADS",
      display: "lads",
      symbol: "LADS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/LADS.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/LADS.png"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/F709DF4969CD26174C1A53AA95F3D98BE643C1A52C9981487766F96A1811F6A4",
        exponent: 0,
        aliases: ["factory/migaloo1d0uma9qzcts4fzt7ml39xp44aut5k6qyjfzz4asalnecppppr3rsl52vvv/rstk"]
      }, {
        denom: "rstk",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/F709DF4969CD26174C1A53AA95F3D98BE643C1A52C9981487766F96A1811F6A4",
      name: "Restake DAO Token",
      display: "rstk",
      symbol: "RSTK",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1d0uma9qzcts4fzt7ml39xp44aut5k6qyjfzz4asalnecppppr3rsl52vvv/rstk",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-86",
          path: "transfer/channel-86/factory/migaloo1d0uma9qzcts4fzt7ml39xp44aut5k6qyjfzz4asalnecppppr3rsl52vvv/rstk"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "migaloo",
          base_denom: "factory/migaloo1d0uma9qzcts4fzt7ml39xp44aut5k6qyjfzz4asalnecppppr3rsl52vvv/rstk"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/rstk.svg"
      }
    },
    {
      description: "ClonEliteFund invests in Cosmos ecosystem projects, focusing on scalability, security, and interoperability to maximize returns.",
      type_asset: "cw20",
      address: "terra164ssz60yvsxey0ku9mtcaegdeyxwzuwwqyrp238nvflwqve0pvxsra7fa2",
      denom_units: [{
        denom: "cw20:terra164ssz60yvsxey0ku9mtcaegdeyxwzuwwqyrp238nvflwqve0pvxsra7fa2",
        exponent: 0
      }, {
        denom: "CLON",
        exponent: 6
      }],
      base: "cw20:terra164ssz60yvsxey0ku9mtcaegdeyxwzuwwqyrp238nvflwqve0pvxsra7fa2",
      name: "CLON",
      display: "CLON",
      symbol: "CLON",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/clon1.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/clon1.png"
      }]
    },
    {
      description: "ERIS Liquid Alliance Staked ampROAR",
      denom_units: [{
        denom: "factory/terra1dndhtdr2v7ca8rrn67chlqw3cl3xhm3m2uxls62vghcg3fsh5tpss5xmcu/MOAR",
        exponent: 0
      }, {
        denom: "MOAR",
        exponent: 6
      }],
      base: "factory/terra1dndhtdr2v7ca8rrn67chlqw3cl3xhm3m2uxls62vghcg3fsh5tpss5xmcu/MOAR",
      name: "ERIS MOAR",
      display: "MOAR",
      symbol: "MOAR",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/moar.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/moar.png"
      }]
    },
    {
      description: "Tether USDt on Terra",
      denom_units: [{
        denom: "ibc/9B19062D46CAB50361CE9B0A3E6D0A7A53AC9E7CB361F32A73CC733144A9A9E5",
        exponent: 0
      }, {
        denom: "usdt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/9B19062D46CAB50361CE9B0A3E6D0A7A53AC9E7CB361F32A73CC733144A9A9E5",
      name: "Tether USDt",
      display: "usdt",
      symbol: "USDt",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "kava",
          base_denom: "erc20/tether/usdt",
          channel_id: "channel-138"
        },
        chain: {
          channel_id: "channel-272",
          path: "transfer/channel-272/erc20/tether/usdt"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "kava",
          base_denom: "erc20/tether/usdt"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      }
    },
    {
      description: "ATOM-LUNA liquidity pool token on URA",
      denom_units: [{
        denom: "factory/terra1djk2zl83dspt696ex5crhfacu8vm6934576t4zdd2592fzyahr2qma6guq/ULUN-IBC/-LP",
        exponent: 0
      }, {
        denom: "atom-luna-lp",
        exponent: 6
      }],
      base: "factory/terra1djk2zl83dspt696ex5crhfacu8vm6934576t4zdd2592fzyahr2qma6guq/ULUN-IBC/-LP",
      name: "ATOM-LUNA LP Token URA",
      display: "atom-luna-lp",
      symbol: "ATOM-LUNA-LP",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/ura.svg"
      }]
    },
    {
      description: "LUNA-USDC liquidity pool token on URA",
      denom_units: [{
        denom: "factory/terra12jxfw2vg4cu6mxlgf39dp5ccxtuwm468w8eh9cnh2qsxc9t0sffs7ekhft/ULUN-IBC/-LP",
        exponent: 0
      }, {
        denom: "luna-usdc-lp",
        exponent: 6
      }],
      base: "factory/terra12jxfw2vg4cu6mxlgf39dp5ccxtuwm468w8eh9cnh2qsxc9t0sffs7ekhft/ULUN-IBC/-LP",
      name: "LUNA-USDC LP Token URA",
      display: "luna-usdc-lp",
      symbol: "LUNA-USDC-LP",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/ura.svg"
      }]
    },
    {
      description: "LUNA-USDT liquidity pool token on URA",
      denom_units: [{
        denom: "factory/terra1w9spejtuac5dt0gympq576uhwde39exhh7hdxwl99rjvaphfukkq6y4cv7/ULUN-IBC/-LP",
        exponent: 0
      }, {
        denom: "luna-usdt-lp",
        exponent: 6
      }],
      base: "factory/terra1w9spejtuac5dt0gympq576uhwde39exhh7hdxwl99rjvaphfukkq6y4cv7/ULUN-IBC/-LP",
      name: "LUNA-USDT LP Token URA",
      display: "luna-usdt-lp",
      symbol: "LUNA-USDT-LP",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/ura.svg"
      }]
    },
    {
      description: "ashLUNA",
      denom_units: [{
        denom: "factory/terra1f5cfm48gcezl3cx25l64ngc4yktnmx7rcpj3kggu6v273742sqqs5yn5ks/luna.ash",
        exponent: 0
      }, {
        denom: "ashLUNA",
        exponent: 6
      }],
      base: "factory/terra1f5cfm48gcezl3cx25l64ngc4yktnmx7rcpj3kggu6v273742sqqs5yn5ks/luna.ash",
      name: "ashLUNA",
      display: "ashLUNA",
      symbol: "ashLUNA",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.ash.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.ash.png"
      }]
    }
  ]
};
var assets_default165 = info457;

// node_modules/chain-registry/esm/mainnet/terra2/chain.js
var info458 = {
  $schema: "../chain.schema.json",
  chain_name: "terra2",
  status: "live",
  network_type: "mainnet",
  website: "https://www.terra.money/",
  pretty_name: "Terra",
  chain_id: "phoenix-1",
  daemon_name: "terrad",
  node_home: "$HOME/.terra",
  bech32_prefix: "terra",
  slip44: 330,
  fees: {
    fee_tokens: [{
      denom: "uluna",
      fixed_min_gas_price: 0.015,
      low_gas_price: 0.015,
      average_gas_price: 0.015,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uluna"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.svg"
  },
  description: "Fueled by a passionate community and deep developer talent pool, the Terra blockchain is built to enable the next generation of Web3 products and services.",
  apis: {
    rpc: [
      {
        address: "https://terra2-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://terra-rpc.polkachu.com",
        provider: "polkachu"
      },
      {
        address: "https://terra-rpc.stakely.io:443/",
        provider: "stakely"
      },
      {
        address: "https://phoenix-rpc.terra.dev:443",
        provider: "Terraform Labs"
      },
      {
        address: "https://terra-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://rpc-terra-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://rpc-terra.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://terra-phoenix-rpc.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://rpc-terra.wildsage.io",
        provider: "\u{1F9D9} WildSage Labs"
      },
      {
        address: "https://terra.interstellar-lounge.org",
        provider: "Interstellar Lounge \u{1F378}"
      },
      {
        address: "https://terra2.tdrsys.com:2053",
        provider: "TdrSys"
      },
      {
        address: "https://terra-rpc.cosmosrescue.dev:8443",
        provider: "cosmosrescue"
      }
    ],
    rest: [
      {
        address: "https://lcd-terra.wildsage.io",
        provider: "\u{1F9D9} WildSage Labs"
      },
      {
        address: "https://phoenix-lcd.terra.dev:443",
        provider: "Terraform Labs"
      },
      {
        address: "https://api-terra.cosmos-spaces.cloud",
        provider: "Cosmos Spaces"
      },
      {
        address: "https://terra-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://api-terra-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://terra-phoenix-api.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://terra-rest.interstellar-lounge.org",
        provider: "Interstellar Lounge \u{1F378}"
      },
      {
        address: "https://terra2.tdrsys.com",
        provider: "TdrSys"
      },
      {
        address: "https://terra-api.cosmosrescue.dev:8443",
        provider: "cosmosrescue"
      }
    ],
    grpc: [
      {
        address: "terra2-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "terra-grpc.polkachu.com:11790",
        provider: "Polkachu"
      },
      {
        address: "terra-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "terra-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "grpc-terra.cosmos-spaces.cloud:2690",
        provider: "Cosmos Spaces"
      },
      {
        address: "grpc-terra-01.stakeflow.io:1102",
        provider: "Stakeflow"
      },
      {
        address: "https://terra2.tdrsys.com:2083",
        provider: "TdrSys"
      }
    ]
  },
  explorers: [
    {
      kind: "atomscan",
      url: "https://atomscan.com/terra2",
      tx_page: "https://atomscan.com/terra2/transactions/${txHash}",
      account_page: "https://atomscan.com/terra2/accounts/${accountAddress}"
    },
    {
      kind: "finder",
      url: "http://finder.terra.money/",
      tx_page: "https://finder.terra.money/mainnet/tx/${txHash}",
      account_page: "https://finder.terra.money/mainnet/address/${accountAddress}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/terra",
      account_page: "https://stakeflow.io/terra/accounts/${accountAddress}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/terra",
      tx_page: "https://www.mintscan.io/terra/transactions/${txHash}",
      account_page: "https://www.mintscan.io/terra/accounts/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.svg"
  }]
};
var chain_default165 = info458;

// node_modules/chain-registry/esm/mainnet/terra2/ibc.js
var info459 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "acrechain",
      client_id: "07-tendermint-11",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-101",
      connection_id: "connection-89"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-77",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akash",
      client_id: "07-tendermint-173",
      connection_id: "connection-159"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-387",
      connection_id: "connection-364"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-116",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-273",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "andromeda",
      client_id: "07-tendermint-15",
      connection_id: "connection-11"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-409",
      connection_id: "connection-413"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-351",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-42",
      connection_id: "connection-47"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-384",
      connection_id: "connection-360"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-50",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-265",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-39",
      connection_id: "connection-21"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-7",
      connection_id: "connection-10"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "carbon",
      client_id: "07-tendermint-33",
      connection_id: "connection-16"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-66",
      connection_id: "connection-54"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "demex"
      }
    }, {
      chain_1: {
        channel_id: "channel-16",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-41",
        port_id: "wasm.terra1e0mrzy8077druuu42vs0hu7ugguade0cj65dgtauyaw4gsl4kv0qtdf2au"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-53",
      connection_id: "connection-16"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-391",
      connection_id: "connection-381"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-15",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-300",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cheqd",
      client_id: "07-tendermint-83",
      connection_id: "connection-61"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-392",
      connection_id: "connection-382"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-34",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-301",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "comdex",
      client_id: "07-tendermint-117",
      connection_id: "connection-56"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-70",
      connection_id: "connection-59"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-39",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-760",
      connection_id: "connection-551"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-0",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-339",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-36",
      connection_id: "connection-37"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-68",
      connection_id: "connection-57"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-27",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "decentr",
      client_id: "07-tendermint-26",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-395",
      connection_id: "connection-385"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-315",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-9",
      connection_id: "connection-14"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-390",
      connection_id: "connection-380"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-299",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "furya",
      client_id: "07-tendermint-14",
      connection_id: "connection-10"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-422",
      connection_id: "connection-436"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-495",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-216",
      connection_id: "connection-202"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-369",
      connection_id: "connection-311"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-151",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-255",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "juno",
      client_id: "07-tendermint-185",
      connection_id: "connection-128"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-3",
      connection_id: "connection-6"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-86",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kava",
      client_id: "07-tendermint-156",
      connection_id: "connection-196"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-386",
      connection_id: "connection-362"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-138",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-272",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kujira",
      client_id: "07-tendermint-5",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-11",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-28",
        port_id: "wasm.terra1e0mrzy8077druuu42vs0hu7ugguade0cj65dgtauyaw4gsl4kv0qtdf2au"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "mars",
      client_id: "07-tendermint-10",
      connection_id: "connection-6"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-104",
      connection_id: "connection-91"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-78",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "migaloo",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-105",
      connection_id: "connection-93"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-86",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-87",
        port_id: "wasm.terra1e0mrzy8077druuu42vs0hu7ugguade0cj65dgtauyaw4gsl4kv0qtdf2au"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutron",
      client_id: "07-tendermint-12",
      connection_id: "connection-9"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-274",
      connection_id: "connection-192"
    },
    channels: [
      {
        chain_1: {
          channel_id: "channel-25",
          port_id: "transfer"
        },
        chain_2: {
          channel_id: "channel-229",
          port_id: "transfer"
        },
        ordering: "unordered",
        version: "ics20-1",
        tags: {
          status: "live",
          preferred: true
        }
      },
      {
        chain_1: {
          channel_id: "channel-5",
          port_id: "transfer"
        },
        chain_2: {
          channel_id: "channel-167",
          port_id: "wasm.terra1jhfjnm39y3nn9l4520mdn4k5mw23nz0674c4gsvyrcr90z9tqcvst22fce"
        },
        ordering: "unordered",
        version: "ics20-1",
        tags: {
          status: "live",
          preferred: true
        }
      },
      {
        chain_1: {
          channel_id: "channel-2112",
          port_id: "wasm.neutron1ffus553eet978k024lmssw0czsxwr97mggyv85lpcsdkft8v9ufsz3sa07"
        },
        chain_2: {
          channel_id: "channel-396",
          port_id: "wasm.terra1k9j8rcyk87v5jvfla2m9wp200azegjz0eshl7n2pwv852a7ssceqsnn7pq"
        },
        ordering: "unordered",
        version: "astroport-ibc-v1",
        tags: {
          status: "live",
          preferred: true
        }
      }
    ]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-56",
      connection_id: "connection-54"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-367",
      connection_id: "connection-302"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-30",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-253",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1979",
      connection_id: "connection-1536"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-2",
      connection_id: "connection-3"
    },
    channels: [
      {
        chain_1: {
          channel_id: "channel-251",
          port_id: "transfer"
        },
        chain_2: {
          channel_id: "channel-1",
          port_id: "transfer"
        },
        ordering: "unordered",
        version: "ics20-1",
        tags: {
          status: "live",
          preferred: true,
          dex: "osmosis"
        }
      },
      {
        chain_1: {
          channel_id: "channel-559",
          port_id: "transfer"
        },
        chain_2: {
          channel_id: "channel-85",
          port_id: "wasm.terra1d90p5lacfxnqgjxjupu234lxnxyeu8fdeef4d0e0nqy3p30r7gss4myn9x"
        },
        ordering: "unordered",
        version: "ics20-1",
        tags: {
          status: "live",
          preferred: true,
          dex: "osmosis"
        }
      },
      {
        chain_1: {
          channel_id: "channel-341",
          port_id: "transfer"
        },
        chain_2: {
          channel_id: "channel-26",
          port_id: "wasm.terra1e0mrzy8077druuu42vs0hu7ugguade0cj65dgtauyaw4gsl4kv0qtdf2au"
        },
        ordering: "unordered",
        version: "ics20-1",
        tags: {
          status: "live",
          preferred: true,
          dex: "osmosis"
        }
      },
      {
        chain_1: {
          channel_id: "channel-21671",
          port_id: "transfer"
        },
        chain_2: {
          channel_id: "channel-392",
          port_id: "wasm.terra1jhfjnm39y3nn9l4520mdn4k5mw23nz0674c4gsvyrcr90z9tqcvst22fce"
        },
        ordering: "unordered",
        version: "ics20-1",
        tags: {
          status: "live",
          preferred: true,
          dex: "osmosis"
        }
      }
    ]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "pryzm",
      client_id: "07-tendermint-4",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-410",
      connection_id: "connection-414"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-473",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-38",
      connection_id: "connection-20"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-4",
      connection_id: "connection-7"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-16",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }, {
      chain_1: {
        channel_id: "channel-127",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-382",
        port_id: "wasm.terra1e0mrzy8077druuu42vs0hu7ugguade0cj65dgtauyaw4gsl4kv0qtdf2au"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "stafihub",
      client_id: "07-tendermint-5",
      connection_id: "connection-5"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-317",
      connection_id: "connection-233"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-204",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "stargaze",
      client_id: "07-tendermint-337",
      connection_id: "connection-275"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-405",
      connection_id: "connection-408"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-266",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-324",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "stride",
      client_id: "07-tendermint-51",
      connection_id: "connection-32"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-87",
      connection_id: "connection-72"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-52",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-46",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "terra",
      client_id: "07-tendermint-235",
      connection_id: "connection-142"
    },
    chain_2: {
      chain_name: "terra2",
      client_id: "07-tendermint-394",
      connection_id: "connection-384"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-85",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-314",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default129 = info459;

// node_modules/chain-registry/esm/mainnet/terra2/index.js
var assets165 = assets_default165;
var chain165 = chain_default165;
var ibc129 = ibc_default129;

// node_modules/chain-registry/esm/mainnet/tgrade/assets.js
var info460 = {
  $schema: "../assetlist.schema.json",
  chain_name: "tgrade",
  assets: [{
    description: "The native token of Tgrade",
    denom_units: [{
      denom: "utgd",
      exponent: 0
    }, {
      denom: "tgd",
      exponent: 6
    }],
    base: "utgd",
    name: "Tgrade",
    display: "tgd",
    symbol: "TGD",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tgrade/images/tgrade-symbol-gradient.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tgrade/images/tgrade-symbol-gradient.svg"
    },
    coingecko_id: "tgrade",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tgrade/images/tgrade-symbol-gradient.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tgrade/images/tgrade-symbol-gradient.svg"
    }]
  }]
};
var assets_default166 = info460;

// node_modules/chain-registry/esm/mainnet/tgrade/chain.js
var info461 = {
  $schema: "../chain.schema.json",
  chain_name: "tgrade",
  status: "live",
  network_type: "mainnet",
  website: "https://tgrade.finance/",
  pretty_name: "Tgrade",
  chain_id: "tgrade-mainnet-1",
  bech32_prefix: "tgrade",
  daemon_name: "tgrade",
  node_home: "$HOME/.tgrade",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "utgd",
      fixed_min_gas_price: 0.05,
      low_gas_price: 0.05,
      average_gas_price: 0.075,
      high_gas_price: 0.1
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "utgd"
    }]
  },
  codebase: {
    cosmwasm_enabled: true
  },
  apis: {
    rpc: [{
      address: "https://rpc.mainnet-1.tgrade.confio.run",
      provider: "Confio"
    }, {
      address: "https://rpc.tgrade.posthuman.digital",
      provider: "POSTHUMAN \uA74F DVS"
    }],
    rest: [{
      address: "https://api.mainnet-1.tgrade.confio.run",
      provider: "Confio"
    }, {
      address: "https://lcd.tgrade.posthuman.digital",
      provider: "POSTHUMAN \uA74F DVS"
    }],
    grpc: []
  },
  explorers: [{
    kind: "aneka",
    url: "https://tgrade.aneka.io",
    tx_page: "https://tgrade.aneka.io/txs/${txHash}",
    account_page: "https://tgrade.aneka.io/accounts/${accountAddress}"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tgrade/images/tgrade-logo-gradient_h.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tgrade/images/tgrade-symbol-gradient.svg"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tgrade/images/tgrade-logo-gradient_h.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/tgrade/images/tgrade-symbol-gradient.svg"
  }]
};
var chain_default166 = info461;

// node_modules/chain-registry/esm/mainnet/tgrade/ibc.js
var info462 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "evmos",
    client_id: "07-tendermint-88",
    connection_id: "connection-46"
  },
  chain_2: {
    chain_name: "tgrade",
    client_id: "07-tendermint-8",
    connection_id: "connection-11"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-34",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-9",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2025",
    connection_id: "connection-1565"
  },
  chain_2: {
    chain_name: "tgrade",
    client_id: "07-tendermint-0",
    connection_id: "connection-0"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-263",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default130 = info462;

// node_modules/chain-registry/esm/mainnet/tgrade/index.js
var assets166 = assets_default166;
var chain166 = chain_default166;
var ibc130 = ibc_default130;

// node_modules/chain-registry/esm/mainnet/titan/assets.js
var info463 = {
  $schema: "../assetlist.schema.json",
  chain_name: "titan",
  assets: [{
    description: "The native token of the Titan network.",
    denom_units: [
      {
        denom: "atkx",
        exponent: 0,
        aliases: ["attotkx"]
      },
      {
        denom: "utkx",
        exponent: 12,
        aliases: ["microtkx"]
      },
      {
        denom: "mtkx",
        exponent: 15,
        aliases: ["millitkx"]
      },
      {
        denom: "tkx",
        exponent: 18,
        aliases: []
      }
    ],
    base: "atkx",
    display: "tkx",
    name: "titan tkx",
    symbol: "TKX",
    coingecko_id: "tokenize-xchange",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/titan/images/tkx.png"
    }],
    keywords: ["staking"],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/titan/images/tkx.png"
    }
  }]
};
var assets_default167 = info463;

// node_modules/chain-registry/esm/mainnet/titan/chain.js
var info464 = {
  $schema: "../chain.schema.json",
  chain_name: "titan",
  status: "live",
  network_type: "mainnet",
  website: "https://titanlab.io/",
  pretty_name: "Titan",
  chain_id: "titan_18888-1",
  bech32_prefix: "titan",
  node_home: "$HOME/.titand",
  daemon_name: "titand",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "atkx",
      fixed_min_gas_price: 1e11,
      low_gas_price: 1e11,
      average_gas_price: 11e10,
      high_gas_price: 2e11
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "atkx"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.47.6-titan.4",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.45.0"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/titan/images/chain.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/titan/images/chain.svg"
  }],
  apis: {
    rpc: [
      {
        address: "https://titan-rpc.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "https://titan-rpc-tokyo.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "https://titan-rpc-seoul.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "https://titan-rpc-hongkong.titanlab.io:443",
        provider: "Titanlab.io"
      }
    ],
    rest: [
      {
        address: "https://titan-lcd.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "https://titan-lcd-tokyo.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "https://titan-lcd-seoul.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "https://titan-lcd-hongkong.titanlab.io:443",
        provider: "Titanlab.io"
      }
    ],
    grpc: [
      {
        address: "titan-grpc.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "titan-grpc-hongkong.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "titan-grpc-tokyo.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "titan-grpc-seoul.titanlab.io:443",
        provider: "Titanlab.io"
      }
    ],
    "evm-http-jsonrpc": [
      {
        address: "https://titan-json-rpc.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "https://titan-json-rpc-tokyo.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "https://titan-json-rpc-seoul.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "https://titan-json-rpc-hongkong.titanlab.io:443",
        provider: "Titanlab.io"
      }
    ]
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://tkxscan.io",
    tx_page: "https://tkxscan.io/Titan/tx/${txHash}",
    account_page: "https://tkxscan.io/Titan/account/${accountAddress}"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/titan/images/chain.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/titan/images/chain.svg"
  }
};
var chain_default167 = info464;

// node_modules/chain-registry/esm/mainnet/titan/index.js
var assets167 = assets_default167;
var chain167 = chain_default167;

// node_modules/chain-registry/esm/mainnet/umee/assets.js
var info465 = {
  $schema: "../assetlist.schema.json",
  chain_name: "umee",
  assets: [{
    description: "The native token of Umee",
    denom_units: [{
      denom: "uumee",
      exponent: 0
    }, {
      denom: "umee",
      exponent: 6
    }],
    base: "uumee",
    name: "Umee",
    display: "umee",
    symbol: "UMEE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/umee/images/umee.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/umee/images/umee.svg"
    },
    coingecko_id: "umee",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/umee/images/umee.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/umee/images/umee.svg"
    }]
  }]
};
var assets_default168 = info465;

// node_modules/chain-registry/esm/mainnet/umee/chain.js
var info466 = {
  $schema: "../chain.schema.json",
  chain_name: "umee",
  status: "live",
  network_type: "mainnet",
  website: "https://www.ux.xyz",
  pretty_name: "UX Chain",
  chain_id: "umee-1",
  bech32_prefix: "umee",
  daemon_name: "umeed",
  node_home: "$HOME/.umee",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uumee",
      fixed_min_gas_price: 0.1,
      low_gas_price: 0.1,
      average_gas_price: 0.12,
      high_gas_price: 0.2
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uumee"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.47",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.43"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/umee/images/umee.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/umee/images/umee.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://umee-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://rpc-umee-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://umee-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "http://umee.rpc.m.stavr.tech:10457",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "http://rpc-umee-0.node75.org:26657",
        provider: "Pro-Nodes75"
      },
      {
        address: "https://umee-rpc.quantnode.tech",
        provider: "QuantNode"
      },
      {
        address: "https://umee-rpc.tienthuattoan.ventures",
        provider: "TienThuatToan"
      },
      {
        address: "https://rpc-umee-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://umee-rpc.staketab.org:443",
        provider: "Staketab"
      },
      {
        address: "https://umee-rpc.theamsolutions.info",
        provider: "AM Solutions"
      },
      {
        address: "https://umee.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://umee-rpc.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://rpc-umee.mms.team",
        provider: "MMS"
      },
      {
        address: "https://rpc-umee.mzonder.com",
        provider: "MZONDER"
      },
      {
        address: "https://umee-rpc.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://umee-rpc.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://umee.rpc.stakevillage.net:443",
        provider: "Stake Village"
      },
      {
        address: "https://umee-rpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    rest: [
      {
        address: "https://api-umee-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://umee.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://umee-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://umee-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://umee-lcd.quantnode.tech",
        provider: "QuantNode"
      },
      {
        address: "https://umee-api.tienthuattoan.ventures",
        provider: "TienThuatToan"
      },
      {
        address: "https://api-umee-01.stakeflow.io",
        provider: "Stakeflow"
      },
      {
        address: "https://umee-rest.staketab.org",
        provider: "Staketab"
      },
      {
        address: "https://umee-api.theamsolutions.info",
        provider: "AM Solutions"
      },
      {
        address: "https://umee.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://umee-api.w3coins.io",
        provider: "w3coins"
      },
      {
        address: "https://api-umee.mms.team",
        provider: "MMS"
      },
      {
        address: "https://api-umee.mzonder.com",
        provider: "MZONDER"
      },
      {
        address: "https://umee-api.stake-town.com",
        provider: "StakeTown"
      },
      {
        address: "https://umee-api.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://umee.api.stakevillage.net",
        provider: "Stake Village"
      },
      {
        address: "https://umee-api.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    grpc: [
      {
        address: "grpc-umee-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "umee-grpc.polkachu.com:13690",
        provider: "Polkachu"
      },
      {
        address: "umee-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "umee-grpc.quantnode.tech:9090",
        provider: "QuantNode gRPC"
      },
      {
        address: "umee.grpc.m.stavr.tech:9090",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "umee-grpc.quantnode.tech:9091",
        provider: "QuantNode gRPCweb"
      },
      {
        address: "umee-grpc.tienthuattoan.ventures:9090",
        provider: "TienThuatToan"
      },
      {
        address: "grpc-umee-01.stakeflow.io:9990",
        provider: "Stakeflow"
      },
      {
        address: "services.staketab.com:9020",
        provider: "Staketab"
      },
      {
        address: "umee.grpc.kjnodes.com:16290",
        provider: "kjnodes"
      },
      {
        address: "umee-grpc.w3coins.io:13690",
        provider: "w3coins"
      },
      {
        address: "grpc-umee.mms.team:443",
        provider: "MMS"
      },
      {
        address: "grpc-umee.mzonder.com:443",
        provider: "MZONDER"
      },
      {
        address: "umee-grpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "umee.grpc.stakevillage.net:11090",
        provider: "Stake Village"
      },
      {
        address: "umee-grpc.noders.services:32090",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/umee/",
      tx_page: "https://www.mintscan.io/umee/transactions/${txHash}",
      account_page: "https://www.mintscan.io/umee/accounts/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/umee",
      tx_page: "https://ping.pub/umee/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525} Explorer",
      url: "https://explorer.stavr.tech/umee",
      tx_page: "https://explorer.stavr.tech/umee/tx/${txHash}"
    },
    {
      kind: "explorers.guru",
      url: "https://umee.explorers.guru",
      tx_page: "https://umee.explorers.guru/transaction/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/umee",
      tx_page: "https://atomscan.com/umee/transactions/${txHash}",
      account_page: "https://atomscan.com/umee/accounts/${accountAddress}"
    },
    {
      kind: "Stakeflow",
      url: "https://stakeflow.io/umee",
      account_page: "https://stakeflow.io/umee/accounts/${accountAddress}"
    },
    {
      kind: "Stake-Take",
      url: "https://explorer.stake-take.com/umee",
      tx_page: "https://explorer.stake-take.com/umee/transactions/${txHash}",
      account_page: "https://explorer.stake-take.com/umee/account/${accountAddress}"
    },
    {
      kind: "Stake Village",
      url: "https://exp.stakevillage.net/umee",
      tx_page: "https://exp.stakevillage.net/umee/tx/${txHash}",
      account_page: "https://exp.stakevillage.net/umee/account/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/umee",
      tx_page: "https://ezstaking.app/umee/txs/${txHash}",
      account_page: "https://ezstaking.app/umee/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/umee/images/umee.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/umee/images/umee.svg"
  }]
};
var chain_default168 = info466;

// node_modules/chain-registry/esm/mainnet/umee/ibc.js
var info467 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "agoric",
      client_id: "07-tendermint-18",
      connection_id: "connection-18"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-152",
      connection_id: "connection-101"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-42",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-6",
      connection_id: "connection-5"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-228",
      connection_id: "connection-190"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-97",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelar",
      client_id: "07-tendermint-64",
      connection_id: "connection-43"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-63",
      connection_id: "connection-44"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-33",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestia",
      client_id: "07-tendermint-58",
      connection_id: "connection-18"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-245",
      connection_id: "connection-209"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-19",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-119",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshub",
      client_id: "07-tendermint-611",
      connection_id: "connection-473"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-9",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-288",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {}
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "crescent",
      client_id: "07-tendermint-56",
      connection_id: "connection-53"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-170",
      connection_id: "connection-110"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-36",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-49",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "crescent"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "dydx",
      client_id: "07-tendermint-8",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-244",
      connection_id: "connection-208"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-118",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injective",
      client_id: "07-tendermint-229",
      connection_id: "connection-217"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-243",
      connection_id: "connection-206"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-159",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-116",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kava",
      client_id: "07-tendermint-124",
      connection_id: "connection-160"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-229",
      connection_id: "connection-191"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-119",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-98",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "migaloo",
      client_id: "07-tendermint-104",
      connection_id: "connection-83"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-234",
      connection_id: "connection-195"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-56",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-104",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noble",
      client_id: "07-tendermint-73",
      connection_id: "connection-74"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-248",
      connection_id: "connection-210"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-120",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1805",
      connection_id: "connection-1410"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-6",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-184",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "persistence",
      client_id: "07-tendermint-105",
      connection_id: "connection-144"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-179",
      connection_id: "connection-119"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-81",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "quicksilver",
      client_id: "07-tendermint-27",
      connection_id: "connection-13"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-183",
      connection_id: "connection-122"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-49",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-53",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1"
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "regen",
      client_id: "07-tendermint-176",
      connection_id: "connection-148"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-239",
      connection_id: "connection-200"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-158",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-107",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "secretnetwork",
      client_id: "07-tendermint-193",
      connection_id: "connection-188"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-249",
      connection_id: "connection-213"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-126",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-123",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        properties: "privacy"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "stride",
      client_id: "07-tendermint-32",
      connection_id: "connection-20"
    },
    chain_2: {
      chain_name: "umee",
      client_id: "07-tendermint-64",
      connection_id: "connection-45"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-29",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-34",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default131 = info467;

// node_modules/chain-registry/esm/mainnet/umee/index.js
var assets168 = assets_default168;
var chain168 = chain_default168;
var ibc131 = ibc_default131;

// node_modules/chain-registry/esm/mainnet/unification/assets.js
var info468 = {
  $schema: "../assetlist.schema.json",
  chain_name: "unification",
  assets: [{
    description: "Staking and governance coin for the Unification Blockchain",
    extended_description: "Fundamentally, the Unification Blockchain Toolkit comprises two core branches: Blockchain Business products, to welcome traditional enterprises into the Web3 economy; and Permissionless Products, an open-access toolkit to power and enrich Dapps on Ethereum/EVM networks",
    denom_units: [{
      denom: "nund",
      exponent: 0
    }, {
      denom: "FUND",
      exponent: 9
    }],
    base: "nund",
    name: "Unification Network",
    display: "FUND",
    symbol: "FUND",
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/unification/images/fund.svg",
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/unification/images/fund.png"
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/unification/images/fund.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/unification/images/fund.svg"
    },
    socials: {
      website: "https://unification.com",
      twitter: "https://twitter.com/UnificationUND"
    },
    coingecko_id: "unification"
  }]
};
var assets_default169 = info468;

// node_modules/chain-registry/esm/mainnet/unification/chain.js
var info469 = {
  $schema: "../chain.schema.json",
  chain_name: "unification",
  status: "live",
  network_type: "mainnet",
  website: "https://unification.com/",
  pretty_name: "Unification",
  chain_id: "FUND-MainNet-2",
  bech32_prefix: "und",
  daemon_name: "und",
  node_home: "$HOME/.und_mainchain",
  key_algos: ["secp256k1"],
  slip44: 5555,
  fees: {
    fee_tokens: [{
      denom: "nund",
      fixed_min_gas_price: 25,
      low_gas_price: 100,
      average_gas_price: 200,
      high_gas_price: 300
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "nund"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "0.46.15",
    cosmwasm_enabled: false
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/unification/images/fund.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/unification/images/fund.svg"
  }],
  apis: {
    rpc: [{
      address: "https://rpc1.unification.io:443",
      provider: "Unification"
    }, {
      address: "https://rpc.unification.chainmasters.ninja/",
      provider: "Chainmasters"
    }],
    rest: [{
      address: "https://rest.unification.io",
      provider: "Unification"
    }, {
      address: "https://rest.unification.chainmasters.ninja/",
      provider: "Chainmasters"
    }],
    grpc: [{
      address: "grpc.unification.io:443",
      provider: "Unification"
    }, {
      address: "grpc.unification.chainmasters.info",
      provider: "Chainmasters"
    }]
  },
  explorers: [
    {
      kind: "bigdipper",
      url: "https://explorer.unification.io/",
      tx_page: "https://explorer.unification.io/transactions/${txHash}",
      account_page: "https://explorer.unification.io/accounts/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://explorer.unification.chainmasters.ninja/unification",
      tx_page: "https://explorer.unification.chainmasters.ninja/unification/tx/${txHash}",
      account_page: "https://explorer.unification.chainmasters.ninja/Unification/account/${accountAddress}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/unification",
      tx_page: "https://atomscan.com/unification/transactions/${txHash}",
      account_page: "https://atomscan.com/unification/accounts/${accountAddress}"
    }
  ],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/unification/images/fund.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/unification/images/fund.svg"
  }
};
var chain_default169 = info469;

// node_modules/chain-registry/esm/mainnet/unification/ibc.js
var info470 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "gravitybridge",
    client_id: "07-tendermint-190",
    connection_id: "connection-161"
  },
  chain_2: {
    chain_name: "unification",
    client_id: "07-tendermint-4",
    connection_id: "connection-4"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-98",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-2",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2229",
    connection_id: "connection-1746"
  },
  chain_2: {
    chain_name: "unification",
    client_id: "07-tendermint-1",
    connection_id: "connection-1"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-382",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default132 = info470;

// node_modules/chain-registry/esm/mainnet/unification/index.js
var assets169 = assets_default169;
var chain169 = chain_default169;
var ibc132 = ibc_default132;

// node_modules/chain-registry/esm/mainnet/ununifi/assets.js
var info471 = {
  $schema: "../assetlist.schema.json",
  chain_name: "ununifi",
  assets: [{
    description: "The governance token of UnUniFi protocol.",
    denom_units: [{
      denom: "uguu",
      exponent: 0
    }, {
      denom: "guu",
      exponent: 6
    }],
    base: "uguu",
    name: "UnUniFi",
    display: "guu",
    symbol: "GUU",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/ununifi/images/ununifi.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/ununifi/images/ununifi.svg"
    },
    keywords: [
      "staking",
      "wasm",
      "assets",
      "nft"
    ],
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/ununifi/images/ununifi.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/ununifi/images/ununifi.svg"
    }]
  }]
};
var assets_default170 = info471;

// node_modules/chain-registry/esm/mainnet/ununifi/chain.js
var info472 = {
  $schema: "../chain.schema.json",
  chain_name: "ununifi",
  status: "live",
  network_type: "mainnet",
  website: "https://ununifi.io/",
  pretty_name: "UnUniFi",
  chain_id: "ununifi-beta-v1",
  bech32_prefix: "ununifi",
  daemon_name: "ununifid",
  node_home: "$HOME/.ununifi",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uguu",
      fixed_min_gas_price: 25e-4,
      low_gas_price: 25e-4,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uguu"
    }],
    lock_duration: {
      time: "1209600s"
    }
  },
  codebase: {
    cosmos_sdk_version: "ununifi/cosmos-sdk v0.47.3-custom-bank-1",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.40.1"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/ununifi/images/ununifi.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/ununifi/images/ununifi.svg"
  },
  apis: {
    rpc: [
      {
        address: "http://a.lcd.ununifi.cauchye.net:26657",
        provider: "CauchyE"
      },
      {
        address: "https://rpc.ununifi.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://ununifi-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://ununifi-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://ununifi-rpc.genznodes.dev",
        provider: "genznodes"
      }
    ],
    rest: [
      {
        address: "https://a.lcd.ununifi.cauchye.net:1318",
        provider: "CauchyE"
      },
      {
        address: "https://b.lcd.ununifi.cauchye.net:1318",
        provider: "CauchyE"
      },
      {
        address: "https://api.ununifi.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://ununifi-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://ununifi-api.genznodes.dev",
        provider: "genznodes"
      }
    ],
    grpc: [
      {
        address: "a.lcd.ununifi.cauchye.net:9092",
        provider: "CauchyE"
      },
      {
        address: "b.lcd.ununifi.cauchye.net:9092",
        provider: "CauchyE"
      },
      {
        address: "ununifi-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "grpc.ununifi.nodestake.top:9090",
        provider: "NodeStake"
      },
      {
        address: "https://grpc-ununifi.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "https://ununifi-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "ununifi-grpc.genznodes.dev:54090",
        provider: "genznodes"
      }
    ]
  },
  explorers: [
    {
      kind: "UnUniFi Explorer",
      url: "https://ununifi.io/explorer",
      tx_page: "https://ununifi.io/explorer/txs/${txHash}"
    },
    {
      kind: "NodeStake Explorer",
      url: "https://explorer.nodestake.top/ununifi",
      tx_page: "https://explorer.nodestake.top/ununifi/tx/${txHash}"
    },
    {
      kind: "Nodeist Explorer",
      url: "https://exp.nodeist.net/Ununifi",
      tx_page: "https://exp.nodeist.net/Ununifi/tx/${txHash}"
    }
  ],
  keywords: [
    "staking",
    "wasm",
    "assets",
    "nft"
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/ununifi/images/ununifi.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/ununifi/images/ununifi.svg"
  }]
};
var chain_default170 = info472;

// node_modules/chain-registry/esm/mainnet/ununifi/index.js
var assets170 = assets_default170;
var chain170 = chain_default170;

// node_modules/chain-registry/esm/mainnet/uptick/assets.js
var info473 = {
  $schema: "../assetlist.schema.json",
  chain_name: "uptick",
  assets: [{
    description: "The native token of Uptick",
    denom_units: [{
      denom: "auptick",
      exponent: 0
    }, {
      denom: "uptick",
      exponent: 18
    }],
    base: "auptick",
    name: "Uptick",
    display: "uptick",
    symbol: "UPTICK",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/uptick/images/uptick.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/uptick/images/uptick.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/uptick/images/uptick.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/uptick/images/uptick.svg"
    }]
  }]
};
var assets_default171 = info473;

// node_modules/chain-registry/esm/mainnet/uptick/chain.js
var info474 = {
  $schema: "../chain.schema.json",
  chain_name: "uptick",
  status: "live",
  network_type: "mainnet",
  website: "https://uptick.network/",
  pretty_name: "Uptick",
  chain_id: "uptick_117-1",
  bech32_prefix: "uptick",
  daemon_name: "uptickd",
  node_home: "$HOME/.uptickd",
  key_algos: ["secp256k1"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "auptick",
      fixed_min_gas_price: 13e9,
      low_gas_price: 13e9,
      average_gas_price: 16e9,
      high_gas_price: 2e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "auptick"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.47.5",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.45.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/uptick/images/uptick.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/uptick/images/uptick.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://uptick-rpc.brocha.in:443",
        provider: "Brochain"
      },
      {
        address: "https://uptick.rpc.bccnodes.com:443",
        provider: "BccNodes"
      },
      {
        address: "https://rpc.uptick.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://uptick.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "http://uptick.rpc.m.stavr.tech:3157",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://m-uptick.rpc.utsa.tech",
        provider: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}"
      },
      {
        address: "https://uptick-mainnet-rpc.itrocket.net:443",
        provider: "itrocket"
      },
      {
        address: "https://uptick.rpc.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "https://uptick-rpc.staketab.org:443",
        provider: "Staketab"
      },
      {
        address: "https://uptick-rpc.stakerhouse.com",
        provider: "StakerHouse"
      },
      {
        address: "https://rpc-uptick.cakralabs.site",
        provider: "Cakra Labs"
      },
      {
        address: "https://rpc-uptick.sr20de.xyz",
        provider: "Sr20de"
      },
      {
        address: "https://uptick-rpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    rest: [
      {
        address: "https://uptick-rest.brocha.in:443",
        provider: "Brochain"
      },
      {
        address: "https://api.uptick.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://uptick.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://uptick.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://m-uptick.api.utsa.tech",
        provider: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400}"
      },
      {
        address: "https://uptick-mainnet-api.itrocket.net:443",
        provider: "itrocket"
      },
      {
        address: "https://uptick.api.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "https://uptick-rest.staketab.org",
        provider: "Staketab"
      },
      {
        address: "https://uptick-rest.stakerhouse.com",
        provider: "StakerHouse"
      },
      {
        address: "https://rest-uptick.cakralabs.site",
        provider: "Cakra Labs"
      },
      {
        address: "https://api-uptick.sr20de.xyz",
        provider: "Sr20de"
      },
      {
        address: "https://uptick-api.noders.services",
        provider: "[NODERS]TEAM"
      }
    ],
    grpc: [
      {
        address: "https://grpc.uptick.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "uptick.rpc.bccnodes.com:9690",
        provider: "BccNodes"
      },
      {
        address: "uptick.grpc.nodersteam.com:9211",
        provider: "[NODERS]TEAM"
      },
      {
        address: "uptick.grpc.kjnodes.com:11590",
        provider: "kjnodes"
      },
      {
        address: "uptick.grpc.m.stavr.tech:1901",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "uptick-mainnet-grpc.itrocket.net:10090",
        provider: "itrocket"
      },
      {
        address: "https://uptick.grpc.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "services.staketab.com:9190",
        provider: "Staketab"
      },
      {
        address: "uptick-grpc.stakerhouse.com:443",
        provider: "StakerHouse"
      },
      {
        address: "grpc-uptick.mms.team:443",
        provider: "MMS"
      },
      {
        address: "https://grpc-uptick.sr20de.xyz",
        provider: "Sr20de"
      },
      {
        address: "uptick-grpc.noders.services:24090",
        provider: "[NODERS]TEAM"
      }
    ],
    "evm-http-jsonrpc": [
      {
        address: "https://jsonrpc.uptick.nodestake.top",
        provider: "NodeStake"
      },
      {
        address: "https://uptick.jsonrpc.liveraven.net",
        provider: "LiveRaveN"
      },
      {
        address: "https://evm-uptick.sr20de.xyz",
        provider: "Sr20de"
      },
      {
        address: "https://uptick-jsonrpc.noders.services",
        provider: "[NODERS]TEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://explorers.brocha.in/uptick",
      tx_page: "https://explorers.brocha.in/uptick/tx/${txHash}"
    },
    {
      kind: "NodeStake Explorer",
      url: "https://explorer.nodestake.top/uptick",
      tx_page: "https://explorer.nodestake.top/uptick/tx/${txHash}"
    },
    {
      kind: "BccNodes Explorer",
      url: "https://explorer.bccnodes.com/uptick-M",
      tx_page: "https://explorer.bccnodes.com/uptick-M/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525} Explorer",
      url: "https://explorer.stavr.tech/uptick-mainnet",
      tx_page: "https://explorer.stavr.tech/uptick-mainnet/tx/${txHash}"
    },
    {
      kind: "\u{1D425}\u{1D41E}\u{1D42C}\u{1D427}\u{1D422}\u{1D424} | \u{1D414}\u{1D413}\u{1D412}\u{1D400} Explorer",
      url: "https://exp.utsa.tech/uptick",
      tx_page: "https://exp.utsa.tech/uptick/tx/${txHash}"
    },
    {
      kind: "cosmotracker",
      url: "https://cosmotracker.com/uptick",
      tx_page: "https://cosmotracker.com/uptick/tx/${txHash}"
    },
    {
      kind: "Upscan",
      url: "https://upscan.xyz/",
      tx_page: "https://upscan.xyz/uptick_117-1/tx/${txHash}"
    },
    {
      kind: "Sr20de",
      url: "https://explorer.sr20de.xyz/uptick",
      tx_page: "https://explorer.sr20de.xyz/uptick/tx/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/uptick/images/uptick.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/uptick/images/uptick.svg"
  }]
};
var chain_default171 = info474;

// node_modules/chain-registry/esm/mainnet/uptick/ibc.js
var info475 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "cosmoshub",
    client_id: "07-tendermint-1115",
    connection_id: "connection-788"
  },
  chain_2: {
    chain_name: "uptick",
    client_id: "07-tendermint-3",
    connection_id: "connection-1"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-535",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1"
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "irisnet",
    client_id: "07-tendermint-93",
    connection_id: "connection-72"
  },
  chain_2: {
    chain_name: "uptick",
    client_id: "07-tendermint-8",
    connection_id: "connection-2"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-39",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-2",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1"
  }]
}];
var ibc_default133 = info475;

// node_modules/chain-registry/esm/mainnet/uptick/index.js
var assets171 = assets_default171;
var chain171 = chain_default171;
var ibc133 = ibc_default133;

// node_modules/chain-registry/esm/mainnet/vidulum/assets.js
var info476 = {
  $schema: "../assetlist.schema.json",
  chain_name: "vidulum",
  assets: [{
    description: "The native token of Vidulum",
    denom_units: [{
      denom: "uvdl",
      exponent: 0
    }, {
      denom: "vdl",
      exponent: 6
    }],
    base: "uvdl",
    name: "Vidulum",
    display: "vdl",
    symbol: "VDL",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/vidulum/images/vdl.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/vidulum/images/vdl.svg"
    },
    coingecko_id: "vidulum",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/vidulum/images/vdl.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/vidulum/images/vdl.svg"
    }]
  }]
};
var assets_default172 = info476;

// node_modules/chain-registry/esm/mainnet/vidulum/chain.js
var info477 = {
  $schema: "../chain.schema.json",
  chain_name: "vidulum",
  status: "live",
  network_type: "mainnet",
  website: "https://vidulum.app/",
  pretty_name: "Vidulum",
  chain_id: "vidulum-1",
  bech32_prefix: "vdl",
  daemon_name: "vidulumd",
  node_home: "$HOME/.vidulum",
  key_algos: ["secp256k1"],
  slip44: 370,
  fees: {
    fee_tokens: [{
      denom: "uvdl",
      fixed_min_gas_price: 2e-4,
      low_gas_price: 2e-3,
      average_gas_price: 5e-3,
      high_gas_price: 7e-3
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uvdl"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/vidulum/images/vdl.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/vidulum/images/vdl.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://mainnet-rpc.vidulum.app/",
        provider: "vidulum"
      },
      {
        address: "https://vidulum.rpc.m.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://rpc-vidulum-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://vidulum.declab.pro:26619",
        provider: "Decloud Nodes Lab"
      }
    ],
    rest: [
      {
        address: "https://mainnet-lcd.vidulum.app",
        provider: "vidulum"
      },
      {
        address: "https://api-vidulum-ia.cosmosia.notional.ventures/",
        provider: "Notional"
      },
      {
        address: "https://vidulum.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api-vdl.nodine.id/",
        provider: "Nodine.ID"
      },
      {
        address: "https://vidulum.declab.pro:443",
        provider: "Decloud Nodes Lab"
      }
    ],
    grpc: [
      {
        address: "grpc-vidulum-ia.cosmosia.notional.ventures:443",
        provider: "Notional"
      },
      {
        address: "vidulum.grpc.m.stavr.tech:2040",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://vidulum.declab.pro:9013",
        provider: "Decloud Nodes Lab"
      }
    ]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://explorers.vidulum.app/vidulum",
      tx_page: "https://explorers.vidulum.app/vidulum/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/vidulum",
      tx_page: "https://ping.pub/vidulum/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Vidulum-Mainnet",
      tx_page: "https://explorer.stavr.tech/Vidulum-Mainnet/tx/${txHash}"
    },
    {
      kind: "atomscan",
      url: "https://atomscan.com/vidulum",
      tx_page: "https://atomscan.com/vidulum/transactions/${txHash}",
      account_page: "https://atomscan.com/vidulum/accounts/${accountAddress}"
    },
    {
      kind: "Nodine Explorer",
      url: "https://explorer.co.id/vidulum",
      tx_page: "https://explorer.co.id/vidulum/tx/${txHash}"
    },
    {
      kind: "Decloud Nodes Lab",
      url: "https://explorer.declab.pro/Vidulum",
      tx_page: "https://explorer.declab.pro/Vidulum/tx/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/vidulum/images/vdl.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/vidulum/images/vdl.svg"
  }]
};
var chain_default172 = info477;

// node_modules/chain-registry/esm/mainnet/vidulum/ibc.js
var info478 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archway",
      client_id: "07-tendermint-80",
      connection_id: "connection-81"
    },
    chain_2: {
      chain_name: "vidulum",
      client_id: "07-tendermint-49",
      connection_id: "connection-46"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-110",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-24",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "okexchain",
      client_id: "07-tendermint-100",
      connection_id: "connection-44"
    },
    chain_2: {
      chain_name: "vidulum",
      client_id: "07-tendermint-5",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-37",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosis",
      client_id: "07-tendermint-1705",
      connection_id: "connection-1300"
    },
    chain_2: {
      chain_name: "vidulum",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-124",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  }
];
var ibc_default134 = info478;

// node_modules/chain-registry/esm/mainnet/vidulum/index.js
var assets172 = assets_default172;
var chain172 = chain_default172;
var ibc134 = ibc_default134;

// node_modules/chain-registry/esm/mainnet/xpla/assets.js
var info479 = {
  $schema: "../assetlist.schema.json",
  chain_name: "xpla",
  assets: [{
    description: "The native staking token of XPLA.",
    denom_units: [{
      denom: "axpla",
      exponent: 0
    }, {
      denom: "xpla",
      exponent: 18
    }],
    base: "axpla",
    name: "Xpla",
    display: "xpla",
    symbol: "XPLA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/xpla/images/xpla.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/xpla/images/xpla.svg"
    },
    coingecko_id: "xpla",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/xpla/images/xpla.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/xpla/images/xpla.svg"
    }]
  }]
};
var assets_default173 = info479;

// node_modules/chain-registry/esm/mainnet/xpla/chain.js
var info480 = {
  $schema: "../chain.schema.json",
  chain_name: "xpla",
  status: "live",
  website: "https://xpla.io",
  network_type: "mainnet",
  pretty_name: "XPLA",
  chain_id: "dimension_37-1",
  bech32_prefix: "xpla",
  daemon_name: "xplad",
  node_home: "$HOME/.xpla",
  key_algos: ["ethsecp256k1"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "axpla",
      fixed_min_gas_price: 85e10,
      low_gas_price: 85e10,
      average_gas_price: 11475e8,
      high_gas_price: 14875e8
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "axpla"
    }]
  },
  codebase: {
    cosmos_sdk_version: "xpladev/cosmos-sdk v0.45.20-xpla",
    cosmwasm_version: "v0.33.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/xpla/images/xpla.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/xpla/images/xpla.svg"
  },
  apis: {
    rpc: [
      {
        address: "https://dimension-rpc.xpla.dev",
        provider: "Holdings"
      },
      {
        address: "https://xpla.rpc.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://xpla-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://xpla-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    rest: [
      {
        address: "https://dimension-lcd.xpla.io",
        provider: "ZenaAD"
      },
      {
        address: "https://dimension-lcd.xpla.dev",
        provider: "Holdings"
      },
      {
        address: "https://xpla.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://xpla-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://xpla-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    grpc: [{
      address: "xpla-grpc.publicnode.com:443",
      provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
    }],
    "evm-http-jsonrpc": [{
      address: "https://dimension-evm-rpc.xpla.dev",
      provider: "Holdings"
    }, {
      address: "https://xpla-evm-rpc.publicnode.com",
      provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
    }]
  },
  explorers: [
    {
      kind: "explorer.xpla",
      url: "https://explorer.xpla.io",
      tx_page: "https://explorer.xpla.io/mainnet/tx/${txHash}"
    },
    {
      kind: "finder",
      url: "https://finder.xpla.io",
      tx_page: "https://finder.xpla.io/mainnet/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Xpla-Mainnet",
      tx_page: "https://explorer.stavr.tech/Xpla-Mainnet/tx/${txHash}"
    },
    {
      kind: "mintscan",
      url: "https://www.mintscan.io/xpla",
      tx_page: "https://www.mintscan.io/xpla/transactions/${txHash}",
      account_page: "https://www.mintscan.io/xpla/accounts/${accountAddress}"
    },
    {
      kind: "ezstaking",
      url: "https://ezstaking.app/xpla",
      tx_page: "https://ezstaking.app/xpla/txs/${txHash}",
      account_page: "https://ezstaking.app/xpla/account/${accountAddress}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/xpla/images/xpla.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/xpla/images/xpla.svg"
  }]
};
var chain_default173 = info480;

// node_modules/chain-registry/esm/mainnet/xpla/ibc.js
var info481 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "injective",
    client_id: "07-tendermint-197",
    connection_id: "connection-182"
  },
  chain_2: {
    chain_name: "xpla",
    client_id: "07-tendermint-6",
    connection_id: "connection-12"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-137",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-7",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosis",
    client_id: "07-tendermint-2875",
    connection_id: "connection-2389"
  },
  chain_2: {
    chain_name: "xpla",
    client_id: "07-tendermint-11",
    connection_id: "connection-19"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-1634",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-9",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default135 = info481;

// node_modules/chain-registry/esm/mainnet/xpla/index.js
var assets173 = assets_default173;
var chain173 = chain_default173;
var ibc135 = ibc_default135;

// node_modules/chain-registry/esm/mainnet/zetachain/assets.js
var info482 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "zetachain",
  assets: [{
    description: "The native token of ZetaChain",
    denom_units: [{
      denom: "azeta",
      exponent: 0
    }, {
      denom: "zeta",
      exponent: 18
    }],
    base: "azeta",
    name: "ZetaChain",
    display: "zeta",
    symbol: "ZETA",
    coingecko_id: "zetachain",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/zetachain/images/zetachain.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/zetachain/images/zetachain.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/zetachain/images/zetachain.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/zetachain/images/zetachain.svg"
    }]
  }]
};
var assets_default174 = info482;

// node_modules/chain-registry/esm/mainnet/zetachain/chain.js
var info483 = {
  $schema: "../../chain.schema.json",
  chain_name: "zetachain",
  status: "live",
  network_type: "mainnet",
  pretty_name: "ZetaChain",
  chain_id: "zetachain_7000-1",
  bech32_prefix: "zeta",
  daemon_name: "zetacored",
  node_home: "$HOME/.zetacored",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "azeta",
      low_gas_price: 2e10,
      average_gas_price: 25e9,
      high_gas_price: 4e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "azeta"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.47.10"
  },
  apis: {
    rpc: [
      {
        address: "https://zetachain.blockpi.network/rpc/v1/public",
        provider: "BlockPI"
      },
      {
        address: "https://zetachain-mainnet-archive.allthatnode.com:26657",
        provider: "All That Node"
      },
      {
        address: "https://zetachain-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://rpc.zetachain.nodestake.org",
        provider: "NodeStake"
      },
      {
        address: "https://zetachain-rpc.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://zetachain.rpc.nodeshub.online:443",
        provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705"
      }
    ],
    rest: [
      {
        address: "https://zetachain.blockpi.network/lcd/v1/public",
        provider: "BlockPI"
      },
      {
        address: "https://zetachain-mainnet-archive.allthatnode.com:1317",
        provider: "All That Node"
      },
      {
        address: "https://zetachain-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://api.zetachain.nodestake.org",
        provider: "NodeStake"
      },
      {
        address: "https://zetachain-api.noders.services",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://zetachain.api.nodeshub.online:443",
        provider: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705"
      }
    ],
    grpc: [
      {
        address: "https://zetachain-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://grpc.zetachain.nodestake.org:443",
        provider: "NodeStake"
      },
      {
        address: "zetachain-grpc.noders.services:28090",
        provider: "[NODERS]TEAM"
      },
      {
        address: "https://zetachain.grpc.nodeshub.online",
        provider: "Nodes Hub"
      }
    ]
  },
  explorers: [
    {
      kind: "ZetaScan",
      url: "https://explorer.zetachain.com/",
      tx_page: "https://explorer.zetachain.com/cc/tx/${txHash}"
    },
    {
      kind: "BlockScout",
      url: "https://zetachain.blockscout.com/",
      tx_page: "https://zetachain.blockscout.com/tx/${txHash}"
    },
    {
      kind: "NodeStake Explorer",
      url: "https://explorer.nodestake.org/zetachain",
      tx_page: "https://explorer.nodestake.org/zetachain/tx/${txHash}"
    },
    {
      kind: "Nodes Hub \u{1F6E1}\uFE0F 100% Slash Protected \u{1F6E1}\uFE0F | Restake \u2705",
      url: "https://explorer.nodeshub.online/zetachain/",
      tx_page: "https://explorer.nodeshub.online/zetachain/tx/${txHash}",
      account_page: "https://explorer.nodeshub.online/zetachain/accounts/${accountAddress}"
    }
  ]
};
var chain_default174 = info483;

// node_modules/chain-registry/esm/mainnet/zetachain/index.js
var assets174 = assets_default174;
var chain174 = chain_default174;

// node_modules/chain-registry/esm/mainnet/assets.js
var assets175 = [
  assets,
  assets2,
  assets3,
  assets4,
  assets5,
  assets6,
  assets7,
  assets8,
  assets9,
  assets10,
  assets11,
  assets12,
  assets13,
  assets14,
  assets15,
  assets16,
  assets17,
  assets18,
  assets19,
  assets20,
  assets21,
  assets22,
  assets23,
  assets24,
  assets25,
  assets26,
  assets27,
  assets28,
  assets29,
  assets30,
  assets31,
  assets32,
  assets33,
  assets34,
  assets35,
  assets36,
  assets37,
  assets38,
  assets39,
  assets40,
  assets41,
  assets42,
  assets43,
  assets44,
  assets45,
  assets46,
  assets47,
  assets48,
  assets49,
  assets50,
  assets51,
  assets52,
  assets53,
  assets54,
  assets55,
  assets56,
  assets57,
  assets58,
  assets59,
  assets60,
  assets61,
  assets62,
  assets63,
  assets64,
  assets65,
  assets66,
  assets67,
  assets68,
  assets69,
  assets70,
  assets71,
  assets72,
  assets73,
  assets74,
  assets75,
  assets76,
  assets77,
  assets78,
  assets79,
  assets80,
  assets81,
  assets82,
  assets83,
  assets84,
  assets85,
  assets86,
  assets87,
  assets88,
  assets89,
  assets90,
  assets91,
  assets92,
  assets93,
  assets94,
  assets95,
  assets96,
  assets97,
  assets98,
  assets99,
  assets100,
  assets101,
  assets102,
  assets103,
  assets104,
  assets105,
  assets106,
  assets107,
  assets108,
  assets109,
  assets110,
  assets111,
  assets112,
  assets113,
  assets114,
  assets115,
  assets116,
  assets117,
  assets118,
  assets119,
  assets120,
  assets121,
  assets122,
  assets123,
  assets124,
  assets125,
  assets126,
  assets127,
  assets128,
  assets129,
  assets130,
  assets131,
  assets132,
  assets133,
  assets134,
  assets135,
  assets136,
  assets137,
  assets138,
  assets139,
  assets140,
  assets141,
  assets142,
  assets143,
  assets144,
  assets145,
  assets146,
  assets147,
  assets148,
  assets149,
  assets150,
  assets151,
  assets152,
  assets153,
  assets154,
  assets155,
  assets156,
  assets157,
  assets158,
  assets159,
  assets160,
  assets161,
  assets162,
  assets163,
  assets164,
  assets165,
  assets166,
  assets167,
  assets168,
  assets169,
  assets170,
  assets171,
  assets172,
  assets173,
  assets174
];
var assets_default175 = assets175;

// node_modules/chain-registry/esm/mainnet/andromeda1/chain.js
var info484 = {
  $schema: "../chain.schema.json",
  chain_name: "andromeda1",
  chain_id: "andromeda-1",
  pretty_name: "Andromeda",
  status: "killed",
  network_type: "mainnet",
  bech32_prefix: "andr",
  daemon_name: "andromedad",
  node_home: "$HOME/.andromeda",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uandr"
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uandr"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {},
  apis: {
    rpc: [
      {
        address: "https://rpc.andromeda-1.andromeda.aviaone.com",
        provider: "AVIAONE"
      },
      {
        address: "https://andromeda.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://andromeda.rpc.nodex.one",
        provider: "nodex"
      },
      {
        address: "https://andro.rpc.m.stavr.tech/",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://andromeda-rpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://andromeda-mainnet-rpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://andromeda-rpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "https://andromeda-rpc.stakerhouse.com:443",
        provider: "StakerHouse"
      },
      {
        address: "https://andromeda-rpc.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://andromeda-rpc.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://nibiru.rpc.kjnodes.comv",
        provider: "kjnodes.com \u{1F984}"
      }
    ],
    rest: [
      {
        address: "https://api.andromeda-1.andromeda.aviaone.com/",
        provider: "AVIAONE"
      },
      {
        address: "https://andromeda.api.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://andromeda.api.nodex.one",
        provider: "nodex"
      },
      {
        address: "https://andro.api.m.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://andromeda-api.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://andromeda-mainnet-lcd.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://andromeda-api.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "https://andromeda-rest.stakerhouse.com:443",
        provider: "StakerHouse"
      },
      {
        address: "https://andromeda-api.highstakes.ch",
        provider: "High Stakes \u{1F1E8}\u{1F1ED}"
      },
      {
        address: "https://andromeda-api.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://nibiru.api.kjnodes.com",
        provider: "kjnodes.com \u{1F984}"
      }
    ],
    grpc: [
      {
        address: "andromeda-grpc.lavenderfive.com:443",
        provider: "Lavender.Five Nodes \u{1F41D}"
      },
      {
        address: "https://grpc.andromeda-1.andromeda.aviaone.com:9094",
        provider: "AVIAONE"
      },
      {
        address: "andromeda.grpc.kjnodes.com:443",
        provider: "kjnodes"
      },
      {
        address: "andromeda-mainnet-grpc.autostake.com:443",
        provider: "AutoStake \u{1F6E1}\uFE0F Slash Protected"
      },
      {
        address: "https://andromeda.grpc.nodex.one:443",
        provider: "nodex"
      },
      {
        address: "http://andromedad.grpc.t.stavr.tech:132",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "andromeda-grpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "andromeda-grpc.stakerhouse.com:443",
        provider: "StakerHouse"
      },
      {
        address: "andromeda-grpc.genznodes.dev:27090",
        provider: "genznodes"
      },
      {
        address: "nibiru.grpc.kjnodes.com:443",
        provider: "kjnodes.com \u{1F984}"
      }
    ]
  },
  explorers: [
    {
      kind: "\u{1F525}STAVR\u{1F525} Explorer",
      url: "https://explorer.stavr.tech/Andromeda-Mainnet",
      tx_page: "https://explorer.stavr.tech/Andromeda-Mainnet/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Andromeda-Mainnet/account/${accountAddress}"
    },
    {
      kind: "exploreme.pro",
      url: "https://andromeda.exploreme.pro",
      tx_page: "https://andromeda.exploreme.pro/transaction/${txHash}",
      account_page: "https://andromeda.exploreme.pro/account/${accountAddress}"
    },
    {
      kind: "Cosmotracker",
      url: "https://cosmotracker.com/andromeda",
      tx_page: "https://cosmotracker.com/andromeda/tx/${txHash}",
      account_page: "https://cosmotracker.com/andromeda/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://ping.pub/andromeda",
      tx_page: "https://ping.pub/andromeda/tx/${txHash}"
    }
  ],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/andromeda/images/andromeda-logo.png"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/andromeda/images/andromeda-logo.png"
  }]
};
var chain_default175 = info484;

// node_modules/chain-registry/esm/mainnet/andromeda1/index.js
var chain175 = chain_default175;

// node_modules/chain-registry/esm/mainnet/thorchain/chain.js
var info485 = {
  $schema: "../chain.schema.json",
  chain_name: "thorchain",
  status: "live",
  network_type: "mainnet",
  website: "https://thorchain.org/",
  pretty_name: "THORChain",
  chain_id: "thorchain-mainnet-v1",
  bech32_prefix: "thor",
  daemon_name: "thord",
  node_home: "$HOME/.thornode",
  slip44: 931,
  codebase: {},
  apis: {
    rpc: [],
    rest: []
  },
  explorers: [{
    kind: "THORChain explorer",
    url: "https://thorchain.net",
    tx_page: "https://thorchain.net/#/txs/${txHash}"
  }, {
    kind: "viewblock",
    url: "https://viewblock.io/thorchain",
    tx_page: "https://viewblock.io/thorchain/tx/${txHash}"
  }]
};
var chain_default176 = info485;

// node_modules/chain-registry/esm/mainnet/thorchain/index.js
var chain176 = chain_default176;

// node_modules/chain-registry/esm/mainnet/chains.js
var chains = [
  chain,
  chain2,
  chain3,
  chain4,
  chain5,
  chain6,
  chain7,
  chain8,
  chain175,
  chain9,
  chain10,
  chain11,
  chain12,
  chain13,
  chain14,
  chain15,
  chain16,
  chain17,
  chain18,
  chain19,
  chain20,
  chain21,
  chain22,
  chain23,
  chain24,
  chain25,
  chain26,
  chain27,
  chain28,
  chain29,
  chain30,
  chain31,
  chain32,
  chain33,
  chain34,
  chain35,
  chain36,
  chain37,
  chain38,
  chain39,
  chain40,
  chain41,
  chain42,
  chain43,
  chain44,
  chain45,
  chain46,
  chain47,
  chain48,
  chain49,
  chain50,
  chain51,
  chain52,
  chain53,
  chain54,
  chain55,
  chain56,
  chain57,
  chain58,
  chain59,
  chain60,
  chain61,
  chain62,
  chain63,
  chain64,
  chain65,
  chain66,
  chain67,
  chain68,
  chain69,
  chain70,
  chain71,
  chain72,
  chain73,
  chain74,
  chain75,
  chain76,
  chain77,
  chain78,
  chain79,
  chain80,
  chain81,
  chain82,
  chain83,
  chain84,
  chain85,
  chain86,
  chain87,
  chain88,
  chain89,
  chain90,
  chain91,
  chain92,
  chain93,
  chain94,
  chain95,
  chain96,
  chain97,
  chain98,
  chain99,
  chain100,
  chain101,
  chain102,
  chain103,
  chain104,
  chain105,
  chain106,
  chain107,
  chain108,
  chain109,
  chain110,
  chain111,
  chain112,
  chain113,
  chain114,
  chain115,
  chain116,
  chain117,
  chain118,
  chain119,
  chain120,
  chain121,
  chain122,
  chain123,
  chain124,
  chain125,
  chain126,
  chain127,
  chain128,
  chain129,
  chain130,
  chain131,
  chain132,
  chain133,
  chain134,
  chain135,
  chain136,
  chain137,
  chain138,
  chain139,
  chain140,
  chain141,
  chain142,
  chain143,
  chain144,
  chain145,
  chain146,
  chain147,
  chain148,
  chain149,
  chain150,
  chain151,
  chain152,
  chain153,
  chain154,
  chain155,
  chain156,
  chain157,
  chain158,
  chain159,
  chain160,
  chain161,
  chain162,
  chain163,
  chain164,
  chain165,
  chain166,
  chain176,
  chain167,
  chain168,
  chain169,
  chain170,
  chain171,
  chain172,
  chain173,
  chain174
];
var chains_default = chains;

// node_modules/chain-registry/esm/mainnet/ibc.js
var ibc136 = [
  ...ibc,
  ...ibc2,
  ...ibc3,
  ...ibc4,
  ...ibc5,
  ...ibc6,
  ...ibc7,
  ...ibc8,
  ...ibc9,
  ...ibc10,
  ...ibc11,
  ...ibc12,
  ...ibc13,
  ...ibc14,
  ...ibc15,
  ...ibc16,
  ...ibc17,
  ...ibc18,
  ...ibc19,
  ...ibc20,
  ...ibc21,
  ...ibc22,
  ...ibc23,
  ...ibc24,
  ...ibc25,
  ...ibc26,
  ...ibc27,
  ...ibc28,
  ...ibc29,
  ...ibc30,
  ...ibc31,
  ...ibc32,
  ...ibc33,
  ...ibc34,
  ...ibc35,
  ...ibc36,
  ...ibc37,
  ...ibc38,
  ...ibc39,
  ...ibc40,
  ...ibc41,
  ...ibc42,
  ...ibc43,
  ...ibc44,
  ...ibc45,
  ...ibc46,
  ...ibc47,
  ...ibc48,
  ...ibc49,
  ...ibc50,
  ...ibc51,
  ...ibc52,
  ...ibc53,
  ...ibc54,
  ...ibc55,
  ...ibc56,
  ...ibc57,
  ...ibc58,
  ...ibc59,
  ...ibc60,
  ...ibc61,
  ...ibc62,
  ...ibc63,
  ...ibc64,
  ...ibc65,
  ...ibc66,
  ...ibc67,
  ...ibc68,
  ...ibc69,
  ...ibc70,
  ...ibc71,
  ...ibc72,
  ...ibc73,
  ...ibc74,
  ...ibc75,
  ...ibc76,
  ...ibc77,
  ...ibc78,
  ...ibc79,
  ...ibc80,
  ...ibc81,
  ...ibc82,
  ...ibc83,
  ...ibc84,
  ...ibc85,
  ...ibc86,
  ...ibc87,
  ...ibc88,
  ...ibc89,
  ...ibc90,
  ...ibc91,
  ...ibc92,
  ...ibc93,
  ...ibc94,
  ...ibc95,
  ...ibc96,
  ...ibc97,
  ...ibc98,
  ...ibc99,
  ...ibc100,
  ...ibc101,
  ...ibc102,
  ...ibc103,
  ...ibc104,
  ...ibc105,
  ...ibc106,
  ...ibc107,
  ...ibc108,
  ...ibc109,
  ...ibc110,
  ...ibc111,
  ...ibc112,
  ...ibc113,
  ...ibc114,
  ...ibc115,
  ...ibc116,
  ...ibc117,
  ...ibc118,
  ...ibc119,
  ...ibc120,
  ...ibc121,
  ...ibc122,
  ...ibc123,
  ...ibc124,
  ...ibc125,
  ...ibc126,
  ...ibc127,
  ...ibc128,
  ...ibc129,
  ...ibc130,
  ...ibc131,
  ...ibc132,
  ...ibc133,
  ...ibc134,
  ...ibc135
];
var ibc_default136 = ibc136;

// node_modules/chain-registry/esm/testnet/akashtestnet/assets.js
var info486 = {
  $schema: "../assetlist.schema.json",
  chain_name: "akashtestnet",
  assets: [{
    description: "Akash Token (AKT) is the Akash Network's native utility token, used as the primary means to govern, secure the blockchain, incentivize participants, and provide a default mechanism to store and exchange value.",
    denom_units: [{
      denom: "uakt",
      exponent: 0
    }, {
      denom: "akt",
      exponent: 6
    }],
    base: "uakt",
    name: "Akash Network",
    display: "akt",
    symbol: "AKT",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.svg"
    }]
  }]
};
var assets_default176 = info486;

// node_modules/chain-registry/esm/testnet/akashtestnet/chain.js
var info487 = {
  $schema: "../chain.schema.json",
  chain_name: "akashtestnet",
  status: "live",
  network_type: "testnet",
  website: "https://akash.network/",
  pretty_name: "Sandbox",
  chain_id: "sandbox-01",
  bech32_prefix: "akash",
  daemon_name: "akash",
  node_home: "$HOME/.akash",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uakt",
      fixed_min_gas_price: 0,
      low_gas_price: 0.025,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uakt"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.svg"
  },
  apis: {
    rpc: [{
      address: "https://rpc.sandbox-01.aksh.pw:443",
      provider: "akash"
    }],
    rest: [{
      address: "https://api.sandbox-01.aksh.pw:443",
      provider: "akash"
    }],
    grpc: [{
      address: "grpc.sandbox-01.aksh.pw:9090",
      provider: "akash"
    }]
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://explorer.sandbox-01.aksh.pw/akash",
    tx_page: "https://explorer.sandbox-01.aksh.pw/akash/tx/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.svg"
  }]
};
var chain_default177 = info487;

// node_modules/chain-registry/esm/testnet/akashtestnet/ibc.js
var info488 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "akashtestnet",
    client_id: "07-tendermint-4",
    connection_id: "connection-4"
  },
  chain_2: {
    chain_name: "archwaytestnet",
    client_id: "07-tendermint-45",
    connection_id: "connection-39"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-4",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-34",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live"
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "akashtestnet",
    client_id: "07-tendermint-6",
    connection_id: "connection-6"
  },
  chain_2: {
    chain_name: "osmosistestnet",
    client_id: "07-tendermint-1271",
    connection_id: "connection-1171"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-6",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-4171",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default137 = info488;

// node_modules/chain-registry/esm/testnet/akashtestnet/index.js
var assets176 = assets_default176;
var chain177 = chain_default177;
var ibc137 = ibc_default137;

// node_modules/chain-registry/esm/testnet/archwaytestnet/assets.js
var info489 = {
  $schema: "../assetlist.schema.json",
  chain_name: "archwaytestnet",
  assets: [{
    description: "The native token of Archway testnetwork",
    denom_units: [
      {
        denom: "aconst",
        exponent: 0
      },
      {
        denom: "uconst",
        exponent: 12
      },
      {
        denom: "const",
        exponent: 18
      }
    ],
    base: "aconst",
    name: "Archway",
    display: "const",
    symbol: "CONST"
  }]
};
var assets_default177 = info489;

// node_modules/chain-registry/esm/testnet/archwaytestnet/chain.js
var info490 = {
  $schema: "../chain.schema.json",
  chain_name: "archwaytestnet",
  chain_id: "constantine-3",
  pretty_name: "Archway Testnet",
  status: "live",
  network_type: "testnet",
  website: "https://archway.io",
  bech32_prefix: "archway",
  daemon_name: "archwayd",
  node_home: "$HOME/.archway",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "aconst",
      low_gas_price: 1e12,
      average_gas_price: 15e11,
      high_gas_price: 2e12
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "aconst"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/archwaytestnet/images/ArchwayBrandmark.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/archwaytestnet/images/ArchwayBrandmark.svg"
  },
  apis: {
    rpc: [{
      address: "rpc.constantine.archway.io",
      provider: "Archway"
    }, {
      address: "https://archway-testnet-rpc.polkachu.com",
      provider: "Polkachu"
    }],
    rest: [{
      address: "https://api.constantine.archway.tech",
      provider: "Archway"
    }]
  },
  explorers: [{
    kind: "archwayscan",
    url: "https://testnet.archway.explorers.guru",
    tx_page: "https://testnet.archway.explorers.guru/transaction/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/archwaytestnet/images/ArchwayBrandmark.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/archwaytestnet/images/ArchwayBrandmark.svg"
  }]
};
var chain_default178 = info490;

// node_modules/chain-registry/esm/testnet/archwaytestnet/ibc.js
var info491 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akashtestnet",
      client_id: "07-tendermint-4",
      connection_id: "connection-4"
    },
    chain_2: {
      chain_name: "archwaytestnet",
      client_id: "07-tendermint-45",
      connection_id: "connection-39"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-34",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archwaytestnet",
      client_id: "07-tendermint-70",
      connection_id: "connection-60"
    },
    chain_2: {
      chain_name: "axelartestnet",
      client_id: "07-tendermint-603",
      connection_id: "connection-418"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-50",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-305",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archwaytestnet",
      client_id: "07-tendermint-0",
      connection_id: "connection-119"
    },
    chain_2: {
      chain_name: "jackaltestnet2",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-368",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archwaytestnet",
      client_id: "07-tendermint-77",
      connection_id: "connection-73"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1195",
      connection_id: "connection-1101"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-58",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3938",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  }
];
var ibc_default138 = info491;

// node_modules/chain-registry/esm/testnet/archwaytestnet/index.js
var assets177 = assets_default177;
var chain178 = chain_default178;
var ibc138 = ibc_default138;

// node_modules/chain-registry/esm/testnet/arkeonetworktestnet/assets.js
var info492 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "arkeonetworktestnet",
  assets: [{
    denom_units: [{
      denom: "uarkeo",
      exponent: 0
    }, {
      denom: "arkeo",
      exponent: 6
    }],
    base: "uarkeo",
    display: "arkeo",
    name: "Arkeo",
    symbol: "ARKEO",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/arkeonetworktestnet/images/arkeo.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/arkeonetworktestnet/images/arkeo.png"
    }]
  }]
};
var assets_default178 = info492;

// node_modules/chain-registry/esm/testnet/arkeonetworktestnet/chain.js
var info493 = {
  $schema: "../../chain.schema.json",
  chain_name: "arkeonetworktestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Arkeo Network",
  chain_id: "arkeo",
  bech32_prefix: "tarkeo",
  daemon_name: "arkeod",
  node_home: "$HOME/.arkeo",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uarkeo"
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uarkeo"
    }]
  },
  codebase: {},
  apis: {
    rpc: [
      {
        address: "https://arkeonetwork-testnet.nodejumper.io:26657",
        provider: "NODEJUMPER"
      },
      {
        address: "https://test-arkeo-rpc.kynraze.com",
        provider: "kynraze"
      },
      {
        address: "https://testnet-arkeo-rpc.lavenderfive.com",
        provider: "lavenderfive"
      },
      {
        address: "https://arkeo-rpc.siriusnodes.uk",
        provider: "siriusnodes"
      },
      {
        address: "http://seed.arkeo.network:26657",
        provider: "arkeo"
      }
    ],
    rest: [
      {
        address: "https://arkeonetwork-testnet.nodejumper.io:1317",
        provider: "NODEJUMPER"
      },
      {
        address: "https://test-arkeo-api.kynraze.com",
        provider: "kynraze"
      },
      {
        address: "https://testnet-arkeo-api.lavenderfive.com",
        provider: "lavenderfive"
      },
      {
        address: "https://arkeo-api.siriusnodes.uk",
        provider: "siriusnodes"
      },
      {
        address: "http://seed.arkeo.network:1317",
        provider: "arkeo"
      }
    ],
    grpc: [{
      address: "https://arkeonetwork-testnet.nodejumper.io:9090/",
      provider: "NODEJUMPER"
    }]
  },
  explorers: [{
    url: "https://explorer.nodexcapital.com/arkeo",
    tx_page: "https://explorer.nodexcapital.com/arkeo/tx/${txHash}"
  }]
};
var chain_default179 = info493;

// node_modules/chain-registry/esm/testnet/arkeonetworktestnet/index.js
var assets178 = assets_default178;
var chain179 = chain_default179;

// node_modules/chain-registry/esm/testnet/artelatestnet/assets.js
var info494 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "artelatestnet",
  assets: [{
    description: "The native EVM, governance and staking token of the Artela Network",
    denom_units: [{
      denom: "uart",
      exponent: 0
    }, {
      denom: "art",
      exponent: 18
    }],
    base: "uart",
    name: "Artela Testnet",
    display: "art",
    symbol: "ART",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/artelatestnet/images/artela.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/artelatestnet/images/artela.png"
    }]
  }]
};
var assets_default179 = info494;

// node_modules/chain-registry/esm/testnet/artelatestnet/chain.js
var info495 = {
  $schema: "../../chain.schema.json",
  chain_name: "artelatestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Artela Testnet",
  chain_id: "artela_11820-1",
  bech32_prefix: "art",
  daemon_name: "artelad",
  node_home: "$HOME/.artelad",
  key_algos: ["ethsecp256k1"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "uart",
      low_gas_price: 2e10,
      average_gas_price: 25e9,
      high_gas_price: 4e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uart"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.47"
  },
  apis: {
    rpc: [{
      address: "https://testnet-rpc1.artela.network",
      provider: "Artela Foundation"
    }, {
      address: "https://testnet-rpc2.artela.network",
      provider: "Artela Foundation"
    }],
    rest: [{
      address: "https://testnet-rpc1.artela.network",
      provider: "Artela Foundation"
    }, {
      address: "https://testnet-rpc2.artela.network",
      provider: "Artela Foundation"
    }],
    grpc: [{
      address: "https://testnet-rpc1.artela.network",
      provider: "Artela Foundation"
    }]
  },
  explorers: [{
    kind: "Artela Network",
    url: "https://testnet-scan.artela.network",
    tx_page: "https://testnet-scan.artela.network/tx/${txHash}"
  }]
};
var chain_default180 = info495;

// node_modules/chain-registry/esm/testnet/artelatestnet/index.js
var assets179 = assets_default179;
var chain180 = chain_default180;

// node_modules/chain-registry/esm/testnet/auratestnet/assets.js
var info496 = {
  $schema: "../assetlist.schema.json",
  chain_name: "auratestnet",
  assets: [{
    description: "The native token of Aura Test Network",
    denom_units: [{
      denom: "ueaura",
      exponent: 0
    }, {
      denom: "eaura",
      exponent: 6
    }],
    base: "ueaura",
    name: "EAura",
    display: "eaura",
    symbol: "EAURA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.svg"
    }]
  }]
};
var assets_default180 = info496;

// node_modules/chain-registry/esm/testnet/auratestnet/chain.js
var info497 = {
  $schema: "../chain.schema.json",
  chain_name: "auratestnet",
  status: "live",
  network_type: "testnet",
  website: "https://aura.network/",
  pretty_name: "Aura Euphoria Network",
  chain_id: "aura_6321-3",
  bech32_prefix: "aura",
  daemon_name: "aurad",
  node_home: "$HOME/.aura",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ueaura",
      fixed_min_gas_price: 1e-3,
      low_gas_price: 1e-3,
      average_gas_price: 2e-3,
      high_gas_price: 25e-4
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ueaura"
    }],
    lock_duration: {
      time: "172800s"
    }
  },
  codebase: {
    cosmos_sdk_version: "v0.47.8",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.42.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.svg"
  },
  apis: {
    rpc: [{
      address: "https://rpc.euphoria.aura.network/",
      provider: "Aura Network Foundation"
    }],
    rest: [{
      address: "https://lcd.euphoria.aura.network/",
      provider: "Aura Network Foundation"
    }],
    grpc: [{
      address: "http://grpc.euphoria.aura.network:9090",
      provider: "Aura Network Foundation"
    }]
  },
  explorers: [{
    kind: "aurascan",
    url: "https://euphoria.aurascan.io",
    tx_page: "https://euphoria.aurascan.io/tx/${txHash}",
    account_page: "https://euphoria.aurascan.io/address/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/aura/images/Aura-logo-2.2.svg"
  }]
};
var chain_default181 = info497;

// node_modules/chain-registry/esm/testnet/auratestnet/index.js
var assets180 = assets_default180;
var chain181 = chain_default181;

// node_modules/chain-registry/esm/testnet/axelartestnet/assets.js
var info498 = {
  $schema: "../assetlist.schema.json",
  chain_name: "axelartestnet",
  assets: [
    {
      description: "The native token of Axelar",
      denom_units: [{
        denom: "uaxl",
        exponent: 0
      }, {
        denom: "axl",
        exponent: 6
      }],
      base: "uaxl",
      name: "Axelar",
      display: "axl",
      symbol: "AXL",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.svg"
      },
      coingecko_id: "axelar",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.svg"
      }]
    },
    {
      description: "Circle's stablecoin on Axelar",
      denom_units: [{
        denom: "uausdc",
        exponent: 0
      }, {
        denom: "ausdc",
        exponent: 6
      }],
      base: "uausdc",
      name: "USD Coin",
      display: "ausdc",
      symbol: "aUSDC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereumtestnet",
          base_denom: "0x254d06f33bDc5b8ee05b2ea472107E300226659A"
        },
        provider: "Axelar"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereumtestnet",
          base_denom: "0x254d06f33bDc5b8ee05b2ea472107E300226659A"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }
    },
    {
      description: "Wrapped Ether on Axelar",
      denom_units: [{
        denom: "eth-wei",
        exponent: 0
      }, {
        denom: "weth",
        exponent: 18
      }],
      base: "eth-wei",
      name: "Wrapped Ether",
      display: "weth",
      symbol: "axlWETH",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "ethereumtestnet",
          base_denom: "0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6"
        },
        provider: "Axelar"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereumtestnet",
          base_denom: "0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/weth.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/weth.svg"
      }
    },
    {
      description: "Wrapped Moonbeam on Axelar",
      denom_units: [{
        denom: "wglmr-wei",
        exponent: 0
      }, {
        denom: "wglmr",
        exponent: 18
      }],
      base: "wglmr-wei",
      name: "Wrapped Moonbeam",
      display: "wglmr",
      symbol: "WDEV",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "moonbeamtestnet",
          base_denom: "0x1436aE0dF0A8663F18c0Ec51d7e2E46591730715"
        },
        provider: "Axelar"
      }],
      images: [{
        image_sync: {
          chain_name: "moonbeamtestnet",
          base_denom: "0x1436aE0dF0A8663F18c0Ec51d7e2E46591730715"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.svg"
      }
    },
    {
      description: "Wrapped Matic on Axelar",
      denom_units: [{
        denom: "wmatic-wei",
        exponent: 0
      }, {
        denom: "wmatic",
        exponent: 18
      }],
      base: "wmatic-wei",
      name: "Wrapped Matic",
      display: "wmatic",
      symbol: "WMATIC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "polygontestnet",
          base_denom: "0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889"
        },
        provider: "Axelar"
      }],
      images: [{
        image_sync: {
          chain_name: "polygontestnet",
          base_denom: "0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/wmatic.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/wmatic.svg"
      }
    },
    {
      description: "Wrapped BNB on Axelar",
      denom_units: [{
        denom: "wbnb-wei",
        exponent: 0
      }, {
        denom: "wbnb",
        exponent: 18
      }],
      base: "wbnb-wei",
      name: "Wrapped BNB",
      display: "wbnb",
      symbol: "WBNB",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "binancesmartchaintestnet",
          base_denom: "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
        },
        provider: "Axelar"
      }],
      images: [{
        image_sync: {
          chain_name: "binancesmartchaintestnet",
          base_denom: "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/wbnb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/wbnb.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/wbnb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/wbnb.svg"
      }
    },
    {
      description: "Wrapped AVAX on Axelar.",
      denom_units: [{
        denom: "wavax-wei",
        exponent: 0
      }, {
        denom: "avax",
        exponent: 18
      }],
      base: "wavax-wei",
      name: "Wrapped AVAX",
      display: "avax",
      symbol: "WAVAX",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "avalanchetestnet",
          base_denom: "0xd00ae08403B9bbb9124bB305C09058E32C39A48c"
        },
        provider: "Axelar"
      }],
      images: [{
        image_sync: {
          chain_name: "avalanchetestnet",
          base_denom: "0xd00ae08403B9bbb9124bB305C09058E32C39A48c"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/wavax.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/wavax.svg"
      }
    },
    {
      description: "Wrapped FTM on Axelar.",
      denom_units: [{
        denom: "wftm-wei",
        exponent: 0
      }, {
        denom: "ftm",
        exponent: 18
      }],
      base: "wftm-wei",
      name: "Wrapped FTM",
      display: "ftm",
      symbol: "WFTM",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "fantomtestnet",
          base_denom: "0x812666209b90344Ec8e528375298ab9045c2Bd08"
        },
        provider: "Axelar"
      }],
      images: [{
        image_sync: {
          chain_name: "fantomtestnet",
          base_denom: "0x812666209b90344Ec8e528375298ab9045c2Bd08"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.png"
      }
    }
  ]
};
var assets_default181 = info498;

// node_modules/chain-registry/esm/testnet/axelartestnet/chain.js
var info499 = {
  $schema: "../chain.schema.json",
  chain_name: "axelartestnet",
  chain_id: "axelar-testnet-lisbon-3",
  pretty_name: "Axelar Testnet",
  status: "live",
  network_type: "testnet",
  website: "https://axelar.network/",
  bech32_prefix: "axelar",
  daemon_name: "axelard",
  node_home: "$HOME/.axelard",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uaxl",
      low_gas_price: 7e-3,
      average_gas_price: 7e-3,
      high_gas_price: 0.01
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uaxl"
    }]
  },
  codebase: {},
  apis: {
    rpc: [
      {
        address: "https://rpc-axelar-testnet.imperator.co:443",
        provider: "Imperator.co"
      },
      {
        address: "https://axelartest-rpc.quickapi.com/",
        provider: "Quickapi"
      },
      {
        address: "https://axelar-testnet-rpc.ibs.team:443",
        provider: "Inter Blockchain Services"
      }
    ],
    rest: [
      {
        address: "https://lcd-axelar-testnet.imperator.co:443",
        provider: "Imperator.co"
      },
      {
        address: "https://axelartest-lcd.quickapi.com/",
        provider: "Quickapi"
      },
      {
        address: "https://axelar-testnet-api.ibs.team:443",
        provider: "Inter Blockchain Services"
      }
    ]
  },
  explorers: [{
    kind: "axelarscan",
    url: "https://testnet.axelarscan.io",
    tx_page: "https://testnet.axelarscan.io/tx/${txHash}"
  }, {
    kind: "mintscan",
    url: "https://mintscan.io/axelar-testnet",
    tx_page: "https://mintscan.io/axelar-testnet/txs/${txHash}",
    account_page: "https://mintscan.io/axelar-testnet/account/${accountAddress}"
  }]
};
var chain_default182 = info499;

// node_modules/chain-registry/esm/testnet/axelartestnet/ibc.js
var info500 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archwaytestnet",
      client_id: "07-tendermint-70",
      connection_id: "connection-60"
    },
    chain_2: {
      chain_name: "axelartestnet",
      client_id: "07-tendermint-603",
      connection_id: "connection-418"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-50",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-305",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelartestnet",
      client_id: "07-tendermint-594",
      connection_id: "connection-410"
    },
    chain_2: {
      chain_name: "dydxtestnet",
      client_id: "07-tendermint-6",
      connection_id: "connection-4"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-297",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelartestnet",
      client_id: "07-tendermint-855",
      connection_id: "connection-659"
    },
    chain_2: {
      chain_name: "lavatestnet",
      client_id: "07-tendermint-10",
      connection_id: "connection-10"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-444",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelartestnet",
      client_id: "07-tendermint-953",
      connection_id: "connection-734"
    },
    chain_2: {
      chain_name: "mantrachaintestnet",
      client_id: "07-tendermint-4",
      connection_id: "connection-4"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-506",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelartestnet",
      client_id: "07-tendermint-685",
      connection_id: "connection-538"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1270",
      connection_id: "connection-1169"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-339",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4170",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelartestnet",
      client_id: "07-tendermint-213",
      connection_id: "connection-151"
    },
    chain_2: {
      chain_name: "osmosistestnet4",
      client_id: "07-tendermint-3319",
      connection_id: "connection-2807"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-135",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1946",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelartestnet",
      client_id: "07-tendermint-522",
      connection_id: "connection-372"
    },
    chain_2: {
      chain_name: "persistencetestnet2",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-261",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelartestnet",
      client_id: "07-tendermint-767",
      connection_id: "connection-581"
    },
    chain_2: {
      chain_name: "sagatestnet",
      client_id: "07-tendermint-11",
      connection_id: "connection-10"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-370",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-9",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelartestnet",
      client_id: "07-tendermint-858",
      connection_id: "connection-663"
    },
    chain_2: {
      chain_name: "titantestnet",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-448",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelartestnet",
      client_id: "07-tendermint-970",
      connection_id: "connection-752"
    },
    chain_2: {
      chain_name: "xiontestnet",
      client_id: "07-tendermint-127",
      connection_id: "connection-64"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-521",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-225057",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  }
];
var ibc_default139 = info500;

// node_modules/chain-registry/esm/testnet/axelartestnet/index.js
var assets181 = assets_default181;
var chain182 = chain_default182;
var ibc139 = ibc_default139;

// node_modules/chain-registry/esm/testnet/babylontestnet/assets.js
var info501 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "babylontestnet",
  assets: [{
    description: "The native staking token of Babylon.",
    denom_units: [{
      denom: "ubbn",
      exponent: 0
    }, {
      denom: "bbn",
      exponent: 6
    }],
    base: "ubbn",
    name: "Babylon BBN",
    display: "bbn",
    symbol: "BBN",
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/babylon/images/logo.svg"
    },
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/babylon/images/logo.svg"
    }]
  }]
};
var assets_default182 = info501;

// node_modules/chain-registry/esm/testnet/babylontestnet/chain.js
var info502 = {
  $schema: "../../chain.schema.json",
  chain_name: "babylontestnet",
  status: "live",
  website: "https://www.babylonchain.io",
  network_type: "testnet",
  pretty_name: "Babylon Testnet 3",
  chain_id: "bbn-test3",
  pre_fork_chain_name: "babylontestnet1",
  bech32_prefix: "bbn",
  daemon_name: "babylond",
  node_home: "$HOME/.babylond",
  key_algos: ["secp256k1"],
  fees: {
    fee_tokens: [{
      denom: "ubbn"
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ubbn"
    }]
  },
  codebase: {},
  logo_URIs: {
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/babylontestnet/images/logo.svg"
  },
  apis: {
    rpc: [{
      address: "rpc.testnet3.babylonchain.io:443",
      provider: "Babylon foundation"
    }],
    rest: [{
      address: "lcd.testnet3.babylonchain.io:443",
      provider: "Babylon foundation"
    }],
    grpc: []
  },
  explorers: [{
    kind: "babylonscan",
    url: "https://babylonscan.io"
  }, {
    kind: "explorers.guru",
    url: "https://testnet.babylon.explorers.guru",
    tx_page: "https://testnet.babylon.explorers.guru/transaction/${txHash}"
  }],
  images: [{
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/babylontestnet/images/logo.svg"
  }],
  slip44: 118
};
var chain_default183 = info502;

// node_modules/chain-registry/esm/testnet/babylontestnet/index.js
var assets182 = assets_default182;
var chain183 = chain_default183;

// node_modules/chain-registry/esm/testnet/babylontestnet1/assets.js
var info503 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "babylontestnet1",
  assets: [{
    description: "The native staking token of Babylon.",
    denom_units: [{
      denom: "ubbn",
      exponent: 0
    }, {
      denom: "bbn",
      exponent: 6
    }],
    base: "ubbn",
    name: "Babylon BBN",
    display: "bbn",
    symbol: "BBN",
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/babylon/images/logo.svg"
    },
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/babylon/images/logo.svg"
    }]
  }]
};
var assets_default183 = info503;

// node_modules/chain-registry/esm/testnet/babylontestnet1/chain.js
var info504 = {
  $schema: "../../chain.schema.json",
  chain_name: "babylontestnet1",
  status: "killed",
  website: "https://www.babylonchain.io",
  network_type: "testnet",
  pretty_name: "Babylon Testnet",
  chain_id: "bbn-test1",
  bech32_prefix: "bbn",
  daemon_name: "babylond",
  node_home: "$HOME/.babylond",
  key_algos: ["secp256k1"],
  fees: {
    fee_tokens: [{
      denom: "ubbn"
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ubbn"
    }]
  },
  codebase: {},
  logo_URIs: {
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/babylontestnet/images/logo.svg"
  },
  apis: {
    rpc: [{
      address: "rpc.testnet.babylonchain.io:26657",
      provider: "Babylon foundation"
    }],
    rest: [{
      address: "rpc.testnet.babylonchain.io:1317",
      provider: "Babylon foundation"
    }],
    grpc: []
  },
  explorers: [{
    kind: "babylonscan",
    url: "https://babylonscan.io"
  }, {
    kind: "explorers.guru",
    url: "https://babylon.explorers.guru",
    tx_page: "https://babylon.explorers.guru/transaction/${txHash}"
  }],
  images: [{
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/babylontestnet/images/logo.svg"
  }],
  slip44: 118
};
var chain_default184 = info504;

// node_modules/chain-registry/esm/testnet/babylontestnet1/index.js
var assets183 = assets_default183;
var chain184 = chain_default184;

// node_modules/chain-registry/esm/testnet/bitcannadevnet/assets.js
var info505 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "bitcannadevnet",
  assets: [{
    description: "The BCNA coin is the transactional token within the BitCanna network, serving the legal cannabis industry through its payment network, supply chain and trust network.",
    denom_units: [{
      denom: "ubcna",
      exponent: 0
    }, {
      denom: "bcna",
      exponent: 6
    }],
    base: "ubcna",
    display: "bcna",
    name: "BitCanna",
    symbol: "BCNA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/bitcannadevnet/images/bcna.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/bitcannadevnet/images/bcna.svg"
    },
    coingecko_id: "bitcanna",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/bitcannadevnet/images/bcna.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/bitcannadevnet/images/bcna.svg"
    }]
  }]
};
var assets_default184 = info505;

// node_modules/chain-registry/esm/testnet/bitcannadevnet/chain.js
var info506 = {
  $schema: "../../chain.schema.json",
  chain_name: "bitcannadevnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "BitCanna Devnet-1",
  chain_id: "bitcanna-dev-1",
  bech32_prefix: "bcna",
  daemon_name: "bcnad",
  node_home: "$HOME/.bcna",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ubcna",
      fixed_min_gas_price: 1e-3
    }]
  },
  codebase: {},
  apis: {
    rpc: [
      {
        address: "https://rpc-testnet.bitcanna.io",
        provider: "bitcanna"
      },
      {
        address: "https://bitcanna-testnet.rpc.kjnodes.com/",
        provider: "kjnodes.com"
      },
      {
        address: "https://testnet-bitcanna-rpc.konsortech.xyz/",
        provider: "konsortech.xyz"
      },
      {
        address: "https://rpc.bitcanna-dev-1.bitcanna.aviaone.com/",
        provider: "aviaone.com"
      },
      {
        address: "https://bitcanna-testnet.nodejumper.io:443",
        provider: "NODEJUMPER"
      },
      {
        address: "https://bcna-testnet-rpc.ibs.team:443",
        provider: "Inter Blockchain Services"
      }
    ],
    rest: [
      {
        address: "https://lcd-testnet.bitcanna.io",
        provider: "bitcanna"
      },
      {
        address: "https://testnet-bitcanna-api.konsortech.xyz/",
        provider: "konsortech.xyz"
      },
      {
        address: "https://bitcanna.api.dev.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api.bitcanna-dev-1.bitcanna.aviaone.com/",
        provider: "aviaone.com"
      },
      {
        address: "https://bitcanna-testnet.api.kjnodes.com/",
        provider: "kjnodes.com"
      },
      {
        address: "https://bitcanna-testnet.nodejumper.io:1317",
        provider: "NODEJUMPER"
      },
      {
        address: "https://bcna-testnet-api.ibs.team:443",
        provider: "Inter Blockchain Services"
      }
    ],
    grpc: [
      {
        address: "http://devnet-1.bitcanna.io:9090/",
        provider: "bitcanna"
      },
      {
        address: "http://bitcanna-testnet.grpc.kjnodes.com:42090/",
        provider: "kjnodes.com"
      },
      {
        address: "http://bitcanna.grpc.dev.stavr.tech:2901",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://bitcanna-testnet.nodejumper.io:9090",
        provider: "NODEJUMPER"
      }
    ]
  },
  explorers: [
    {
      url: "https://explorer.thesilverfox.pro/bitcanna",
      tx_page: "https://explorer.thesilverfox.pro/bitcanna/tx/${txHash}"
    },
    {
      url: "https://testnets-cosmos.mintthemoon.xyz/bitcanna",
      tx_page: "https://testnets-cosmos.mintthemoon.xyz/bitcanna/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Bitcanna-DEV",
      tx_page: "https://explorer.stavr.tech/Bitcanna-DEV/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Bitcanna-DEV/account/${accountAddress}"
    },
    {
      url: "https://explorer.kjnodes.com/bitcanna-testnet",
      tx_page: "https://explorer.kjnodes.com/bitcanna-testnet/tx/${txHash}"
    },
    {
      url: "https://explorer.stavr.tech/bitcanna-dev",
      tx_page: "https://explorer.stavr.tech/bitcanna-dev/tx/${txHash}"
    }
  ]
};
var chain_default185 = info506;

// node_modules/chain-registry/esm/testnet/bitcannadevnet/index.js
var assets184 = assets_default184;
var chain185 = chain_default185;

// node_modules/chain-registry/esm/testnet/blockxtestnet/assets.js
var info507 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "blockxtestnet",
  assets: [{
    description: "BlockX Native Token",
    denom_units: [{
      denom: "abcx",
      exponent: 0
    }, {
      denom: "bcx",
      exponent: 18
    }],
    base: "abcx",
    name: "BCX",
    display: "bcx",
    symbol: "BCX",
    type_asset: "sdk.coin",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/blockx/images/blockx.png"
    }],
    socials: {
      website: "https://www.blockxnet.com/"
    }
  }]
};
var assets_default185 = info507;

// node_modules/chain-registry/esm/testnet/blockxtestnet/chain.js
var info508 = {
  $schema: "../../chain.schema.json",
  chain_name: "blockxtestnet",
  chain_id: "blockx_190-1",
  pretty_name: "BlockX-Atlantis-Testnet",
  website: "https://www.blockxnet.com/",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "blockx",
  daemon_name: "blockxd",
  node_home: "$HOME/.blockxd",
  key_algos: ["ethsecp256k1"],
  staking: {
    staking_tokens: [{
      denom: "abcx"
    }]
  },
  slip44: 118
};
var chain_default186 = info508;

// node_modules/chain-registry/esm/testnet/blockxtestnet/index.js
var assets185 = assets_default185;
var chain186 = chain_default186;

// node_modules/chain-registry/esm/testnet/cascadiatestnet/assets.js
var info509 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "cascadiatestnet",
  assets: [{
    description: "The World's First  Neocybernetic  Blockchain",
    denom_units: [{
      denom: "aCC",
      exponent: 0
    }, {
      denom: "tCC",
      exponent: 18
    }],
    base: "aCC",
    name: "\u0421ascadia Testnet",
    display: "tCC",
    symbol: "TCC",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/cascadiatestnet/images/cascadia.png"
    },
    keywords: ["cascadia", "neocybernetic"],
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/cascadiatestnet/images/cascadia.png"
    }]
  }]
};
var assets_default186 = info509;

// node_modules/chain-registry/esm/testnet/cascadiatestnet/chain.js
var info510 = {
  $schema: "../../chain.schema.json",
  chain_name: "cascadiatestnet",
  status: "live",
  network_type: "testnet",
  website: "https://cascadia.foundation/",
  pretty_name: "Cascadia",
  chain_id: "cascadia_6102-1",
  bech32_prefix: "cascadia",
  daemon_name: "cascadiad",
  node_home: "$HOME/.cascadiad",
  key_algos: ["ethsecp256k1"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "aCC",
      fixed_min_gas_price: 0,
      low_gas_price: 7,
      average_gas_price: 10,
      high_gas_price: 15
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "aCC"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "0.46.10",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.30"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/cascadiatestnet/images/cascadia.png",
    theme: {
      primary_color_hex: "#004A96"
    }
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/cascadiatestnet/images/cascadia.png"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.cascadia.foundation:443",
        provider: "cascadia"
      },
      {
        address: "https://cscd-rpc.systemd.run:443",
        provider: "systemd"
      },
      {
        address: "https://api.cascadia-t.indonode.net:443",
        provider: "Indonode"
      },
      {
        address: "https://rpc-test.cascadia.hexnodes.co:443",
        provider: "Hexnodes"
      }
    ],
    grpc: [
      {
        address: "grpc.cascadia.foundation:443",
        provider: "cascadia"
      },
      {
        address: "cscd-grpc.systemd.run:443",
        provider: "systemd"
      },
      {
        address: "grpc.cascadia-t.indonode.net:43090",
        provider: "Indonode"
      },
      {
        address: "grpc-test.cascadia.hexnodes.co:19090",
        provider: "Hexnodes"
      }
    ],
    rest: [
      {
        address: "https://lcd.cascadia.foundation",
        provider: "cascadia"
      },
      {
        address: "https://cscd-api.systemd.run",
        provider: "systemd"
      },
      {
        address: "https://api.cascadia-t.indonode.net/",
        provider: "Indonode"
      },
      {
        address: "https://lcd-test.cascadia.hexnodes.co",
        provider: "Hexnodes"
      }
    ]
  },
  explorers: [{
    kind: "validator_explorer",
    url: "https://validator.cascadia.foundation/",
    tx_page: "https://validator.cascadia.foundation/transactions/${txHash}",
    account_page: "https://validator.cascadia.foundation/accounts/${accountAddress}"
  }, {
    kind: "block_explorer",
    url: "https://explorer.cascadia.foundation/",
    tx_page: "https://explorer.cascadia.foundation/tx/${txHash}",
    account_page: "https://explorer.cascadia.foundation/address/${accountAddress}"
  }],
  keywords: [
    "cascadia",
    "cosmos",
    "evm",
    "cybernetic"
  ]
};
var chain_default187 = info510;

// node_modules/chain-registry/esm/testnet/cascadiatestnet/index.js
var assets186 = assets_default186;
var chain187 = chain_default187;

// node_modules/chain-registry/esm/testnet/celestiatestnet/assets.js
var info511 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "celestiatestnet",
  assets: [{
    denom_units: [{
      denom: "utia",
      exponent: 0
    }, {
      denom: "tia",
      exponent: 6
    }],
    base: "utia",
    name: "Celestia",
    display: "tia",
    symbol: "TIA",
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/celestiatestnet/images/celestia.svg"
    },
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/celestiatestnet/images/celestia.svg"
    }]
  }]
};
var assets_default187 = info511;

// node_modules/chain-registry/esm/testnet/celestiatestnet/chain.js
var info512 = {
  $schema: "../../chain.schema.json",
  chain_name: "celestiatestnet",
  chain_id: "blockspacerace-0",
  pretty_name: "Blockspace Race Testnet",
  status: "killed",
  network_type: "testnet",
  bech32_prefix: "celestia",
  daemon_name: "celestia-appd",
  node_home: "$HOME/.celestia-app",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "utia",
      fixed_min_gas_price: 0
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://rpc-blockspacerace.pops.one/",
      provider: "P-OPs"
    }],
    rest: [{
      address: "https://celestia-blockspacerace-rest.brocha.in",
      provider: "Brochain"
    }]
  },
  explorers: [{
    kind: "Mintscan",
    url: "https://mintscan.io/celestia-incentivized-testnet",
    tx_page: "https://mintscan.io/celestia-incentivized-testnet/txs/${txHash}"
  }]
};
var chain_default188 = info512;

// node_modules/chain-registry/esm/testnet/celestiatestnet/index.js
var assets187 = assets_default187;
var chain188 = chain_default188;

// node_modules/chain-registry/esm/testnet/celestiatestnet3/assets.js
var info513 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "celestiatestnet3",
  assets: [{
    denom_units: [{
      denom: "utia",
      exponent: 0
    }, {
      denom: "tia",
      exponent: 6
    }],
    base: "utia",
    name: "Celestia",
    display: "tia",
    symbol: "TIA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/celestiatestnet3/images/celestia.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/celestiatestnet3/images/celestia.svg"
    },
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/celestiatestnet3/images/celestia.svg",
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/celestiatestnet3/images/celestia.png"
    }]
  }]
};
var assets_default188 = info513;

// node_modules/chain-registry/esm/testnet/celestiatestnet3/chain.js
var info514 = {
  $schema: "../../chain.schema.json",
  chain_name: "celestiatestnet3",
  chain_id: "mocha-4",
  pretty_name: "Mocha Testnet",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "celestia",
  daemon_name: "celestia-appd",
  node_home: "$HOME/.celestia-app",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "utia",
      fixed_min_gas_price: 0,
      low_gas_price: 0.01,
      average_gas_price: 0.02,
      high_gas_price: 0.1
    }]
  },
  codebase: {},
  apis: {
    rpc: [
      {
        address: "https://rpc-mocha.pops.one",
        provider: "P-OPs"
      },
      {
        address: "https://celestia-testnet-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://rpc-mocha-full.avril14th.org",
        provider: "Avril 14th"
      },
      {
        address: "https://celestia-testnet-rpc.itrocket.net",
        provider: "\u{1F680}ITRocket\u{1F680}"
      },
      {
        address: "https://rpc-celestia-testnet.cryptech.com.ua",
        provider: "CrypTech"
      },
      {
        address: "https://rpc.celestia.testnet.dteam.tech:443",
        provider: "DTEAM"
      }
    ],
    rest: [
      {
        address: "https://api-mocha.pops.one",
        provider: "P-OPs"
      },
      {
        address: "https://celestia-testnet-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "https://api-mocha-full.avril14th.org",
        provider: "Avril 14th"
      },
      {
        address: "https://celestia-testnet-api.itrocket.net",
        provider: "\u{1F680}ITRocket\u{1F680}"
      },
      {
        address: "https://api-celestia-testnet.cryptech.com.ua",
        provider: "CrypTech"
      },
      {
        address: "https://api.celestia.testnet.dteam.tech:443",
        provider: "DTEAM"
      }
    ],
    grpc: [
      {
        address: "celestia-testnet-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      },
      {
        address: "grpc-mocha-full.avril14th.org",
        provider: "Avril 14th"
      },
      {
        address: "celestia-testnet-grpc.itrocket.net:11090",
        provider: "\u{1F680}ITRocket\u{1F680}"
      },
      {
        address: "https://grpc-celestia-testnet.cryptech.com.ua",
        provider: "CrypTech"
      },
      {
        address: "grpc.celestia.testnet.dteam.tech:27090",
        provider: "DTEAM"
      }
    ]
  },
  explorers: [
    {
      kind: "Mintscan",
      url: "https://mintscan.io/celestia-testnet",
      tx_page: "https://mintscan.io/celestia-testnet/txs/${txHash}"
    },
    {
      kind: "\u{1F680}ITRocket\u{1F680}",
      url: "https://testnet.itrocket.net/celestia",
      tx_page: "https://testnet.itrocket.net/celestia/tx/${txHash}",
      account_page: "https://testnet.itrocket.net/celestia/account/${accountAddress}"
    },
    {
      kind: "CrypTech",
      url: "https://explorers.cryptech.com.ua/Celestia-Testnet",
      tx_page: "https://explorers.cryptech.com.ua/Celestia-Testnet/tx/${txHash}",
      account_page: "https://explorers.cryptech.com.ua/Celestia-Testnet/account/${accountAddress}"
    },
    {
      kind: "DTEAM | Explorer",
      url: "https://explorer.testnet.dteam.tech/celestia",
      tx_page: "https://explorer.testnet.dteam.tech/celestia/tx/${txHash}",
      account_page: "https://explorer.testnet.dteam.tech/celestia/account/${accountAddress}"
    }
  ]
};
var chain_default189 = info514;

// node_modules/chain-registry/esm/testnet/celestiatestnet3/ibc.js
var info515 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestiatestnet3",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "cosmoshubtestnet",
      client_id: "07-tendermint-2382",
      connection_id: "connection-2727"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3152",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestiatestnet3",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "neutrontestnet",
      client_id: "07-tendermint-113",
      connection_id: "connection-101"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-160",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestiatestnet3",
      client_id: "07-tendermint-118",
      connection_id: "connection-98"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1445",
      connection_id: "connection-1350"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-25",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4370",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default140 = info515;

// node_modules/chain-registry/esm/testnet/celestiatestnet3/index.js
var assets188 = assets_default188;
var chain189 = chain_default189;
var ibc140 = ibc_default140;

// node_modules/chain-registry/esm/testnet/chain4energytestnet/assets.js
var info516 = {
  $schema: "../assetlist.schema.json",
  chain_name: "chain4energytestnet",
  assets: [{
    description: "The native token of Chain4Energy",
    denom_units: [{
      denom: "uc4e",
      exponent: 0
    }, {
      denom: "c4e",
      exponent: 6
    }],
    base: "uc4e",
    name: "Chain4Energy",
    display: "c4e",
    symbol: "C4E",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/chain4energytestnet/images/c4e.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/chain4energytestnet/images/c4e.png"
    }]
  }]
};
var assets_default189 = info516;

// node_modules/chain-registry/esm/testnet/chain4energytestnet/chain.js
var info517 = {
  $schema: "../chain.schema.json",
  chain_name: "chain4energytestnet",
  status: "live",
  network_type: "testnet",
  website: "https://c4e.io/",
  pretty_name: "Chain4Energy Testnet",
  chain_id: "babajaga-1",
  bech32_prefix: "c4e",
  daemon_name: "c4ed",
  node_home: "$HOME/.c4e-chain",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uc4e",
      fixed_min_gas_price: 0,
      low_gas_price: 0.02,
      average_gas_price: 0.03,
      high_gas_price: 0.06
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uc4e"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/chain4energytestnet/images/c4e.png"
  },
  apis: {
    rpc: [{
      address: "https://rpc-testnet.c4e.io",
      provider: "C4E"
    }],
    rest: [{
      address: "https://c4e.api.t.stavr.tech",
      provider: "\u{1F525}STAVR\u{1F525}"
    }, {
      address: "https://lcd-testnet.c4e.io",
      provider: "C4E"
    }],
    grpc: [{
      address: "grpc-testnet.c4e.io:8443",
      provider: "C4E"
    }]
  },
  explorers: [{
    kind: "\u{1F525}STAVR\u{1F525}",
    url: "https://explorer.stavr.tech/C4E-Testnet",
    tx_page: "https://explorer.stavr.tech/C4E-Testnet/transactions/${txHash}"
  }, {
    kind: "explorer",
    url: "https://explorer-testnet.c4e.io/",
    tx_page: "https://explorer-testnet.c4e.io/transactions/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/chain4energytestnet/images/c4e.png"
  }]
};
var chain_default190 = info517;

// node_modules/chain-registry/esm/testnet/chain4energytestnet/ibc.js
var info518 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "chain4energytestnet",
    client_id: "07-tendermint-18",
    connection_id: "connection-5"
  },
  chain_2: {
    chain_name: "osmosistestnet",
    client_id: "07-tendermint-3393",
    connection_id: "connection-2989"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-5",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-7735",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default141 = info518;

// node_modules/chain-registry/esm/testnet/chain4energytestnet/index.js
var assets189 = assets_default189;
var chain190 = chain_default190;
var ibc141 = ibc_default141;

// node_modules/chain-registry/esm/testnet/cheqdtestnet/assets.js
var info519 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "cheqdtestnet",
  assets: [{
    description: "Native token for the cheqd network",
    denom_units: [{
      denom: "ncheq",
      exponent: 0
    }, {
      denom: "cheq",
      exponent: 9
    }],
    base: "ncheq",
    display: "cheq",
    name: "cheqd",
    symbol: "CHEQ",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/cheqdtestnet/images/cheq.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/cheqdtestnet/images/cheq.svg"
    },
    coingecko_id: "cheqd-network",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/cheqdtestnet/images/cheq.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/cheqdtestnet/images/cheq.svg"
    }]
  }]
};
var assets_default190 = info519;

// node_modules/chain-registry/esm/testnet/cheqdtestnet/chain.js
var info520 = {
  $schema: "../../chain.schema.json",
  chain_name: "cheqdtestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "cheqd",
  chain_id: "cheqd-testnet-6",
  bech32_prefix: "cheqd",
  daemon_name: "cheqd-noded",
  node_home: "$HOME/.cheqdnode",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ncheq",
      fixed_min_gas_price: 25,
      low_gas_price: 50,
      average_gas_price: 75,
      high_gas_price: 100
    }]
  },
  codebase: {
    cosmos_sdk_version: "cheqd/cosmos-sdk v0.47.10-height-mismatch"
  },
  apis: {
    rpc: [{
      address: "https://rpc.cheqd.network",
      provider: "cheqd"
    }],
    rest: [{
      address: "https://api.cheqd.network",
      provider: "cheqd"
    }],
    grpc: [{
      address: "grpc.cheqd.network:443",
      provider: "cheqd"
    }]
  },
  explorers: [{
    kind: "bigdipper",
    url: "https://testnet-explorer.cheqd.io/",
    tx_page: "https://testnet-explorer.cheqd.io/transactions/${txHash}"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cheqd/images/cheq.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cheqd/images/cheq.svg"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cheqd/images/cheq.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cheqd/images/cheq.svg"
  }]
};
var chain_default191 = info520;

// node_modules/chain-registry/esm/testnet/cheqdtestnet/index.js
var assets190 = assets_default190;
var chain191 = chain_default191;

// node_modules/chain-registry/esm/testnet/chimbatestnet/assets.js
var info521 = {
  $schema: "../assetlist.schema.json",
  chain_name: "chimbatestnet",
  assets: [{
    description: "The first blokchain in colombia",
    denom_units: [{
      denom: "ucmba",
      exponent: 0
    }, {
      denom: "chimba",
      exponent: 6
    }],
    base: "ucmba",
    name: "Chimba",
    display: "chimba",
    symbol: "CMBA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chimba/images/chimba-blue.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chimba/images/chimba-blue.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chimba/images/chimba-blue.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/chimba/images/chimba-blue.svg"
    }]
  }]
};
var assets_default191 = info521;

// node_modules/chain-registry/esm/testnet/chimbatestnet/chain.js
var info522 = {
  $schema: "../chain.schema.json",
  chain_name: "chimbatestnet",
  status: "live",
  network_type: "testnet",
  website: "https://chimba.ooo/",
  pretty_name: "Chimba",
  chain_id: "chimba-testnet",
  bech32_prefix: "chimba",
  daemon_name: "chimbad",
  node_home: "$HOME/.chimbad",
  fees: {
    fee_tokens: [{
      denom: "ucmba",
      fixed_min_gas_price: 0.25,
      low_gas_price: 1,
      average_gas_price: 5,
      high_gas_price: 10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ucmba"
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://rpc.testnet.chimba.ooo",
      provider: "chimba"
    }],
    rest: [{
      address: "https://testnet.chimba.ooo",
      provider: "chimba"
    }]
  },
  explorers: [{
    kind: "bigdipper",
    url: "https://explorer.testnet.chimba.ooo/",
    tx_page: "https://explorer.testnet.chimba.ooo/transactions/${txHash}"
  }],
  slip44: 118
};
var chain_default192 = info522;

// node_modules/chain-registry/esm/testnet/chimbatestnet/index.js
var assets191 = assets_default191;
var chain192 = chain_default192;

// node_modules/chain-registry/esm/testnet/composabletestnet/assets.js
var info523 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "composabletestnet",
  assets: [{
    description: "The native staking and governance token of the Composable testnet.",
    denom_units: [{
      denom: "ppica",
      exponent: 0
    }, {
      denom: "pica",
      exponent: 12
    }],
    base: "ppica",
    name: "Pica",
    display: "pica",
    symbol: "PICA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/composable/images/composable.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/composable/images/composable.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/composable/images/composable.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/composable/images/composable.svg"
    }]
  }]
};
var assets_default192 = info523;

// node_modules/chain-registry/esm/testnet/composabletestnet/chain.js
var info524 = {
  $schema: "../chain.schema.json",
  chain_name: "composabletestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Composable Testnet",
  chain_id: "banksy-testnet-3",
  bech32_prefix: "centauri",
  daemon_name: "centaurid",
  node_home: "$HOME/.banksy",
  key_algos: ["secp256k1"],
  slip44: 118,
  staking: {
    staking_tokens: [{
      denom: "ppica"
    }]
  },
  fees: {
    fee_tokens: [{
      denom: "ppica",
      fixed_min_gas_price: 0,
      low_gas_price: 0,
      average_gas_price: 0,
      high_gas_price: 0
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://rpc.composable-t.indonode.net:443",
      provider: "Indonode"
    }, {
      address: "https://rpc-composable-testnet.sr20de.xyz:443",
      provider: "Sr20de"
    }],
    rest: [
      {
        address: "https://api.composable-t.indonode.net",
        provider: "Indonode"
      },
      {
        address: "https://composable.api.t4.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api-composable-testnet.sr20de.xyz",
        provider: "Sr20de"
      }
    ],
    grpc: [{
      address: "https://grpc.composable-t.indonode.net:47090",
      provider: "Indonode"
    }, {
      address: "https://grpc-composable-testnet.sr20de.xyz",
      provider: "Sr20de"
    }]
  },
  explorers: [
    {
      url: "https://explorer.nodexcapital.com/composable-3",
      tx_page: "https://explorer.nodexcapital.com/composable-3/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Composable-Testnet4",
      tx_page: "https://explorer.stavr.tech/Composable-Testnet4/tx/${txHash}"
    },
    {
      url: "https://explorer.indonode.net/composable-testnet-3",
      tx_page: "https://explorer.indonode.net/composable-testnet-3/tx/${txHash}"
    },
    {
      url: "https://explorer.sr20de.xyz/Composible-3",
      tx_page: "https://explorer.sr20de.xyz/Composible-3/tx/${txHash}"
    }
  ]
};
var chain_default193 = info524;

// node_modules/chain-registry/esm/testnet/composabletestnet/ibc.js
var info525 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "composabletestnet",
    client_id: "07-tendermint-23",
    connection_id: "connection-18"
  },
  chain_2: {
    chain_name: "osmosistestnet",
    client_id: "07-tendermint-273",
    connection_id: "connection-237"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-11",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-329",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default142 = info525;

// node_modules/chain-registry/esm/testnet/composabletestnet/index.js
var assets192 = assets_default192;
var chain193 = chain_default193;
var ibc142 = ibc_default142;

// node_modules/chain-registry/esm/testnet/coolcattestnet/assets.js
var info526 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "coolcattestnet",
  assets: [{
    description: "CoolCat - The Interchain Gaming Hub. $CCAT is the native token for use in the CoolCat Network.",
    denom_units: [{
      denom: "uccat",
      exponent: 0
    }, {
      denom: "ccat",
      exponent: 6
    }],
    base: "uccat",
    name: "CoolCat",
    display: "ccat",
    symbol: "CCAT",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/coolcattestnet/images/coolcat.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/coolcattestnet/images/coolcat.svg"
    },
    keywords: [
      "nft",
      "staking",
      "games"
    ],
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/coolcattestnet/images/coolcat.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/coolcattestnet/images/coolcat.svg"
    }]
  }]
};
var assets_default193 = info526;

// node_modules/chain-registry/esm/testnet/coolcattestnet/chain.js
var info527 = {
  $schema: "../../chain.schema.json",
  chain_name: "coolcattestnet",
  status: "live",
  network_type: "testnet",
  website: "https://app.coolcat.space/",
  pretty_name: "CoolCat",
  chain_id: "kitten-04",
  bech32_prefix: "ccat",
  key_algos: ["secp256k1"],
  fees: {
    fee_tokens: [{
      denom: "uccat",
      fixed_min_gas_price: 0,
      low_gas_price: 0,
      average_gas_price: 1,
      high_gas_price: 2
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uccat"
    }]
  },
  daemon_name: "coolcat",
  node_home: "$HOME/.coolcat",
  slip44: 118,
  codebase: {},
  apis: {
    rpc: [{
      address: "https://rpc.coolcat.space",
      provider: "Digital Kitchen"
    }],
    rest: [{
      address: "https://lcd.coolcat.space",
      provider: "Digital Kitchen"
    }],
    grpc: []
  },
  explorers: []
};
var chain_default194 = info527;

// node_modules/chain-registry/esm/testnet/coolcattestnet/index.js
var assets193 = assets_default193;
var chain194 = chain_default194;

// node_modules/chain-registry/esm/testnet/coreumtestnet/assets.js
var info528 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "coreumtestnet",
  assets: [{
    description: "The native token of Coreum",
    denom_units: [{
      denom: "utestcore",
      exponent: 0
    }, {
      denom: "testcore",
      exponent: 6
    }],
    base: "utestcore",
    name: "Coreum",
    display: "testcore",
    symbol: "TESTCORE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coreum/images/coreum.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coreum/images/coreum.svg"
    },
    coingecko_id: "coreum",
    keywords: [
      "dex",
      "staking",
      "wasm",
      "assets",
      "nft",
      "XRPL"
    ],
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coreum/images/coreum.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coreum/images/coreum.svg"
    }]
  }]
};
var assets_default194 = info528;

// node_modules/chain-registry/esm/testnet/coreumtestnet/chain.js
var info529 = {
  $schema: "../../chain.schema.json",
  chain_name: "coreumtestnet",
  status: "live",
  network_type: "testnet",
  website: "https://www.coreum.com",
  pretty_name: "Coreum",
  chain_id: "coreum-testnet-1",
  bech32_prefix: "testcore",
  daemon_name: "cored",
  node_home: "$HOME/.core/coreum-testnet-1",
  key_algos: ["secp256k1"],
  slip44: 990,
  fees: {
    fee_tokens: [{
      denom: "utestcore",
      fixed_min_gas_price: 0.03125,
      low_gas_price: 0.0625,
      average_gas_price: 0.0625,
      high_gas_price: 62.5
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "utestcore"
    }],
    lock_duration: {
      time: "168h"
    }
  },
  codebase: {
    cosmos_sdk_version: "0.45",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.30"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coreum/images/coreum.png",
    theme: {
      primary_color_hex: "#25d695"
    }
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/coreum/images/coreum.png"
  },
  apis: {
    rpc: [
      {
        address: "https://full-node.testnet-1.coreum.dev:26657",
        provider: "Coreum Foundation"
      },
      {
        address: "https://full-node-eris.testnet-1.coreum.dev:26657",
        provider: "Coreum Foundation"
      },
      {
        address: "https://coreum-testnet-rpc.ibs.team:443",
        provider: "Inter Blockchain Services"
      }
    ],
    grpc: [{
      address: "https://full-node.testnet-1.coreum.dev:9090",
      provider: "Coreum Foundation"
    }, {
      address: "https://full-node-eris.testnet-1.coreum.dev:9090",
      provider: "Coreum Foundation"
    }],
    rest: [{
      address: "https://full-node.testnet-1.coreum.dev:1317",
      provider: "Coreum"
    }, {
      address: "https://coreum-testnet-api.ibs.team:443",
      provider: "Inter Blockchain Services"
    }]
  },
  explorers: [{
    kind: "Coreum",
    url: "https://explorer.testnet-1.coreum.dev/coreum",
    tx_page: "https://explorer.testnet-1.coreum.dev/coreum/transactions/${txHash}",
    account_page: "https://explorer.testnet-1.coreum.dev/coreum/account/${accountAddress}"
  }, {
    kind: "mintscan",
    url: "https://www.mintscan.io/coreum-testnet",
    tx_page: "https://www.mintscan.io/coreum-testnet/transactions/${txHash}",
    account_page: "https://www.mintscan.io/coreum-testnet/accounts/${accountAddress}"
  }],
  keywords: [
    "dex",
    "staking",
    "wasm",
    "assets",
    "nft"
  ]
};
var chain_default195 = info529;

// node_modules/chain-registry/esm/testnet/coreumtestnet/ibc.js
var info530 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "coreumtestnet",
    client_id: "07-tendermint-104",
    connection_id: "connection-69"
  },
  chain_2: {
    chain_name: "osmosistestnet",
    client_id: "07-tendermint-3529",
    connection_id: "connection-3094"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-47",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-7894",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default143 = info530;

// node_modules/chain-registry/esm/testnet/coreumtestnet/index.js
var assets194 = assets_default194;
var chain195 = chain_default195;
var ibc143 = ibc_default143;

// node_modules/chain-registry/esm/testnet/cosmoshubtestnet/assets.js
var info531 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "cosmoshubtestnet",
  assets: [{
    description: "The native staking and governance token of the Theta testnet version of the Cosmos Hub.",
    denom_units: [{
      denom: "uatom",
      exponent: 0
    }, {
      denom: "atom",
      exponent: 6
    }],
    base: "uatom",
    name: "Cosmos",
    display: "atom",
    symbol: "ATOM",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
    }]
  }]
};
var assets_default195 = info531;

// node_modules/chain-registry/esm/testnet/cosmoshubtestnet/chain.js
var info532 = {
  $schema: "../../chain.schema.json",
  chain_name: "cosmoshubtestnet",
  chain_id: "theta-testnet-001",
  pretty_name: "Cosmos Hub Public Testnet",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "cosmos",
  daemon_name: "gaiad",
  node_home: "$HOME/.gaia",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uatom",
      fixed_min_gas_price: 5e-3,
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.03
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uatom"
    }]
  },
  codebase: {},
  apis: {
    rpc: [
      {
        address: "https://rpc.sentry-01.theta-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://rpc.sentry-02.theta-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://rpc.state-sync-01.theta-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://rpc.state-sync-02.theta-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://public-cosmos-theta.w3node.com",
        provider: "Interchain.FM"
      },
      {
        address: "https://rpc-theta.osmotest5.osmosis.zone/",
        provider: "Osmosis"
      }
    ],
    rest: [
      {
        address: "https://rest.sentry-01.theta-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://rest.sentry-02.theta-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://rest.state-sync-01.theta-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://rest.state-sync-02.theta-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://public-cosmos-theta.w3node.com/rest/",
        provider: "Interchain.FM"
      },
      {
        address: "https://lcd-theta.osmotest5.osmosis.zone/",
        provider: "Osmosis"
      }
    ],
    grpc: [
      {
        address: "https://grpc.sentry-01.theta-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://grpc.sentry-02.theta-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://grpc.state-sync-01.theta-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://grpc.state-sync-02.theta-testnet.polypore.xyz",
        provider: "Hypha"
      }
    ]
  },
  explorers: [{
    kind: "Mintscan",
    url: "https://mintscan.io/cosmoshub-testnet",
    tx_page: "https://mintscan.io/cosmoshub-testnet/txs/${txHash}"
  }, {
    kind: "Big Dipper",
    url: "https://explorer.theta-testnet.polypore.xyz/",
    tx_page: "https://explorer.theta-testnet.polypore.xyz/transactions/${txHash}"
  }]
};
var chain_default196 = info532;

// node_modules/chain-registry/esm/testnet/cosmoshubtestnet/ibc.js
var info533 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshubtestnet",
      client_id: "07-tendermint-2522",
      connection_id: "connection-2881"
    },
    chain_2: {
      chain_name: "elystestnet",
      client_id: "07-tendermint-19",
      connection_id: "connection-17"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3302",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-16",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestiatestnet3",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "cosmoshubtestnet",
      client_id: "07-tendermint-2382",
      connection_id: "connection-2727"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3152",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshubtestnet",
      client_id: "07-tendermint-2073",
      connection_id: "connection-2418"
    },
    chain_2: {
      chain_name: "empowertestnet",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2765",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshubtestnet",
      client_id: "7-tendermint-3407",
      connection_id: "connection-3519"
    },
    chain_2: {
      chain_name: "kujiratestnet",
      client_id: "07-tendermint-72",
      connection_id: "connection-47"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4004",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-51",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshubtestnet",
      client_id: "07-tendermint-2528",
      connection_id: "connection-2886"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1262",
      connection_id: "connection-1157"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3306",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4156",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshubtestnet",
      client_id: "07-tendermint-2100",
      connection_id: "connection-2447"
    },
    chain_2: {
      chain_name: "persistencetestnet2",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2777",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshubtestnet",
      client_id: "07-tendermint-3237",
      connection_id: "connection-3407"
    },
    chain_2: {
      chain_name: "titantestnet",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3910",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default144 = info533;

// node_modules/chain-registry/esm/testnet/cosmoshubtestnet/index.js
var assets195 = assets_default195;
var chain196 = chain_default196;
var ibc144 = ibc_default144;

// node_modules/chain-registry/esm/testnet/cosmwasmtestnet/assets.js
var info534 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "cosmwasmtestnet",
  assets: [{
    description: "Fee Token",
    denom_units: [{
      denom: "umlg",
      exponent: 0
    }, {
      denom: "MLG",
      exponent: 6
    }],
    base: "umlg",
    name: "Malaga",
    display: "umlg",
    symbol: "MLG",
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/cosmwasmtestnet/images/cosmwasm.svg"
    },
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/cosmwasmtestnet/images/cosmwasm.svg"
    }]
  }, {
    description: "Staking Token",
    denom_units: [{
      denom: "uand",
      exponent: 0
    }, {
      denom: "AND",
      exponent: 6
    }],
    base: "uand",
    name: "Malaga Stake",
    display: "uand",
    symbol: "AND",
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/cosmwasmtestnet/images/cosmwasm.svg"
    },
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/cosmwasmtestnet/images/cosmwasm.svg"
    }]
  }]
};
var assets_default196 = info534;

// node_modules/chain-registry/esm/testnet/cosmwasmtestnet/chain.js
var info535 = {
  $schema: "../../chain.schema.json",
  chain_name: "cosmwasmtestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "CosmWasm Testnet",
  chain_id: "malaga-420",
  bech32_prefix: "wasm",
  daemon_name: "wasmd",
  node_home: "$HOME/.wasmd",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "umlg",
      low_gas_price: 0.03,
      average_gas_price: 0.04,
      high_gas_price: 0.05
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uand"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.45",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.27"
  },
  apis: {
    rpc: [{
      address: "https://rpc.malaga-420.cosmwasm.com:443",
      provider: "Confio"
    }],
    rest: [{
      address: "https://api.malaga-420.cosmwasm.com",
      provider: "Confio"
    }]
  },
  explorers: [{
    kind: "BIG DIPPER",
    url: "https://block-explorer.malaga-420.cosmwasm.com/",
    tx_page: "https://block-explorer.malaga-420.cosmwasm.com/transactions/${txHash}"
  }]
};
var chain_default197 = info535;

// node_modules/chain-registry/esm/testnet/cosmwasmtestnet/index.js
var assets196 = assets_default196;
var chain197 = chain_default197;

// node_modules/chain-registry/esm/testnet/cosstestnet/assets.js
var info536 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "cosstestnet",
  assets: [{
    description: "The native token of COSS",
    denom_units: [{
      denom: "ucgas",
      exponent: 0,
      aliases: []
    }, {
      denom: "cgas",
      exponent: 6,
      aliases: []
    }],
    base: "ucgas",
    name: "cgas",
    display: "cgas",
    symbol: "cgas"
  }]
};
var assets_default197 = info536;

// node_modules/chain-registry/esm/testnet/cosstestnet/chain.js
var info537 = {
  $schema: "../../chain.schema.json",
  chain_name: "cosstestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "COSS Testnet",
  chain_id: "coss-testnet-1",
  bech32_prefix: "coss",
  daemon_name: "cossd",
  node_home: "$HOME/.cossd",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ucgas",
      fixed_min_gas_price: 0,
      low_gas_price: 0,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ucgas"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.50.2",
    cosmwasm_enabled: false
  },
  apis: {
    rpc: [{
      address: "https://coss-testnet-rpc.coss.ink",
      provider: "COSS"
    }],
    rest: [{
      address: "https://coss-testnet-rest.coss.ink",
      provider: "COSS"
    }]
  }
};
var chain_default198 = info537;

// node_modules/chain-registry/esm/testnet/cosstestnet/index.js
var assets197 = assets_default197;
var chain198 = chain_default198;

// node_modules/chain-registry/esm/testnet/cudostestnet/assets.js
var info538 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "cudostestnet",
  assets: [{
    description: "The native token of the Cudos blockchain",
    denom_units: [{
      denom: "acudos",
      exponent: 0,
      aliases: ["attocudos"]
    }, {
      denom: "cudos",
      exponent: 18,
      aliases: []
    }],
    base: "acudos",
    name: "Cudos",
    display: "cudos",
    symbol: "CUDOS",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/cudostestnet/images/cudos.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/cudostestnet/images/cudos.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/cudostestnet/images/cudos.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/cudostestnet/images/cudos.svg"
    }]
  }]
};
var assets_default198 = info538;

// node_modules/chain-registry/esm/testnet/cudostestnet/chain.js
var info539 = {
  $schema: "../../chain.schema.json",
  chain_name: "cudostestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Cudos Testnet",
  chain_id: "cudos-testnet-public-3",
  bech32_prefix: "cudos",
  key_algos: ["secp256k1"],
  slip44: 118,
  codebase: {},
  apis: {
    rpc: [
      {
        address: "https://rpc.testnet.cudos.org:443/",
        provider: "cudo"
      },
      {
        address: "http://sentry-01.hosts.testnet.cudos.org:26657",
        provider: "cudo"
      },
      {
        address: "http://sentry-02.hosts.testnet.cudos.org:26657",
        provider: "cudo"
      },
      {
        address: "http://sentry-03.hosts.testnet.cudos.org:26657",
        provider: "cudo"
      }
    ],
    rest: [
      {
        address: "https://rest.testnet.cudos.org:443",
        provider: "cudo"
      },
      {
        address: "http://sentry-01.hosts.testnet.cudos.org:1317/",
        provider: "cudo"
      },
      {
        address: "http://sentry-02.hosts.testnet.cudos.org:1317/",
        provider: "cudo"
      },
      {
        address: "http://sentry-03.hosts.testnet.cudos.org:1317/",
        provider: "cudo"
      }
    ],
    grpc: [
      {
        address: "https://grpc.testnet.cudos.org:433",
        provider: "cudo"
      },
      {
        address: "http://sentry-01.hosts.testnet.cudos.org:9090",
        provider: "cudo"
      },
      {
        address: "http://sentry-02.hosts.testnet.cudos.org:9090",
        provider: "cudo"
      },
      {
        address: "http://sentry-03.hosts.testnet.cudos.org:9090",
        provider: "cudo"
      }
    ]
  },
  explorers: [{
    kind: "bigdipper-testnet",
    url: "https://explorer.testnet.cudos.org/",
    tx_page: "https://explorer.testnet.cudos.org/transactions/${txHash}",
    account_page: "https://explorer.testnet.cudos.org/accounts/${accountAddress}"
  }]
};
var chain_default199 = info539;

// node_modules/chain-registry/esm/testnet/cudostestnet/index.js
var assets198 = assets_default198;
var chain199 = chain_default199;

// node_modules/chain-registry/esm/testnet/deardogetestnet/assets.js
var info540 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "deardogetestnet",
  assets: [{
    description: "The native staking and governance token of the Theta testnet version of the Dear Doge Testnet.",
    denom_units: [{
      denom: "udear",
      exponent: 0
    }, {
      denom: "dear",
      exponent: 6
    }],
    base: "udear",
    name: "Dear Doge Testnet",
    display: "dear",
    symbol: "DEAR",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/deardogetestnet/images/deardoge.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/deardogetestnet/images/deardoge.png"
    }]
  }]
};
var assets_default199 = info540;

// node_modules/chain-registry/esm/testnet/deardogetestnet/chain.js
var info541 = {
  $schema: "../../chain.schema.json",
  chain_name: "deardogetestnet",
  chain_id: "deardoge-testnet",
  pretty_name: "Dear Doge Testnet",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "deardoge",
  daemon_name: "dogd",
  node_home: "$HOME/.deardoge",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "udear",
      fixed_min_gas_price: 0.25
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "udear"
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://testnet-rpc.deardoge.org",
      provider: "dorafactory"
    }],
    rest: [{
      address: "https://testnet-rest.deardoge.org",
      provider: "dorafactory"
    }],
    grpc: [{
      address: "testnet-grpc.deardoge.org:443",
      provider: "dorafactory"
    }]
  },
  explorers: [{
    kind: "Dear Doge Ping Pub",
    url: "https://testnet-explorer.deardoge.org/deardoge",
    tx_page: "https://testnet-explorer.deardoge.org/deardoge/tx/${txHash}"
  }]
};
var chain_default200 = info541;

// node_modules/chain-registry/esm/testnet/deardogetestnet/index.js
var assets199 = assets_default199;
var chain200 = chain_default200;

// node_modules/chain-registry/esm/testnet/desmostestnet/assets.js
var info542 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "desmostestnet",
  assets: [{
    description: "The native token of Desmos",
    denom_units: [{
      denom: "udaric",
      exponent: 0
    }, {
      denom: "daric",
      exponent: 6
    }],
    base: "udaric",
    name: "Desmos Testnet",
    display: "daric",
    symbol: "DARIC",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/desmos/images/dsm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/desmos/images/dsm.svg"
    },
    coingecko_id: "desmos",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/desmos/images/dsm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/desmos/images/dsm.svg"
    }]
  }]
};
var assets_default200 = info542;

// node_modules/chain-registry/esm/testnet/desmostestnet/chain.js
var info543 = {
  $schema: "../../chain.schema.json",
  chain_name: "desmostestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Desmos Testnet",
  chain_id: "morpheus-apollo-3",
  bech32_prefix: "desmos",
  daemon_name: "desmos",
  node_home: "$HOME/.desmos",
  key_algos: ["secp256k1"],
  slip44: 852,
  fees: {
    fee_tokens: [{
      denom: "udaric",
      fixed_min_gas_price: 1e-3,
      low_gas_price: 0.01,
      average_gas_price: 0.03,
      high_gas_price: 0.05
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "udaric"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/desmos/images/dsm.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/desmos/images/dsm.svg"
  },
  apis: {
    rpc: [{
      address: "https://rpc.morpheus.desmos.network",
      provider: "desmos"
    }],
    rest: [{
      address: "https://lcd.morpheus.desmos.network",
      provider: "desmos"
    }],
    grpc: [{
      address: "https://grpc.morpheus.desmos.network:443",
      provider: "desmos"
    }]
  },
  explorers: [{
    kind: "bigdipper",
    url: "https://testnet.bigdipper.live/desmos",
    tx_page: "https://testnet.live/desmos/transactions/${txHash}",
    account_page: "https://testnet.bigdipper.live/desmos/accounts/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/desmos/images/dsm.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/desmos/images/dsm.svg"
  }]
};
var chain_default201 = info543;

// node_modules/chain-registry/esm/testnet/desmostestnet/index.js
var assets200 = assets_default200;
var chain201 = chain_default201;

// node_modules/chain-registry/esm/testnet/doravotatestnet/assets.js
var info544 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "doravotatestnet",
  assets: [{
    description: "The native staking and governance token of the Theta testnet version of the Dora Vota Testnet.",
    denom_units: [{
      denom: "peaka",
      exponent: 0
    }, {
      denom: "DORA",
      exponent: 18
    }],
    base: "peaka",
    name: "Dora Vota Testnet",
    display: "DORA",
    symbol: "DORA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/doravotatestnet/images/doravota.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/doravotatestnet/images/doravota.png"
    }]
  }]
};
var assets_default201 = info544;

// node_modules/chain-registry/esm/testnet/doravotatestnet/chain.js
var info545 = {
  $schema: "../../chain.schema.json",
  chain_name: "doravotatestnet",
  chain_id: "vota-testnet",
  pretty_name: "Dora Vota Testnet",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "dora",
  daemon_name: "dorad",
  node_home: "$HOME/.dora",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "peaka",
      fixed_min_gas_price: 1e11
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "peaka"
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://vota-testnet-rpc.dorafactory.org/",
      provider: "dorafactory"
    }],
    rest: [{
      address: "https://vota-testnet-rest.dorafactory.org",
      provider: "dorafactory"
    }],
    grpc: [{
      address: "vota-testnet-grpc.dorafactory.org:443",
      provider: "dorafactory"
    }]
  },
  explorers: [{
    kind: "Dora Vota Ping Pub",
    url: "https://maci-explorer-test.dorafactory.org",
    tx_page: "https://maci-explorer-test.dorafactory.org/dora/tx/${txHash}"
  }]
};
var chain_default202 = info545;

// node_modules/chain-registry/esm/testnet/doravotatestnet/ibc.js
var info546 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "doravotatestnet",
    client_id: "07-tendermint-2",
    connection_id: "connection-3"
  },
  chain_2: {
    chain_name: "osmosistestnet",
    client_id: "07-tendermint-2",
    connection_id: "connection-611"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-1260",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default145 = info546;

// node_modules/chain-registry/esm/testnet/doravotatestnet/index.js
var assets201 = assets_default201;
var chain202 = chain_default202;
var ibc145 = ibc_default145;

// node_modules/chain-registry/esm/testnet/doravotatestnet2/assets.js
var info547 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "doravotatestnet2",
  assets: [{
    description: "The native staking and governance token of the Theta incentive version of the Dora Vota Testnet.",
    denom_units: [{
      denom: "peaka",
      exponent: 0
    }, {
      denom: "DORA",
      exponent: 18
    }],
    base: "peaka",
    name: "Dora Vota Incentive Testnet",
    display: "DORA",
    symbol: "DORA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/doravotatestnet/images/doravota.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/doravotatestnet/images/doravota.png"
    }]
  }]
};
var assets_default202 = info547;

// node_modules/chain-registry/esm/testnet/doravotatestnet2/chain.js
var info548 = {
  $schema: "../../chain.schema.json",
  chain_name: "doravotatestnet2",
  chain_id: "vota-vk",
  pretty_name: "Dora Vota Incentive Testnet",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "dora",
  daemon_name: "dorad",
  node_home: "$HOME/.dora",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "peaka",
      fixed_min_gas_price: 1e11
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "peaka"
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://vota-vk-rpc.dorafactory.org/",
      provider: "dorafactory"
    }],
    rest: [{
      address: "https://vota-vk-rest.dorafactory.org",
      provider: "dorafactory"
    }],
    grpc: [{
      address: "vota-vk-grpc.dorafactory.org:443",
      provider: "dorafactory"
    }]
  },
  explorers: [{
    kind: "Dora Vota Ping Pub",
    url: "https://vota-vk-explorer.dorafactory.org",
    tx_page: "https://vota-vk-explorer.dorafactory.org/doravotaincentive/tx/${txHash}"
  }]
};
var chain_default203 = info548;

// node_modules/chain-registry/esm/testnet/doravotatestnet2/index.js
var assets202 = assets_default202;
var chain203 = chain_default203;

// node_modules/chain-registry/esm/testnet/dydxtestnet/assets.js
var info549 = {
  $schema: "../assetlist.schema.json",
  chain_name: "dydxtestnet",
  assets: [{
    description: "The native staking token of dYdX Protocol.",
    denom_units: [{
      denom: "adv4tnt",
      exponent: 0
    }, {
      denom: "dv4tnt",
      exponent: 18
    }],
    base: "adv4tnt",
    name: "dYdX",
    display: "dv4tnt",
    symbol: "DV4TNT",
    traces: [{
      type: "test-mintage",
      counterparty: {
        chain_name: "dydx",
        base_denom: "adydx"
      },
      provider: "Dydx"
    }],
    images: [{
      image_sync: {
        chain_name: "dydx",
        base_denom: "adydx"
      },
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.svg"
    }, {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx-circle.svg",
      theme: {
        circle: true
      }
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.svg"
    }
  }]
};
var assets_default203 = info549;

// node_modules/chain-registry/esm/testnet/dydxtestnet/chain.js
var info550 = {
  $schema: "../chain.schema.json",
  chain_name: "dydxtestnet",
  status: "live",
  website: "https://dydx.trade/",
  network_type: "testnet",
  pretty_name: "dYdX Protocol",
  chain_id: "dydx-testnet-4",
  bech32_prefix: "dydx",
  daemon_name: "dydxprotocold",
  node_home: "$HOME/.dydxprotocol",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "adv4tnt",
      fixed_min_gas_price: 125e8,
      low_gas_price: 125e8,
      average_gas_price: 125e8,
      high_gas_price: 2e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "adv4tnt"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.47.4",
    cosmwasm_enabled: false
  },
  description: "Our goal is to build open source code that can power a first class product and trading experience.",
  apis: {
    rpc: [
      {
        address: "https://dydx-rpc-testnet.enigma-validator.com",
        provider: "Enigma"
      },
      {
        address: "https://testnet-dydx-rpc.lavenderfive.com",
        provider: "Lavender Five"
      },
      {
        address: "https://test-dydx-rpc.kingnodes.com",
        provider: "kingnodes \u{1F451}"
      },
      {
        address: "https://dydx-testnet-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://dydx-testnet-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    rest: [
      {
        address: "https://dydx-lcd-testnet.enigma-validator.com",
        provider: "Enigma"
      },
      {
        address: "https://testnet-dydx-api.lavenderfive.com",
        provider: "Lavender Five"
      },
      {
        address: "https://dydx-testnet-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://dydx-testnet-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    grpc: [
      {
        address: "https://testnet-dydx-rpc.lavenderfive.com",
        provider: "Lavender Five"
      },
      {
        address: "https://dydx-testnet-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "dydx-testnet-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ]
  },
  explorers: [{
    kind: "mintscan",
    url: "https://www.mintscan.io/dydx-testnet",
    tx_page: "https://www.mintscan.io/dydx-testnet/txs/${txHash}",
    account_page: "https://www.mintscan.io/dydx-testnet/account/${accountAddress}"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.svg"
  },
  images: [{
    image_sync: {
      chain_name: "dydx"
    },
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/dydx/images/dydx.svg"
  }]
};
var chain_default204 = info550;

// node_modules/chain-registry/esm/testnet/dydxtestnet/ibc.js
var info551 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "axelartestnet",
    client_id: "07-tendermint-594",
    connection_id: "connection-410"
  },
  chain_2: {
    chain_name: "dydxtestnet",
    client_id: "07-tendermint-6",
    connection_id: "connection-4"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-297",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-4",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default146 = info551;

// node_modules/chain-registry/esm/testnet/dydxtestnet/index.js
var assets203 = assets_default203;
var chain204 = chain_default204;
var ibc146 = ibc_default146;

// node_modules/chain-registry/esm/testnet/elystestnet/assets.js
var info552 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "elystestnet",
  assets: [
    {
      description: "The native token of Elys Network",
      denom_units: [
        {
          denom: "uelys",
          exponent: 0,
          aliases: ["microelys"]
        },
        {
          denom: "melys",
          exponent: 3,
          aliases: ["millielys"]
        },
        {
          denom: "elys",
          exponent: 6,
          aliases: []
        }
      ],
      base: "uelys",
      name: "Elys Network",
      display: "elys",
      symbol: "ELYS",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/elystestnet/images/elys.png"
      },
      coingecko_id: "elys",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/elystestnet/images/elys.png"
      }]
    },
    {
      description: "Eden token definition",
      denom_units: [
        {
          denom: "ueden",
          exponent: 0,
          aliases: ["microeden"]
        },
        {
          denom: "meden",
          exponent: 3,
          aliases: ["millieden"]
        },
        {
          denom: "eden",
          exponent: 6,
          aliases: []
        }
      ],
      base: "ueden",
      name: "Eden",
      display: "eden",
      symbol: "EDEN",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/elystestnet/images/eden.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/elystestnet/images/eden.png"
      }]
    },
    {
      description: "USDC from Noble",
      denom_units: [{
        denom: "ibc/2180E84E20F5679FCC760D8C165B60F42065DEF7F46A72B447CFF1B7DC6C0A65",
        exponent: 0
      }, {
        denom: "usdc",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/2180E84E20F5679FCC760D8C165B60F42065DEF7F46A72B447CFF1B7DC6C0A65",
      name: "Noble USD Coin",
      display: "usdc",
      symbol: "USDC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "nobletestnet",
          base_denom: "uusdc",
          channel_id: "channel-19"
        },
        chain: {
          channel_id: "channel-12",
          path: "transfer/channel-12/uusdc"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "noble",
          base_denom: "uusdc"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/noble/images/USDCoin.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/E2D2F6ADCC68AA3384B2F5DFACCA437923D137C14E86FB8A10207CF3BED0C8D4",
        exponent: 0
      }, {
        denom: "atom",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/E2D2F6ADCC68AA3384B2F5DFACCA437923D137C14E86FB8A10207CF3BED0C8D4",
      name: "ATOM on Elys",
      display: "atom",
      symbol: "ATOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "cosmoshubtestnet",
          base_denom: "uatom",
          channel_id: "channel-3302"
        },
        chain: {
          channel_id: "channel-16",
          path: "transfer/channel-16/uatom"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "cosmoshub",
          base_denom: "uatom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }
    }
  ]
};
var assets_default204 = info552;

// node_modules/chain-registry/esm/testnet/elystestnet/chain.js
var info553 = {
  $schema: "../../chain.schema.json",
  chain_name: "elystestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Elys Network",
  chain_id: "elystestnet-1",
  bech32_prefix: "elys",
  daemon_name: "elysd",
  node_home: "$HOME/.elys",
  key_algos: ["secp256k1"],
  slip44: 118,
  staking: {
    staking_tokens: [{
      denom: "uelys"
    }],
    lock_duration: {
      time: "1209600s"
    }
  },
  fees: {
    fee_tokens: [
      {
        denom: "uelys",
        fixed_min_gas_price: 0.01,
        low_gas_price: 0.01,
        average_gas_price: 0.025,
        high_gas_price: 0.03
      },
      {
        denom: "ibc/2180E84E20F5679FCC760D8C165B60F42065DEF7F46A72B447CFF1B7DC6C0A65",
        fixed_min_gas_price: 0.01,
        low_gas_price: 0.01,
        average_gas_price: 0.025,
        high_gas_price: 0.03
      },
      {
        denom: "ibc/E2D2F6ADCC68AA3384B2F5DFACCA437923D137C14E86FB8A10207CF3BED0C8D4",
        fixed_min_gas_price: 0.01,
        low_gas_price: 0.01,
        average_gas_price: 0.025,
        high_gas_price: 0.03
      }
    ]
  },
  codebase: {
    cosmos_sdk_version: "v0.47",
    cosmwasm_enabled: false
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.testnet.elys.network",
        provider: "Elys Network"
      },
      {
        address: "https://elys-testnet-rpc.staketab.org:443",
        provider: "Staketab"
      },
      {
        address: "https://elys-testnet-rpc.itrocket.net:443",
        provider: "itrocket"
      },
      {
        address: "https://elys-rpc.kleomedes.network:443",
        provider: "Kleomedes"
      },
      {
        address: "https://elys-testnet-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    rest: [
      {
        address: "https://api.testnet.elys.network",
        provider: "Elys Network"
      },
      {
        address: "https://elys.api.t.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://elys-testnet-rest.staketab.org",
        provider: "Staketab"
      },
      {
        address: "https://elys-testnet-api.itrocket.net",
        provider: "itrocket"
      },
      {
        address: "https://elys-api.kleomedes.network:443",
        provider: "Kleomedes"
      },
      {
        address: "https://elys-testnet-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    grpc: [
      {
        address: "services.staketab.com:9390",
        provider: "Staketab"
      },
      {
        address: "elys-testnet-grpc.itrocket.net:38090",
        provider: "itrocket"
      },
      {
        address: "elys-testnet-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ]
  },
  explorers: [
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Elys-Testnet",
      tx_page: "https://explorer.stavr.tech/Elys-Testnet/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Elys-Testnet/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://testnet.elys.network/elys",
      tx_page: "https://testnet.elys.network/elys/tx/${txHash}"
    },
    {
      kind: "itrocket",
      url: "https://testnet.itrocket.net/elys",
      tx_page: "https://testnet.itrocket.net/elys/staking/tx/${txHash}",
      account_page: "https://testnet.itrocket.net/elys/account/${accountAddress}"
    }
  ]
};
var chain_default205 = info553;

// node_modules/chain-registry/esm/testnet/elystestnet/ibc.js
var info554 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "cosmoshubtestnet",
    client_id: "07-tendermint-2522",
    connection_id: "connection-2881"
  },
  chain_2: {
    chain_name: "elystestnet",
    client_id: "07-tendermint-19",
    connection_id: "connection-17"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-3302",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-16",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live"
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "elystestnet",
    client_id: "07-tendermint-9",
    connection_id: "connection-12"
  },
  chain_2: {
    chain_name: "nobletestnet",
    client_id: "07-tendermint-28",
    connection_id: "connection-26"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-12",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-19",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live"
    }
  }]
}];
var ibc_default147 = info554;

// node_modules/chain-registry/esm/testnet/elystestnet/index.js
var assets204 = assets_default204;
var chain205 = chain_default205;
var ibc147 = ibc_default147;

// node_modules/chain-registry/esm/testnet/empowertestnet/assets.js
var info555 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "empowertestnet",
  assets: [{
    description: "The native staking and governance token of the testnet version of Empower.",
    denom_units: [{
      denom: "umpwr",
      exponent: 0
    }, {
      denom: "mpwr",
      exponent: 6
    }],
    base: "umpwr",
    name: "MPWR",
    display: "mpwr",
    symbol: "MPWR",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/empowertestnet/images/mpwr.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/empowertestnet/images/mpwr.png"
    }]
  }]
};
var assets_default205 = info555;

// node_modules/chain-registry/esm/testnet/empowertestnet/chain.js
var info556 = {
  $schema: "../../chain.schema.json",
  chain_name: "empowertestnet",
  chain_id: "circulus-1",
  pretty_name: "Empower Testnet",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "empower",
  daemon_name: "empowerd",
  node_home: "$HOME/.empowerchain",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "umpwr",
      fixed_min_gas_price: 0
    }]
  },
  codebase: {},
  apis: {
    rpc: [
      {
        address: "https://empower-testnet-rpc.polkachu.com:443",
        provider: "Polkachu"
      },
      {
        address: "https://empower.rpc.cumulo.com.es:443",
        provider: "Cumulo"
      },
      {
        address: "https://rpc-t.empower.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "https://rpc-empower.nodeist.net:443",
        provider: "Nodeist"
      },
      {
        address: "https://empower-testnet.nodejumper.io:443",
        provider: "NODEJUMPER"
      },
      {
        address: "https://empower-testnet-rpc.itrocket.net:443",
        provider: "ITRocket"
      },
      {
        address: "https://rpc.circulus-1.empower.aviaone.com:443",
        provider: "AviaOne"
      }
    ],
    rest: [
      {
        address: "https://empower-testnet-api.polkachu.com:443",
        provider: "Polkachu"
      },
      {
        address: "https://empower.api.cumulo.com.es:443",
        provider: "Cumulo"
      },
      {
        address: "https://empw.api.t.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://api-t.empower.nodestake.top:443",
        provider: "NodeStake"
      },
      {
        address: "https://api-empower.nodeist.net:443",
        provider: "Nodeist"
      },
      {
        address: "https://empower-testnet.nodejumper.io:1317",
        provider: "NODEJUMPER"
      },
      {
        address: "https://empower-testnet-api.itrocket.net:443",
        provider: "ITRocket"
      },
      {
        address: "https://api.circulus-1.empower.aviaone.com",
        provider: "AviaOne"
      }
    ],
    grpc: [
      {
        address: "empower-testnet-grpc.polkachu.com:17490",
        provider: "Polkachu"
      },
      {
        address: "empower.grpc.cumulo.com.es:443",
        provider: "Cumulo"
      },
      {
        address: "grpc-t.empower.nodestake.top:9090",
        provider: "NodeStake"
      },
      {
        address: "empower-testnet.nodejumper.io:9090",
        provider: "NODEJUMPER"
      },
      {
        address: "empower-testnet-grpc.itrocket.net:16090",
        provider: "ITRocket"
      },
      {
        address: "grpc.circulus-1.empower.aviaone.com:443",
        provider: "AviaOne"
      }
    ]
  },
  explorers: [
    {
      kind: "exploreme",
      url: "https://empowerchain.exploreme.pro",
      tx_page: "https://empowerchain.exploreme.pro/transaction/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://exp.nodeist.net/Empower",
      tx_page: "https://exp.nodeist.net/Empower/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Empower",
      tx_page: "https://explorer.stavr.tech/Empower/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://explorer.nodestake.top/empower-testnet",
      tx_page: "https://explorer.nodestake.top/empower-testnet/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://testnet.itrocket.net/empower/staking",
      tx_page: "https://testnet.itrocket.net/empower/staking/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://explorer.stavr.tech/empower",
      tx_page: "https://explorer.stavr.tech/empower/tx/${txHash}"
    }
  ]
};
var chain_default206 = info556;

// node_modules/chain-registry/esm/testnet/empowertestnet/ibc.js
var info557 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshubtestnet",
      client_id: "07-tendermint-2073",
      connection_id: "connection-2418"
    },
    chain_2: {
      chain_name: "empowertestnet",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2765",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "empowertestnet",
      client_id: "07-tendermint-1",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-146",
      connection_id: "connection-157"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-155",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "empowertestnet",
      client_id: "07-tendermint-2",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "stargazetestnet",
      client_id: "07-tendermint-450",
      connection_id: "connection-469"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-459",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default148 = info557;

// node_modules/chain-registry/esm/testnet/empowertestnet/index.js
var assets205 = assets_default205;
var chain206 = chain_default206;
var ibc148 = ibc_default148;

// node_modules/chain-registry/esm/testnet/entrypointtestnet/assets.js
var info558 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "entrypointtestnet",
  assets: [{
    description: "The native token of EntryPoint",
    denom_units: [{
      denom: "uentry",
      exponent: 0,
      aliases: []
    }, {
      denom: "entry",
      exponent: 6,
      aliases: []
    }],
    base: "uentry",
    name: "EntryPoint",
    display: "entry",
    symbol: "ENTRY",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/entrypointtestnet/images/entry.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/entrypointtestnet/images/entry.svg"
    },
    keywords: [
      "staking",
      "governance",
      "vaults"
    ],
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/entrypointtestnet/images/entry.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/entrypointtestnet/images/entry.svg"
    }]
  }, {
    description: "The native staking and governance token of the Theta testnet version of the Cosmos Hub, via Osmosis.",
    denom_units: [{
      denom: "ibc/8A138BC76D0FB2665F8937EC2BF01B9F6A714F6127221A0E155106A45E09BCC5",
      exponent: 0
    }, {
      denom: "atom",
      exponent: 6
    }],
    base: "ibc/8A138BC76D0FB2665F8937EC2BF01B9F6A714F6127221A0E155106A45E09BCC5",
    name: "Cosmos",
    display: "atom",
    symbol: "ATOM",
    traces: [{
      type: "ibc",
      counterparty: {
        chain_name: "osmosistestnet",
        base_denom: "ibc/9FF2B7A5F55038A7EE61F4FD6749D9A648B48E89830F2682B67B5DC158E2753C",
        channel_id: "channel-4156"
      },
      chain: {
        channel_id: "channel-0",
        path: "transfer/channel-0/transfer/channel-4156/uatom"
      }
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
    },
    images: [{
      image_sync: {
        chain_name: "osmosistestnet",
        base_denom: "ibc/9FF2B7A5F55038A7EE61F4FD6749D9A648B48E89830F2682B67B5DC158E2753C"
      },
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
    }]
  }]
};
var assets_default206 = info558;

// node_modules/chain-registry/esm/testnet/entrypointtestnet/chain.js
var info559 = {
  $schema: "../../chain.schema.json",
  chain_name: "entrypointtestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "EntryPoint Testnet",
  chain_id: "entrypoint-pubtest-2",
  bech32_prefix: "entrypoint",
  daemon_name: "entrypointd",
  node_home: "$HOME/.entrypointd",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ibc/8A138BC76D0FB2665F8937EC2BF01B9F6A714F6127221A0E155106A45E09BCC5",
      low_gas_price: 0.01,
      average_gas_price: 0.01,
      high_gas_price: 0.02
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uentry"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.47.4"
  },
  apis: {
    rpc: [{
      address: "https://testnet-rpc.entrypoint.zone",
      provider: "Simply Staking"
    }],
    rest: [{
      address: "https://entry.api.t.stavr.tech",
      provider: "\u{1F525}STAVR\u{1F525}"
    }, {
      address: "https://testnet-rest.entrypoint.zone",
      provider: "Simply Staking"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/entrypointtestnet/images/entrypoint-chain-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/entrypointtestnet/images/entrypoint-chain-logo.svg"
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://explorer.entrypoint.zone/entrypoint",
      tx_page: "https://explorer.entrypoint.zone/entrypoint/tx/${txHash}",
      account_page: "https://explorer.entrypoint.zone/entrypoint/account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Entrypoint-Testnet",
      tx_page: "https://explorer.stavr.tech/Entrypoint-Testnet/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Entrypoint-Testnet/account/${accountAddress}"
    },
    {
      kind: "ping.pub",
      url: "https://testnet.ping.pub/entrypoint",
      tx_page: "https://testnet.ping.pub/entrypoint/tx/${txHash}",
      account_page: "https://testnet.ping.pub/entrypoint/account/${accountAddress}"
    }
  ],
  keywords: ["testnet"],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/entrypointtestnet/images/entrypoint-chain-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/entrypointtestnet/images/entrypoint-chain-logo.svg"
  }]
};
var chain_default207 = info559;

// node_modules/chain-registry/esm/testnet/entrypointtestnet/ibc.js
var info560 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "entrypointtestnet",
    client_id: "07-tendermint-0",
    connection_id: "connection-0"
  },
  chain_2: {
    chain_name: "osmosistestnet",
    client_id: "07-tendermint-930",
    connection_id: "connection-840"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-1543",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default149 = info560;

// node_modules/chain-registry/esm/testnet/entrypointtestnet/index.js
var assets206 = assets_default206;
var chain207 = chain_default207;
var ibc149 = ibc_default149;

// node_modules/chain-registry/esm/testnet/evmostestnet/assets.js
var info561 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "evmostestnet",
  assets: [{
    description: "The native EVM, governance and staking token of the Evmos Hub",
    denom_units: [{
      denom: "atevmos",
      exponent: 0
    }, {
      denom: "tevmos",
      exponent: 18
    }],
    base: "atevmos",
    name: "Evmos Testnet",
    display: "tevmos",
    symbol: "TEVMOS",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/evmostestnet/images/evmos.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/evmostestnet/images/evmos.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/evmostestnet/images/evmos.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/evmostestnet/images/evmos.svg"
    }]
  }]
};
var assets_default207 = info561;

// node_modules/chain-registry/esm/testnet/evmostestnet/chain.js
var info562 = {
  $schema: "../../chain.schema.json",
  chain_name: "evmostestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Evmos Testnet",
  chain_id: "evmos_9000-4",
  bech32_prefix: "evmos",
  daemon_name: "evmosd",
  node_home: "$HOME/.evmosd",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "atevmos",
      low_gas_price: 2e10,
      average_gas_price: 25e9,
      high_gas_price: 4e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "atevmos"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.46"
  },
  apis: {
    rpc: [
      {
        address: "https://evmos.test.rpc.coldyvalidator.net",
        provider: "coldy"
      },
      {
        address: "https://evmos-testnet-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://evmos-testnet-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    rest: [
      {
        address: "https://evmos.test.api.coldyvalidator.net",
        provider: "coldy"
      },
      {
        address: "https://evmos-testnet-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://evmos-testnet-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    grpc: [{
      address: "https://evmos.test.grpc.coldyvalidator.net",
      provider: "coldy"
    }, {
      address: "evmos-testnet-grpc.publicnode.com:443",
      provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
    }]
  },
  explorers: [{
    kind: "Mintscan",
    url: "https://mintscan.io/evmos-testnet",
    tx_page: "https://mintscan.io/evmos-testnet/txs/${txHash}"
  }, {
    kind: "NodesGuru",
    url: "https://testnet.evmos.explorers.guru/",
    tx_page: "https://testnet.evmos.explorers.guru/transaction/${txHash}"
  }]
};
var chain_default208 = info562;

// node_modules/chain-registry/esm/testnet/evmostestnet/index.js
var assets207 = assets_default207;
var chain208 = chain_default208;

// node_modules/chain-registry/esm/testnet/fetchhubtestnet/assets.js
var info563 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "fetchhubtestnet",
  assets: [{
    description: "The native staking and governance token of the Fetch Hub.",
    denom_units: [{
      denom: "atestfet",
      exponent: 0
    }, {
      denom: "testfet",
      exponent: 18
    }],
    base: "atestfet",
    name: "fetch-ai",
    display: "testfet",
    symbol: "FET",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/fet.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/fet.svg"
    },
    coingecko_id: "fetch-ai",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/fet.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/fetchhub/images/fet.svg"
    }]
  }]
};
var assets_default208 = info563;

// node_modules/chain-registry/esm/testnet/fetchhubtestnet/chain.js
var info564 = {
  $schema: "../../chain.schema.json",
  chain_name: "fetchhubtestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Fetch.ai Testnet",
  chain_id: "dorado-1",
  bech32_prefix: "fetch",
  daemon_name: "fetchd",
  node_home: "$HOME/.fetchd",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "atestfet",
      low_gas_price: 0.025,
      average_gas_price: 0.025,
      high_gas_price: 0.035
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "atestfet"
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://rpc-dorado.fetch.ai:443",
      provider: "fetch.ai"
    }],
    rest: [{
      address: "https://rest-dorado.fetch.ai",
      provider: "fetch.ai"
    }],
    grpc: [{
      address: "grpc-dorado.fetch.ai:443",
      provider: "fetch.ai"
    }]
  },
  explorers: [{
    kind: "bigdipper",
    url: "https://explore-dorado.fetch.ai",
    tx_page: "https://explore-dorado.fetch.ai/transactions/${txHash}"
  }, {
    kind: "azoyalabs",
    url: "https://fetchstation.azoyalabs.com/testnet",
    tx_page: "https://fetchstation.azoyalabs.com/testnet/explorer/transactions/${txHash}",
    account_page: "https://fetchstation.azoyalabs.com/testnet/explorer/address/${accountAddress}"
  }]
};
var chain_default209 = info564;

// node_modules/chain-registry/esm/testnet/fetchhubtestnet/index.js
var assets208 = assets_default208;
var chain209 = chain_default209;

// node_modules/chain-registry/esm/testnet/finschiatestnet/assets.js
var info565 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "finschiatestnet",
  assets: [{
    description: "The native token of Ebony",
    denom_units: [{
      denom: "tcony",
      exponent: 0
    }, {
      denom: "tfnsa",
      exponent: 6
    }],
    type_asset: "sdk.coin",
    base: "tcony",
    name: "Test FINSCHIA",
    display: "tfnsa",
    symbol: "TFNSA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/finschia/images/fnsa.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/finschia/images/fnsa.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/finschia/images/fnsa.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/finschia/images/fnsa.svg"
    }],
    keywords: ["staking"]
  }]
};
var assets_default209 = info565;

// node_modules/chain-registry/esm/testnet/finschiatestnet/chain.js
var info566 = {
  $schema: "../../chain.schema.json",
  chain_name: "finschiatestnet",
  chain_id: "ebony-2",
  website: "https://www.finschia.io/",
  pretty_name: "Ebony",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "tlink",
  daemon_name: "fnsad",
  node_home: "$HOME/.finschia",
  key_algos: ["secp256k1"],
  slip44: 438,
  fees: {
    fee_tokens: [{
      denom: "tcony",
      fixed_min_gas_price: 0.015,
      low_gas_price: 0.015,
      average_gas_price: 0.015,
      high_gas_price: 0.015
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "tcony"
    }],
    lock_duration: {
      time: "86400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "github.com/Finschia/finschia-sdk@v0.48.1",
    cosmwasm_enabled: true,
    cosmwasm_version: "github.com/Finschia/wasmd@v0.2.0"
  },
  apis: {
    rpc: [{
      address: "https://ebony-rpc.finschia.io"
    }],
    rest: [{
      address: "https://ebony-api.finschia.io"
    }],
    grpc: [{
      address: "ebony-grpc.finschia.io:443"
    }]
  },
  explorers: [{
    kind: "mintscan",
    url: "https://www.mintscan.io/finschia-testnet",
    tx_page: "https://www.mintscan.io/finschia-testnet/tx/${txHash}",
    account_page: "https://www.mintscan.io/finschia-testnet/address/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/finschia/images/fnsa.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/finschia/images/fnsa.svg"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/finschia/images/fnsa.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/finschia/images/fnsa.svg"
  }
};
var chain_default210 = info566;

// node_modules/chain-registry/esm/testnet/finschiatestnet/index.js
var assets209 = assets_default209;
var chain210 = chain_default210;

// node_modules/chain-registry/esm/testnet/galacticatestnet/assets.js
var info567 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "galacticatestnet",
  assets: [{
    description: "The native token of Galactica Protocol Testnet",
    denom_units: [{
      denom: "agnet",
      exponent: 0
    }, {
      denom: "gnet",
      exponent: 18
    }],
    base: "agnet",
    name: "Gnet",
    display: "gnet",
    symbol: "GNET",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/galactica/images/galactica.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/galactica/images/galactica.png"
    }, {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/galactica/images/galactica.svg"
    }]
  }]
};
var assets_default210 = info567;

// node_modules/chain-registry/esm/testnet/galacticatestnet/chain.js
var info568 = {
  $schema: "../../chain.schema.json",
  chain_name: "galacticatestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Galactica Protocol Testnet",
  chain_id: "galactica_9302-1",
  bech32_prefix: "gala",
  daemon_name: "galacticad",
  node_home: "$HOME/.galactica",
  key_algos: ["ethsecp256k1"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "agnet",
      fixed_min_gas_price: 10,
      low_gas_price: 10,
      average_gas_price: 10,
      high_gas_price: 20
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "agnet"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.46",
    cosmwasm_enabled: false
  },
  apis: {
    rpc: [{
      address: "https://rpc.galactica.test.pfc.zone/",
      provider: "PFC"
    }, {
      address: "https://galactica-testnet-rpc.ibs.team:443",
      provider: "Inter Blockchain Services"
    }],
    rest: [{
      address: "https://api.galactica.test.pfc.zone/",
      provider: "PFC"
    }, {
      address: "https://galactica-testnet-api.ibs.team:443",
      provider: "Inter Blockchain Services"
    }],
    grpc: [{
      address: "https://grpc.galactica.test.pfc.zone/",
      provider: "PFC"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/galactica/images/galactica.png"
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://ping.pfc.zone/galactica-testnet",
    tx_page: "https://ping.pfc.zone/galactica-testnet/tx/${txHash}",
    account_page: "https://ping.pfc.zone/galactica-testnet/account/${accountAddress}"
  }],
  keywords: ["testnet"],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/galactica/images/galactica.png"
  }]
};
var chain_default211 = info568;

// node_modules/chain-registry/esm/testnet/galacticatestnet/index.js
var assets210 = assets_default210;
var chain211 = chain_default211;

// node_modules/chain-registry/esm/testnet/gitopiatestnet/assets.js
var info569 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "gitopiatestnet",
  assets: [{
    description: "The native staking and governance token of the testnet version of Gitopia.",
    denom_units: [{
      denom: "utlore",
      exponent: 0
    }, {
      denom: "tlore",
      exponent: 6
    }],
    base: "utlore",
    name: "TLORE",
    display: "tlore",
    symbol: "TLORE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/gitopiatestnet/images/gitopia.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/gitopiatestnet/images/gitopia.png"
    }]
  }]
};
var assets_default211 = info569;

// node_modules/chain-registry/esm/testnet/gitopiatestnet/chain.js
var info570 = {
  $schema: "../../chain.schema.json",
  chain_name: "gitopiatestnet",
  chain_id: "gitopia-janus-testnet-2",
  pretty_name: "Gitopia Testnet",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "gitopia",
  daemon_name: "gitopiad",
  node_home: "$HOME/.gitopia",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "utlore",
      fixed_min_gas_price: 0
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://gitopia-testnet.nodejumper.io",
      provider: "NODEJUMPER"
    }],
    rest: [{
      address: "https://gitopia-testnet.nodejumper.io:1317",
      provider: "NODEJUMPER"
    }],
    grpc: [{
      address: "https://gitopia-testnet.nodejumper.io:9090",
      provider: "NODEJUMPER"
    }]
  },
  explorers: [{
    kind: "explorer.humans.zone",
    url: "https://gitopia.explorers.guru/",
    tx_page: "https://gitopia.explorers.guru/transaction/${txHash}"
  }]
};
var chain_default212 = info570;

// node_modules/chain-registry/esm/testnet/gitopiatestnet/index.js
var assets211 = assets_default211;
var chain212 = chain_default212;

// node_modules/chain-registry/esm/testnet/hedgetestnet/assets.js
var info571 = {
  $schema: "../assetlist.schema.json",
  chain_name: "hedgetestnet",
  assets: [{
    description: "The native staking token of the Hedge blockchain.",
    denom_units: [{
      denom: "uhedge",
      exponent: 0
    }, {
      denom: "hedge",
      exponent: 6
    }],
    base: "uhedge",
    name: "Berberis HEDGE",
    display: "hedge",
    symbol: "HEDGE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/hedgetestnet/images/hedge.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/hedgetestnet/images/hedge.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/hedgetestnet/images/hedge.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/hedgetestnet/images/hedge.svg"
    }]
  }]
};
var assets_default212 = info571;

// node_modules/chain-registry/esm/testnet/hedgetestnet/chain.js
var info572 = {
  $schema: "../chain.schema.json",
  chain_name: "hedgetestnet",
  chain_id: "berberis-1",
  pretty_name: "Hedge Testnet",
  status: "live",
  network_type: "testnet",
  website: "https://hedgeblock.io",
  bech32_prefix: "hedge",
  daemon_name: "hedged",
  node_home: "$HOME/.hedge",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uhedge",
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.03
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uhedge"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/hedgetestnet/images/hedge.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/hedgetestnet/images/hedge.svg"
  },
  apis: {
    rpc: [{
      address: "https://rpc-berberis.hedgeblock.io",
      provider: "Hedge"
    }],
    rest: [{
      address: "https://lcd-berberis.hedgeblock.io",
      provider: "Hedge"
    }]
  },
  explorers: [{
    kind: "hedgescan",
    url: "https://berberis.hedgescan.io",
    tx_page: "https://berberis.hedgescan.io/txs/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/hedgetestnet/images/hedge.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/hedgetestnet/images/hedge.svg"
  }]
};
var chain_default213 = info572;

// node_modules/chain-registry/esm/testnet/hedgetestnet/index.js
var assets212 = assets_default212;
var chain213 = chain_default213;

// node_modules/chain-registry/esm/testnet/humanstestnet/assets.js
var info573 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "humanstestnet",
  assets: [{
    description: "The native staking and governance token of the testnet version of Humans AI.",
    denom_units: [{
      denom: "uheart",
      exponent: 0
    }, {
      denom: "heart",
      exponent: 6
    }],
    base: "uheart",
    name: "HEART",
    display: "heart",
    symbol: "HEART",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/humanstestnet/images/humans.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/humanstestnet/images/humans.png"
    }]
  }]
};
var assets_default213 = info573;

// node_modules/chain-registry/esm/testnet/humanstestnet/chain.js
var info574 = {
  $schema: "../../chain.schema.json",
  chain_name: "humanstestnet",
  chain_id: "testnet-1",
  pretty_name: "Humans AI Testnet",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "humans",
  daemon_name: "humansd",
  node_home: "$HOME/.humans",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uheart",
      fixed_min_gas_price: 0
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://humans-testnet.nodejumper.io",
      provider: "NODEJUMPER"
    }],
    rest: [{
      address: "https://humans-testnet.nodejumper.io:1317",
      provider: "NODEJUMPER"
    }],
    grpc: [{
      address: "https://humans-testnet.nodejumper.io:9090",
      provider: "NODEJUMPER"
    }]
  },
  explorers: [{
    kind: "explorer.humans.zone",
    url: "https://explorer.humans.zone/",
    tx_page: "https://explorer.humans.zone/humans-testnet/tx/${txHash}"
  }]
};
var chain_default214 = info574;

// node_modules/chain-registry/esm/testnet/humanstestnet/index.js
var assets213 = assets_default213;
var chain214 = chain_default214;

// node_modules/chain-registry/esm/testnet/hypersigntestnet/assets.js
var info575 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "hypersigntestnet",
  assets: [{
    description: "Native token for Hypersign Identity Network",
    denom_units: [{
      denom: "uhid",
      exponent: 0
    }, {
      denom: "hid",
      exponent: 6
    }],
    base: "uhid",
    display: "hid",
    name: "Hypersign",
    symbol: "HID",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/hypersigntestnet/images/hypersign.png"
    },
    coingecko_id: "hypersign-identity-token",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/hypersigntestnet/images/hypersign.png"
    }]
  }]
};
var assets_default214 = info575;

// node_modules/chain-registry/esm/testnet/hypersigntestnet/chain.js
var info576 = {
  $schema: "../../chain.schema.json",
  chain_name: "hypersigntestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Hypersign Testnet",
  chain_id: "prajna-1",
  bech32_prefix: "hid",
  daemon_name: "hid-noded",
  node_home: "$HOME/.hid-node",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uhid",
      fixed_min_gas_price: 0
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://rpc.prajna.hypersign.id",
      provider: "Hypersign"
    }],
    rest: [{
      address: "https://api.prajna.hypersign.id",
      provider: "Hypersign"
    }],
    grpc: []
  },
  explorers: [{
    kind: "Hypersign",
    url: "https://explorer.hypersign.id/hypersign-prajna-testnet",
    tx_page: "https://explorer.hypersign.id/hypersign-prajna-testnet/tx/${txHash}"
  }]
};
var chain_default215 = info576;

// node_modules/chain-registry/esm/testnet/hypersigntestnet/index.js
var assets214 = assets_default214;
var chain215 = chain_default215;

// node_modules/chain-registry/esm/testnet/impacthubtestnet/assets.js
var info577 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "impacthubtestnet",
  assets: [{
    description: "The native token of IXO Chain",
    denom_units: [{
      denom: "uixo",
      exponent: 0
    }, {
      denom: "ixo",
      exponent: 6
    }],
    base: "uixo",
    name: "IXO",
    display: "ixo",
    symbol: "IXO",
    traces: [{
      type: "test-mintage",
      counterparty: {
        chain_name: "impacthub",
        base_denom: "uixo"
      },
      provider: "impacthub"
    }],
    images: [{
      image_sync: {
        chain_name: "impacthub",
        base_denom: "uixo"
      },
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.svg"
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.svg"
    }
  }]
};
var assets_default215 = info577;

// node_modules/chain-registry/esm/testnet/impacthubtestnet/chain.js
var info578 = {
  $schema: "../../chain.schema.json",
  chain_name: "impacthubtestnet",
  status: "live",
  network_type: "testnet",
  website: "https://www.ixo.world/",
  pretty_name: "ixo",
  chain_id: "pandora-8",
  bech32_prefix: "ixo",
  daemon_name: "ixod",
  node_home: "$HOME/.ixod",
  key_algos: ["secp256k1", "ed25519"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uixo",
      fixed_min_gas_price: 0.015,
      low_gas_price: 0.015,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uixo"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.svg"
  },
  apis: {
    rpc: [{
      address: "https://rpc.testnet.ixo.earth/",
      provider: "ixoworld"
    }],
    rest: [{
      address: "https://testnet.ixo.earth/rest/",
      provider: "ixoworld"
    }],
    grpc: []
  },
  explorers: [{
    kind: "ixoworld",
    url: "https://blockscan.testnet.ixo.earth/ixo",
    tx_page: "https://blockscan.testnet.ixo.earth/ixo/transactions/${txHash}",
    account_page: "https://blockscan.testnet.ixo.earth/ixo/accounts/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.svg"
  }]
};
var chain_default216 = info578;

// node_modules/chain-registry/esm/testnet/impacthubtestnet/ibc.js
var info579 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "impacthubtestnet",
    client_id: "07-tendermint-53",
    connection_id: "connection-23"
  },
  chain_2: {
    chain_name: "osmosistestnet",
    client_id: "07-tendermint-1010",
    connection_id: "connection-911"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-10",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-1637",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default150 = info579;

// node_modules/chain-registry/esm/testnet/impacthubtestnet/index.js
var assets215 = assets_default215;
var chain216 = chain_default216;
var ibc150 = ibc_default150;

// node_modules/chain-registry/esm/testnet/imversedtestnet/assets.js
var info580 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "imversedtestnet",
  assets: [{
    description: "The native staking and governance token of the Imversed testnet.",
    denom_units: [{
      denom: "nimv",
      exponent: 0,
      aliases: []
    }, {
      denom: "imv",
      exponent: 6,
      aliases: []
    }],
    base: "nimv",
    name: "Imv",
    display: "imv",
    symbol: "IMV",
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/imversedtestnet/images/imversed.svg"
    },
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/imversedtestnet/images/imversed.svg"
    }]
  }, {
    description: "The native staking and governance token of the Imversed testnet.",
    denom_units: [{
      denom: "ibc/C6438A7D613196373D939891C99CA7EEF4F78F4A78DC8590E51E62F8ED16E72B",
      exponent: 0,
      aliases: ["usaage"]
    }, {
      denom: "imv",
      exponent: 6
    }],
    base: "ibc/C6438A7D613196373D939891C99CA7EEF4F78F4A78DC8590E51E62F8ED16E72B",
    name: "Imv",
    display: "imv",
    symbol: "IMV",
    ibc: {
      source_channel: "channel-1",
      dst_channel: "channel-221",
      source_denom: "nimv"
    },
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/imversedtestnet/images/imversed.svg"
    },
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/imversedtestnet/images/imversed.svg"
    }]
  }]
};
var assets_default216 = info580;

// node_modules/chain-registry/esm/testnet/imversedtestnet/chain.js
var info581 = {
  $schema: "../../chain.schema.json",
  chain_name: "imversedtestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Imversed Testnet",
  chain_id: "imversed-test-1",
  bech32_prefix: "imv",
  daemon_name: "imversed",
  node_home: "$HOME/.imversed",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "nimv",
      fixed_min_gas_price: 1e-3
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://tx-endpoint-test.imversed.com/",
      provider: "imversed"
    }],
    rest: [{
      address: "https://query-endpoint-test.imversed.com/",
      provider: "imversed"
    }],
    grpc: [{
      address: "http://qs.imversed.com:9090",
      provider: "imversed"
    }]
  },
  explorers: [{
    kind: "Big Dipper",
    url: "https://tex-s.imversed.com",
    tx_page: "https://tex-s.imversed.com/transactions/${txHash}"
  }]
};
var chain_default217 = info581;

// node_modules/chain-registry/esm/testnet/imversedtestnet/index.js
var assets216 = assets_default216;
var chain217 = chain_default217;

// node_modules/chain-registry/esm/testnet/injectivetestnet/assets.js
var info582 = {
  $schema: "../assetlist.schema.json",
  chain_name: "injectivetestnet",
  assets: [{
    description: "The INJ token is the native governance token for the Injective chain.",
    denom_units: [{
      denom: "inj",
      exponent: 0
    }, {
      denom: "INJ",
      exponent: 18
    }],
    base: "inj",
    name: "Injective",
    display: "INJ",
    symbol: "INJ",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.svg"
    },
    coingecko_id: "injective-protocol",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.svg"
    }]
  }]
};
var assets_default217 = info582;

// node_modules/chain-registry/esm/testnet/injectivetestnet/chain.js
var info583 = {
  $schema: "../chain.schema.json",
  chain_name: "injectivetestnet",
  status: "live",
  network_type: "testnet",
  website: "https://injective.com",
  pretty_name: "Injective",
  chain_id: "injective-888",
  bech32_prefix: "inj",
  extra_codecs: ["injective"],
  slip44: 60,
  daemon_name: "injectived",
  node_home: "$HOME/.injectived",
  fees: {
    fee_tokens: [{
      denom: "inj",
      fixed_min_gas_price: 16e7,
      low_gas_price: 5e8,
      average_gas_price: 7e8,
      high_gas_price: 9e8
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "inj"
    }]
  },
  codebase: {},
  apis: {
    rpc: [
      {
        address: "https://injective-testnet-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://testnet.sentry.tm.injective.network:443",
        provider: "injectiveLabs"
      },
      {
        address: "https://testnet.tm.injective.network",
        provider: "injectiveLabs"
      },
      {
        address: "https://injective-testnet-rpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    rest: [
      {
        address: "https://injective-testnet-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://testnet.sentry.lcd.injective.network:443",
        provider: "injectiveLabs"
      },
      {
        address: "https://testnet.lcd.injective.network",
        provider: "injectiveLabs"
      },
      {
        address: "https://injective-testnet-rest.publicnode.com",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ],
    grpc: [
      {
        address: "injective-testnet-grpc.polkachu.com:14390",
        provider: "Polkachu"
      },
      {
        address: "testnet.sentry.chain.grpc.injective.network:443",
        provider: "injectiveLabs"
      },
      {
        address: "https://testnet.grpc.injective.network",
        provider: "injectiveLabs"
      },
      {
        address: "injective-testnet-grpc.publicnode.com:443",
        provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
      }
    ]
  },
  explorers: [{
    kind: "injectiveprotocol",
    url: "https://testnet.explorer.injective.network/",
    tx_page: "https://testnet.explorer.injective.network/transaction/${txHash}"
  }]
};
var chain_default218 = info583;

// node_modules/chain-registry/esm/testnet/injectivetestnet/ibc.js
var info584 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injectivetestnet",
      client_id: "07-tendermint-123",
      connection_id: "connection-98"
    },
    chain_2: {
      chain_name: "noistestnet",
      client_id: "07-tendermint-26",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-74",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-33",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-77",
        port_id: "wasm.inj14nendtsz0c40n7xtzwkjmdc8dkuz835jdydxhn"
      },
      chain_2: {
        channel_id: "channel-36",
        port_id: "wasm.nois1xwde9rzqk5u36fke0r9ddmtwvh43n4fv53c5vc462wz8xlnqjhls6d90xc"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injectivetestnet",
      client_id: "07-tendermint-189",
      connection_id: "connection-180"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1273",
      connection_id: "connection-1173"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-129",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4174",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injectivetestnet",
      client_id: "07-tendermint-239",
      connection_id: "connection-220"
    },
    chain_2: {
      chain_name: "xiontestnet",
      client_id: "07-tendermint-119",
      connection_id: "connection-55"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-489",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-487",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default151 = info584;

// node_modules/chain-registry/esm/testnet/injectivetestnet/index.js
var assets217 = assets_default217;
var chain218 = chain_default218;
var ibc151 = ibc_default151;

// node_modules/chain-registry/esm/testnet/jackaltestnet/assets.js
var info585 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "jackaltestnet",
  assets: [{
    description: "The native staking and governance token of Jackal.",
    denom_units: [{
      denom: "ujkl",
      exponent: 0
    }, {
      denom: "jkl",
      exponent: 6
    }],
    base: "ujkl",
    name: "Jackal",
    display: "jkl",
    symbol: "JKL",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/jackaltestnet/images/jkl.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/jackaltestnet/images/jkl.svg"
    },
    coingecko_id: "jackal",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/jackaltestnet/images/jkl.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/jackaltestnet/images/jkl.svg"
    }]
  }]
};
var assets_default218 = info585;

// node_modules/chain-registry/esm/testnet/jackaltestnet/chain.js
var info586 = {
  $schema: "../../chain.schema.json",
  chain_name: "jackaltestnet",
  chain_id: "canine-1",
  website: "https://jackalprotocol.com",
  pretty_name: "Jackal",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "jkl",
  daemon_name: "canined",
  node_home: "$HOME/.canine",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ujkl",
      fixed_min_gas_price: 0
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "http://jkl.rpc.t.stavr.tech:19127",
      provider: "\u{1F525}STAVR\u{1F525}"
    }, {
      address: "https://testnet-rpc.jackalprotocol.com",
      provider: "Jackal Labs"
    }],
    rest: [{
      address: "https://jkl.api.t.stavr.tech",
      provider: "\u{1F525}STAVR\u{1F525}"
    }, {
      address: "https://testnet-api.jackalprotocol.com",
      provider: "Jackal Labs"
    }],
    grpc: [{
      address: "http://jkl.grpc.t.stavr.tech:5913",
      provider: "\u{1F525}STAVR\u{1F525}"
    }, {
      address: "https://testnet-grpc.jackalprotocol.com",
      provider: "Jackal Labs"
    }]
  },
  explorers: [{
    kind: "\u{1F525}STAVR\u{1F525}",
    url: "https://explorer.stavr.tech/Jackal-Testnet",
    tx_page: "https://explorer.stavr.tech/Jackal-Testnet/tx/${txHash}",
    account_page: "https://explorer.stavr.tech/Jackal-Testnet/account/${accountAddress}"
  }, {
    kind: "ping.pub",
    url: "https://ping.pub/jackal",
    tx_page: "https://ping.pub/jackal/tx/${txHash}"
  }]
};
var chain_default219 = info586;

// node_modules/chain-registry/esm/testnet/jackaltestnet/index.js
var assets218 = assets_default218;
var chain219 = chain_default219;

// node_modules/chain-registry/esm/testnet/jackaltestnet2/assets.js
var info587 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "jackaltestnet2",
  assets: [{
    description: "The native staking and governance token of Jackal.",
    denom_units: [{
      denom: "ujkl",
      exponent: 0
    }, {
      denom: "jkl",
      exponent: 6
    }],
    base: "ujkl",
    name: "Jackal",
    display: "jkl",
    symbol: "JKL",
    traces: [{
      type: "test-mintage",
      counterparty: {
        chain_name: "jackal",
        base_denom: "ujkl"
      },
      provider: "Jackal"
    }],
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/jackal/images/jkl.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/jackal/images/jkl.svg",
      image_sync: {
        chain_name: "jackal",
        base_denom: "ujkl"
      }
    }]
  }]
};
var assets_default219 = info587;

// node_modules/chain-registry/esm/testnet/jackaltestnet2/chain.js
var info588 = {
  $schema: "../../chain.schema.json",
  chain_name: "jackaltestnet2",
  chain_id: "mesomelas-1",
  website: "https://jackalprotocol.com",
  pretty_name: "Jackal v4",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "jkl",
  daemon_name: "canined",
  node_home: "$HOME/.canine",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ujkl",
      fixed_min_gas_price: 0
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://jackal-testnet-v4-rpc.brocha.in",
      provider: "Brochain"
    }],
    rest: [{
      address: "https://jackal-testnet-v4-rest.brocha.in",
      provider: "Brochain"
    }],
    grpc: []
  },
  explorers: [{
    kind: "PingPub",
    url: "https://testnet-explorer.brocha.in/Jackal%20v4",
    tx_page: "https://testnet-explorer.brocha.in/Jackal%20v4/tx/${txHash}",
    account_page: "https://testnet-explorer.brocha.in/Jackal%20v4/account/${accountAddress}"
  }]
};
var chain_default220 = info588;

// node_modules/chain-registry/esm/testnet/jackaltestnet2/ibc.js
var info589 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "archwaytestnet",
    client_id: "07-tendermint-0",
    connection_id: "connection-119"
  },
  chain_2: {
    chain_name: "jackaltestnet2",
    client_id: "07-tendermint-0",
    connection_id: "connection-0"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-368",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live"
    }
  }]
}];
var ibc_default152 = info589;

// node_modules/chain-registry/esm/testnet/jackaltestnet2/index.js
var assets219 = assets_default219;
var chain220 = chain_default220;
var ibc152 = ibc_default152;

// node_modules/chain-registry/esm/testnet/junotestnet/assets.js
var info590 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "junotestnet",
  assets: [
    {
      description: "The native token of JUNO Chain",
      denom_units: [{
        denom: "ujunox",
        exponent: 0
      }, {
        denom: "junox",
        exponent: 6
      }],
      base: "ujunox",
      name: "Juno Testnet",
      display: "junox",
      symbol: "JUNOX",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/junotestnet/images/juno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/junotestnet/images/juno.svg"
      },
      coingecko_id: "juno-network",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/junotestnet/images/juno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/junotestnet/images/juno.svg"
      }]
    },
    {
      description: "The native token of NEXX GEN AI",
      denom_units: [{
        denom: "factory/juno12klaltyqvg2j6v034jwdxrk5n4242ttse4sdpt/NEXX",
        exponent: 0
      }, {
        denom: "nexx",
        exponent: 6
      }],
      base: "factory/juno12klaltyqvg2j6v034jwdxrk5n4242ttse4sdpt/NEXX",
      name: "NEXX GEN AI",
      display: "nexx",
      symbol: "NEXX",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/junotestnet/images/nexx.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/junotestnet/images/nexx.png"
      }]
    },
    {
      type_asset: "sdk.coin",
      denom_units: [{
        denom: "factory/juno12dgadj3wwv5jn0ec7tw5cgvq526nn4gnt2tujlmd57p2ra6k87esl36r9k/ARENA",
        exponent: 0
      }, {
        denom: "arena",
        exponent: 6
      }],
      address: "juno12dgadj3wwv5jn0ec7tw5cgvq526nn4gnt2tujlmd57p2ra6k87esl36r9k",
      base: "factory/juno12dgadj3wwv5jn0ec7tw5cgvq526nn4gnt2tujlmd57p2ra6k87esl36r9k/ARENA",
      name: "Arena Token",
      description: "The token for the Arena DAO",
      display: "arena",
      symbol: "ARENA",
      traces: [{
        type: "test-mintage",
        counterparty: {
          chain_name: "juno",
          base_denom: "factory/juno1vwmnqk0vyxc96qgffrure4nqxupjrql0zut8s02hadgp0n79r8xq5xdsxy/ARENA"
        },
        provider: "Arena DAO"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/arena.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/arena.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "factory/juno1vwmnqk0vyxc96qgffrure4nqxupjrql0zut8s02hadgp0n79r8xq5xdsxy/ARENA"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/arena.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/arena.png"
      }]
    }
  ]
};
var assets_default220 = info590;

// node_modules/chain-registry/esm/testnet/junotestnet/chain.js
var info591 = {
  $schema: "../../chain.schema.json",
  chain_name: "junotestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Juno Testnet",
  chain_id: "uni-6",
  bech32_prefix: "juno",
  daemon_name: "junod",
  node_home: "$HOME/.juno",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ujunox",
      low_gas_price: 3e-3,
      average_gas_price: 45e-4,
      high_gas_price: 6e-3
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ujunox"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.45",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.31"
  },
  apis: {
    rpc: [{
      address: "https://juno-testnet-rpc.polkachu.com",
      provider: "Polkachu"
    }],
    rest: [{
      address: "https://juno-testnet-api.polkachu.com",
      provider: "Polkachu"
    }, {
      address: "https://juno.api.t.stavr.tech",
      provider: "\u{1F525}STAVR\u{1F525}"
    }],
    grpc: [{
      address: "juno-testnet-grpc.polkachu.com:12690",
      provider: "Polkachu"
    }]
  },
  explorers: [{
    kind: "\u{1F525}STAVR\u{1F525}",
    url: "https://explorer.stavr.tech/Juno-Testnet",
    tx_page: "https://explorer.stavr.tech/Juno-Testnet/txs/${txHash}",
    account_page: "https://explorer.stavr.tech/Juno-Testnet/account/${accountAddress}"
  }]
};
var chain_default221 = info591;

// node_modules/chain-registry/esm/testnet/junotestnet/ibc.js
var info592 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "junotestnet",
      client_id: "07-tendermint-170",
      connection_id: "connection-178"
    },
    chain_2: {
      chain_name: "noistestnet",
      client_id: "07-tendermint-16",
      connection_id: "connection-5"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-877",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-69",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-198",
        port_id: "wasm.juno1pjpntyvkxeuxd709jlupuea3xzxlzsfq574kqefv77fr2kcg4mcqvwqedq"
      },
      chain_2: {
        channel_id: "channel-17",
        port_id: "wasm.nois1xwde9rzqk5u36fke0r9ddmtwvh43n4fv53c5vc462wz8xlnqjhls6d90xc"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "junotestnet",
      client_id: "07-tendermint-743",
      connection_id: "connection-827"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1932",
      connection_id: "connection-1889"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-889",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5498",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "junotestnet",
      client_id: "07-tendermint-135",
      connection_id: "connection-151"
    },
    chain_2: {
      chain_name: "osmosistestnet4",
      client_id: "07-tendermint-4413",
      connection_id: "connection-3814"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-140",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3316",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  }
];
var ibc_default153 = info592;

// node_modules/chain-registry/esm/testnet/junotestnet/index.js
var assets220 = assets_default220;
var chain221 = chain_default221;
var ibc153 = ibc_default153;

// node_modules/chain-registry/esm/testnet/kichaintestnet/assets.js
var info593 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "kichaintestnet",
  assets: [{
    description: "The native token of Ki Chain",
    denom_units: [{
      denom: "utki",
      exponent: 0
    }, {
      denom: "tki",
      exponent: 6
    }],
    base: "utki",
    name: "Ki",
    display: "tki",
    symbol: "TKI",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/xki.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/xki.svg"
    },
    coingecko_id: "ki",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/xki.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kichain/images/xki.svg"
    }]
  }]
};
var assets_default221 = info593;

// node_modules/chain-registry/esm/testnet/kichaintestnet/chain.js
var info594 = {
  $schema: "../../chain.schema.json",
  chain_name: "kichaintestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Ki",
  chain_id: "kichain-t-4",
  bech32_prefix: "tki",
  daemon_name: "kid",
  node_home: "$HOME/.kid",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "utki",
      fixed_min_gas_price: 0.025
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://rpc-challenge.blockchain.ki/",
      provider: "kifoundation"
    }],
    rest: [{
      address: "https://api-challenge.blockchain.ki/",
      provider: "kifoundation"
    }]
  },
  explorers: [{
    kind: "kifoundation",
    url: "https://kichain-t-4.blockchain.ki/",
    tx_page: "https://kichain-t-4.blockchain.ki/transactions/${txHash}"
  }]
};
var chain_default222 = info594;

// node_modules/chain-registry/esm/testnet/kichaintestnet/index.js
var assets221 = assets_default221;
var chain222 = chain_default222;

// node_modules/chain-registry/esm/testnet/kujiratestnet/assets.js
var info595 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "kujiratestnet",
  assets: [{
    description: "The native staking and governance token of the Harpoon testnet version of Kujira.",
    denom_units: [{
      denom: "ukuji",
      exponent: 0
    }, {
      denom: "kuji",
      exponent: 6
    }],
    base: "ukuji",
    name: "Kuji",
    display: "kuji",
    symbol: "KUJI",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/kujiratestnet/images/kuji.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/kujiratestnet/images/kuji.png"
    }]
  }, {
    description: "The testnet token of Fuzion",
    denom_units: [{
      denom: "factory/kujira16qpvzhmawvsm8mcj4hdvtz25dadatdhhgw79xa/FUZN",
      exponent: 0
    }, {
      denom: "fuzn",
      exponent: 6
    }],
    base: "factory/kujira16qpvzhmawvsm8mcj4hdvtz25dadatdhhgw79xa/FUZN",
    name: "Fuzion",
    display: "fuzn",
    symbol: "FUZN",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/kujiratestnet/images/fuzn.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/kujiratestnet/images/fuzn.png"
    }]
  }]
};
var assets_default222 = info595;

// node_modules/chain-registry/esm/testnet/kujiratestnet/chain.js
var info596 = {
  $schema: "../../chain.schema.json",
  chain_name: "kujiratestnet",
  chain_id: "harpoon-4",
  pretty_name: "Kujira Harpoon",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "kujira",
  daemon_name: "kujirad",
  node_home: "$HOME/.kujira",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ukuji",
      fixed_min_gas_price: 0
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://kujira-testnet-rpc.polkachu.com",
      provider: "polkachu"
    }],
    rest: [{
      address: "https://kujira-testnet-api.polkachu.com/",
      provider: "polkachu"
    }]
  },
  explorers: [{
    kind: "explorers.guru",
    url: "https://kujira.explorers.guru",
    tx_page: "https://kujira.explorers.guru/transaction/${txHash}"
  }]
};
var chain_default223 = info596;

// node_modules/chain-registry/esm/testnet/kujiratestnet/ibc.js
var info597 = [{
  $schema: "../../ibc_data.schema.json",
  chain_1: {
    chain_name: "cosmoshubtestnet",
    client_id: "7-tendermint-3407",
    connection_id: "connection-3519"
  },
  chain_2: {
    chain_name: "kujiratestnet",
    client_id: "07-tendermint-72",
    connection_id: "connection-47"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-4004",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-51",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}, {
  $schema: "../../ibc_data.schema.json",
  chain_1: {
    chain_name: "kujiratestnet",
    client_id: "07-tendermint-73",
    connection_id: "connection-48"
  },
  chain_2: {
    chain_name: "terra2testnet",
    client_id: "7-tendermint-568",
    connection_id: "connection-508"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-73",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-541",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default154 = info597;

// node_modules/chain-registry/esm/testnet/kujiratestnet/index.js
var assets222 = assets_default222;
var chain223 = chain_default223;
var ibc154 = ibc_default154;

// node_modules/chain-registry/esm/testnet/kyvetestnet/assets.js
var info598 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "kyvetestnet",
  assets: [{
    description: "The native utility token of the Kaon testnet version of KYVE.",
    denom_units: [{
      denom: "tkyve",
      exponent: 0
    }, {
      denom: "kyve",
      exponent: 6
    }],
    base: "tkyve",
    name: "KYVE",
    display: "kyve",
    symbol: "KYVE",
    traces: [{
      type: "test-mintage",
      counterparty: {
        chain_name: "kyve",
        base_denom: "ukyve"
      },
      provider: "Kyve"
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.svg",
      image_sync: {
        chain_name: "kyve",
        base_denom: "ukyve"
      }
    }]
  }]
};
var assets_default223 = info598;

// node_modules/chain-registry/esm/testnet/kyvetestnet/chain.js
var info599 = {
  $schema: "../../chain.schema.json",
  chain_name: "kyvetestnet",
  chain_id: "kaon-1",
  pretty_name: "KYVE Kaon",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "kyve",
  daemon_name: "kyved",
  node_home: "$HOME/.kyve",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "tkyve",
      fixed_min_gas_price: 0.02,
      low_gas_price: 0.02,
      average_gas_price: 0.03,
      high_gas_price: 0.06
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "tkyve"
    }]
  },
  codebase: {},
  apis: {
    rpc: [
      {
        address: "https://rpc-eu-1.kaon.kyve.network",
        provider: "kyve"
      },
      {
        address: "https://rpc-kyve-test.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://kyve-testnet-rpc.ibs.team:443",
        provider: "Inter Blockchain Services"
      }
    ],
    rest: [
      {
        address: "https://api-eu-1.kaon.kyve.network",
        provider: "kyve"
      },
      {
        address: "https://rest-kyve-test.ecostake.com",
        provider: "ecostake"
      },
      {
        address: "https://kyve-testnet-api.ibs.team:443",
        provider: "Inter Blockchain Services"
      }
    ]
  },
  explorers: [{
    kind: "mintscan",
    url: "https://mintscan.io/kyve-testnet",
    tx_page: "https://mintscan.io/kyve-testnet/txs/${txHash}",
    account_page: "https://mintscan.io/kyve-testnet/account/${accountAddress}"
  }]
};
var chain_default224 = info599;

// node_modules/chain-registry/esm/testnet/kyvetestnet/ibc.js
var info600 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "kyvetestnet",
    client_id: "07-tendermint-2",
    connection_id: "connection-2"
  },
  chain_2: {
    chain_name: "osmosistestnet",
    client_id: "07-tendermint-11",
    connection_id: "connection-11"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-2",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-10",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default155 = info600;

// node_modules/chain-registry/esm/testnet/kyvetestnet/index.js
var assets223 = assets_default223;
var chain224 = chain_default224;
var ibc155 = ibc_default155;

// node_modules/chain-registry/esm/testnet/lavatestnet/assets.js
var info601 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "lavatestnet",
  assets: [{
    description: "The native token of Lava",
    denom_units: [{
      denom: "ulava",
      exponent: 0
    }, {
      denom: "lava",
      exponent: 6
    }],
    base: "ulava",
    name: "LAVA",
    display: "lava",
    symbol: "LAVA",
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/lavatestnet/images/lava-icon.svg"
    },
    keywords: ["rpc", "api"],
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/lavatestnet/images/lava-icon.svg"
    }]
  }]
};
var assets_default224 = info601;

// node_modules/chain-registry/esm/testnet/lavatestnet/chain.js
var info602 = {
  $schema: "../../chain.schema.json",
  chain_name: "lavatestnet",
  status: "live",
  pre_fork_chain_name: "lavatestnet1",
  network_type: "testnet",
  website: "https://www.lavanet.xyz/",
  pretty_name: "Lava Testnet",
  chain_id: "lava-testnet-2",
  bech32_prefix: "lava@",
  daemon_name: "lavad",
  node_home: "$HOME/.lava",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ulava",
      fixed_min_gas_price: 1e-6,
      low_gas_price: 1e-6,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ulava"
    }],
    lock_duration: {
      time: "1209600s"
    }
  },
  codebase: {
    cosmos_sdk_version: "0.47.7",
    cosmwasm_enabled: false,
    cosmwasm_version: "0.30"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/lavatestnet/images/lava-icon.png",
    theme: {
      primary_color_hex: "#D7001F"
    }
  }, {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/lavatestnet/images/lava-icon.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/lavatestnet/images/lava-icon.svg"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/lavatestnet/images/lava-icon.png"
  },
  apis: {
    rpc: [
      {
        address: "https://public-rpc-testnet2.lavanet.xyz:443/rpc/",
        provider: "Lava"
      },
      {
        address: "http://lava.rpc.t.stavr.tech:198",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://lava-testnet-rpc.itrocket.net:443",
        provider: "\u{1F680}ITRocket\u{1F680}"
      },
      {
        address: "https://lava-testnet-rpc.ibs.team:443",
        provider: "Inter Blockchain Services"
      }
    ],
    rest: [
      {
        address: "https://public-rpc-testnet2.lavanet.xyz:443/rest/",
        provider: "Lava"
      },
      {
        address: "https://lava.api.t.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://lava-testnet-api.itrocket.net",
        provider: "\u{1F680}ITRocket\u{1F680}"
      },
      {
        address: "https://lava-testnet-api.ibs.team:443",
        provider: "Inter Blockchain Services"
      }
    ]
  },
  explorers: [
    {
      kind: "explorers.guru",
      url: "https://lava.explorers.guru/",
      tx_page: "https://lava.explorers.guru//transaction/${txHash}",
      account_page: "https://lava.explorers.guru//account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Lava-Testnet",
      tx_page: "https://explorer.stavr.tech/Lava-Testnet/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Lava-Testnet/account/${accountAddress}"
    },
    {
      kind: "NodeStake Explorer",
      url: "https://explorer.nodestake.org/lava-testnet",
      tx_page: "https://explorer.nodestake.org/lava-testnet/tx/${txHash}",
      account_page: "https://explorer.nodestake.org/lava-testnet/account/${accountAddress}"
    },
    {
      kind: "\u{1F680}ITRocket\u{1F680}",
      url: "https://testnet.itrocket.net/lava",
      tx_page: "https://testnet.itrocket.net/lava/tx/${txHash}",
      account_page: "https://testnet.itrocket.net/lava/account/${accountAddress}"
    }
  ],
  keywords: [
    "rpc",
    "api",
    "modular",
    "data"
  ]
};
var chain_default225 = info602;

// node_modules/chain-registry/esm/testnet/lavatestnet/ibc.js
var info603 = [{
  $schema: "../../ibc_data.schema.json",
  chain_1: {
    chain_name: "axelartestnet",
    client_id: "07-tendermint-855",
    connection_id: "connection-659"
  },
  chain_2: {
    chain_name: "lavatestnet",
    client_id: "07-tendermint-10",
    connection_id: "connection-10"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-444",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-4",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}, {
  $schema: "../../ibc_data.schema.json",
  chain_1: {
    chain_name: "lavatestnet",
    client_id: "07-tendermint-11",
    connection_id: "connection-11"
  },
  chain_2: {
    chain_name: "osmosistestnet",
    client_id: "07-tendermint-2554",
    connection_id: "connection-2401"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-5",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-6092",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default156 = info603;

// node_modules/chain-registry/esm/testnet/lavatestnet/index.js
var assets224 = assets_default224;
var chain225 = chain_default225;
var ibc156 = ibc_default156;

// node_modules/chain-registry/esm/testnet/lavatestnet1/assets.js
var info604 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "lavatestnet1",
  assets: [{
    description: "The native token of Lava",
    denom_units: [{
      denom: "ulava",
      exponent: 0
    }, {
      denom: "lava",
      exponent: 6
    }],
    base: "ulava",
    name: "LAVA",
    display: "lava",
    symbol: "LAVA",
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/lavatestnet/images/lava-icon.svg"
    },
    keywords: ["rpc", "api"],
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/lavatestnet/images/lava-icon.svg"
    }]
  }]
};
var assets_default225 = info604;

// node_modules/chain-registry/esm/testnet/lavatestnet1/chain.js
var info605 = {
  $schema: "../../chain.schema.json",
  chain_name: "lavatestnet1",
  status: "killed",
  network_type: "testnet",
  website: "https://www.lavanet.xyz/",
  pretty_name: "Lava",
  chain_id: "lava-testnet-1",
  bech32_prefix: "lava@",
  daemon_name: "lavad",
  node_home: "$HOME/.lava",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ulava",
      fixed_min_gas_price: 25e-4,
      low_gas_price: 25e-4,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ulava"
    }],
    lock_duration: {
      time: "1209600s"
    }
  },
  codebase: {
    cosmos_sdk_version: "0.45",
    cosmwasm_enabled: false,
    cosmwasm_version: "0.30"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/lavatestnet/images/lava-icon.png",
    theme: {
      primary_color_hex: "#D7001F"
    }
  }, {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/lavatestnet/images/lava-icon.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/lavatestnet/images/lava-icon.svg"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/lavatestnet/images/lava-icon.png"
  },
  apis: {
    rpc: [{
      address: "https://public-rpc-testnet2.lavanet.xyz/",
      provider: "Lava"
    }, {
      address: "http://lava.rpc.t.stavr.tech:198",
      provider: "\u{1F525}STAVR\u{1F525}"
    }],
    rest: [{
      address: "https://public-rpc-testnet2.lavanet.xyz/rest/",
      provider: "Lava"
    }, {
      address: "https://lava.api.t.stavr.tech",
      provider: "\u{1F525}STAVR\u{1F525}"
    }]
  },
  explorers: [
    {
      kind: "explorers.guru",
      url: "https://lava.explorers.guru/",
      tx_page: "https://lava.explorers.guru//transaction/${txHash}",
      account_page: "https://lava.explorers.guru//account/${accountAddress}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Lava-Testnet",
      tx_page: "https://explorer.stavr.tech/Lava-Testnet/tx/${txHash}",
      account_page: "https://explorer.stavr.tech/Lava-Testnet/account/${accountAddress}"
    },
    {
      kind: "NodeStake Explorer",
      url: "https://explorer.nodestake.org/lava-testnet",
      tx_page: "https://explorer.nodestake.org/lava-testnet/tx/${txHash}",
      account_page: "https://explorer.nodestake.org/lava-testnet/account/${accountAddress}"
    }
  ],
  keywords: ["rpc", "api"]
};
var chain_default226 = info605;

// node_modules/chain-registry/esm/testnet/lavatestnet1/index.js
var assets225 = assets_default225;
var chain226 = chain_default226;

// node_modules/chain-registry/esm/testnet/likecointestnet/assets.js
var info606 = {
  $schema: "../assetlist.schema.json",
  chain_name: "likecointestnet",
  assets: [{
    description: "EKIL is the native token for LikeCoin Testnet",
    denom_units: [{
      denom: "nanoekil",
      exponent: 0
    }, {
      denom: "ekil",
      exponent: 9
    }],
    base: "nanoekil",
    name: "LikeCoin",
    display: "ekil",
    symbol: "EKIL",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/like.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/like.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/like.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/like.svg"
    }]
  }]
};
var assets_default226 = info606;

// node_modules/chain-registry/esm/testnet/likecointestnet/chain.js
var info607 = {
  $schema: "../../chain.schema.json",
  chain_name: "likecointestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "LikeCoin Testnet",
  chain_id: "likecoin-public-testnet-5",
  bech32_prefix: "like",
  daemon_name: "liked",
  node_home: "$HOME/.liked",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "nanoekil",
      fixed_min_gas_price: 1e3,
      low_gas_price: 1e3,
      average_gas_price: 1e4,
      high_gas_price: 1e6
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "nanoekil"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "0.46",
    cosmwasm_enabled: false
  },
  apis: {
    rpc: [{
      address: "https://node.testnet.like.co/rpc/",
      provider: "like.co"
    }],
    rest: [{
      address: "https://node.testnet.like.co/",
      provider: "like.co"
    }],
    grpc: [{
      address: "https://node.testnet-grpc.like.co/",
      provider: "like.co"
    }]
  },
  explorers: [{
    kind: "bigdipper",
    url: "https://testnet.bigdipper.live/likecoin",
    tx_page: "https://testnet.bigdipper.live/likecoin/transactions/${txHash}",
    account_page: "https://testnet.bigdipper.live/likecoin/accounts/${accountAddress}"
  }, {
    kind: "lunie-ng",
    url: "https://likecoin-public-testnet-5.netlify.app/"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/likecoin-chain-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/likecoin-chain-logo.svg"
  },
  keywords: [],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/likecoin-chain-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/likecoin/images/likecoin-chain-logo.svg"
  }]
};
var chain_default227 = info607;

// node_modules/chain-registry/esm/testnet/likecointestnet/ibc.js
var info608 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "likecointestnet",
    client_id: "07-tendermint-5",
    connection_id: "connection-2"
  },
  chain_2: {
    chain_name: "osmosistestnet",
    client_id: "07-tendermint-1431",
    connection_id: "connection-1336"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-2",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-4357",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default157 = info608;

// node_modules/chain-registry/esm/testnet/likecointestnet/index.js
var assets226 = assets_default226;
var chain227 = chain_default227;
var ibc157 = ibc_default157;

// node_modules/chain-registry/esm/testnet/lumenxtestnet/assets.js
var info609 = {
  $schema: "../assetlist.schema.json",
  chain_name: "lumenxtestnet",
  assets: [{
    description: "The native token of Lumen Network",
    denom_units: [{
      denom: "ulumen",
      exponent: 0
    }, {
      denom: "lumen",
      exponent: 6
    }],
    base: "ulumen",
    name: "LUMEN",
    display: "lumen",
    symbol: "LUMEN",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/lumenxtestnet/images/lumen.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/lumenxtestnet/images/lumen.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/lumenxtestnet/images/lumen.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/lumenxtestnet/images/lumen.svg"
    }]
  }]
};
var assets_default227 = info609;

// node_modules/chain-registry/esm/testnet/lumenxtestnet/chain.js
var info610 = {
  $schema: "../chain.schema.json",
  chain_name: "lumenxtestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "LumenX-Test",
  chain_id: "lumenx-test",
  bech32_prefix: "lumen",
  daemon_name: "lumenxd",
  node_home: "$HOME/.lumenx",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ulumen",
      fixed_min_gas_price: 25e-4,
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.03
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ulumen"
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://testnet-rpc.lumenx.chaintools.tech/",
      provider: "ChainTools"
    }, {
      address: "https://testrpc-lumenx.cryptonet.pl/",
      provider: "CryptoNet"
    }],
    rest: [{
      address: "https://testnet-api.lumenx.chaintools.tech/",
      provider: "ChainTools"
    }, {
      address: "https://testapi-lumenx.cryptonet.pl/",
      provider: "CryptoNet"
    }],
    grpc: []
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://testnet.explorer.chaintools.tech/lumenx",
    tx_page: "https://testnet.explorer.chaintools.tech/lumenx/tx/${txHash}"
  }]
};
var chain_default228 = info610;

// node_modules/chain-registry/esm/testnet/lumenxtestnet/index.js
var assets227 = assets_default227;
var chain228 = chain_default228;

// node_modules/chain-registry/esm/testnet/mantrachaintestnet/assets.js
var info611 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "mantrachaintestnet",
  assets: [{
    description: "The native token of MANTRA",
    denom_units: [{
      denom: "uom",
      exponent: 0
    }, {
      denom: "om",
      exponent: 6
    }],
    base: "uom",
    name: "MANTRA Chain",
    display: "om",
    symbol: "OM",
    keywords: [
      "mantra",
      "staking",
      "delegating",
      "governance",
      "regulation",
      "defi"
    ],
    traces: [{
      type: "test-mintage",
      counterparty: {
        chain_name: "mantrachain",
        base_denom: "uom"
      },
      provider: "MANTRA Chain"
    }],
    images: [{
      image_sync: {
        chain_name: "mantrachain",
        base_denom: "uom"
      },
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mantrachain/images/OM-Prim-Col.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mantrachain/images/OM-Prim-Col.svg",
      theme: {
        circle: true
      }
    }]
  }]
};
var assets_default228 = info611;

// node_modules/chain-registry/esm/testnet/mantrachaintestnet/chain.js
var info612 = {
  $schema: "../../chain.schema.json",
  chain_name: "mantrachaintestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "MANTRA Hongbai Testnet",
  chain_id: "mantra-hongbai-1",
  bech32_prefix: "uom",
  daemon_name: "mantrachaind",
  node_home: "$HOME/.mantrachain",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uom",
      fixed_min_gas_price: 0,
      low_gas_price: 1e-3,
      average_gas_price: 2e-3,
      high_gas_price: 3e-3
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uom"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.47.3",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.41"
  },
  apis: {
    rpc: [{
      address: "https://rpc.hongbai.mantrachain.io",
      provider: "MANTRACHAIN"
    }, {
      address: "https://mantra-testnet-rpc.publicnode.com:443",
      provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
    }],
    rest: [{
      address: "https://api.hongbai.mantrachain.io",
      provider: "MANTRACHAIN"
    }, {
      address: "https://mantra-testnet-rest.publicnode.com",
      provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
    }],
    grpc: [{
      address: "https://grpc.hongbai.mantrachain.io",
      provider: "MANTRACHAIN"
    }, {
      address: "mantra-testnet-grpc.publicnode.com:443",
      provider: "Allnodes \u26A1\uFE0F Nodes & Staking"
    }]
  },
  keywords: ["dex", "testnet"],
  images: [{
    image_sync: {
      chain_name: "mantrachain",
      base_denom: "uom"
    },
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mantrachain/images/OM-Prim-Col.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mantrachain/images/OM-Prim-Col.svg",
    theme: {
      circle: true
    }
  }]
};
var chain_default229 = info612;

// node_modules/chain-registry/esm/testnet/mantrachaintestnet/ibc.js
var info613 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelartestnet",
      client_id: "07-tendermint-953",
      connection_id: "connection-734"
    },
    chain_2: {
      chain_name: "mantrachaintestnet",
      client_id: "07-tendermint-4",
      connection_id: "connection-4"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-506",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "mantrachaintestnet",
      client_id: "07-tendermint-3",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "nobletestnet",
      client_id: "07-tendermint-256",
      connection_id: "connection-207"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-174",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "mantrachaintestnet",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-3545",
      connection_id: "connection-3106"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7944",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default158 = info613;

// node_modules/chain-registry/esm/testnet/mantrachaintestnet/index.js
var assets228 = assets_default228;
var chain229 = chain_default229;
var ibc158 = ibc_default158;

// node_modules/chain-registry/esm/testnet/marstestnet/assets.js
var info614 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "marstestnet",
  assets: [{
    description: "The native token of Mars Protocol",
    denom_units: [{
      denom: "umars",
      exponent: 0
    }, {
      denom: "mars",
      exponent: 6
    }],
    base: "umars",
    name: "Mars",
    display: "mars",
    symbol: "MARS",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-token.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-token.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-token.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-token.svg"
    }]
  }]
};
var assets_default229 = info614;

// node_modules/chain-registry/esm/testnet/marstestnet/chain.js
var info615 = {
  $schema: "../../chain.schema.json",
  chain_name: "marstestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Mars Hub Testnet",
  chain_id: "ares-1",
  bech32_prefix: "mars",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "umars",
      fixed_min_gas_price: 0,
      low_gas_price: 0,
      average_gas_price: 0,
      high_gas_price: 0.025
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "umars"
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://testnet-rpc.marsprotocol.io/",
      provider: "Mars Protocol"
    }, {
      address: "https://rpc-mars.nodeist.net/",
      provider: "Nodeist"
    }],
    rest: [{
      address: "https://testnet-rest.marsprotocol.io/",
      provider: "Mars Protocol"
    }, {
      address: "https://api-mars.nodeist.net/",
      provider: "Nodeist"
    }]
  },
  explorers: [{
    kind: "Mars Protocol",
    url: "https://testnet-explorer.marsprotocol.io",
    tx_page: "https://testnet-explorer.marsprotocol.io/transactions/${txHash}"
  }, {
    kind: "Nodeist Explorer",
    url: "https://exp.nodeist.net/t-mars/",
    tx_page: "https://exp.nodeist.net/t-mars/transactions/${txHash}"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-icon.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-icon.svg"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-icon.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-icon.svg"
  }]
};
var chain_default230 = info615;

// node_modules/chain-registry/esm/testnet/marstestnet/ibc.js
var info616 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "marstestnet",
    client_id: "07-tendermint-33",
    connection_id: "connection-30"
  },
  chain_2: {
    chain_name: "osmosistestnet",
    client_id: "07-tendermint-1933",
    connection_id: "connection-1890"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-28",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-5499",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}, {
  $schema: "../../ibc_data.schema.json",
  chain_1: {
    chain_name: "marstestnet",
    client_id: "07-tendermint-3",
    connection_id: "connection-2"
  },
  chain_2: {
    chain_name: "osmosistestnet4",
    client_id: "07-tendermint-3419",
    connection_id: "connection-2887"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-2",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-2083",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default159 = info616;

// node_modules/chain-registry/esm/testnet/marstestnet/index.js
var assets229 = assets_default229;
var chain230 = chain_default230;
var ibc159 = ibc_default159;

// node_modules/chain-registry/esm/testnet/migalootestnet/assets.js
var info617 = {
  $schema: "../assetlist.schema.json",
  chain_name: "migalootestnet",
  assets: [{
    description: "The native token of Migaloo Chain",
    denom_units: [{
      denom: "uwhale",
      exponent: 0
    }, {
      denom: "whale",
      exponent: 6
    }],
    base: "uwhale",
    name: "Whale",
    display: "whale",
    symbol: "WHALE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/white-whale.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/white-whale.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/white-whale.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/white-whale.svg"
    }]
  }]
};
var assets_default230 = info617;

// node_modules/chain-registry/esm/testnet/migalootestnet/chain.js
var info618 = {
  $schema: "../chain.schema.json",
  chain_name: "migalootestnet",
  status: "live",
  network_type: "testnet",
  website: "https://www.whitewhale.money/",
  pretty_name: "Migaloo Testnet",
  chain_id: "narwhal-2",
  bech32_prefix: "migaloo",
  daemon_name: "migalood",
  node_home: "$HOME/.migalood",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uwhale",
      fixed_min_gas_price: 0.25,
      low_gas_price: 0.25,
      average_gas_price: 0.5,
      high_gas_price: 0.75
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uwhale"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/migaloo-light.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/migaloo-light.svg"
  },
  codebase: {
    cosmos_sdk_version: "0.45",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.28"
  },
  apis: {
    rpc: [{
      address: "https://migaloo-testnet-rpc.polkachu.com",
      provider: "Polkachu"
    }],
    rest: [{
      address: "https://migaloo-testnet-api.polkachu.com",
      provider: "Polkachu"
    }],
    grpc: []
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://ping.pfc.zone/narwhal-testnet",
    tx_page: "https://ping.pfc.zone/narwhal-testnet/tx/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/migaloo-light.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/migaloo/images/migaloo-light.svg"
  }]
};
var chain_default231 = info618;

// node_modules/chain-registry/esm/testnet/migalootestnet/index.js
var assets230 = assets_default230;
var chain231 = chain_default231;

// node_modules/chain-registry/esm/testnet/neuratestnet/assets.js
var info619 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "neuratestnet",
  assets: [{
    description: "ANKR: The native EVM, governance, and staking token for Neura, enabling secure transactions, and seamless GPU resourcing within the ecosystem.",
    denom_units: [{
      denom: "atankr",
      exponent: 0
    }, {
      denom: "ankr",
      exponent: 18
    }],
    base: "atankr",
    name: "Neura Testnet",
    display: "ankr",
    symbol: "ANKR",
    traces: [{
      type: "test-mintage",
      counterparty: {
        chain_name: "neura",
        base_denom: "atankr"
      },
      provider: "Neura"
    }],
    images: [{
      image_sync: {
        chain_name: "neura",
        base_denom: "atankr"
      },
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ankr.svg"
    }]
  }]
};
var assets_default231 = info619;

// node_modules/chain-registry/esm/testnet/neuratestnet/chain.js
var info620 = {
  $schema: "../../chain.schema.json",
  chain_name: "neuratestnet",
  chain_id: "neura_267-1",
  bech32_prefix: "neura",
  pretty_name: "Neura Testnet",
  website: "https://www.neuraprotocol.io/",
  description: "Neura is an AI-centric, EVM-compatible Layer 1 blockchain built on the Cosmos SDK. We democratize GPU access and revolutionize AI project funding with IMO\u2019s to advance AI development.",
  status: "live",
  network_type: "testnet",
  node_home: "$HOME/.neurad",
  daemon_name: "neurad",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 1,
  fees: {
    fee_tokens: [{
      denom: "atankr"
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "atankr"
    }]
  },
  apis: {
    rpc: [{
      address: "https://rpc.ankr.com/neura_testnet",
      provider: "ankr"
    }]
  },
  explorers: [{
    kind: "ankrscan-neura",
    url: "https://testnet.explorer.neuraprotocol.io",
    tx_page: "https://testnet.explorer.neuraprotocol.io/tx/${txHash}"
  }, {
    kind: "blockscout",
    url: "https://explorer.neura-testnet.ankr.com",
    tx_page: "https://explorer.neura-testnet.ankr.com/tx/${txHash}"
  }],
  codebase: {},
  images: [{
    image_sync: {
      chain_name: "neura"
    },
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neura/images/neura.png"
  }]
};
var chain_default232 = info620;

// node_modules/chain-registry/esm/testnet/neuratestnet/index.js
var assets231 = assets_default231;
var chain232 = chain_default232;

// node_modules/chain-registry/esm/testnet/neutrontestnet/assets.js
var info621 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "neutrontestnet",
  assets: [{
    description: "The native token of Neutron chain",
    denom_units: [{
      denom: "untrn",
      exponent: 0
    }, {
      denom: "ntrn",
      exponent: 6
    }],
    base: "untrn",
    name: "Neutron Testnet",
    display: "ntrn",
    symbol: "NTRN",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/ntrn.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/ntrn.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/ntrn.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/ntrn.svg"
    }]
  }, {
    description: "The yield token for ATOM denominated vaults on Amulet Protocol",
    denom_units: [{
      denom: "factory/neutron15lku24mqhvy4v4gryrqs4662n9v9q4ux9tayn89cmdzldjcgawushxvm76/amatom",
      exponent: 0
    }, {
      denom: "amATOM",
      exponent: 6
    }],
    base: "factory/neutron15lku24mqhvy4v4gryrqs4662n9v9q4ux9tayn89cmdzldjcgawushxvm76/amatom",
    name: "amATOM (Testnet)",
    display: "amATOM",
    symbol: "amATOM",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/amATOM.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/amATOM.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/amATOM.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/amATOM.svg"
    }]
  }]
};
var assets_default232 = info621;

// node_modules/chain-registry/esm/testnet/neutrontestnet/chain.js
var info622 = {
  $schema: "../../chain.schema.json",
  chain_name: "neutrontestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Neutron Testnet",
  chain_id: "pion-1",
  bech32_prefix: "neutron",
  daemon_name: "neutrond",
  node_home: "$HOME/.neutrond",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "untrn",
      low_gas_price: 53e-4,
      average_gas_price: 53e-4,
      high_gas_price: 53e-4
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.50",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.52"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/neutron-black-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/neutron-black-logo.svg"
  },
  apis: {
    rpc: [{
      address: "https://rpc-falcron.pion-1.ntrn.tech",
      provider: "Neutron"
    }, {
      address: "https://neutron-testnet-rpc.polkachu.com/",
      provider: "Polkachu"
    }],
    rest: [
      {
        address: "https://rest-falcron.pion-1.ntrn.tech",
        provider: "Neutron"
      },
      {
        address: "https://api.pion.remedy.tm.p2p.org",
        provider: "P2P.ORG"
      },
      {
        address: "https://rest.baryon-sentry-01.rs-testnet.polypore.xyz",
        provider: "Hypha"
      }
    ],
    grpc: [{
      address: "grpc-falcron.pion-1.ntrn.tech:80",
      provider: "Neutron"
    }, {
      address: "grpc.baryon.remedy.tm.p2p.org:443",
      provider: "P2P.ORG"
    }]
  },
  explorers: [{
    kind: "Ping.pub Explorer from Hypha",
    url: "https://explorer.rs-testnet.polypore.xyz/pion-1",
    tx_page: "https://explorer.rs-testnet.polypore.xyz/pion-1/tx/${txHash}",
    account_page: "https://explorer.rs-testnet.polypore.xyz/baryon-1/account/${accountAddress}"
  }, {
    kind: "Mintscan",
    url: "https://mintscan.io/neutron-testnet",
    tx_page: "https://mintscan.io/neutron-testnet/txs/${txHash}",
    account_page: "https://mintscan.io/neutron-testnet/account/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/neutron-black-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/neutron-black-logo.svg"
  }]
};
var chain_default233 = info622;

// node_modules/chain-registry/esm/testnet/neutrontestnet/ibc.js
var info623 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestiatestnet3",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "neutrontestnet",
      client_id: "07-tendermint-113",
      connection_id: "connection-101"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-160",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutrontestnet",
      client_id: "07-tendermint-102",
      connection_id: "connection-93"
    },
    chain_2: {
      chain_name: "noistestnet",
      client_id: "07-tendermint-30",
      connection_id: "connection-17"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-133",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-40",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-135",
        port_id: "wasm.neutron1tw9sg9e4l09l5rjglf4qfvcft470ljk5grdq3luagysyk83nzfusw2sxgq"
      },
      chain_2: {
        channel_id: "channel-42",
        port_id: "wasm.nois1xwde9rzqk5u36fke0r9ddmtwvh43n4fv53c5vc462wz8xlnqjhls6d90xc"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutrontestnet",
      client_id: "07-tendermint-143",
      connection_id: "connection-130"
    },
    chain_2: {
      chain_name: "nolustestnet",
      client_id: "07-tendermint-2",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-208",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1990",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutrontestnet",
      client_id: "07-tendermint-133",
      connection_id: "connection-123"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1272",
      connection_id: "connection-1172"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-196",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4172",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  }
];
var ibc_default160 = info623;

// node_modules/chain-registry/esm/testnet/neutrontestnet/index.js
var assets232 = assets_default232;
var chain233 = chain_default233;
var ibc160 = ibc_default160;

// node_modules/chain-registry/esm/testnet/nibirutestnet/assets.js
var info624 = {
  $schema: "../assetlist.schema.json",
  chain_name: "nibirutestnet",
  assets: [{
    description: "The native token of Nibiru network",
    denom_units: [{
      denom: "unibi",
      exponent: 0
    }, {
      denom: "nibi",
      exponent: 6
    }],
    base: "unibi",
    name: "Nibiru",
    display: "nibi",
    symbol: "NIBI",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
    }]
  }]
};
var assets_default233 = info624;

// node_modules/chain-registry/esm/testnet/nibirutestnet/chain.js
var info625 = {
  $schema: "../chain.schema.json",
  chain_name: "nibirutestnet",
  status: "live",
  network_type: "testnet",
  website: "https://nibiru.fi/",
  pretty_name: "Nibiru",
  chain_id: "nibiru-testnet-1",
  bech32_prefix: "nibi",
  daemon_name: "nibid",
  node_home: "$HOME/.nibid",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "unibi",
      fixed_min_gas_price: 0.025,
      low_gas_price: 0.025,
      average_gas_price: 0.05,
      high_gas_price: 0.1
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "unibi"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "v0.47.7",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.44.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
  },
  description: "A Web3 hub ushering in the next era of money",
  apis: {
    wss: [{
      address: "wss://hm-graphql.testnet-1.nibiru.fi/query",
      provider: "Nibiru Foundation"
    }],
    rpc: [{
      address: "https://rpc.testnet-1.nibiru.fi",
      provider: "Nibiru Foundation"
    }],
    rest: [{
      address: "https://lcd.testnet-1.nibiru.fi",
      provider: "Nibiru Foundation"
    }],
    grpc: [{
      address: "grpc.testnet-1.nibiru.fi:443",
      provider: "Nibiru Foundation"
    }]
  },
  explorers: [{
    kind: "Nibiru Foundation",
    url: "https://explorer.nibiru.fi/nibiru-testnet-1",
    tx_page: "https://explorer.nibiru.fi/nibiru-tesnet-1/tx/${txHash}",
    account_page: "https://explorer.nibiru.fi/nibiru-testnet-1/account/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
  }]
};
var chain_default234 = info625;

// node_modules/chain-registry/esm/testnet/nibirutestnet/index.js
var assets233 = assets_default233;
var chain234 = chain_default234;

// node_modules/chain-registry/esm/testnet/nibirutestnet2/assets.js
var info626 = {
  $schema: "../assetlist.schema.json",
  chain_name: "nibirutestnet2",
  assets: [{
    description: "The native token of Nibiru network",
    denom_units: [{
      denom: "unibi",
      exponent: 0
    }, {
      denom: "nibi",
      exponent: 6
    }],
    base: "unibi",
    name: "Nibiru",
    display: "nibi",
    symbol: "NIBI",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
    }]
  }]
};
var assets_default234 = info626;

// node_modules/chain-registry/esm/testnet/nibirutestnet2/chain.js
var info627 = {
  $schema: "../chain.schema.json",
  chain_name: "nibirutestnet2",
  status: "live",
  network_type: "testnet",
  website: "https://nibiru.fi/",
  pretty_name: "Nibiru",
  chain_id: "nibiru-testnet-2",
  bech32_prefix: "nibi",
  daemon_name: "nibid",
  node_home: "$HOME/.nibid",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "unibi",
      fixed_min_gas_price: 0.025,
      low_gas_price: 0.025,
      average_gas_price: 0.05,
      high_gas_price: 0.1
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "unibi"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "v0.47.7",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.44.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
  },
  description: "A Web3 hub ushering in the next era of money",
  apis: {
    wss: [{
      address: "wss://hm-graphql.testnet-2.nibiru.fi/query",
      provider: "Nibiru Foundation"
    }],
    rpc: [{
      address: "https://rpc.testnet-2.nibiru.fi",
      provider: "Nibiru Foundation"
    }],
    rest: [{
      address: "https://lcd.testnet-2.nibiru.fi",
      provider: "Nibiru Foundation"
    }],
    grpc: [{
      address: "grpc.testnet-2.nibiru.fi:443",
      provider: "Nibiru Foundation"
    }]
  },
  explorers: [{
    kind: "Nibiru Foundation",
    url: "https://explorer.nibiru.fi/nibiru-testnet-2",
    tx_page: "https://explorer.nibiru.fi/nibiru-tesnet-2/tx/${txHash}",
    account_page: "https://explorer.nibiru.fi/nibiru-testnet-2/account/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
  }]
};
var chain_default235 = info627;

// node_modules/chain-registry/esm/testnet/nibirutestnet2/index.js
var assets234 = assets_default234;
var chain235 = chain_default235;

// node_modules/chain-registry/esm/testnet/nobletestnet/assets.js
var info628 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "nobletestnet",
  assets: [
    {
      description: "The controlled staking asset for Noble Chain",
      denom_units: [{
        denom: "ustake",
        exponent: 0,
        aliases: ["microstake"]
      }, {
        denom: "stake",
        exponent: 6
      }],
      base: "ustake",
      name: "Stake",
      display: "stake",
      symbol: "STAKE"
    },
    {
      description: "Love is a test tokenfactory asset controlled by the Strangelove Team",
      denom_units: [{
        denom: "ulove",
        exponent: 0,
        aliases: ["microlove"]
      }, {
        denom: "love",
        exponent: 6
      }],
      base: "ulove",
      display: "love",
      name: "Love",
      symbol: "LOVE"
    },
    {
      description: "USD Coin",
      denom_units: [{
        denom: "uusdc",
        exponent: 0,
        aliases: ["microusdc"]
      }, {
        denom: "usdc",
        exponent: 6
      }],
      base: "uusdc",
      display: "usdc",
      name: "USD Coin",
      symbol: "USDC",
      traces: [{
        type: "test-mintage",
        counterparty: {
          chain_name: "noble",
          base_denom: "uusdc"
        },
        provider: "Circle"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    },
    {
      description: "Ondo US Dollar Yield",
      denom_units: [{
        denom: "ausdy",
        exponent: 0,
        aliases: ["attousdy"]
      }, {
        denom: "usdy",
        exponent: 18
      }],
      base: "ausdy",
      display: "usdy",
      name: "Ondo US Dollar Yield",
      symbol: "USDY",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/nobletestnet/images/usdy.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/nobletestnet/images/usdy.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/nobletestnet/images/usdy.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/nobletestnet/images/usdy.svg"
      }]
    }
  ]
};
var assets_default235 = info628;

// node_modules/chain-registry/esm/testnet/nobletestnet/chain.js
var info629 = {
  $schema: "../chain.schema.json",
  chain_name: "nobletestnet",
  chain_id: "grand-1",
  website: "https://nobleassets.xyz/",
  pretty_name: "Noble",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "noble",
  daemon_name: "nobled",
  node_home: "$HOME/.nobled",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uusdc",
      fixed_min_gas_price: 0,
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.03
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ustake"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "v0.45",
    cosmwasm_enabled: false
  },
  apis: {
    rpc: [{
      address: "https://noble-testnet-rpc.polkachu.com",
      provider: "polkachu"
    }, {
      address: "https://rpc.testnet.noble.strange.love:443",
      provider: "strangelove"
    }],
    rest: [{
      address: "https://noble-testnet-api.polkachu.com",
      provider: "polkachu"
    }, {
      address: "https://api.testnet.noble.strange.love",
      provider: "strangelove"
    }],
    grpc: [{
      address: "noble-testnet-grpc.polkachu.com:21590",
      provider: "polkachu"
    }]
  },
  explorers: [{
    kind: "mintscan",
    url: "https://mintscan.io/noble-testnet",
    tx_page: "https://mintscan.io/noble-testnet/txs/${txHash}"
  }, {
    kind: "ping.pub",
    url: "https://explore.strange.love/grand-1",
    tx_page: "https://explore.strange.love/grand-1/tx/${txHash}"
  }]
};
var chain_default236 = info629;

// node_modules/chain-registry/esm/testnet/nobletestnet/ibc.js
var info630 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "elystestnet",
      client_id: "07-tendermint-9",
      connection_id: "connection-12"
    },
    chain_2: {
      chain_name: "nobletestnet",
      client_id: "07-tendermint-28",
      connection_id: "connection-26"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-12",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-19",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "mantrachaintestnet",
      client_id: "07-tendermint-3",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "nobletestnet",
      client_id: "07-tendermint-256",
      connection_id: "connection-207"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-174",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nobletestnet",
      client_id: "07-tendermint-42",
      connection_id: "connection-31"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1374",
      connection_id: "connection-1275"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-22",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4280",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nobletestnet",
      client_id: "07-tendermint-6",
      connection_id: "connection-6"
    },
    chain_2: {
      chain_name: "osmosistestnet4",
      client_id: "07-tendermint-4504",
      connection_id: "connection-3905"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3651",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "nobletestnet",
      client_id: "07-tendermint-224",
      connection_id: "connection-176"
    },
    chain_2: {
      chain_name: "xiontestnet",
      client_id: "07-tendermint-120",
      connection_id: "connection-56"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-147",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-489",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  }
];
var ibc_default161 = info630;

// node_modules/chain-registry/esm/testnet/nobletestnet/index.js
var assets235 = assets_default235;
var chain236 = chain_default236;
var ibc161 = ibc_default161;

// node_modules/chain-registry/esm/testnet/noistestnet/assets.js
var info631 = {
  $schema: "../assetlist.schema.json",
  chain_name: "noistestnet",
  assets: [{
    description: "The native token of Nois",
    denom_units: [{
      denom: "unois",
      exponent: 0
    }, {
      denom: "nois",
      exponent: 6
    }],
    base: "unois",
    name: "Nois",
    display: "nois",
    symbol: "NOIS",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nois/images/nois.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nois/images/nois.svg"
    },
    keywords: [
      "nois",
      "randomness",
      "drand",
      "wasm"
    ],
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nois/images/nois.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nois/images/nois.svg"
    }]
  }]
};
var assets_default236 = info631;

// node_modules/chain-registry/esm/testnet/noistestnet/chain.js
var info632 = {
  $schema: "../chain.schema.json",
  chain_name: "noistestnet",
  status: "live",
  network_type: "testnet",
  website: "https://nois.network",
  pretty_name: "Nois",
  chain_id: "nois-testnet-005",
  bech32_prefix: "nois",
  daemon_name: "noisd",
  node_home: "$HOME/.noisd",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "unois",
      fixed_min_gas_price: 0,
      low_gas_price: 0.05,
      average_gas_price: 0.05,
      high_gas_price: 0.1
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "unois"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "0.45",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.30"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nois/images/nois.png",
    theme: {
      primary_color_hex: "#0C0914"
    }
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nois/images/nois.png"
  },
  apis: {
    rpc: [
      {
        address: "https://nois-testnet-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://nois-testnet-rpc.itrocket.net:443",
        provider: "itrocket"
      },
      {
        address: "https://rpc.nois.mcbnode.online:443",
        provider: "mcbnode"
      },
      {
        address: "https://nois-testnet.rpc.kjnodes.com:443",
        provider: "kjnodes"
      },
      {
        address: "https://tnois-rpc.systemd.run:443",
        provider: "systemd"
      }
    ],
    grpc: [
      {
        address: "tnois-grpc.systemd.run:443",
        provider: "systemd"
      },
      {
        address: "http://nois.grpc.t.stavr.tech:191",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "nois-testnet-grpc.itrocket.net:21090",
        provider: "itrocket"
      }
    ],
    rest: [
      {
        address: "https://api.nois.mcbnode.online",
        provider: "mcbnode"
      },
      {
        address: "https://nois3.api.t.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://tnois-api.systemd.run:443",
        provider: "systemd"
      }
    ]
  },
  explorers: [{
    kind: "\u{1F525}STAVR\u{1F525}",
    url: "https://explorer.stavr.tech/Nois-Testnet",
    tx_page: "https://explorer.stavr.tech/Nois-Testnet/tx/${txHash}",
    account_page: "https://explorer.stavr.tech/Nois-Testnet/account/${accountAddress}"
  }, {
    kind: "explorers.guru",
    url: "https://testnet.nois.explorers.guru",
    tx_page: "https://testnet.nois.explorers.guru/transaction/${txHash}",
    account_page: "https://testnet.nois.explorers.guru/account/${accountAddress}"
  }],
  keywords: [
    "nois",
    "randomness",
    "drand",
    "wasm"
  ]
};
var chain_default237 = info632;

// node_modules/chain-registry/esm/testnet/noistestnet/ibc.js
var info633 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injectivetestnet",
      client_id: "07-tendermint-123",
      connection_id: "connection-98"
    },
    chain_2: {
      chain_name: "noistestnet",
      client_id: "07-tendermint-26",
      connection_id: "connection-13"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-74",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-33",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-77",
        port_id: "wasm.inj14nendtsz0c40n7xtzwkjmdc8dkuz835jdydxhn"
      },
      chain_2: {
        channel_id: "channel-36",
        port_id: "wasm.nois1xwde9rzqk5u36fke0r9ddmtwvh43n4fv53c5vc462wz8xlnqjhls6d90xc"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "junotestnet",
      client_id: "07-tendermint-170",
      connection_id: "connection-178"
    },
    chain_2: {
      chain_name: "noistestnet",
      client_id: "07-tendermint-16",
      connection_id: "connection-5"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-877",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-69",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-198",
        port_id: "wasm.juno1pjpntyvkxeuxd709jlupuea3xzxlzsfq574kqefv77fr2kcg4mcqvwqedq"
      },
      chain_2: {
        channel_id: "channel-17",
        port_id: "wasm.nois1xwde9rzqk5u36fke0r9ddmtwvh43n4fv53c5vc462wz8xlnqjhls6d90xc"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutrontestnet",
      client_id: "07-tendermint-102",
      connection_id: "connection-93"
    },
    chain_2: {
      chain_name: "noistestnet",
      client_id: "07-tendermint-30",
      connection_id: "connection-17"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-133",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-40",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-135",
        port_id: "wasm.neutron1tw9sg9e4l09l5rjglf4qfvcft470ljk5grdq3luagysyk83nzfusw2sxgq"
      },
      chain_2: {
        channel_id: "channel-42",
        port_id: "wasm.nois1xwde9rzqk5u36fke0r9ddmtwvh43n4fv53c5vc462wz8xlnqjhls6d90xc"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noistestnet",
      client_id: "07-tendermint-39",
      connection_id: "connection-23"
    },
    chain_2: {
      chain_name: "stargazetestnet",
      client_id: "07-tendermint-483",
      connection_id: "connection-500"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-48",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-485",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-49",
        port_id: "wasm.nois1xwde9rzqk5u36fke0r9ddmtwvh43n4fv53c5vc462wz8xlnqjhls6d90xc"
      },
      chain_2: {
        channel_id: "channel-486",
        port_id: "wasm.stars1h99p7u2tvz79jppjwdddmkplvcpnsh0pmatl7dqkmdhnkgx59y2q6s0x9s"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default162 = info633;

// node_modules/chain-registry/esm/testnet/noistestnet/index.js
var assets236 = assets_default236;
var chain237 = chain_default237;
var ibc162 = ibc_default162;

// node_modules/chain-registry/esm/testnet/nolustestnet/assets.js
var info634 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "nolustestnet",
  assets: [{
    description: "The native token of Nolus chain",
    denom_units: [{
      denom: "unls",
      exponent: 0
    }, {
      denom: "nls",
      exponent: 6
    }],
    base: "unls",
    name: "Nolus",
    display: "nls",
    symbol: "NLS",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/nolustestnet/images/nolus.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/nolustestnet/images/nolus.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/nolustestnet/images/nolus.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/nolustestnet/images/nolus.svg"
    }]
  }]
};
var assets_default237 = info634;

// node_modules/chain-registry/esm/testnet/nolustestnet/chain.js
var info635 = {
  $schema: "../../chain.schema.json",
  chain_name: "nolustestnet",
  status: "live",
  website: "https://nolus.io/",
  network_type: "testnet",
  pretty_name: "Nolus Testnet",
  chain_id: "rila-1",
  bech32_prefix: "nolus",
  daemon_name: "nolusd",
  node_home: "$HOME/.nolusd",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "unls",
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.05
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "unls"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "0.45",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.31"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/nolustestnet/images/nolus.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/nolustestnet/images/nolus.svg"
  },
  apis: {
    rpc: [{
      address: "https://rila-cl.nolus.network:26657",
      provider: "NolusProtocol"
    }],
    rest: [{
      address: "https://rila-cl.nolus.network:1317",
      provider: "NolusProtocol"
    }],
    grpc: [{
      address: "https://rila-cl.nolus.network:9090",
      provider: "NolusProtocol"
    }]
  },
  explorers: [{
    kind: "Nolus Explorer",
    url: "https://explorer-rila.nolus.io/rila-1/",
    tx_page: "https://explorer-rila.nolus.io/rila-1/tx/${txHash}",
    account_page: "https://explorer-rila.nolus.io/rila-1/account/${accountAddress}"
  }],
  keywords: ["testnet"],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/nolustestnet/images/nolus.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/nolustestnet/images/nolus.svg"
  }]
};
var chain_default238 = info635;

// node_modules/chain-registry/esm/testnet/nolustestnet/ibc.js
var info636 = [{
  $schema: "../../ibc_data.schema.json",
  chain_1: {
    chain_name: "neutrontestnet",
    client_id: "07-tendermint-143",
    connection_id: "connection-130"
  },
  chain_2: {
    chain_name: "nolustestnet",
    client_id: "07-tendermint-2",
    connection_id: "connection-1"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-208",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-1990",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live"
    }
  }]
}, {
  $schema: "../../ibc_data.schema.json",
  chain_1: {
    chain_name: "nolustestnet",
    client_id: "07-tendermint-0",
    connection_id: "connection-0"
  },
  chain_2: {
    chain_name: "osmosistestnet",
    client_id: "07-tendermint-102",
    connection_id: "connection-120"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-0",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-110",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default163 = info636;

// node_modules/chain-registry/esm/testnet/nolustestnet/index.js
var assets237 = assets_default237;
var chain238 = chain_default238;
var ibc163 = ibc_default163;

// node_modules/chain-registry/esm/testnet/nyxtestnet/assets.js
var info637 = {
  $schema: "../assetlist.schema.json",
  chain_name: "nyxtestnet",
  assets: [{
    description: "NYX Token (NYX) is the Nym Network's native staking and governance token.",
    denom_units: [{
      denom: "unyx",
      exponent: 0
    }, {
      denom: "nyx",
      exponent: 6
    }],
    base: "unyx",
    name: "NYX",
    display: "nyx",
    symbol: "NYX",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyxtestnet/images/nyx.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyxtestnet/images/nyx.png"
    }]
  }, {
    description: "NYM Token (NYM) is the Nym Network's native utility token, used as the primary means to incentivize mixnet node operators.",
    denom_units: [{
      denom: "unym",
      exponent: 0
    }, {
      denom: "nym",
      exponent: 6
    }],
    base: "unym",
    name: "NYM",
    display: "nym",
    symbol: "NYM",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyxtestnet/images/nym_token_light.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyxtestnet/images/nym_token_light.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyxtestnet/images/nym_token_light.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyxtestnet/images/nym_token_light.svg",
      theme: {
        dark_mode: false,
        circle: true
      }
    }, {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyxtestnet/images/nym_token_dark.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyxtestnet/images/nym_token_dark.svg",
      theme: {
        dark_mode: true,
        circle: true
      }
    }]
  }]
};
var assets_default238 = info637;

// node_modules/chain-registry/esm/testnet/nyxtestnet/chain.js
var info638 = {
  $schema: "../chain.schema.json",
  chain_name: "nyxtestnet",
  status: "live",
  network_type: "testnet",
  website: "https://nymtech.net/",
  pretty_name: "Nym",
  chain_id: "sandbox",
  bech32_prefix: "n",
  daemon_name: "nyxd",
  node_home: "$HOME/.nyxd",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "unym",
      fixed_min_gas_price: 0.025,
      low_gas_price: 0.025,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }, {
      denom: "unyx",
      fixed_min_gas_price: 0.025,
      low_gas_price: 0.025,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "unyx"
    }],
    lock_duration: {
      time: "432000s"
    }
  },
  codebase: {
    cosmwasm_enabled: true
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyxtestnet/images/nym_token_light.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyxtestnet/images/nym_token_light.svg"
  },
  apis: {
    rpc: [{
      address: "https://rpc.sandbox.nymtech.net",
      provider: "Nym"
    }],
    rest: [{
      address: "https://api.sandbox.nymtech.net",
      provider: "Nym"
    }],
    grpc: [{
      address: "grpc.sandbox.nymtech.net:443",
      provider: "Nym"
    }]
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://sandbox-blocks.nymtech.net/sandbox",
    tx_page: "https://sandbox-blocks.nymtech.net/sandbox/tx/${txHash}"
  }],
  images: [
    {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyxtestnet/images/nym_token_light.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyxtestnet/images/nym_token_light.svg",
      theme: {
        dark_mode: false,
        circle: true
      }
    },
    {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyxtestnet/images/nym_token_dark.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyxtestnet/images/nym_token_dark.svg",
      theme: {
        dark_mode: true,
        circle: true
      }
    },
    {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nyxtestnet/images/nym_token_light.png"
    }
  ]
};
var chain_default239 = info638;

// node_modules/chain-registry/esm/testnet/nyxtestnet/index.js
var assets238 = assets_default238;
var chain239 = chain_default239;

// node_modules/chain-registry/esm/testnet/okp4testnet/assets.js
var info639 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "okp4testnet",
  assets: [{
    description: "The native token of \xD8KP4.",
    denom_units: [{
      denom: "uknow",
      exponent: 0
    }, {
      denom: "know",
      exponent: 6
    }],
    base: "uknow",
    name: "OKP4 Network",
    display: "know",
    symbol: "KNOW",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/okp4testnet/images/okp4.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/okp4testnet/images/okp4.png"
    }]
  }]
};
var assets_default239 = info639;

// node_modules/chain-registry/esm/testnet/okp4testnet/chain.js
var info640 = {
  $schema: "../../chain.schema.json",
  chain_name: "okp4testnet",
  chain_id: "okp4-nemeton-1",
  website: "https://okp4.network/",
  pretty_name: "OKP4 Nemeton",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "okp4",
  daemon_name: "okp4d",
  node_home: "$HOME/.okp4",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uknow",
      fixed_min_gas_price: 0,
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.03
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uknow"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/okp4testnet/images/okp4.png"
  },
  apis: {
    rpc: [
      {
        address: "https://api.testnet.okp4.network/rpc",
        provider: "OKP4"
      },
      {
        address: "https://okptest-rpc.quickapi.com",
        provider: "Chainlayer"
      },
      {
        address: "http://okp.rpc.t.stavr.tech:10097",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://okp4-testnet-rpc.polkachu.com",
        provider: "Polkachu"
      }
    ],
    rest: [
      {
        address: "https://okptest-lcd.quickapi.com",
        provider: "Chainlayer"
      },
      {
        address: "https://okp4.api.t.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://okp4-testnet-api.polkachu.com/",
        provider: "Polkachu"
      }
    ],
    grpc: [
      {
        address: "okp4-testnet-grpc.polkachu.com:17690",
        provider: "Polkachu"
      },
      {
        address: "http://okp.grpc.t.stavr.tech:8029",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "grpc.testnet.okp4.network:443",
        provider: "OKP4"
      }
    ]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://testnet.ping.pub/OKP4%20testnet",
      tx_page: "https://testnet.ping.pub/OKP4%20testnet/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/OKP4-Testnet",
      tx_page: "https://explorer.stavr.tech/OKP4-Testnet/tx/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://explore.okp4.network/OKP4%20testnet",
      tx_page: "https://explore.okp4.network/OKP4%20testnet/tx/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/okp4testnet/images/okp4.png"
  }]
};
var chain_default240 = info640;

// node_modules/chain-registry/esm/testnet/okp4testnet/index.js
var assets239 = assets_default239;
var chain240 = chain_default240;

// node_modules/chain-registry/esm/testnet/osmosistestnet/assets.js
var info641 = {
  $schema: "../assetlist.schema.json",
  chain_name: "osmosistestnet",
  assets: [
    {
      description: "The native token of Osmosis",
      denom_units: [{
        denom: "uosmo",
        exponent: 0,
        aliases: []
      }, {
        denom: "osmo",
        exponent: 6,
        aliases: []
      }],
      type_asset: "sdk.coin",
      base: "uosmo",
      name: "Osmosis Testnet",
      display: "osmo",
      symbol: "OSMO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      }],
      coingecko_id: "osmosis",
      keywords: ["dex", "staking"]
    },
    {
      denom_units: [{
        denom: "uion",
        exponent: 0
      }, {
        denom: "ion",
        exponent: 6
      }],
      type_asset: "sdk.coin",
      base: "uion",
      name: "Ion",
      display: "ion",
      symbol: "ION",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ion.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ion.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ion.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ion.svg"
      }],
      coingecko_id: "ion",
      keywords: ["memecoin"]
    },
    {
      description: "The native staking and governance token of the Theta testnet version of the Cosmos Hub.",
      denom_units: [{
        denom: "ibc/9FF2B7A5F55038A7EE61F4FD6749D9A648B48E89830F2682B67B5DC158E2753C",
        exponent: 0,
        aliases: ["uatom"]
      }, {
        denom: "atom",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/9FF2B7A5F55038A7EE61F4FD6749D9A648B48E89830F2682B67B5DC158E2753C",
      name: "Cosmos Hub Public Testnet",
      display: "atom",
      symbol: "ATOM",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "cosmoshubtestnet",
          base_denom: "uatom",
          channel_id: "channel-3306"
        },
        chain: {
          channel_id: "channel-4156",
          path: "transfer/channel-4156/uatom"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      },
      images: [{
        image_sync: {
          chain_name: "cosmoshubtestnet",
          base_denom: "uatom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
      }]
    },
    {
      description: "Circle's stablecoin on Axelar",
      denom_units: [{
        denom: "ibc/2164BDB48DE5501430E71286448D87C6D2240EC0E078CF113CAB85E21A352BB0",
        exponent: 0
      }, {
        denom: "ausdc",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/2164BDB48DE5501430E71286448D87C6D2240EC0E078CF113CAB85E21A352BB0",
      name: "USD Coin (Axelar)",
      display: "ausdc",
      symbol: "aUSDC.axl",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Circle"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereumtestnet",
            base_denom: "0x254d06f33bDc5b8ee05b2ea472107E300226659A"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelartestnet",
            base_denom: "uausdc",
            channel_id: "channel-339"
          },
          chain: {
            channel_id: "channel-4170",
            path: "transfer/channel-4170/uausdc"
          }
        }
      ],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereumtestnet",
          base_denom: "0x254d06f33bDc5b8ee05b2ea472107E300226659A"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    },
    {
      description: "Wrapped Ether on Axelar",
      denom_units: [{
        denom: "ibc/1F42AC9631DBE03009219ECCFE151786F53A038DE9F7A07C709158514F1D5942",
        exponent: 0,
        aliases: ["eth-wei"]
      }, {
        denom: "weth",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/1F42AC9631DBE03009219ECCFE151786F53A038DE9F7A07C709158514F1D5942",
      name: "Wrapped Ether (Axelar)",
      display: "weth",
      symbol: "ETH",
      traces: [
        {
          type: "wrapped",
          counterparty: {
            chain_name: "ethereumtestnet",
            base_denom: "wei"
          },
          provider: "Ethereum"
        },
        {
          type: "bridge",
          counterparty: {
            chain_name: "ethereumtestnet",
            base_denom: "0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6"
          },
          provider: "Axelar"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "axelartestnet",
            base_denom: "eth-wei",
            channel_id: "channel-339"
          },
          chain: {
            channel_id: "channel-4170",
            path: "transfer/channel-4170/eth-wei"
          }
        }
      ],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/weth.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereumtestnet",
          base_denom: "0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/weth.svg"
      }]
    },
    {
      description: "The native token of JUNO Chain",
      denom_units: [{
        denom: "ibc/31D220286E6C224C0F72D890D0EB75A228D388089EF5C4D77212344F9EAF0183",
        exponent: 0,
        aliases: ["ujunox"]
      }, {
        denom: "junox",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/31D220286E6C224C0F72D890D0EB75A228D388089EF5C4D77212344F9EAF0183",
      name: "Juno Testnet",
      display: "junox",
      symbol: "JUNOX",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "junotestnet",
          base_denom: "ujunox",
          channel_id: "channel-889"
        },
        chain: {
          channel_id: "channel-5498",
          path: "transfer/channel-5498/ujunox"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/junotestnet/images/juno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/junotestnet/images/juno.svg"
      },
      images: [{
        image_sync: {
          chain_name: "junotestnet",
          base_denom: "ujunox"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/junotestnet/images/juno.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/junotestnet/images/juno.svg"
      }]
    },
    {
      description: "The native token of Mars Protocol",
      denom_units: [{
        denom: "ibc/66A7ADA623D33D0B66C6890FE3E1AF3D638D56CE2B56F8BDA210B2AA62016216",
        exponent: 0,
        aliases: ["umars"]
      }, {
        denom: "mars",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/66A7ADA623D33D0B66C6890FE3E1AF3D638D56CE2B56F8BDA210B2AA62016216",
      name: "Mars Hub Testnet",
      display: "mars",
      symbol: "MARS",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "marstestnet",
          base_denom: "umars",
          channel_id: "channel-28"
        },
        chain: {
          channel_id: "channel-5499",
          path: "transfer/channel-5499/umars"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-token.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-token.svg"
      },
      images: [{
        image_sync: {
          chain_name: "marstestnet",
          base_denom: "umars"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-token.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mars/images/mars-token.svg"
      }]
    },
    {
      description: "USD Coin",
      denom_units: [{
        denom: "ibc/DE6792CF9E521F6AD6E9A4BDF6225C9571A3B74ACC0A529F92BC5122A39D2E58",
        exponent: 0,
        aliases: ["microusdc", "uusdc"]
      }, {
        denom: "usdc",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/DE6792CF9E521F6AD6E9A4BDF6225C9571A3B74ACC0A529F92BC5122A39D2E58",
      name: "USD Coin",
      display: "usdc",
      symbol: "USDC",
      traces: [
        {
          type: "synthetic",
          counterparty: {
            chain_name: "forex",
            base_denom: "USD"
          },
          provider: "Circle"
        },
        {
          type: "additional-mintage",
          counterparty: {
            chain_name: "ethereum",
            base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          },
          provider: "Circle"
        },
        {
          type: "test-mintage",
          counterparty: {
            chain_name: "noble",
            base_denom: "uusdc"
          },
          provider: "Circle"
        },
        {
          type: "ibc",
          counterparty: {
            chain_name: "nobletestnet",
            base_denom: "uusdc",
            channel_id: "channel-22"
          },
          chain: {
            channel_id: "channel-4280",
            path: "transfer/channel-4280/uusdc"
          }
        }
      ],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        image_sync: {
          chain_name: "nobletestnet",
          base_denom: "uusdc"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    },
    {
      description: "Akash Token (AKT) is the Akash Network's native utility token, used as the primary means to govern, secure the blockchain, incentivize participants, and provide a default mechanism to store and exchange value.",
      denom_units: [{
        denom: "ibc/AD59D59CFB0E628E73C798415F823AB5B6257C2FE4BF67DBB5D6A677B2686E82",
        exponent: 0,
        aliases: ["uakt"]
      }, {
        denom: "akt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/AD59D59CFB0E628E73C798415F823AB5B6257C2FE4BF67DBB5D6A677B2686E82",
      name: "Sandbox",
      display: "akt",
      symbol: "AKT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "akashtestnet",
          base_denom: "uakt",
          channel_id: "channel-6"
        },
        chain: {
          channel_id: "channel-4171",
          path: "transfer/channel-4171/uakt"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.svg"
      },
      images: [{
        image_sync: {
          chain_name: "akashtestnet",
          base_denom: "uakt"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/akash/images/akt.svg"
      }]
    },
    {
      description: "The native utility token of the Kaon testnet version of KYVE.",
      denom_units: [{
        denom: "ibc/AB8AF05799E299FB5C5C80781DA35887F53E029745D20E5641233DB4E6B28515",
        exponent: 0,
        aliases: ["tkyve"]
      }, {
        denom: "kyve",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/AB8AF05799E299FB5C5C80781DA35887F53E029745D20E5641233DB4E6B28515",
      name: "KYVE Kaon",
      display: "kyve",
      symbol: "KYVE",
      traces: [{
        type: "test-mintage",
        counterparty: {
          chain_name: "kyve",
          base_denom: "ukyve"
        },
        provider: "Kyve"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "kyvetestnet",
          base_denom: "tkyve",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-10",
          path: "transfer/channel-10/tkyve"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.svg",
        image_sync: {
          chain_name: "kyve",
          base_denom: "ukyve"
        }
      }]
    },
    {
      description: "QCK - native token of Quicksilver",
      denom_units: [{
        denom: "ibc/F37CF69589DE12342758382F8770C0852CD8D2E4519F55166EBDAF472AD667C9",
        exponent: 0,
        aliases: ["uqck"]
      }, {
        denom: "qck",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/F37CF69589DE12342758382F8770C0852CD8D2E4519F55166EBDAF472AD667C9",
      name: "Quicksilver Testnet",
      display: "qck",
      symbol: "QCK",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "quicksilvertestnet",
          base_denom: "uqck",
          channel_id: "channel-20"
        },
        chain: {
          channel_id: "channel-13",
          path: "transfer/channel-13/uqck"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qck.png"
      },
      images: [{
        image_sync: {
          chain_name: "quicksilvertestnet",
          base_denom: "uqck"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qck.png"
      }]
    },
    {
      description: "The native token of Chain4Energy",
      denom_units: [{
        denom: "ibc/E3D323CB6F427C49E56F913C853A416F6B71BAA9B0164625AD0203266F92B3ED",
        exponent: 0,
        aliases: ["uc4e"]
      }, {
        denom: "c4e",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/E3D323CB6F427C49E56F913C853A416F6B71BAA9B0164625AD0203266F92B3ED",
      name: "Chain4Energy Testnet",
      display: "c4e",
      symbol: "C4E",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "chain4energytestnet",
          base_denom: "uc4e",
          channel_id: "channel-0"
        },
        chain: {
          channel_id: "channel-111",
          path: "transfer/channel-111/uc4e"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/chain4energytestnet/images/c4e.png"
      },
      images: [{
        image_sync: {
          chain_name: "chain4energytestnet",
          base_denom: "uc4e"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/chain4energytestnet/images/c4e.png"
      }]
    },
    {
      description: "The XPRT token is primarily a governance token for the Persistence chain.",
      denom_units: [{
        denom: "ibc/754C8533F8A418B03AD5F2C6AA19D4703CF78BBAB9E2E4DDD6212AAC2E502CA6",
        exponent: 0,
        aliases: ["uxprt"]
      }, {
        denom: "xprt",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/754C8533F8A418B03AD5F2C6AA19D4703CF78BBAB9E2E4DDD6212AAC2E502CA6",
      name: "Persistence Testnet",
      display: "xprt",
      symbol: "XPRT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "persistencetestnet2",
          base_denom: "uxprt",
          channel_id: "channel-7"
        },
        chain: {
          channel_id: "channel-1037",
          path: "transfer/channel-1037/uxprt"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.svg"
      },
      images: [{
        image_sync: {
          chain_name: "persistencetestnet2",
          base_denom: "uxprt"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.svg"
      }]
    },
    {
      description: "The native staking token of the Xion network.",
      denom_units: [{
        denom: "ibc/3642669AD14386D3E38F43F30CFCA859B3E8A05BF6BD6A23DEBD2115AD1325E9",
        exponent: 0,
        aliases: ["microxion", "uxion"]
      }, {
        denom: "XION",
        exponent: 6,
        aliases: ["xion"]
      }],
      type_asset: "ics20",
      base: "ibc/3642669AD14386D3E38F43F30CFCA859B3E8A05BF6BD6A23DEBD2115AD1325E9",
      name: "Xion Testnet",
      display: "XION",
      symbol: "XION",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "xiontestnet",
          base_denom: "uxion",
          channel_id: "channel-12"
        },
        chain: {
          channel_id: "channel-4410",
          path: "transfer/channel-4410/uxion"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/xion/images/burnt-round.png"
      },
      images: [{
        image_sync: {
          chain_name: "xiontestnet",
          base_denom: "uxion"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/xion/images/burnt-round.png"
      }]
    },
    {
      description: "The native token of Saga Testnet",
      denom_units: [{
        denom: "ibc/48384130079A5987378F5776775F8C29A02505273E777BBB99361F2BB5B577C9",
        exponent: 0,
        aliases: ["utsaga"]
      }, {
        denom: "tsaga",
        exponent: 6,
        aliases: []
      }],
      type_asset: "ics20",
      base: "ibc/48384130079A5987378F5776775F8C29A02505273E777BBB99361F2BB5B577C9",
      name: "Saga Testnet",
      display: "tsaga",
      symbol: "TSAGA",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "sagatestnet",
          base_denom: "utsaga",
          channel_id: "channel-20"
        },
        chain: {
          channel_id: "channel-4946",
          path: "transfer/channel-4946/utsaga"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.svg"
      },
      images: [{
        image_sync: {
          chain_name: "sagatestnet",
          base_denom: "utsaga"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.svg"
      }]
    },
    {
      description: "The native token of IXO Chain",
      denom_units: [{
        denom: "ibc/88C815D69587CF0F05E96E5E2731EA56194D73C9A02A500095294D3A5DE68F16",
        exponent: 0,
        aliases: ["uixo"]
      }, {
        denom: "ixo",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/88C815D69587CF0F05E96E5E2731EA56194D73C9A02A500095294D3A5DE68F16",
      name: "ixo",
      display: "ixo",
      symbol: "IXO",
      traces: [{
        type: "test-mintage",
        counterparty: {
          chain_name: "impacthub",
          base_denom: "uixo"
        },
        provider: "impacthub"
      }, {
        type: "ibc",
        counterparty: {
          chain_name: "impacthubtestnet",
          base_denom: "uixo",
          channel_id: "channel-10"
        },
        chain: {
          channel_id: "channel-1637",
          path: "transfer/channel-1637/uixo"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.svg"
      },
      images: [{
        image_sync: {
          chain_name: "impacthub",
          base_denom: "uixo"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/impacthub/images/ixo.svg"
      }]
    },
    {
      denom_units: [{
        denom: "factory/osmo1zlkzu72774ynac53necz46u4ycqtp36wedrar0/willyz",
        exponent: 0
      }, {
        denom: "willyz",
        exponent: 6
      }],
      base: "factory/osmo1zlkzu72774ynac53necz46u4ycqtp36wedrar0/willyz",
      name: "Willyz",
      display: "willyz",
      symbol: "WILLYZ",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/osmosistestnet/images/willyz.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/osmosistestnet/images/willyz.svg"
      },
      keywords: ["memecoin"],
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/osmosistestnet/images/willyz.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/osmosistestnet/images/willyz.svg"
      }]
    },
    {
      description: "The yield token for ATOM denominated vaults on Amulet Protocol",
      denom_units: [{
        denom: "ibc/E972F89F57AF6BDE0CCC97CABFF4DD8D99408B8A741570E1E3D1C35465C98E5E",
        exponent: 0
      }, {
        denom: "amATOM",
        exponent: 6
      }],
      base: "ibc/E972F89F57AF6BDE0CCC97CABFF4DD8D99408B8A741570E1E3D1C35465C98E5E",
      name: "amATOM (Testnet)",
      display: "amATOM",
      symbol: "amATOM",
      type_asset: "ics20",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/amATOM.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/amATOM.svg"
      },
      images: [{
        image_sync: {
          chain_name: "neutrontestnet",
          base_denom: "factory/neutron15lku24mqhvy4v4gryrqs4662n9v9q4ux9tayn89cmdzldjcgawushxvm76/amatom"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/amATOM.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/amATOM.svg"
      }],
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "neutrontestnet",
          base_denom: "factory/neutron15lku24mqhvy4v4gryrqs4662n9v9q4ux9tayn89cmdzldjcgawushxvm76/amatom",
          channel_id: "channel-787"
        },
        chain: {
          channel_id: "channel-7884",
          path: "transfer/channel-7884/factory/neutron15lku24mqhvy4v4gryrqs4662n9v9q4ux9tayn89cmdzldjcgawushxvm76/amatom"
        }
      }]
    },
    {
      description: "The native EVM, governance and staking token of the Titan Chain",
      denom_units: [
        {
          denom: "ibc/28EEF762052DB8C3D27A7BF625E9F86A1B3B689CC8D80C818CEDF2EB6CBA02A6",
          exponent: 0,
          aliases: ["atkx"]
        },
        {
          denom: "utkx",
          exponent: 12,
          aliases: ["microtkx"]
        },
        {
          denom: "mtkx",
          exponent: 15,
          aliases: ["millitkx"]
        },
        {
          denom: "tkx",
          exponent: 18
        }
      ],
      type_asset: "ics20",
      base: "ibc/28EEF762052DB8C3D27A7BF625E9F86A1B3B689CC8D80C818CEDF2EB6CBA02A6",
      name: "tkx",
      display: "tkx",
      symbol: "TKX",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "titan",
          base_denom: "atkx",
          channel_id: "channel-2"
        },
        chain: {
          channel_id: "channel-5969",
          path: "transfer/channel-5969/atkx"
        }
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/titantestnet/images/tkx.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/titantestnet/images/tkx.png"
      }]
    }
  ]
};
var assets_default240 = info641;

// node_modules/chain-registry/esm/testnet/osmosistestnet/chain.js
var info642 = {
  $schema: "../../chain.schema.json",
  chain_name: "osmosistestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Osmosis Testnet",
  chain_id: "osmo-test-5",
  bech32_prefix: "osmo",
  daemon_name: "osmosisd",
  node_home: "$HOME/.osmosisd",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uosmo",
      fixed_min_gas_price: 0,
      low_gas_price: 25e-4,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uosmo"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.45",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.30"
  },
  apis: {
    rpc: [{
      address: "https://rpc.osmotest5.osmosis.zone/",
      provider: "Osmosis"
    }],
    rest: [{
      address: "https://lcd.osmotest5.osmosis.zone/",
      provider: "Osmosis"
    }],
    grpc: [{
      address: "https://grpc.osmotest5.osmosis.zone/",
      provider: "Osmosis"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmosis-chain-logo.png"
  },
  explorers: [{
    kind: "mintscan",
    url: "https://mintscan.io/osmosis-testnet",
    tx_page: "https://mintscan.io/osmosis-testnet/txs/${txHash}",
    account_page: "https://mintscan.io/osmosis-testnet/account/${accountAddress}"
  }, {
    kind: "ping.pub",
    url: "https://explorer.osmotest5.osmosis.zone",
    tx_page: "https://explorer.osmotest5.osmosis.zone/osmo-test-5/tx/${txHash}",
    account_page: "https://explorer.osmotest5.osmosis.zone/osmo-test-5/account/${accountAddress}"
  }],
  keywords: ["dex", "testnet"],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmosis-chain-logo.png"
  }]
};
var chain_default241 = info642;

// node_modules/chain-registry/esm/testnet/osmosistestnet/ibc.js
var info643 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "akashtestnet",
      client_id: "07-tendermint-6",
      connection_id: "connection-6"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1271",
      connection_id: "connection-1171"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4171",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "archwaytestnet",
      client_id: "07-tendermint-77",
      connection_id: "connection-73"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1195",
      connection_id: "connection-1101"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-58",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3938",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelartestnet",
      client_id: "07-tendermint-685",
      connection_id: "connection-538"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1270",
      connection_id: "connection-1169"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-339",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4170",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "celestiatestnet3",
      client_id: "07-tendermint-118",
      connection_id: "connection-98"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1445",
      connection_id: "connection-1350"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-25",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4370",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "chain4energytestnet",
      client_id: "07-tendermint-18",
      connection_id: "connection-5"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-3393",
      connection_id: "connection-2989"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7735",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "composabletestnet",
      client_id: "07-tendermint-23",
      connection_id: "connection-18"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-273",
      connection_id: "connection-237"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-11",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-329",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "coreumtestnet",
      client_id: "07-tendermint-104",
      connection_id: "connection-69"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-3529",
      connection_id: "connection-3094"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-47",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7894",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshubtestnet",
      client_id: "07-tendermint-2528",
      connection_id: "connection-2886"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1262",
      connection_id: "connection-1157"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3306",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4156",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "doravotatestnet",
      client_id: "07-tendermint-2",
      connection_id: "connection-3"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-2",
      connection_id: "connection-611"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1260",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "empowertestnet",
      client_id: "07-tendermint-1",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-146",
      connection_id: "connection-157"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-155",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "entrypointtestnet",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-930",
      connection_id: "connection-840"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1543",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "impacthubtestnet",
      client_id: "07-tendermint-53",
      connection_id: "connection-23"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1010",
      connection_id: "connection-911"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1637",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injectivetestnet",
      client_id: "07-tendermint-189",
      connection_id: "connection-180"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1273",
      connection_id: "connection-1173"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-129",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4174",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "junotestnet",
      client_id: "07-tendermint-743",
      connection_id: "connection-827"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1932",
      connection_id: "connection-1889"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-889",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5498",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "kyvetestnet",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-11",
      connection_id: "connection-11"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-10",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "lavatestnet",
      client_id: "07-tendermint-11",
      connection_id: "connection-11"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-2554",
      connection_id: "connection-2401"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-6092",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "likecointestnet",
      client_id: "07-tendermint-5",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1431",
      connection_id: "connection-1336"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4357",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "mantrachaintestnet",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-3545",
      connection_id: "connection-3106"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7944",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "marstestnet",
      client_id: "07-tendermint-33",
      connection_id: "connection-30"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1933",
      connection_id: "connection-1890"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-28",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-5499",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "neutrontestnet",
      client_id: "07-tendermint-133",
      connection_id: "connection-123"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1272",
      connection_id: "connection-1172"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-196",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4172",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nobletestnet",
      client_id: "07-tendermint-42",
      connection_id: "connection-31"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1374",
      connection_id: "connection-1275"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-22",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-4280",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "nolustestnet",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    chain_2: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-102",
      connection_id: "connection-120"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-110",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-595",
      connection_id: "connection-529"
    },
    chain_2: {
      chain_name: "persistencetestnet2",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1037",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-19",
      connection_id: "connection-14"
    },
    chain_2: {
      chain_name: "quicksilvertestnet",
      client_id: "07-tendermint-6",
      connection_id: "connection-4"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-13",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-20",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1448",
      connection_id: "connection-1552"
    },
    chain_2: {
      chain_name: "sagatestnet",
      client_id: "07-tendermint-26",
      connection_id: "connection-21"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4946",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-20",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-965",
      connection_id: "connection-865"
    },
    chain_2: {
      chain_name: "sgetestnet",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1568",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1274",
      connection_id: "connection-1175"
    },
    chain_2: {
      chain_name: "stargazetestnet",
      client_id: "07-tendermint-621",
      connection_id: "connection-633"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4175",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-638",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-3714",
      connection_id: "connection-3238"
    },
    chain_2: {
      chain_name: "swisstroniktestnet",
      client_id: "07-tendermint-31",
      connection_id: "connection-18"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-8295",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-2436",
      connection_id: "connection-2267"
    },
    chain_2: {
      chain_name: "titantestnet",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5969",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-3125",
      connection_id: "connection-2826"
    },
    chain_2: {
      chain_name: "xiontestnet",
      client_id: "07-tendermint-121",
      connection_id: "connection-57"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6668",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-490",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  }
];
var ibc_default164 = info643;

// node_modules/chain-registry/esm/testnet/osmosistestnet/index.js
var assets240 = assets_default240;
var chain241 = chain_default241;
var ibc164 = ibc_default164;

// node_modules/chain-registry/esm/testnet/osmosistestnet4/assets.js
var info644 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "osmosistestnet4",
  assets: [{
    description: "The native token of Osmosis",
    denom_units: [{
      denom: "uosmo",
      exponent: 0,
      aliases: []
    }, {
      denom: "osmo",
      exponent: 6,
      aliases: []
    }],
    base: "uosmo",
    name: "Osmosis",
    display: "osmo",
    symbol: "OSMO",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
    },
    coingecko_id: "osmosis",
    keywords: ["dex", "staking"],
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
    }]
  }, {
    denom_units: [{
      denom: "uion",
      exponent: 0
    }, {
      denom: "ion",
      exponent: 6
    }],
    base: "uion",
    name: "Ion",
    display: "ion",
    symbol: "ION",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ion.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ion.svg"
    },
    coingecko_id: "ion",
    keywords: ["memecoin"],
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ion.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/ion.svg"
    }]
  }]
};
var assets_default241 = info644;

// node_modules/chain-registry/esm/testnet/osmosistestnet4/chain.js
var info645 = {
  $schema: "../../chain.schema.json",
  chain_name: "osmosistestnet4",
  status: "live",
  network_type: "testnet",
  pretty_name: "Osmosis Testnet",
  chain_id: "osmo-test-4",
  bech32_prefix: "osmo",
  daemon_name: "osmosisd",
  node_home: "$HOME/.osmosisd",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uosmo",
      fixed_min_gas_price: 0,
      low_gas_price: 0,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uosmo"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.45",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.29"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.osmo-test.ccvalidators.com/",
        provider: "CryptoCrew"
      },
      {
        address: "https://osmosistest-rpc.quickapi.com/",
        provider: "ChainLayer"
      },
      {
        address: "https://rpc.testnet.osmosis.zone/",
        provider: "Osmosis"
      }
    ],
    rest: [
      {
        address: "https://osmosistest-lcd.quickapi.com/",
        provider: "CryptoCrew"
      },
      {
        address: "https://lcd.osmo-test.ccvalidators.com/",
        provider: "ChainLayer"
      },
      {
        address: "https://testnet-rest.osmosis.zone/"
      }
    ],
    grpc: [{
      address: "https://grpc-test.osmosis.zone:443",
      provider: "Osmosis"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmosis-chain-logo.png"
  },
  keywords: ["dex", "testnet"],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmosis-chain-logo.png"
  }]
};
var chain_default242 = info645;

// node_modules/chain-registry/esm/testnet/osmosistestnet4/ibc.js
var info646 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelartestnet",
      client_id: "07-tendermint-213",
      connection_id: "connection-151"
    },
    chain_2: {
      chain_name: "osmosistestnet4",
      client_id: "07-tendermint-3319",
      connection_id: "connection-2807"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-135",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1946",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "junotestnet",
      client_id: "07-tendermint-135",
      connection_id: "connection-151"
    },
    chain_2: {
      chain_name: "osmosistestnet4",
      client_id: "07-tendermint-4413",
      connection_id: "connection-3814"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-140",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3316",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "marstestnet",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    chain_2: {
      chain_name: "osmosistestnet4",
      client_id: "07-tendermint-3419",
      connection_id: "connection-2887"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2083",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "nobletestnet",
      client_id: "07-tendermint-6",
      connection_id: "connection-6"
    },
    chain_2: {
      chain_name: "osmosistestnet4",
      client_id: "07-tendermint-4504",
      connection_id: "connection-3905"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3651",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  }
];
var ibc_default165 = info646;

// node_modules/chain-registry/esm/testnet/osmosistestnet4/index.js
var assets241 = assets_default241;
var chain242 = chain_default242;
var ibc165 = ibc_default165;

// node_modules/chain-registry/esm/testnet/permtestnet/assets.js
var info647 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "permtestnet",
  assets: [{
    description: "Perm A Permissioned Blockchain",
    denom_units: [{
      denom: "uperm",
      exponent: 0
    }, {
      denom: "perm",
      exponent: 6
    }],
    base: "uperm",
    name: "Perm",
    display: "perm",
    symbol: "PERM",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/permtestnet/images/Perm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/permtestnet/images/Perm.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/permtestnet/images/Perm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/permtestnet/images/Perm.svg"
    }]
  }]
};
var assets_default242 = info647;

// node_modules/chain-registry/esm/testnet/permtestnet/chain.js
var info648 = {
  $schema: "../../chain.schema.json",
  chain_name: "permtestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Perm Testnet",
  chain_id: "INVALID-ID-permtestnet-testnet-1",
  bech32_prefix: "perm",
  daemon_name: "permd",
  node_home: "$HOME/.perm",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uperm",
      low_gas_price: 25e-4,
      average_gas_price: 25e-4,
      high_gas_price: 24e-4
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uperm"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.45",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.30"
  },
  apis: {
    rpc: [{
      address: "https://rpc.3.finance/",
      provider: "Perm Network"
    }],
    rest: [{
      address: "https://rest.3.finance/",
      provider: "Perm Network"
    }],
    grpc: [{
      address: "https://grpc.3.finance/",
      provider: "Perm Network"
    }]
  },
  explorers: [{
    kind: "bigdipper",
    url: "https://explorer.testnet.perm.ooo/",
    tx_page: "https://explorer.testnet.perm.ooo/transactions/${txHash}"
  }]
};
var chain_default243 = info648;

// node_modules/chain-registry/esm/testnet/permtestnet/index.js
var assets242 = assets_default242;
var chain243 = chain_default243;

// node_modules/chain-registry/esm/testnet/persistencetestnet/assets.js
var info649 = {
  $schema: "../assetlist.schema.json",
  chain_name: "persistencetestnet",
  assets: [{
    description: "The XPRT token is primarily a governance token for the Persistence chain.",
    denom_units: [{
      denom: "uxprt",
      exponent: 0
    }, {
      denom: "xprt",
      exponent: 6
    }],
    base: "uxprt",
    name: "Persistence",
    display: "xprt",
    symbol: "XPRT",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.svg"
    },
    coingecko_id: "persistence",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.svg"
    }]
  }, {
    description: "PSTAKE Liquid-Staked ATOM",
    denom_units: [{
      denom: "stk/uatom",
      exponent: 0,
      aliases: []
    }, {
      denom: "stkatom",
      exponent: 6,
      aliases: ["stk/atom"]
    }],
    base: "stk/uatom",
    name: "PSTAKE staked ATOM",
    display: "stkatom",
    symbol: "stkATOM",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.svg"
    }]
  }]
};
var assets_default243 = info649;

// node_modules/chain-registry/esm/testnet/persistencetestnet/chain.js
var info650 = {
  $schema: "../chain.schema.json",
  chain_name: "persistencetestnet",
  chain_id: "test-core-1",
  pretty_name: "Persistence Testnet",
  status: "live",
  network_type: "testnet",
  website: "https://persistence.one/",
  bech32_prefix: "persistence",
  daemon_name: "persistenceCore",
  node_home: "$HOME/.persistenceCore",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uxprt",
      fixed_min_gas_price: 0,
      low_gas_price: 0.05,
      average_gas_price: 0.125,
      high_gas_price: 0.2
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uxprt"
    }]
  },
  codebase: {},
  apis: {
    rpc: [
      {
        address: "https://rpc-testnet-persistence.architectnodes.com/",
        provider: "Architect Nodes"
      },
      {
        address: "https://persistence-testnet-rpc.baryon.dev/",
        provider: "Baryon"
      },
      {
        address: "https://persistence-testnet-rpc.cosmonautstakes.com/",
        provider: "Cosmonaut Stakes"
      },
      {
        address: "https://rpc.testnet.persistence.one/",
        provider: "Persistence"
      },
      {
        address: "https://persistence-testnet-rpc.polkachu.com/",
        provider: "Polkachu"
      },
      {
        address: "https://xprt-trpc.antrixy.org/",
        provider: "Antrix Validators"
      }
    ],
    rest: [
      {
        address: "https://rest-testnet-persistence.architectnodes.com/",
        provider: "Architect Nodes"
      },
      {
        address: "https://persistence-testnet-api.baryon.dev/",
        provider: "Baryon"
      },
      {
        address: "https://persistence-testnet-rest.cosmonautstakes.com/",
        provider: "Cosmonaut Stakes"
      },
      {
        address: "https://rest.testnet.persistence.one/",
        provider: "Persistence"
      },
      {
        address: "https://persistence-testnet-api.polkachu.com/",
        provider: "Polkachu"
      },
      {
        address: "https://xprt-trest.antrixy.org/",
        provider: "Antrix Validators"
      }
    ],
    grpc: [{
      address: "persistence-testnet-grpc.polkachu.com:15490",
      provider: "Polkachu"
    }, {
      address: "https://xprt-tgrpc.antrixy.org/",
      provider: "Antrix Validators"
    }]
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://testnet.ping.pub/test-core-1/",
    tx_page: "https://testnet.ping.pub/test-core-1/tx/${txHash}"
  }, {
    kind: "mintscan",
    url: "https://mintscan.io/persistence-testnet",
    tx_page: "https://mintscan.io/persistence-testnet/txs/${txHash}",
    account_page: "https://mintscan.io/persistence-testnet/account/${accountAddress}"
  }]
};
var chain_default244 = info650;

// node_modules/chain-registry/esm/testnet/persistencetestnet/index.js
var assets243 = assets_default243;
var chain244 = chain_default244;

// node_modules/chain-registry/esm/testnet/persistencetestnet2/assets.js
var info651 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "persistencetestnet2",
  assets: [
    {
      description: "The XPRT token is primarily a governance token for the Persistence chain.",
      denom_units: [{
        denom: "uxprt",
        exponent: 0
      }, {
        denom: "xprt",
        exponent: 6
      }],
      base: "uxprt",
      name: "Persistence",
      display: "xprt",
      symbol: "XPRT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.svg"
      },
      coingecko_id: "persistence",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/xprt.svg"
      }]
    },
    {
      description: "PSTAKE Liquid-Staked ATOM",
      denom_units: [{
        denom: "stk/uatom",
        exponent: 0,
        aliases: []
      }, {
        denom: "stkatom",
        exponent: 6,
        aliases: ["stk/atom"]
      }],
      base: "stk/uatom",
      name: "PSTAKE staked ATOM",
      display: "stkatom",
      symbol: "stkATOM",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkatom.svg"
      }]
    },
    {
      description: "PSTAKE Liquid-Staked OSMO",
      denom_units: [{
        denom: "stk/uosmo",
        exponent: 0,
        aliases: []
      }, {
        denom: "stkosmo",
        exponent: 6,
        aliases: ["stk/osmo"]
      }],
      base: "stk/uosmo",
      name: "PSTAKE staked OSMO",
      display: "stkosmo",
      symbol: "stkOSMO",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkosmo.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkosmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkosmo.svg"
      }]
    },
    {
      description: "PSTAKE Liquid-Staked DV4TNT",
      denom_units: [{
        denom: "stk/adv4tnt",
        exponent: 0,
        aliases: []
      }, {
        denom: "stkdv4tnt",
        exponent: 18,
        aliases: ["stk/dv4tnt"]
      }],
      base: "stk/adv4tnt",
      name: "PSTAKE staked DV4TNT",
      display: "stkdv4tnt",
      symbol: "stkDV4TNT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkdv4tnt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkdv4tnt.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkdv4tnt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/stkdv4tnt.svg"
      }]
    }
  ]
};
var assets_default244 = info651;

// node_modules/chain-registry/esm/testnet/persistencetestnet2/chain.js
var info652 = {
  $schema: "../../chain.schema.json",
  chain_name: "persistencetestnet2",
  chain_id: "test-core-2",
  pretty_name: "Persistence Testnet",
  status: "live",
  network_type: "testnet",
  website: "https://persistence.one/",
  bech32_prefix: "persistence",
  daemon_name: "persistenceCore",
  node_home: "$HOME/.persistenceCore",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uxprt",
      fixed_min_gas_price: 0,
      low_gas_price: 0.05,
      average_gas_price: 0.125,
      high_gas_price: 0.2
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uxprt"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {},
  apis: {
    rpc: [
      {
        address: "https://rpc-persistence-testnet-01.stakeflow.io/",
        provider: "StakeFlow"
      },
      {
        address: "https://persistence-testnet-rpc.baryon.dev/",
        provider: "Baryon"
      },
      {
        address: "https://persistence-testnet-rpc.cosmonautstakes.com/",
        provider: "Cosmonaut Stakes"
      },
      {
        address: "https://rpc.testnet2.persistence.one/",
        provider: "Persistence"
      },
      {
        address: "https://persistence-testnet-rpc.polkachu.com/",
        provider: "Polkachu"
      },
      {
        address: "https://persistencecoretest-rpc.ytwofund.pro/",
        provider: "YTWOFUND"
      },
      {
        address: "http://persistence-testnet.paranorm.pro:24657/",
        provider: "Paranorm"
      }
    ],
    rest: [
      {
        address: "https://api-persistence-testnet-01.stakeflow.io/",
        provider: "StakeFlow"
      },
      {
        address: "https://persistence-testnet-api.baryon.dev/",
        provider: "Baryon"
      },
      {
        address: "https://persistence-testnet-rest.cosmonautstakes.com/",
        provider: "Cosmonaut Stakes"
      },
      {
        address: "https://rest.testnet2.persistence.one/",
        provider: "Persistence"
      },
      {
        address: "https://persistence-testnet-api.polkachu.com/",
        provider: "Polkachu"
      },
      {
        address: "https://persistenceCoreTest-rest.ytwofund.pro",
        provider: "YTWOFUND"
      }
    ],
    grpc: [{
      address: "persistence-testnet-grpc.polkachu.com:15490",
      provider: "Polkachu"
    }, {
      address: "persistenceCoreTest-grpc.ytwofund.pro:9090",
      provider: "YTWOFUND"
    }]
  },
  explorers: [
    {
      kind: "mintscan",
      url: "https://mintscan.io/persistence-testnet",
      tx_page: "https://mintscan.io/persistence-testnet/txs/${txHash}",
      account_page: "https://mintscan.io/persistence-testnet/account/${accountAddress}"
    },
    {
      kind: "StakeFlow",
      url: "https://stakeflow.io/persistence-testnet",
      tx_page: "https://stakeflow.io/persistence-testnet/transactions/${txHash}",
      account_page: "https://stakeflow.io/persistence-testnet/accounts/${accountAddress}"
    },
    {
      kind: "baryon",
      url: "https://testnet-explorer.baryon.dev/test-core-2",
      tx_page: "https://testnet-explorer.baryon.dev/test-core-2/tx/{txHash}",
      account_page: "https://testnet-explorer.baryon.dev/test-core-2/account/${accountAddress}"
    }
  ]
};
var chain_default245 = info652;

// node_modules/chain-registry/esm/testnet/persistencetestnet2/ibc.js
var info653 = [
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelartestnet",
      client_id: "07-tendermint-522",
      connection_id: "connection-372"
    },
    chain_2: {
      chain_name: "persistencetestnet2",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-261",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshubtestnet",
      client_id: "07-tendermint-2100",
      connection_id: "connection-2447"
    },
    chain_2: {
      chain_name: "persistencetestnet2",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-2777",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-595",
      connection_id: "connection-529"
    },
    chain_2: {
      chain_name: "persistencetestnet2",
      client_id: "07-tendermint-3",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1037",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-7",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  }
];
var ibc_default166 = info653;

// node_modules/chain-registry/esm/testnet/persistencetestnet2/index.js
var assets244 = assets_default244;
var chain245 = chain_default245;
var ibc166 = ibc_default166;

// node_modules/chain-registry/esm/testnet/planqtestnet/assets.js
var info654 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "planqtestnet",
  assets: [{
    description: "The native EVM, governance and staking token of the Planq Network",
    denom_units: [{
      denom: "atplanq",
      exponent: 0
    }, {
      denom: "tplanq",
      exponent: 18
    }],
    base: "atplanq",
    name: "Planq Atlas Testnet",
    display: "tplanq",
    symbol: "tPLQ",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/planqtestnet/images/planq.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/planqtestnet/images/planq.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/planqtestnet/images/planq.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/planqtestnet/images/planq.svg"
    }]
  }]
};
var assets_default245 = info654;

// node_modules/chain-registry/esm/testnet/planqtestnet/chain.js
var info655 = {
  $schema: "../../chain.schema.json",
  chain_name: "planqtestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Planq Atlas Testnet",
  chain_id: "planq_7077-1",
  bech32_prefix: "plq",
  daemon_name: "planqd",
  node_home: "$HOME/.planqd",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "atplanq",
      fixed_min_gas_price: 2e10,
      low_gas_price: 3e10,
      average_gas_price: 35e9,
      high_gas_price: 4e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "atplanq"
    }]
  },
  codebase: {
    cosmos_sdk_version: "v0.46.3"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/planqtestnet/images/planq.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/planqtestnet/images/planq.svg"
  },
  apis: {
    rpc: [{
      address: "https://rpc-atlas.planq.network",
      provider: "Planq Network"
    }, {
      address: "https://planq_testnet_rpc.chain.whenmoonwhenlambo.money",
      provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
    }],
    rest: [{
      address: "https://rest-atlas.planq.network",
      provider: "Planq Network"
    }, {
      address: "https://planq_testnet_api.chain.whenmoonwhenlambo.money",
      provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
    }],
    grpc: [{
      address: "https://grpc-atlas.planq.network",
      provider: "Planq Network"
    }],
    "evm-http-jsonrpc": [{
      address: "https://evm-rpc-atlas.planq.network",
      provider: "Planq Network"
    }, {
      address: "https://planq_testnet_evm.chain.whenmoonwhenlambo.money",
      provider: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}"
    }]
  },
  explorers: [
    {
      kind: "EVM",
      url: "https://evm-atlas.planq.network",
      tx_page: "https://evm-atlas.planq.network/tx/${txHash}"
    },
    {
      kind: "Konsortech",
      url: "https://testnet-explorer.konsortech.xyz/planq",
      tx_page: "https://testnet-explorer.konsortech.xyz/planq/tx/${txHash}"
    },
    {
      kind: "\u{1F680} WHEN MOON \u{1F315} WHEN LAMBO \u{1F525}",
      url: "https://explorer.whenmoonwhenlambo.money/planq-testnet",
      tx_page: "https://explorer.whenmoonwhenlambo.money/planq-testnet/tx/${txHash}"
    }
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/planqtestnet/images/planq.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/planqtestnet/images/planq.svg"
  }]
};
var chain_default246 = info655;

// node_modules/chain-registry/esm/testnet/planqtestnet/index.js
var assets245 = assets_default245;
var chain246 = chain_default246;

// node_modules/chain-registry/esm/testnet/pryzmtestnet/assets.js
var info656 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "pryzmtestnet",
  assets: [{
    description: "The native token of PRYZM",
    denom_units: [{
      denom: "upryzm",
      exponent: 0
    }, {
      denom: "pryzm",
      exponent: 6
    }],
    base: "upryzm",
    name: "Pryzm",
    display: "pryzm",
    symbol: "PRYZM",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/pryzmtestnet/images/pryzm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/pryzmtestnet/images/pryzm.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/pryzmtestnet/images/pryzm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/pryzmtestnet/images/pryzm.svg"
    }]
  }]
};
var assets_default246 = info656;

// node_modules/chain-registry/esm/testnet/pryzmtestnet/chain.js
var info657 = {
  $schema: "../../chain.schema.json",
  chain_name: "pryzmtestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Pryzm Testnet",
  chain_id: "indigo-1",
  bech32_prefix: "pryzm",
  daemon_name: "pryzmd",
  node_home: "$HOME/.pryzm",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "upryzm",
      fixed_min_gas_price: 0,
      low_gas_price: 0.015,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "upryzm"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.47"
  },
  apis: {
    rpc: [{
      address: "https://testnet-rpc.pryzm.zone",
      provider: "PRYZM"
    }, {
      address: "https://pryzm-testnet-rpc.itrocket.net",
      provider: "ITRocket"
    }],
    rest: [{
      address: "https://testnet-api.pryzm.zone",
      provider: "PRYZM"
    }, {
      address: "https://pryzm-testnet-api.itrocket.net",
      provider: "ITRocket"
    }],
    grpc: [{
      address: "https://testnet-grpc.pryzm.zone",
      provider: "PRYZM"
    }, {
      address: "http://pryzm-testnet-grpc.itrocket.net:41090",
      provider: "ITRocket"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/pryzmtestnet/images/pryzm-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/pryzmtestnet/images/pryzm-logo.svg"
  },
  explorers: [{
    kind: "PingPub",
    url: "https://testnets.cosmosrun.info/pryzm-indigo-1",
    tx_page: "https://testnets.cosmosrun.info/pryzm-indigo-1/tx/${txHash}",
    account_page: "https://testnets.cosmosrun.info/pryzm-indigo-1/account/${accountAddress}"
  }, {
    kind: "ITRocket",
    url: "https://testnet.itrocket.net/pryzm",
    tx_page: "https://testnet.itrocket.net/pryzm/tx/${txHash}",
    account_page: "https://testnet.itrocket.net/pryzm/account/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/pryzmtestnet/images/pryzm-logo.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/pryzmtestnet/images/pryzm-logo.svg"
  }]
};
var chain_default247 = info657;

// node_modules/chain-registry/esm/testnet/pryzmtestnet/index.js
var assets246 = assets_default246;
var chain247 = chain_default247;

// node_modules/chain-registry/esm/testnet/quasartestnet/assets.js
var info658 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "quasartestnet",
  assets: [
    {
      description: "The native token of Quasar",
      denom_units: [{
        denom: "uqsr",
        exponent: 0,
        aliases: []
      }, {
        denom: "qsr",
        exponent: 6,
        aliases: []
      }],
      base: "uqsr",
      name: "Quasar",
      display: "qsr",
      symbol: "QSR"
    },
    {
      denom_units: [{
        denom: "uayy",
        exponent: 0
      }, {
        denom: "ayy",
        exponent: 6
      }],
      base: "uayy",
      name: "AYY",
      display: "ayy",
      symbol: "AYY"
    },
    {
      denom_units: [{
        denom: "uoro",
        exponent: 0
      }, {
        denom: "oro",
        exponent: 6
      }],
      base: "uoro",
      name: "oro",
      display: "oro",
      symbol: "ORO"
    }
  ]
};
var assets_default247 = info658;

// node_modules/chain-registry/esm/testnet/quasartestnet/chain.js
var info659 = {
  $schema: "../../chain.schema.json",
  chain_name: "quasartestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Quasar Testnet",
  chain_id: "quasar-test-1",
  bech32_prefix: "quasar",
  daemon_name: "quasarnoded",
  node_home: "$HOME/.quasarnoded",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uqsr",
      fixed_min_gas_price: 0,
      low_gas_price: 25e-4,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uqsr"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.45.16",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.31"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quasar/images/quasar.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quasar/images/quasar.svg"
  },
  apis: {
    rpc: [{
      address: "https://quasar-testnet-rpc.polkachu.com/",
      provider: "Polkachu"
    }, {
      address: "https://quasar-testnet-rpc.stakeandrelax.net/",
      provider: "Stake and Relax"
    }],
    rest: [{
      address: "https://quasar-testnet-api.polkachu.com/",
      provider: "Polkachu"
    }, {
      address: "https://quasar-testnet-api.stakeandrelax.net/",
      provider: "Stake and Relax"
    }],
    grpc: [{
      address: "quasar-testnet-grpc.polkachu.com:18290",
      provider: "Polkachu"
    }, {
      address: "http://quasar-testnet-grpc.stakeandrelax.net:18290/",
      provider: "Stake and Relax"
    }]
  },
  keywords: ["testnet"],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quasar/images/quasar.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quasar/images/quasar.svg"
  }]
};
var chain_default248 = info659;

// node_modules/chain-registry/esm/testnet/quasartestnet/index.js
var assets247 = assets_default247;
var chain248 = chain_default248;

// node_modules/chain-registry/esm/testnet/quicksilvertestnet/assets.js
var info660 = {
  $schema: "../assetlist.schema.json",
  chain_name: "quicksilvertestnet",
  assets: [{
    description: "QCK - native token of Quicksilver",
    denom_units: [{
      denom: "uqck",
      exponent: 0,
      aliases: []
    }, {
      denom: "qck",
      exponent: 6,
      aliases: []
    }],
    base: "uqck",
    name: "Quicksilver",
    display: "qck",
    symbol: "QCK",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qck.png"
    },
    coingecko_id: "quicksilver",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qck.png"
    }]
  }]
};
var assets_default248 = info660;

// node_modules/chain-registry/esm/testnet/quicksilvertestnet/chain.js
var info661 = {
  $schema: "../chain.schema.json",
  chain_name: "quicksilvertestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Quicksilver Testnet",
  chain_id: "rhye-2",
  bech32_prefix: "quick",
  daemon_name: "quicksilverd",
  node_home: "$HOME/.quicksilverd",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uqck",
      low_gas_price: 1e-4,
      average_gas_price: 1e-4,
      high_gas_price: 25e-5
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uqck"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.46",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.29"
  },
  logo_URIs: {
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qck.svg"
  },
  apis: {
    rpc: [
      {
        address: "http://quick.rpc.t.stavr.tech:20027",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://quicksilver-testnet-rpc.polkachu.com/",
        provider: "polkachu"
      },
      {
        address: "https://quicksilver-testnet-rpc.ibs.team:443",
        provider: "Inter Blockchain Services"
      }
    ],
    rest: [
      {
        address: "https://quick.api.t.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      },
      {
        address: "https://quicksilver-testnet-api.polkachu.com/",
        provider: "polkachu"
      },
      {
        address: "https://quicksilver-testnet-api.ibs.team:443",
        provider: "Inter Blockchain Services"
      }
    ],
    grpc: [{
      address: "http://quick.grpc.t.stavr.tech:9112",
      provider: "\u{1F525}STAVR\u{1F525}"
    }, {
      address: "quicksilver-testnet-grpc.polkachu.com:11190",
      provider: "polkachu"
    }]
  },
  explorers: [{
    kind: "\u{1F525}STAVR\u{1F525}",
    url: "https://explorer.stavr.tech/Quicksilver",
    tx_page: "https://explorer.stavr.tech/Quicksilver/tx/${txHash}",
    account_page: "https://explorer.stavr.tech/Quicksilver/account/${accountAddress}"
  }, {
    url: "https://testnet.quicksilver.explorers.guru",
    tx_page: "https://testnet.quicksilver.explorers.guru/transaction/${txHash}",
    account_page: "https://testnet.quicksilver.explorers.guru/account/${accountAddress}"
  }],
  images: [{
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/quicksilver/images/qck.svg"
  }]
};
var chain_default249 = info661;

// node_modules/chain-registry/esm/testnet/quicksilvertestnet/ibc.js
var info662 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosistestnet",
    client_id: "07-tendermint-19",
    connection_id: "connection-14"
  },
  chain_2: {
    chain_name: "quicksilvertestnet",
    client_id: "07-tendermint-6",
    connection_id: "connection-4"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-13",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-20",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default167 = info662;

// node_modules/chain-registry/esm/testnet/quicksilvertestnet/index.js
var assets248 = assets_default248;
var chain249 = chain_default249;
var ibc167 = ibc_default167;

// node_modules/chain-registry/esm/testnet/qwoyntestnet/assets.js
var info663 = {
  $schema: "../assetlist.schema.json",
  chain_name: "qwoyntestnet",
  assets: [{
    description: "QWOYN is the native governance token for the Qwoyn Studios Platform",
    denom_units: [{
      denom: "uqwoyn",
      exponent: 0
    }, {
      denom: "qwoyn",
      exponent: 6
    }],
    base: "uqwoyn",
    name: "Qwoyn Blockchain",
    display: "qwoyn",
    symbol: "QWOYN",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/qwoyntestnet/images/qwoyn.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/qwoyntestnet/images/qwoyn.png"
    }]
  }]
};
var assets_default249 = info663;

// node_modules/chain-registry/esm/testnet/qwoyntestnet/chain.js
var info664 = {
  $schema: "../chain.schema.json",
  chain_name: "qwoyntestnet",
  status: "live",
  network_type: "testnet",
  website: "https://qwoyn.studio/",
  pretty_name: "Qwoyn",
  chain_id: "earendel-1",
  bech32_prefix: "qwoyn",
  daemon_name: "qwoynd",
  node_home: "$HOME/.qwoynd",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uqwoyn"
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uqwoyn"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.47.3"
  },
  apis: {
    rpc: [{
      address: "https://testnet-rpc.qwoyn.studio",
      provider: "Qwoyn Studios"
    }],
    grpc: [{
      address: "http://66.42.74.12:9090",
      provider: "Qwoyn Studios"
    }],
    rest: [{
      address: "https://testnet-api.qwoyn.studio",
      provider: "Qwoyn Studios"
    }]
  },
  explorers: [{
    kind: "pingfork",
    url: "https://explorer.theamsolutions.info/qwoyn-testnet/",
    tx_page: "https://explorer.theamsolutions.info/qwoyn-testnet/tx/${txHash}",
    account_page: "https://explorer.theamsolutions.info/qwoyn-testnet/account/${accountAddress}"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/qwoyntestnet/images/qwoyn.png"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/qwoyntestnet/images/qwoyn.png"
  }]
};
var chain_default250 = info664;

// node_modules/chain-registry/esm/testnet/qwoyntestnet/index.js
var assets249 = assets_default249;
var chain250 = chain_default250;

// node_modules/chain-registry/esm/testnet/rsprovidertestnet/assets.js
var info665 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "rsprovidertestnet",
  assets: [{
    description: "The native staking and governance token of the Replicated Security Testnet.",
    denom_units: [{
      denom: "uatom",
      exponent: 0
    }, {
      denom: "atom",
      exponent: 6
    }],
    base: "uatom",
    name: "Cosmos",
    display: "atom",
    symbol: "ATOM",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"
    }]
  }]
};
var assets_default250 = info665;

// node_modules/chain-registry/esm/testnet/rsprovidertestnet/chain.js
var info666 = {
  $schema: "../../chain.schema.json",
  chain_name: "rsprovidertestnet",
  chain_id: "provider",
  pretty_name: "Replicated Security Provider Testnet",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "cosmos",
  daemon_name: "gaiad",
  node_home: "$HOME/.gaia",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uatom",
      fixed_min_gas_price: 5e-3
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uatom"
    }]
  },
  codebase: {},
  apis: {
    rpc: [
      {
        address: "https://rpc.provider-sentry-01.rs-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://rpc.provider-sentry-02.rs-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://rpc.provider-state-sync-01.rs-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://rpc.provider-state-sync-02.rs-testnet.polypore.xyz",
        provider: "Hypha"
      }
    ],
    rest: [
      {
        address: "https://rest.provider-sentry-01.rs-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://rest.provider-sentry-02.rs-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://rest.provider-state-sync-01.rs-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://rest.provider-state-sync-02.rs-testnet.polypore.xyz",
        provider: "Hypha"
      }
    ],
    grpc: [
      {
        address: "https://grpc.provider-sentry-01.rs-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://grpc.provider-sentry-02.rs-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://grpc.provider-state-sync-01.rs-testnet.polypore.xyz",
        provider: "Hypha"
      },
      {
        address: "https://grpc.provider-state-sync-02.rs-testnet.polypore.xyz",
        provider: "Hypha"
      }
    ]
  },
  explorers: [{
    kind: "Mintscan",
    url: "https://mintscan.io/ics-testnet-provider",
    tx_page: "https://mintscan.io/ics-testnet-provider/txs/${txHash}"
  }, {
    kind: "Ping.pub",
    url: "https://explorer.rs-testnet.polypore.xyz/provider",
    tx_page: "https://explorer.rs-testnet.polypore.xyz/provider/tx/${txHash}"
  }]
};
var chain_default251 = info666;

// node_modules/chain-registry/esm/testnet/rsprovidertestnet/index.js
var assets250 = assets_default250;
var chain251 = chain_default251;

// node_modules/chain-registry/esm/testnet/sagatestnet/assets.js
var info667 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "sagatestnet",
  assets: [{
    description: "The native token of Saga Testnet",
    denom_units: [{
      denom: "utsaga",
      exponent: 0,
      aliases: []
    }, {
      denom: "tsaga",
      exponent: 6,
      aliases: []
    }],
    base: "utsaga",
    name: "Saga",
    display: "tsaga",
    symbol: "TSAGA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.svg"
    }]
  }]
};
var assets_default251 = info667;

// node_modules/chain-registry/esm/testnet/sagatestnet/chain.js
var info668 = {
  $schema: "../../chain.schema.json",
  chain_name: "sagatestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Saga Testnet",
  chain_id: "ssc-testnet-1",
  bech32_prefix: "saga",
  daemon_name: "sscd",
  node_home: "$HOME/.ssc",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "utsaga",
      fixed_min_gas_price: 0,
      low_gas_price: 25e-4,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "utsaga"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.47",
    cosmwasm_enabled: false
  },
  apis: {
    rpc: [{
      address: "https://testnet-ssc.sagarpc.io/",
      provider: "Saga"
    }],
    rest: [{
      address: "https://testnet-ssc-lcd.sagarpc.io/",
      provider: "Saga"
    }],
    grpc: [{
      address: "testnet-ssc-grpc.sagarpc.io:443",
      provider: "Saga"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.png"
  },
  explorers: [{
    kind: "mintscan",
    url: "https://mintscan.io/saga-testnet",
    tx_page: "https://www.mintscan.io/saga-testnet/tx/${txHash}",
    account_page: "https://mintscan.io/saga-testnet/address/${accountAddress}"
  }],
  keywords: ["testnet", "chainlet"],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/saga/images/saga.png"
  }]
};
var chain_default252 = info668;

// node_modules/chain-registry/esm/testnet/sagatestnet/ibc.js
var info669 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "axelartestnet",
    client_id: "07-tendermint-767",
    connection_id: "connection-581"
  },
  chain_2: {
    chain_name: "sagatestnet",
    client_id: "07-tendermint-11",
    connection_id: "connection-10"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-370",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-9",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosistestnet",
    client_id: "07-tendermint-1448",
    connection_id: "connection-1552"
  },
  chain_2: {
    chain_name: "sagatestnet",
    client_id: "07-tendermint-26",
    connection_id: "connection-21"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-4946",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-20",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default168 = info669;

// node_modules/chain-registry/esm/testnet/sagatestnet/index.js
var assets251 = assets_default251;
var chain252 = chain_default252;
var ibc168 = ibc_default168;

// node_modules/chain-registry/esm/testnet/secretnetworktestnet/assets.js
var info670 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "secretnetworktestnet",
  assets: [{
    description: "The native token of Secret Network",
    denom_units: [{
      denom: "uscrt",
      exponent: 0
    }, {
      denom: "scrt",
      exponent: 6
    }],
    base: "uscrt",
    name: "Secret Network",
    display: "scrt",
    symbol: "SCRT",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.svg"
    },
    coingecko_id: "secret",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.svg"
    }]
  }]
};
var assets_default252 = info670;

// node_modules/chain-registry/esm/testnet/secretnetworktestnet/chain.js
var info671 = {
  $schema: "../../chain.schema.json",
  chain_name: "secretnetworktestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Secret Network",
  chain_id: "pulsar-3",
  pre_fork_chain_name: "secretnetworktestnet2",
  bech32_prefix: "secret",
  daemon_name: "secretd",
  node_home: "$HOME/.secretd",
  key_algos: ["secp256k1"],
  slip44: 529,
  fees: {
    fee_tokens: [{
      denom: "uscrt",
      fixed_min_gas_price: 0.1
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://rpc.testnet.secretsaturn.net",
      provider: "\u{1D54A}ecret \u{1D54A}aturn"
    }, {
      address: "https://rpc.pulsar.scrttestnet.com",
      provider: "SCRT Testnet Committee"
    }],
    rest: [{
      address: "https://lcd.testnet.secretsaturn.net",
      provider: "\u{1D54A}ecret \u{1D54A}aturn"
    }, {
      address: "https://api.pulsar.scrttestnet.com",
      provider: "SCRT Testnet Committee"
    }],
    "grpc-web": [{
      address: "https://grpc.testnet.secretsaturn.net",
      provider: "\u{1D54A}ecret \u{1D54A}aturn"
    }, {
      address: "https://grpc.pulsar.scrttestnet.com",
      provider: "SCRT Testnet Committee"
    }]
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://testnet.ping.pub/secret",
    tx_page: "https://testnet.ping.pub/secret/tx/${txHash}"
  }]
};
var chain_default253 = info671;

// node_modules/chain-registry/esm/testnet/secretnetworktestnet/index.js
var assets252 = assets_default252;
var chain253 = chain_default253;

// node_modules/chain-registry/esm/testnet/secretnetworktestnet2/assets.js
var info672 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "secretnetworktestnet2",
  assets: [{
    description: "The native token of Secret Network",
    denom_units: [{
      denom: "uscrt",
      exponent: 0
    }, {
      denom: "scrt",
      exponent: 6
    }],
    base: "uscrt",
    name: "Secret Network",
    display: "scrt",
    symbol: "SCRT",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/secretnetwork/images/scrt.svg"
    }]
  }]
};
var assets_default253 = info672;

// node_modules/chain-registry/esm/testnet/secretnetworktestnet2/chain.js
var info673 = {
  $schema: "../../chain.schema.json",
  chain_name: "secretnetworktestnet2",
  status: "killed",
  network_type: "testnet",
  pretty_name: "Secret Network Testnet",
  chain_id: "pulsar-2",
  bech32_prefix: "secret",
  daemon_name: "secretd",
  node_home: "$HOME/.secretd",
  key_algos: ["secp256k1"],
  slip44: 529,
  fees: {
    fee_tokens: [{
      denom: "uscrt",
      fixed_min_gas_price: 0.1
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://rpc.testnet.secretsaturn.net",
      provider: "\u{1D54A}ecret \u{1D54A}aturn"
    }, {
      address: "https://rpc.pulsar.scrttestnet.com",
      provider: "SCRT Testnet Committee"
    }],
    rest: [
      {
        address: "http://testnet.securesecrets.org:1317",
        provider: "Trivium | Trivium.Network"
      },
      {
        address: "https://lcd.testnet.secretsaturn.net",
        provider: "\u{1D54A}ecret \u{1D54A}aturn"
      },
      {
        address: "https://api.pulsar.scrttestnet.com",
        provider: "SCRT Testnet Committee"
      }
    ],
    "grpc-web": [{
      address: "https://grpc.testnet.secretsaturn.net",
      provider: "\u{1D54A}ecret \u{1D54A}aturn"
    }, {
      address: "https://grpc.pulsar.scrttestnet.com",
      provider: "SCRT Testnet Committee"
    }]
  },
  explorers: [{
    kind: "secret nodes",
    url: "https://secretnodes.com/secret/chains/pulsar-2",
    tx_page: "https://secretnodes.com/secret/chains/pulsar-2/transactions/${txHash}"
  }, {
    kind: "ping.pub",
    url: "https://testnet.ping.pub/secret",
    tx_page: "https://testnet.ping.pub/secret/tx/${txHash}"
  }]
};
var chain_default254 = info673;

// node_modules/chain-registry/esm/testnet/secretnetworktestnet2/index.js
var assets253 = assets_default253;
var chain254 = chain_default254;

// node_modules/chain-registry/esm/testnet/seitestnet/assets.js
var info674 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "seitestnet",
  assets: [{
    description: "The native staking and governance token of the Atlantic testnet version of Sei.",
    denom_units: [{
      denom: "usei",
      exponent: 0
    }, {
      denom: "sei",
      exponent: 6
    }],
    base: "usei",
    name: "Sei",
    display: "sei",
    symbol: "SEI",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/seitestnet/images/sei.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/seitestnet/images/sei.png"
    }]
  }]
};
var assets_default254 = info674;

// node_modules/chain-registry/esm/testnet/seitestnet/chain.js
var info675 = {
  $schema: "../../chain.schema.json",
  chain_name: "seitestnet",
  chain_id: "atlantic-1",
  pretty_name: "Sei Atlantic",
  status: "live",
  network_type: "testnet",
  website: "https://www.sei.io/",
  bech32_prefix: "sei",
  daemon_name: "seid",
  node_home: "$HOME/.sei",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "usei",
      fixed_min_gas_price: 0
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/sei.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/sei.svg"
  },
  description: "Sei is the fastest Layer 1 blockchain, designed to scale with the industry.",
  apis: {
    rpc: [{
      address: "https://sei-testnet-rpc.brocha.in",
      provider: "Brochain"
    }],
    rest: [{
      address: "https://sei-testnet-rest.brocha.in",
      provider: "Brochain"
    }]
  },
  explorers: [{
    kind: "explorers.guru",
    url: "https://sei.explorers.guru",
    tx_page: "https://sei.explorers.guru/transaction/${txHash}"
  }, {
    kind: "Brochain",
    url: "https://testnet-explorer.brocha.in/sei",
    tx_page: "https://testnet-explorer.brocha.in/sei/tx/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/sei.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sei/images/sei.svg"
  }]
};
var chain_default255 = info675;

// node_modules/chain-registry/esm/testnet/seitestnet/index.js
var assets254 = assets_default254;
var chain255 = chain_default255;

// node_modules/chain-registry/esm/testnet/seitestnet2/assets.js
var info676 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "seitestnet2",
  assets: [{
    description: "The native staking and governance token of the Atlantic testnet version of Sei.",
    denom_units: [{
      denom: "usei",
      exponent: 0
    }, {
      denom: "sei",
      exponent: 6
    }],
    base: "usei",
    name: "Sei",
    display: "sei",
    symbol: "SEI",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/seitestnet2/images/sei.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/seitestnet2/images/sei.png"
    }]
  }]
};
var assets_default255 = info676;

// node_modules/chain-registry/esm/testnet/seitestnet2/chain.js
var info677 = {
  $schema: "../../chain.schema.json",
  chain_name: "seitestnet2",
  chain_id: "atlantic-2",
  pretty_name: "Sei Atlantic 2",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "sei",
  daemon_name: "seid",
  node_home: "$HOME/.sei",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "usei",
      fixed_min_gas_price: 0.08
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://sei-testnet-2-rpc.brocha.in",
      provider: "Brochain"
    }],
    rest: [{
      address: "https://sei-testnet-2-rest.brocha.in",
      provider: "Brochain"
    }]
  },
  explorers: [{
    kind: "explorers.guru",
    url: "https://testnet.sei.explorers.guru",
    tx_page: "https://testnet.sei.explorers.guru/transaction/${txHash}"
  }, {
    kind: "Brochain",
    url: "https://testnet-explorer.brocha.in/sei%20atlantic%202",
    tx_page: "https://testnet-explorer.brocha.in/sei%20atlantic%202/tx/${txHash}"
  }]
};
var chain_default256 = info677;

// node_modules/chain-registry/esm/testnet/seitestnet2/index.js
var assets255 = assets_default255;
var chain256 = chain_default256;

// node_modules/chain-registry/esm/testnet/selfchaindevnet/assets.js
var info678 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "selfchaindevnet",
  assets: [{
    description: "Self Chain Is the First Modular Intent-Centric Access Layer L1 Blockchain and Keyless Wallet Infrastructure Service That Uses MPC-TSS/AA for Multi-Chain Web3 Access.",
    denom_units: [{
      denom: "uself",
      exponent: 0
    }, {
      denom: "self",
      exponent: 6
    }],
    base: "uself",
    name: "self",
    display: "self",
    symbol: "SELF",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/selfchaindevnet/images/selfchain.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/selfchaindevnet/images/selfchain.png"
    }]
  }]
};
var assets_default256 = info678;

// node_modules/chain-registry/esm/testnet/selfchaindevnet/chain.js
var info679 = {
  $schema: "../../chain.schema.json",
  chain_name: "selfchaindevnet",
  chain_id: "self-dev-1",
  pretty_name: "Devnet 1",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "self",
  daemon_name: "selfchaind",
  node_home: "$HOME/.selfchain",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uself",
      fixed_min_gas_price: 0
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://rpc-devnet.selfchain.xyz",
      provider: "Selfchain"
    }],
    rest: [{
      address: "https://api-devnet.selfchain.xyz/",
      provider: "Selfchain"
    }]
  },
  explorers: [{
    kind: "Selfchain",
    url: "https://explorer-devnet.selfchain.xyz",
    tx_page: "https://explorer-devnet.selfchain.xyz/self/transactions/${txHash}"
  }]
};
var chain_default257 = info679;

// node_modules/chain-registry/esm/testnet/selfchaindevnet/index.js
var assets256 = assets_default256;
var chain257 = chain_default257;

// node_modules/chain-registry/esm/testnet/sgetestnet/assets.js
var info680 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "sgetestnet",
  assets: [{
    description: "The SGE token is primarily a governance token for the SGE Network blockchain.",
    denom_units: [{
      denom: "usge",
      exponent: 0,
      aliases: []
    }, {
      denom: "sge",
      exponent: 6,
      aliases: []
    }],
    base: "usge",
    name: "SGE Testnet",
    display: "sge",
    symbol: "SGE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sgetestnet/images/sge.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sgetestnet/images/sge.png"
    }]
  }]
};
var assets_default257 = info680;

// node_modules/chain-registry/esm/testnet/sgetestnet/chain.js
var info681 = {
  $schema: "../chain.schema.json",
  chain_name: "sgetestnet",
  chain_id: "sge-network-3",
  pretty_name: "SGE Testnet",
  status: "live",
  network_type: "testnet",
  website: "https://sgenetwork.io",
  bech32_prefix: "sge",
  daemon_name: "usge",
  node_home: "$HOME/.sged",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "usge",
      fixed_min_gas_price: 0
    }]
  },
  codebase: {},
  apis: {
    rpc: [
      {
        address: "https://rpc.testnet.sgenetwork.io",
        provider: "Sge Network"
      },
      {
        address: "https://testnet-saage-rpc.lavenderfive.com/ ",
        provider: "Lavender.Five"
      },
      {
        address: "https://saage-testnet-rpc.polkachu.com/",
        provider: "Polkachu"
      },
      {
        address: "https://rpc-t.sge.nodestake.top/",
        provider: "Nodestake.top"
      },
      {
        address: "https://sge.rpc.t.stavr.tech:443",
        provider: "\u{1F525}STAVR\u{1F525}"
      }
    ],
    rest: [
      {
        address: "https://api.testnet.sgenetwork.io",
        provider: "Sge Network"
      },
      {
        address: "https://api-t.sge.nodestake.top/",
        provider: "Nodestake.top"
      },
      {
        address: "https://saage-testnet-api.polkachu.com/",
        provider: "Polkachu"
      },
      {
        address: "https://sge.api.t.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      }
    ]
  },
  explorers: [{
    kind: "Sge BlockExplorer",
    url: "https://blockexplorer.testnet.sgenetwork.io/",
    tx_page: "https://blockexplorer.testnet.sgenetwork.io/sge-network/tx/${txHash}"
  }, {
    kind: "\u{1F525}STAVR\u{1F525}",
    url: "https://explorer.stavr.tech/Sge-Testnet",
    tx_page: "https://explorer.stavr.tech/Sge-Testnet/tx/${txHash}",
    account_page: "https://explorer.stavr.tech/Sge-Testnet/account/${accountAddress}"
  }],
  images: [{
    image_sync: {
      chain_name: "sge"
    },
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.svg"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.svg"
  }
};
var chain_default258 = info681;

// node_modules/chain-registry/esm/testnet/sgetestnet/ibc.js
var info682 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosistestnet",
    client_id: "07-tendermint-965",
    connection_id: "connection-865"
  },
  chain_2: {
    chain_name: "sgetestnet",
    client_id: "07-tendermint-1",
    connection_id: "connection-1"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-1568",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default169 = info682;

// node_modules/chain-registry/esm/testnet/sgetestnet/index.js
var assets257 = assets_default257;
var chain258 = chain_default258;
var ibc169 = ibc_default169;

// node_modules/chain-registry/esm/testnet/sgetestnet4/assets.js
var info683 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "sgetestnet4",
  assets: [{
    description: "The SGE token is primarily a governance token for the SGE Network blockchain.",
    denom_units: [{
      denom: "usge",
      exponent: 0
    }, {
      denom: "sge",
      exponent: 6
    }],
    base: "usge",
    name: "SGE Testnet4",
    display: "sge",
    symbol: "SGE",
    traces: [{
      type: "additional-mintage",
      counterparty: {
        chain_name: "sgetestnet",
        base_denom: "usge"
      },
      provider: "SGE"
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.svg"
    },
    images: [{
      image_sync: {
        chain_name: "sge",
        base_denom: "usge"
      },
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.svg",
      theme: {
        primary_color_hex: "#C0A15B",
        background_color_hex: "#00000000",
        circle: false
      }
    }]
  }]
};
var assets_default258 = info683;

// node_modules/chain-registry/esm/testnet/sgetestnet4/chain.js
var info684 = {
  $schema: "../../chain.schema.json",
  chain_name: "sgetestnet4",
  chain_id: "sge-network-4",
  pretty_name: "SGE Testnet4",
  status: "live",
  network_type: "testnet",
  website: "https://sgenetwork.io",
  bech32_prefix: "sge",
  daemon_name: "usge",
  node_home: "$HOME/.sged",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "usge",
      fixed_min_gas_price: 0
    }]
  },
  codebase: {},
  apis: {
    rpc: [
      {
        address: "https://rpc.testnet.sgenetwork.io",
        provider: "Sge Network"
      },
      {
        address: "https://testnet-saage-rpc.lavenderfive.com/ ",
        provider: "Lavender.Five"
      },
      {
        address: "https://saage-testnet-rpc.polkachu.com/",
        provider: "Polkachu"
      },
      {
        address: "https://rpc-t.sge.nodestake.top/",
        provider: "Nodestake.top"
      }
    ],
    rest: [
      {
        address: "https://api.testnet.sgenetwork.io",
        provider: "Sge Network"
      },
      {
        address: "https://api-t.sge.nodestake.top/",
        provider: "Nodestake.top"
      },
      {
        address: "https://saage-testnet-api.polkachu.com/",
        provider: "Polkachu"
      }
    ]
  },
  explorers: [{
    kind: "Sge BlockExplorer",
    url: "https://blockexplorer.testnet.sgenetwork.io/",
    tx_page: "https://blockexplorer.testnet.sgenetwork.io/sge-network/tx/${txHash}"
  }],
  images: [{
    image_sync: {
      chain_name: "sge"
    },
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.svg"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sge/images/sge.svg"
  }
};
var chain_default259 = info684;

// node_modules/chain-registry/esm/testnet/sgetestnet4/index.js
var assets258 = assets_default258;
var chain259 = chain_default259;

// node_modules/chain-registry/esm/testnet/sixtestnet/assets.js
var info685 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "sixtestnet",
  assets: [{
    description: "The native staking token of the SIX Protocol.",
    denom_units: [{
      denom: "usix",
      exponent: 0
    }, {
      denom: "six",
      exponent: 6
    }],
    base: "usix",
    name: "Six token",
    display: "six",
    symbol: "six",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/sixtestnet/images/six.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/sixtestnet/images/six.png"
    }]
  }]
};
var assets_default259 = info685;

// node_modules/chain-registry/esm/testnet/sixtestnet/chain.js
var info686 = {
  $schema: "../../chain.schema.json",
  chain_name: "sixtestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "SIX Fivenet",
  chain_id: "fivenet",
  bech32_prefix: "6x",
  daemon_name: "sixd",
  node_home: "$HOME/.six",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "usix",
      fixed_min_gas_price: 1.25,
      low_gas_price: 1.25,
      average_gas_price: 1.5,
      high_gas_price: 1.75
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "usix"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.45"
  },
  apis: {
    rpc: [{
      address: "https://rpc1.fivenet.sixprotocol.net:443"
    }],
    rest: [{
      address: "https://api1.fivenet.sixprotocol.net:443"
    }]
  },
  explorers: [{
    kind: "sixscan",
    url: "https://sixscan.io/fivenet",
    tx_page: "https://sixscan.io/fivenet/tx/${txHash}"
  }],
  keywords: ["sixprotocol", "testnet"]
};
var chain_default260 = info686;

// node_modules/chain-registry/esm/testnet/sixtestnet/index.js
var assets259 = assets_default259;
var chain260 = chain_default260;

// node_modules/chain-registry/esm/testnet/soarchaintestnet/assets.js
var info687 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "soarchaintestnet",
  assets: [{
    description: "The native staking coin of the Soarchain-core.",
    denom_units: [{
      denom: "utsoar",
      exponent: 0,
      aliases: ["microtsoar"]
    }, {
      denom: "tsoar",
      exponent: 6
    }],
    base: "utsoar",
    display: "tsoar",
    name: "tsoar",
    symbol: "tsoar",
    keywords: ["DePin"],
    socials: {
      website: "https://www.soarchain.com",
      twitter: "https://x.com/soar_chain"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/soarchaintestnet/images/soarchain.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/soarchaintestnet/images/soarchain.svg"
    }]
  }]
};
var assets_default260 = info687;

// node_modules/chain-registry/esm/testnet/soarchaintestnet/chain.js
var info688 = {
  $schema: "../../chain.schema.json",
  chain_name: "soarchaintestnet",
  chain_id: "soarchaintestnet",
  pretty_name: "Soarchain Testnet",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "soar",
  daemon_name: "soarchaind",
  node_home: "$HOME/.soarchaind",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "utsoar",
      fixed_min_gas_price: 1e-3,
      low_gas_price: 0.01,
      average_gas_price: 0.02,
      high_gas_price: 0.1
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "utsoar"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.45.5",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.27"
  },
  keywords: ["DePin"],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/soarchaintestnet/images/soarchain.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/soarchaintestnet/images/soarchain.svg"
  }],
  apis: {
    rpc: [
      {
        address: "https://rpc1.testnet.soarchain.com",
        provider: "soarchain"
      },
      {
        address: "https://rpc2.testnet.soarchain.com/",
        provider: "soarchain"
      },
      {
        address: "https://soarchain-testnet-rpc.tienthuattoan.com",
        provider: "tienthuattoan"
      },
      {
        address: "https://soarchain-testnet.rpc.kjnodes.com",
        provider: "kjnodes"
      },
      {
        address: "https://rpc-t.soarchain.nodestake.org",
        provider: "nodeStake"
      },
      {
        address: "https://soarchain-testnet-rpc.stakerhouse.com",
        provider: "stakerHouse"
      }
    ],
    rest: [
      {
        address: "https://api.testnet.soarchain.com/",
        provider: "soarchain"
      },
      {
        address: "https://soarchain-testnet-api.tienthuattoan.com",
        provider: "tienthuattoan"
      },
      {
        address: "https://soarchain-testnet-rest.stakerhouse.com",
        provider: "stakerHouse"
      },
      {
        address: "https://api-t.soarchain.nodestake.org",
        provider: "nodeStake"
      }
    ],
    grpc: [
      {
        address: "soarchain-testnet-grpc.polkachu.com:25290",
        provider: "Polkachu"
      },
      {
        address: "https://grpc-t.soarchain.nodestake.org:443",
        provider: "nodeStake"
      },
      {
        address: "soarchain-testnet-grpc.stakerhouse.com:443",
        provider: "stakerHouse"
      }
    ]
  },
  explorers: [{
    kind: "Soarchain Explorer",
    url: "https://explorer.soarchain.com/soarchain",
    tx_page: "https://explorer.soarchain.com/soarchain/tx/${txHash}"
  }, {
    kind: "Kjnodes Explorer",
    url: "https://explorer.kjnodes.com/soarchain-testnet",
    tx_page: "https://explorer.kjnodes.com/soarchain-testnet/tx/${txHash}"
  }]
};
var chain_default261 = info688;

// node_modules/chain-registry/esm/testnet/soarchaintestnet/index.js
var assets260 = assets_default260;
var chain261 = chain_default261;

// node_modules/chain-registry/esm/testnet/sourcetestnet/assets.js
var info689 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "sourcetestnet",
  assets: [{
    description: "The native token of SOURCE Chain",
    denom_units: [{
      denom: "usource",
      exponent: 0
    }, {
      denom: "source",
      exponent: 6
    }],
    base: "usource",
    name: "Source Testnet",
    display: "source",
    symbol: "SOURCE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/sourcetestnet/images/source.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/sourcetestnet/images/source.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/sourcetestnet/images/source.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/sourcetestnet/images/source.svg"
    }]
  }]
};
var assets_default261 = info689;

// node_modules/chain-registry/esm/testnet/sourcetestnet/chain.js
var info690 = {
  $schema: "../../chain.schema.json",
  chain_name: "sourcetestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Source Testnet",
  chain_id: "sourcetest-1",
  bech32_prefix: "source",
  daemon_name: "sourced",
  node_home: "$HOME/.source",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "usource",
      fixed_min_gas_price: 0.05,
      low_gas_price: 0.05,
      average_gas_price: 0.075,
      high_gas_price: 0.1
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "usource"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.45",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.30"
  },
  apis: {
    rpc: [
      {
        address: "https://source-testnet-rpc.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "https://rpc-testnet-source.sr20de.xyz",
        provider: "SR20DE"
      },
      {
        address: "https://source-testnet.rpc.kjnodes.com",
        provider: "kjnodes"
      }
    ],
    rest: [
      {
        address: "https://source-testnet-api.stake-town.com:443",
        provider: "StakeTown"
      },
      {
        address: "https://api-testnet-source.sr20de.xyz",
        provider: "SR20DE"
      },
      {
        address: "https://source.api.t.stavr.tech",
        provider: "\u{1F525}STAVR\u{1F525}"
      }
    ],
    grpc: [{
      address: "source-testnet-grpc.stake-town.com:443",
      provider: "StakeTown"
    }, {
      address: "grpc-testnet-source.sr20de.xyz/",
      provider: "SR20DE"
    }]
  },
  explorers: [
    {
      kind: "Nodestake",
      url: "https://explorer.nodestake.top/source-testnet",
      tx_page: "https://explorer.nodestake.top/source-testnet/tx/${txHash}"
    },
    {
      kind: "\u{1F525}STAVR\u{1F525}",
      url: "https://explorer.stavr.tech/Source",
      tx_page: "https://explorer.stavr.tech/Source/tx/${txHash}"
    },
    {
      kind: "SR20DE",
      url: "https://explorer.sr20de.xyz/Source-testnet",
      tx_page: "https://explorer.sr20de.xyz/Source-testnet/txs/${txHash}"
    }
  ]
};
var chain_default262 = info690;

// node_modules/chain-registry/esm/testnet/sourcetestnet/index.js
var assets261 = assets_default261;
var chain262 = chain_default262;

// node_modules/chain-registry/esm/testnet/stargazetestnet/assets.js
var info691 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "stargazetestnet",
  assets: [{
    description: "The native token of Stargaze",
    denom_units: [{
      denom: "ustars",
      exponent: 0
    }, {
      denom: "stars",
      exponent: 6
    }],
    base: "ustars",
    name: "Stargaze",
    display: "stars",
    symbol: "STARS",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.png"
    },
    coingecko_id: "stargaze",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stargaze/images/stars.png"
    }]
  }]
};
var assets_default262 = info691;

// node_modules/chain-registry/esm/testnet/stargazetestnet/chain.js
var info692 = {
  $schema: "../../chain.schema.json",
  chain_name: "stargazetestnet",
  status: "live",
  network_type: "testnet",
  website: "https://stargaze.zone/",
  pretty_name: "Stargaze Testnet",
  chain_id: "elgafar-1",
  bech32_prefix: "stars",
  daemon_name: "starsd",
  node_home: "$HOME/.starsd",
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ustars",
      low_gas_price: 0.03,
      average_gas_price: 0.04,
      high_gas_price: 0.05
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.45",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.28"
  },
  apis: {
    rpc: [{
      address: "https://rpc.elgafar-1.stargaze-apis.com",
      provider: "Stargaze Foundation"
    }, {
      address: "https://stargaze-testnet-rpc.ibs.team:443",
      provider: "Inter Blockchain Services"
    }],
    rest: [{
      address: "https://rest.elgafar-1.stargaze-apis.com",
      provider: "Stargaze Foundation"
    }, {
      address: "https://stargaze-testnet-api.ibs.team:443",
      provider: "Inter Blockchain Services"
    }],
    grpc: [{
      address: "http://grpc-1.elgafar-1.stargaze-apis.com:26660",
      provider: "Stargaze Foundation"
    }, {
      address: "http://grpc-2.elgafar-1.stargaze-apis.com:26660",
      provider: "Stargaze Foundation"
    }]
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://testnet-explorer.publicawesome.dev/stargaze",
    tx_page: "https://testnet-explorer.publicawesome.dev/stargaze/tx/${txHash}"
  }]
};
var chain_default263 = info692;

// node_modules/chain-registry/esm/testnet/stargazetestnet/ibc.js
var info693 = [
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "empowertestnet",
      client_id: "07-tendermint-2",
      connection_id: "connection-1"
    },
    chain_2: {
      chain_name: "stargazetestnet",
      client_id: "07-tendermint-450",
      connection_id: "connection-469"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-459",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "noistestnet",
      client_id: "07-tendermint-39",
      connection_id: "connection-23"
    },
    chain_2: {
      chain_name: "stargazetestnet",
      client_id: "07-tendermint-483",
      connection_id: "connection-500"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-48",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-485",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }, {
      chain_1: {
        channel_id: "channel-49",
        port_id: "wasm.nois1xwde9rzqk5u36fke0r9ddmtwvh43n4fv53c5vc462wz8xlnqjhls6d90xc"
      },
      chain_2: {
        channel_id: "channel-486",
        port_id: "wasm.stars1h99p7u2tvz79jppjwdddmkplvcpnsh0pmatl7dqkmdhnkgx59y2q6s0x9s"
      },
      ordering: "unordered",
      version: "nois-v7",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-1274",
      connection_id: "connection-1175"
    },
    chain_2: {
      chain_name: "stargazetestnet",
      client_id: "07-tendermint-621",
      connection_id: "connection-633"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-4175",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-638",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true,
        dex: "osmosis"
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "stargazetestnet",
      client_id: "07-tendermint-764",
      connection_id: "connection-753"
    },
    chain_2: {
      chain_name: "titantestnet",
      client_id: "07-tendermint-3",
      connection_id: "connection-3"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-807",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default170 = info693;

// node_modules/chain-registry/esm/testnet/stargazetestnet/index.js
var assets262 = assets_default262;
var chain263 = chain_default263;
var ibc170 = ibc_default170;

// node_modules/chain-registry/esm/testnet/statesettestnet/assets.js
var info694 = {
  $schema: "../assetlist.schema.json",
  chain_name: "statesettestnet",
  assets: [{
    description: "The native token of the Stateset Network",
    denom_units: [{
      denom: "ustate",
      exponent: 0,
      aliases: []
    }, {
      denom: "state",
      exponent: 6,
      aliases: []
    }],
    base: "ustate",
    name: "Stateset",
    display: "state",
    symbol: "STATE"
  }]
};
var assets_default263 = info694;

// node_modules/chain-registry/esm/testnet/statesettestnet/chain.js
var info695 = {
  $schema: "../chain.schema.json",
  chain_name: "statesettestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Stateset Testnet",
  chain_id: "stateset-1-testnet",
  bech32_prefix: "stateset",
  daemon_name: "statesetd",
  node_home: "$HOME/.statesetd",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ustate",
      fixed_min_gas_price: 0
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://rpc.stateset.zone/",
      provider: "stateset"
    }],
    rest: [{
      address: "https://rest-api.stateset.zone",
      provider: "stateset"
    }]
  },
  explorers: [{
    kind: "bigdipper",
    url: "https://explore.stateset.zone",
    tx_page: "https://explore.stateset.zone/transactions/${txHash}"
  }]
};
var chain_default264 = info695;

// node_modules/chain-registry/esm/testnet/statesettestnet/index.js
var assets263 = assets_default263;
var chain264 = chain_default264;

// node_modules/chain-registry/esm/testnet/stridetestnet/assets.js
var info696 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "stridetestnet",
  assets: [{
    description: "The native token of Stride",
    denom_units: [{
      denom: "ustrd",
      exponent: 0
    }, {
      denom: "strd",
      exponent: 6
    }],
    base: "ustrd",
    name: "Stride",
    display: "strd",
    symbol: "STRD",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/stride/images/strd.svg"
    }]
  }]
};
var assets_default264 = info696;

// node_modules/chain-registry/esm/testnet/stridetestnet/chain.js
var info697 = {
  $schema: "../../chain.schema.json",
  chain_name: "stridetestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Stride Testnet",
  chain_id: "stride-testnet-1",
  bech32_prefix: "stride",
  daemon_name: "strided",
  node_home: "$HOME/.stride",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ustrd",
      fixed_min_gas_price: 0
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "ustrd"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.46"
  },
  apis: {
    rpc: [{
      address: "https://stride.testnet-1.stridenet.co",
      provider: "Stride"
    }],
    rest: [{
      address: "https://stride.testnet-1.stridenet.co/api",
      provider: "Stride"
    }],
    grpc: []
  },
  explorers: [{
    kind: "PingPub",
    url: "https://testnet.ping.pub/stride",
    tx_page: "https://testnet.ping.pub/stride/tx/${txHash}"
  }]
};
var chain_default265 = info697;

// node_modules/chain-registry/esm/testnet/stridetestnet/index.js
var assets264 = assets_default264;
var chain265 = chain_default265;

// node_modules/chain-registry/esm/testnet/sunrisetestnet/assets.js
var info698 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "sunrisetestnet",
  assets: [{
    description: "The native token of the Sunrise network for staking. This token is non transferrable. This token can be retrieved by providing liquidity.",
    denom_units: [{
      denom: "uvrise",
      exponent: 0,
      aliases: ["microvRISE", "microvrise"]
    }, {
      denom: "vrise",
      exponent: 6
    }],
    base: "uvrise",
    name: "Sunrise vRISE",
    display: "vrise",
    symbol: "vRISE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/vrise.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/vrise.svg"
    },
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/vrise.svg",
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/vrise.png"
    }],
    socials: {
      website: "https://sunriselayer.io/",
      twitter: "https://twitter.com/SunriseLayer"
    }
  }, {
    description: "The native token of the Sunrise network for fees.",
    denom_units: [{
      denom: "urise",
      exponent: 0,
      aliases: ["microRISE", "microrise"]
    }, {
      denom: "rise",
      exponent: 6
    }],
    base: "urise",
    name: "Sunrise RISE",
    display: "rise",
    symbol: "RISE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/sunrise.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/sunrise.svg"
    },
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/sunrise.svg",
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/sunrise.png"
    }],
    socials: {
      website: "https://sunriselayer.io/",
      twitter: "https://twitter.com/SunriseLayer"
    }
  }]
};
var assets_default265 = info698;

// node_modules/chain-registry/esm/testnet/sunrisetestnet/chain.js
var info699 = {
  $schema: "../../chain.schema.json",
  chain_name: "sunrisetestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Sunrise Testnet",
  chain_id: "sunrise-test",
  bech32_prefix: "sunrise",
  daemon_name: "sunrised",
  node_home: "$HOME/.sunrise",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "urise",
      fixed_min_gas_price: 0,
      low_gas_price: 25e-4,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uvrise"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.50.2"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/sunrise.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/sunrise.svg"
  },
  apis: {
    rpc: [{
      address: "https://sunrise-test-1.cauchye.net/",
      provider: "CauchyE"
    }],
    rest: [{
      address: "https://sunrise-test-1.cauchye.net:1318",
      provider: "CauchyE"
    }],
    grpc: [{
      address: "https://sunrise-test-1.cauchye.net:9092",
      provider: "CauchyE"
    }]
  },
  explorers: [],
  images: [{
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/sunrise.svg",
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/sunrise/images/sunrise.png"
  }]
};
var chain_default266 = info699;

// node_modules/chain-registry/esm/testnet/sunrisetestnet/index.js
var assets265 = assets_default265;
var chain266 = chain_default266;

// node_modules/chain-registry/esm/testnet/swisstroniktestnet/assets.js
var info700 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "swisstroniktestnet",
  assets: [{
    description: "The native currency of Swisstronik.",
    denom_units: [{
      denom: "aswtr",
      exponent: 0
    }, {
      denom: "swtr",
      exponent: 18
    }],
    base: "aswtr",
    name: "Swisstronik Testnet",
    display: "swtr",
    symbol: "SWTR",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/swisstroniktestnet/images/swisstronik.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/swisstroniktestnet/images/swisstronik.png"
    }]
  }]
};
var assets_default266 = info700;

// node_modules/chain-registry/esm/testnet/swisstroniktestnet/chain.js
var info701 = {
  $schema: "../../chain.schema.json",
  chain_name: "swisstroniktestnet",
  chain_id: "swisstronik_1291-1",
  pretty_name: "Swisstronik Testnet",
  status: "live",
  network_type: "testnet",
  bech32_prefix: "swtr",
  daemon_name: "swisstronikd",
  node_home: "$HOME/.swisstronik",
  key_algos: ["secp256k1"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "aswtr",
      fixed_min_gas_price: 7
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "aswtr"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.47"
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.testnet.swisstronik.com",
        provider: "Swisstronik"
      },
      {
        address: "https://testnet-swisstronik-rpc.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://rpc.swisstronik.comunitynode.my.id",
        provider: "ComunityNode"
      }
    ],
    rest: [
      {
        address: "https://api.testnet.swisstronik.com",
        provider: "Swisstronik"
      },
      {
        address: "https://testnet-swisstronik-api.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://rest.swisstronik.comunitynode.my.id/",
        provider: "Comunitynode"
      }
    ],
    grpc: [{
      address: "testnet-swisstronik-grpc.genznodes.dev:20090",
      provider: "genznodes"
    }],
    "evm-http-jsonrpc": [
      {
        address: "https://json-rpc.testnet.swisstronik.com",
        provider: "Swisstronik"
      },
      {
        address: "https://testnet-swisstronik-rpc-evm.genznodes.dev",
        provider: "genznodes"
      },
      {
        address: "https://evm.swisstronik.comunitynode.my.id",
        provider: "comunitynode"
      }
    ]
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://explorer-cosmos.testnet.swisstronik.com/swisstronik",
    tx_page: "https://explorer-cosmos.testnet.swisstronik.com/swisstronik/tx/${txHash}"
  }]
};
var chain_default267 = info701;

// node_modules/chain-registry/esm/testnet/swisstroniktestnet/ibc.js
var info702 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "osmosistestnet",
    client_id: "07-tendermint-3714",
    connection_id: "connection-3238"
  },
  chain_2: {
    chain_name: "swisstroniktestnet",
    client_id: "07-tendermint-31",
    connection_id: "connection-18"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-8295",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-2",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true,
      dex: "osmosis"
    }
  }]
}];
var ibc_default171 = info702;

// node_modules/chain-registry/esm/testnet/swisstroniktestnet/index.js
var assets266 = assets_default266;
var chain267 = chain_default267;
var ibc171 = ibc_default171;

// node_modules/chain-registry/esm/testnet/symphonytestnet/assets.js
var info703 = {
  $schema: "../assetlist.schema.json",
  chain_name: "symphonytestnet",
  assets: [{
    description: "The native token of Symphony",
    denom_units: [{
      denom: "note",
      exponent: 0,
      aliases: []
    }, {
      denom: "mld",
      exponent: 6,
      aliases: []
    }],
    type_asset: "sdk.coin",
    base: "note",
    name: "Symphony Testnet",
    display: "mld",
    symbol: "MLD",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/symphonytestnet/images/coin_icon.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/symphonytestnet/images/coin_icon.png"
    }]
  }]
};
var assets_default267 = info703;

// node_modules/chain-registry/esm/testnet/symphonytestnet/chain.js
var info704 = {
  $schema: "../../chain.schema.json",
  chain_name: "symphonytestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Symphony Testnet",
  chain_id: "symphony-testnet-1",
  bech32_prefix: "symphony",
  daemon_name: "symphonyd",
  node_home: "$HOME/.symphonyd",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "note",
      fixed_min_gas_price: 0,
      low_gas_price: 25e-4,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "note"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.45",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.30"
  },
  apis: {
    rpc: [{
      address: "https://rpc.testnet.symphonychain.org/",
      provider: "Orchestra Labs"
    }],
    rest: [{
      address: "https://lcd.testnet.symphonychain.org/",
      provider: "Orchestra Labs"
    }],
    grpc: [{
      address: "https://grpc.testnet.symphonychain.org/",
      provider: "Orchestra Labs"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/symphonytestnet/images/symphony_logo.png"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/symphonytestnet/images/symphony_logo.png"
  }]
};
var chain_default268 = info704;

// node_modules/chain-registry/esm/testnet/symphonytestnet/index.js
var assets267 = assets_default267;
var chain268 = chain_default268;

// node_modules/chain-registry/esm/testnet/temporaltestnet/assets.js
var info705 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "temporaltestnet",
  assets: [{
    description: "The native staking and governance token of the testnet version of Temporal.",
    denom_units: [{
      denom: "utprl",
      exponent: 0
    }, {
      denom: "tprl",
      exponent: 6
    }],
    base: "utprl",
    name: "TPRL",
    display: "tprl",
    symbol: "TPRL",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/temporaltestnet/images/temporal.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/temporaltestnet/images/temporal.png"
    }]
  }]
};
var assets_default268 = info705;

// node_modules/chain-registry/esm/testnet/temporaltestnet/chain.js
var info706 = {
  $schema: "../../chain.schema.json",
  chain_name: "temporaltestnet",
  chain_id: "temporal-test-2",
  pretty_name: "Temporal Testnet",
  status: "killed",
  network_type: "testnet",
  bech32_prefix: "temporal",
  daemon_name: "temporald",
  node_home: "$HOME/.temporal",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "utprl",
      fixed_min_gas_price: 0
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "utprl"
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://rpc.yieldmos.com/temporal-test-2",
      provider: "Yieldmos"
    }, {
      address: "https://testnet-temporal-rpc.lavenderfive.com:443",
      provider: "Lavender.Five"
    }],
    rest: [{
      address: "https://lcd.yieldmos.com/temporal-test-2",
      provider: "Yieldmos"
    }, {
      address: "https://testnet-temporal-api.lavenderfive.com:443",
      provider: "Lavender.Five"
    }],
    grpc: [{
      address: "142.132.157.153:24190",
      provider: "Yieldmos"
    }]
  },
  explorers: [
    {
      kind: "ping.pub",
      url: "https://testnet.explorer.thesilverfox.pro/temporal",
      tx_page: "https://testnet.explorer.thesilverfox.pro/temporal/tx/${txHash}"
    },
    {
      kind: "Nodes.Guru",
      url: "https://testnet.temporal.explorers.guru",
      tx_page: "https://testnet.temporal.explorers.guru/transaction/${txHash}"
    },
    {
      kind: "ping.pub",
      url: "https://testnet.ping.pub/temporal",
      tx_page: "https://testnet.ping.pub/temporal/tx/${txHash}"
    }
  ]
};
var chain_default269 = info706;

// node_modules/chain-registry/esm/testnet/temporaltestnet/index.js
var assets268 = assets_default268;
var chain269 = chain_default269;

// node_modules/chain-registry/esm/testnet/terpnettestnet/assets.js
var info707 = {
  $schema: "../assetlist.schema.json",
  chain_name: "terpnettestnet",
  assets: [{
    description: "Terp Token (TERP) is the Terp Network's native utility token, used as the primary means to govern, secure the blockchain, incentivize participants, and provide a default mechanism to store and exchange value.",
    denom_units: [{
      denom: "uterpx",
      exponent: 0
    }, {
      denom: "terpx",
      exponent: 6
    }],
    base: "uterpx",
    name: "Terp Testnet Token",
    display: "terpx",
    symbol: "TERPX",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terpnetwork/images/terp.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terpnetwork/images/terp.png"
    }]
  }, {
    description: "Persy Gas Token (Persy) is the Terp Network's native utility token, used as the primary means to govern, secure the blockchain, incentivize participants, and provide a default mechanism to store and exchange value.",
    denom_units: [{
      denom: "uthiolx",
      exponent: 0
    }, {
      denom: "thiolx",
      exponent: 6
    }],
    base: "uthiolx",
    name: "Thiol Testnet Gas Token",
    display: "thiolx",
    symbol: "THIOLX",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terpnetwork/images/thiol.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terpnetwork/images/thiol.png"
    }]
  }]
};
var assets_default269 = info707;

// node_modules/chain-registry/esm/testnet/terpnettestnet/chain.js
var info708 = {
  $schema: "../chain.schema.json",
  chain_name: "terpnettestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Terp-Network",
  chain_id: "90u-4",
  bech32_prefix: "terp",
  daemon_name: "terpd",
  node_home: "$HOME/.terp",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uthiolx",
      fixed_min_gas_price: 0.5,
      low_gas_price: 0.75,
      average_gas_price: 1,
      high_gas_price: 1.25
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uterpx"
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://testnet-rpc.terp.network:443/",
      provider: "Terpnet Foundation"
    }, {
      address: "https://terp-testnet-rpc.itrocket.net:443/",
      provider: "itrocket"
    }],
    rest: [{
      address: "https://testnet-api.terp.network:443/",
      provider: "Terpnet Foundation"
    }, {
      address: "https://terp-testnet-api.itrocket.net:443/",
      provider: "itrocket"
    }],
    grpc: [{
      address: "terp-testnet-grpc.itrocket.net/",
      provider: "itrocket"
    }]
  },
  explorers: [{
    kind: "Ping Pub",
    url: "https://explorer.nodestake.top/terp-testnet",
    tx_page: "https://explorer.nodestake.top/terp-testnet/tx/${txHash}"
  }, {
    kind: "NODEXPLORER",
    url: "https://explorer.nodexcapital.com",
    tx_page: "https://explorer.nodexcapital.com/terp/tx/${txHash}",
    account_page: "https://explorer.nodexcapital.com/terp/account/{$accountAddress}"
  }]
};
var chain_default270 = info708;

// node_modules/chain-registry/esm/testnet/terpnettestnet/index.js
var assets269 = assets_default269;
var chain270 = chain_default270;

// node_modules/chain-registry/esm/testnet/terpnettestnet2/assets.js
var info709 = {
  $schema: "../assetlist.schema.json",
  chain_name: "terpnettestnet2",
  assets: [{
    description: "Terp Token (TERP) is the Terp Network's native utility token, used as the primary means to govern, secure the blockchain, incentivize participants, and provide a default mechanism to store and exchange value.",
    denom_units: [{
      denom: "uterpx",
      exponent: 0
    }, {
      denom: "terpx",
      exponent: 6
    }],
    base: "uterpx",
    name: "Terp Testnet Token",
    display: "terpx",
    symbol: "TERPX",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terpnetwork/images/terp.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terpnetwork/images/terp.png"
    }]
  }, {
    description: "Persy Gas Token (Persy) is the Terp Network's native utility token, used as the primary means to govern, secure the blockchain, incentivize participants, and provide a default mechanism to store and exchange value.",
    denom_units: [{
      denom: "uthiolx",
      exponent: 0
    }, {
      denom: "thiolx",
      exponent: 6
    }],
    base: "uthiolx",
    name: "Thiol Testnet Gas Token",
    display: "thiolx",
    symbol: "THIOLX",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terpnetwork/images/thiol.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terpnetwork/images/thiol.png"
    }]
  }]
};
var assets_default270 = info709;

// node_modules/chain-registry/esm/testnet/terpnettestnet2/chain.js
var info710 = {
  $schema: "../chain.schema.json",
  chain_name: "terpnettestnet2",
  status: "live",
  network_type: "testnet",
  pretty_name: "Terp-Network",
  chain_id: "90u-2",
  bech32_prefix: "terp",
  daemon_name: "terpd",
  node_home: "$HOME/.terp",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uthiolx",
      fixed_min_gas_price: 0.5,
      low_gas_price: 0.75,
      average_gas_price: 1,
      high_gas_price: 1.25
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uterpx"
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://terp-testnet-rpc.itrocket.net:443/",
      provider: "itrocket"
    }],
    rest: [{
      address: "https://terp-testnet-api.itrocket.net:443/",
      provider: "itrocket"
    }],
    grpc: [{
      address: "terp-testnet-grpc.itrocket.net/",
      provider: "itrocket"
    }]
  },
  explorers: [{
    kind: "Ping Pub",
    url: "https://explorer.nodestake.top/terp-testnet",
    tx_page: "https://explorer.nodestake.top/terp-testnet/tx/${txHash}"
  }, {
    kind: "NODEXPLORER",
    url: "https://explorer.nodexcapital.com",
    tx_page: "https://explorer.nodexcapital.com/terp/tx/${txHash}",
    account_page: "https://explorer.nodexcapital.com/terp/account/{$accountAddress}"
  }]
};
var chain_default271 = info710;

// node_modules/chain-registry/esm/testnet/terpnettestnet2/index.js
var assets270 = assets_default270;
var chain271 = chain_default271;

// node_modules/chain-registry/esm/testnet/terra2testnet/assets.js
var info711 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "terra2testnet",
  assets: [{
    description: "The native staking token of Terra.",
    denom_units: [{
      denom: "uluna",
      exponent: 0
    }, {
      denom: "luna",
      exponent: 6
    }],
    base: "uluna",
    name: "Luna",
    display: "luna",
    symbol: "LUNA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.svg"
    },
    coingecko_id: "terra-luna-2",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/terra2/images/luna.svg"
    }]
  }]
};
var assets_default271 = info711;

// node_modules/chain-registry/esm/testnet/terra2testnet/chain.js
var info712 = {
  $schema: "../../chain.schema.json",
  chain_name: "terra2testnet",
  status: "live",
  network_type: "testnet",
  website: "https://www.terra.money/",
  pretty_name: "Terra 2.0",
  chain_id: "pisco-1",
  daemon_name: "terrad",
  node_home: "$HOME/.terra",
  bech32_prefix: "terra",
  slip44: 330,
  fees: {
    fee_tokens: [{
      denom: "uluna",
      fixed_min_gas_price: 0.0125,
      low_gas_price: 0.0125,
      average_gas_price: 0.015,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uluna"
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://pisco-rpc.terra.dev:443",
      provider: "Terraform Labs"
    }, {
      address: "https://terra-testnet-rpc.polkachu.com:443",
      provider: "Polkachu"
    }],
    rest: [{
      address: "https://pisco-lcd.terra.dev:443",
      provider: "Terraform Labs"
    }, {
      address: "https://terra-testnet-api.polkachu.com:443",
      provider: "Polkachu"
    }],
    grpc: [{
      address: "terra-testnet-grpc.polkachu.com:11790",
      provider: "Polkachu"
    }]
  },
  explorers: [{
    kind: "finder",
    url: "http://finder.terra.money/testnet/",
    tx_page: "https://finder.terra.money/testnet/tx/${txHash}"
  }]
};
var chain_default272 = info712;

// node_modules/chain-registry/esm/testnet/terra2testnet/ibc.js
var info713 = [{
  $schema: "../../ibc_data.schema.json",
  chain_1: {
    chain_name: "kujiratestnet",
    client_id: "07-tendermint-73",
    connection_id: "connection-48"
  },
  chain_2: {
    chain_name: "terra2testnet",
    client_id: "7-tendermint-568",
    connection_id: "connection-508"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-73",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-541",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default172 = info713;

// node_modules/chain-registry/esm/testnet/terra2testnet/index.js
var assets271 = assets_default271;
var chain272 = chain_default272;
var ibc172 = ibc_default172;

// node_modules/chain-registry/esm/testnet/titantestnet/assets.js
var info714 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "titantestnet",
  assets: [{
    description: "The native token of the Titan network.",
    denom_units: [
      {
        denom: "atkx",
        exponent: 0,
        aliases: ["attotkx"]
      },
      {
        denom: "utkx",
        exponent: 12,
        aliases: ["microtkx"]
      },
      {
        denom: "mtkx",
        exponent: 15,
        aliases: ["millitkx"]
      },
      {
        denom: "tkx",
        exponent: 18,
        aliases: []
      }
    ],
    base: "atkx",
    display: "tkx",
    name: "titan tkx",
    symbol: "TKX",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/titantestnet/images/tkx.png"
    }],
    keywords: ["staking"],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/titantestnet/images/tkx.png"
    }
  }]
};
var assets_default272 = info714;

// node_modules/chain-registry/esm/testnet/titantestnet/chain.js
var info715 = {
  $schema: "../../chain.schema.json",
  chain_name: "titantestnet",
  status: "live",
  network_type: "testnet",
  website: "https://titanlab.io/",
  pretty_name: "Titan Testnet",
  chain_id: "titan_18889-1",
  bech32_prefix: "titan",
  node_home: "$HOME/.titand",
  daemon_name: "titand",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "atkx",
      fixed_min_gas_price: 1e11,
      low_gas_price: 1e11,
      average_gas_price: 11e10,
      high_gas_price: 2e11
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "atkx"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.47.6-titan.4",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.45.0"
  },
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/titantestnet/images/chain.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/titantestnet/images/chain.svg"
  }],
  apis: {
    rpc: [
      {
        address: "https://titan-testnet-rpc.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "https://titan-testnet-rpc-1.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "https://titan-testnet-rpc-2.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "https://titan-testnet-rpc-3.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "https://titan-testnet-rpc-4.titanlab.io:443",
        provider: "Titanlab.io"
      }
    ],
    rest: [
      {
        address: "https://titan-testnet-lcd.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "https://titan-testnet-lcd-1.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "https://titan-testnet-lcd-2.titanlab.io:443",
        provider: "Titanlab.io"
      }
    ],
    grpc: [],
    "evm-http-jsonrpc": [
      {
        address: "https://titan-testnet-json-rpc.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "https://titan-testnet-json-rpc-1.titanlab.io:443",
        provider: "Titanlab.io"
      },
      {
        address: "https://titan-testnet-json-rpc-2.titanlab.io:443",
        provider: "Titanlab.io"
      }
    ]
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://titan-testnet-explorer-light.titanlab.io",
    tx_page: "https://titan-testnet-explorer-light.titanlab.io/Titan%20Testnet/tx/${txHash}",
    account_page: "https://titan-testnet-explorer-light.titanlab.io/Titan%20Testnet/account/${accountAddress}"
  }],
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/titantestnet/images/chain.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/titantestnet/images/chain.svg"
  }
};
var chain_default273 = info715;

// node_modules/chain-registry/esm/testnet/titantestnet/ibc.js
var info716 = [
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelartestnet",
      client_id: "07-tendermint-858",
      connection_id: "connection-663"
    },
    chain_2: {
      chain_name: "titantestnet",
      client_id: "07-tendermint-1",
      connection_id: "connection-1"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-448",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-1",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "cosmoshubtestnet",
      client_id: "07-tendermint-3237",
      connection_id: "connection-3407"
    },
    chain_2: {
      chain_name: "titantestnet",
      client_id: "07-tendermint-0",
      connection_id: "connection-0"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-3910",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-0",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-2436",
      connection_id: "connection-2267"
    },
    chain_2: {
      chain_name: "titantestnet",
      client_id: "07-tendermint-2",
      connection_id: "connection-2"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-5969",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-2",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "stargazetestnet",
      client_id: "07-tendermint-764",
      connection_id: "connection-753"
    },
    chain_2: {
      chain_name: "titantestnet",
      client_id: "07-tendermint-3",
      connection_id: "connection-3"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-807",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-3",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  }
];
var ibc_default173 = info716;

// node_modules/chain-registry/esm/testnet/titantestnet/index.js
var assets272 = assets_default272;
var chain273 = chain_default273;
var ibc173 = ibc_default173;

// node_modules/chain-registry/esm/testnet/ulastestnet/assets.js
var info717 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "ulastestnet",
  assets: [{
    description: "WEB3 twitter",
    denom_units: [{
      denom: "uulas",
      exponent: 0
    }, {
      denom: "ulas",
      exponent: 6
    }],
    base: "uulas",
    name: "ULAS Network",
    display: "ulas",
    symbol: "ULAS",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/ulastestnet/images/logo.png"
    },
    coingecko_id: "ulas",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/ulastestnet/images/logo.png"
    }]
  }]
};
var assets_default273 = info717;

// node_modules/chain-registry/esm/testnet/ulastestnet/chain.js
var info718 = {
  $schema: "../../chain.schema.json",
  chain_name: "ulastestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "ULAS",
  chain_id: "ulas",
  bech32_prefix: "ulas",
  daemon_name: "ulasd",
  node_home: "$HOME/.ulas",
  codebase: {},
  apis: {
    rpc: [{
      address: "http://65.49.204.199:26657",
      provider: "UlasNetwork"
    }],
    rest: [{
      address: "http://65.49.204.199:1317",
      provider: "UlasNetwork"
    }],
    grpc: [{
      address: "http://65.49.204.199:9090",
      provider: "UlasNetwork"
    }]
  },
  explorers: [{
    kind: "ulas-scan",
    url: "https://testnet-explorer.ulas.network",
    tx_page: "https://testnet-explorer.ulas.network/ulas/tx/${txHash}"
  }],
  slip44: 118
};
var chain_default274 = info718;

// node_modules/chain-registry/esm/testnet/ulastestnet/index.js
var assets273 = assets_default273;
var chain274 = chain_default274;

// node_modules/chain-registry/esm/testnet/uniontestnet/assets.js
var info719 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "uniontestnet",
  assets: [{
    description: "Union native token",
    denom_units: [{
      denom: "muno",
      exponent: 0
    }, {
      denom: "uno",
      exponent: 6
    }],
    base: "muno",
    name: "Union",
    display: "uno",
    symbol: "UNO",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/uniontestnet/images/union.png"
    },
    keywords: ["staking"],
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/uniontestnet/images/union.png"
    }]
  }]
};
var assets_default274 = info719;

// node_modules/chain-registry/esm/testnet/uniontestnet/chain.js
var info720 = {
  $schema: "../../chain.schema.json",
  chain_name: "uniontestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Union Testnet",
  chain_id: "union-testnet-8",
  bech32_prefix: "union",
  daemon_name: "uniond",
  node_home: "$HOME/.uniond",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "muno",
      fixed_min_gas_price: 0,
      low_gas_price: 25e-4,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "muno"
    }]
  },
  apis: {
    rpc: [
      {
        address: "https://rpc.testnet.bonlulu.uno",
        provider: "bonlulu"
      },
      {
        address: "https://union-testnet-rpc.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://rpc-testnet-union.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "https://union-testnet-rpc.itrocket.net",
        provider: "ITRocket"
      }
    ],
    rest: [
      {
        address: "https://api.testnet.bonlulu.uno",
        provider: "bonlulu"
      },
      {
        address: "https://union-testnet-api.polkachu.com",
        provider: "Polkachu"
      },
      {
        address: "https://api-testnet-union.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "https://union-testnet-api.itrocket.net",
        provider: "ITRocket"
      }
    ],
    grpc: [
      {
        address: "https://grpc.testnet.bonlulu.uno",
        provider: "bonlulu"
      },
      {
        address: "http://union-testnet-grpc.polkachu.com:24690",
        provider: "Polkachu"
      },
      {
        address: "https://grpc-testnet-union.nodeist.net",
        provider: "Nodeist"
      },
      {
        address: "http://union-testnet-grpc.itrocket.net:23090",
        provider: "ITRocket"
      }
    ]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/uniontestnet/images/union.png"
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://testnet.bonlulu.uno/union",
    tx_page: "https://testnet.bonlulu.uno/union/tx/${txHash}",
    account_page: "https://testnet.bonlulu.uno/union/account/${accountAddress}"
  }, {
    kind: "explorers.guru",
    url: "https://testnet.union.explorers.guru",
    tx_page: "https://testnet.union.explorers.guru/transaction/${txHash}",
    account_page: "https://testnet.union.explorers.guru/account/${accountAddress}"
  }],
  keywords: ["testnet"],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/uniontestnet/images/union.png"
  }]
};
var chain_default275 = info720;

// node_modules/chain-registry/esm/testnet/uniontestnet/index.js
var assets274 = assets_default274;
var chain275 = chain_default275;

// node_modules/chain-registry/esm/testnet/upticktestnet/assets.js
var info721 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "upticktestnet",
  assets: [{
    description: "The native token of Uptick",
    denom_units: [{
      denom: "auptick",
      exponent: 0
    }, {
      denom: "uptick",
      exponent: 18
    }],
    base: "auptick",
    name: "Uptick",
    display: "uptick",
    symbol: "UPTICK",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/upticktestnet/images/uptick.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/upticktestnet/images/uptick.png"
    }]
  }]
};
var assets_default275 = info721;

// node_modules/chain-registry/esm/testnet/upticktestnet/chain.js
var info722 = {
  $schema: "../../chain.schema.json",
  chain_name: "upticktestnet",
  status: "live",
  network_type: "testnet",
  website: "https://www.uptickproject.com/",
  pretty_name: "Uptick",
  chain_id: "uptick_7000-2",
  bech32_prefix: "uptick",
  daemon_name: "uptickd",
  node_home: "$HOME/.uptickd",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "auptick",
      low_gas_price: 0,
      average_gas_price: 0,
      high_gas_price: 0
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.46.5"
  },
  apis: {
    rpc: [{
      address: "https://uptick-7000-2-rpc.staketab.org:443",
      provider: "Staketab"
    }],
    rest: [{
      address: "https://uptick-7000-2-rest.staketab.org",
      provider: "Staketab"
    }],
    grpc: [{
      address: "services.staketab.com:9004",
      provider: "Staketab"
    }]
  },
  explorers: [{
    kind: "ping.pub",
    url: "https://explorer.testnet.uptick.network/uptick-network-testnet",
    tx_page: "https://explorer.testnet.uptick.network/uptick-network-testnet/tx/${txHash}"
  }, {
    kind: "Nodes.Guru",
    url: "https://uptick.explorers.guru/",
    tx_page: "https://uptick.explorers.guru/transaction/${txHash}"
  }]
};
var chain_default276 = info722;

// node_modules/chain-registry/esm/testnet/upticktestnet/index.js
var assets275 = assets_default275;
var chain276 = chain_default276;

// node_modules/chain-registry/esm/testnet/vincechaintestnet/assets.js
var info723 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "vincechaintestnet",
  assets: [{
    description: "Vince Chain is an Industry-Grade Blockchain For DeFi, Remote work, Gaming, Web3 and will power the new internet.",
    denom_units: [{
      denom: "avce",
      exponent: 0
    }, {
      denom: "vce",
      exponent: 18
    }],
    base: "avce",
    name: "VinceChain",
    display: "vce",
    symbol: "VCE",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/vincechaintestnet/images/vince.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/vincechaintestnet/images/vince.png"
    }]
  }]
};
var assets_default276 = info723;

// node_modules/chain-registry/esm/testnet/vincechaintestnet/chain.js
var info724 = {
  $schema: "../../chain.schema.json",
  chain_name: "vincechaintestnet",
  status: "killed",
  network_type: "testnet",
  pretty_name: "VinceChain Testnet",
  chain_id: "vince_1903-1",
  bech32_prefix: "vce",
  node_home: "$HOME/.vinced",
  slip44: 60,
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  fees: {
    fee_tokens: [{
      denom: "avce",
      fixed_min_gas_price: 25e7,
      low_gas_price: 1e10,
      average_gas_price: 25e9,
      high_gas_price: 4e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "avce"
    }]
  },
  codebase: {},
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/vincechaintestnet/images/vince.png"
  },
  apis: {
    rpc: [{
      address: "http://api-testnet.vincechain.com/:26657/",
      provider: "vincescan.com"
    }],
    rest: [{
      address: "http://lcd-testnet.vincechain.com/:1317/",
      provider: "vincescan.com"
    }],
    grpc: [],
    "evm-http-jsonrpc": [{
      address: "http://rpc-testnet.vincechain.com",
      provider: "vincescan.com"
    }]
  },
  explorers: [{
    kind: "blockscout",
    url: "https://scan-testnet.vincechain.com",
    tx_page: "https://scan-testnet.vincechain.com/tx/${txHash}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/vincechaintestnet/images/vince.png"
  }]
};
var chain_default277 = info724;

// node_modules/chain-registry/esm/testnet/vincechaintestnet/index.js
var assets276 = assets_default276;
var chain277 = chain_default277;

// node_modules/chain-registry/esm/testnet/wardenprotocoltestnet/assets.js
var info725 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "wardenprotocoltestnet",
  assets: [{
    description: "The native token of Warden Protocol Testnet",
    denom_units: [{
      denom: "uward",
      exponent: 0
    }, {
      denom: "ward",
      exponent: 6
    }],
    base: "uward",
    name: "Ward",
    display: "ward",
    symbol: "WARD",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/wardenprotocol/images/ward.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/wardenprotocol/images/ward.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/wardenprotocol/images/ward.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/wardenprotocol/images/ward.svg"
    }]
  }]
};
var assets_default277 = info725;

// node_modules/chain-registry/esm/testnet/wardenprotocoltestnet/chain.js
var info726 = {
  $schema: "../../chain.schema.json",
  chain_name: "wardenprotocoltestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Warden Protocol Buenavista",
  chain_id: "buenavista-1",
  bech32_prefix: "warden",
  daemon_name: "wardend",
  node_home: "$HOME/.warden",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uward",
      fixed_min_gas_price: 5e-3,
      low_gas_price: 0.01,
      average_gas_price: 0.025,
      high_gas_price: 0.03
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uward"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.50",
    cosmwasm_enabled: false
  },
  apis: {
    rpc: [{
      address: "https://rpc.buenavista.wardenprotocol.org/",
      provider: "Warden Protocol"
    }],
    rest: [{
      address: "https://api.buenavista.wardenprotocol.org/",
      provider: "Warden Protocol"
    }],
    grpc: [{
      address: "https://grpc.buenavista.wardenprotocol.org/",
      provider: "Warden Protocol"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/wardenprotocol/images/ward.png"
  },
  explorers: [],
  keywords: ["testnet"],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/wardenprotocol/images/ward.png"
  }]
};
var chain_default278 = info726;

// node_modules/chain-registry/esm/testnet/wardenprotocoltestnet/index.js
var assets277 = assets_default277;
var chain278 = chain_default278;

// node_modules/chain-registry/esm/testnet/wavehashtestnet/assets.js
var info727 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "wavehashtestnet",
  assets: [{
    description: "WaveHash A Permissioned Blockchain",
    denom_units: [{
      denom: "uwahax",
      exponent: 0
    }, {
      denom: "wahax",
      exponent: 6
    }],
    base: "uwahax",
    name: "WaveHash",
    display: "wahax",
    symbol: "WAHAX",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/wavehashtestnet/images/WaveHash.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/wavehashtestnet/images/WaveHash.png"
    }]
  }]
};
var assets_default278 = info727;

// node_modules/chain-registry/esm/testnet/wavehashtestnet/chain.js
var info728 = {
  $schema: "../../chain.schema.json",
  chain_name: "wavehashtestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "wavehash Testnet",
  chain_id: "INVALID-ID-wavehashtestnet-testnet-1",
  bech32_prefix: "wavehash",
  daemon_name: "wavehashd",
  node_home: "$HOME/.wavehash",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uwahax",
      low_gas_price: 25e-4,
      average_gas_price: 25e-4,
      high_gas_price: 24e-4
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uwahax"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.45",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.30"
  },
  apis: {
    rpc: [{
      address: "https://rpc.wavehash.online/",
      provider: "WaveHash Network"
    }],
    rest: [{
      address: "https://lcd.wavehash.online/",
      provider: "WaveHash Network"
    }],
    grpc: [{
      address: "https://grpc.wavehash.online/",
      provider: "WaveHash Network"
    }]
  },
  explorers: [{
    kind: "atomscan",
    url: "https://atomscan.com/directory/testnet/wavehashtestnet",
    tx_page: "https://atomscan.com/directory/testnet/wavehashtestnet/transactions/${txHash}"
  }]
};
var chain_default279 = info728;

// node_modules/chain-registry/esm/testnet/wavehashtestnet/index.js
var assets278 = assets_default278;
var chain279 = chain_default279;

// node_modules/chain-registry/esm/testnet/xiontestnet/assets.js
var info729 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "xiontestnet",
  assets: [
    {
      description: "The native staking token of the Xion network.",
      denom_units: [{
        denom: "uxion",
        exponent: 0,
        aliases: ["microxion"]
      }, {
        denom: "XION",
        exponent: 6,
        aliases: ["xion"]
      }],
      base: "uxion",
      display: "XION",
      name: "xion",
      symbol: "XION",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/xion/images/burnt-round.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/xion/images/burnt-round.png"
      }]
    },
    {
      denom_units: [{
        denom: "ibc/33517D439F5E545A1AAB148FAE43AAE17CF68FFB9BC97AE0048A3E3B64518C58",
        exponent: 0,
        aliases: ["uaxl"]
      }, {
        denom: "axl",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/33517D439F5E545A1AAB148FAE43AAE17CF68FFB9BC97AE0048A3E3B64518C58",
      name: "Axelar AXL Token",
      display: "axl",
      symbol: "AXL",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "axelartestnet",
          base_denom: "uaxl",
          channel_id: "channel-521"
        },
        chain: {
          channel_id: "channel-225057",
          path: "transfer/channel-225057/uaxl"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "axelartestnet",
          base_denom: "uaxl"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/axelar/images/axl.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/484532EB74866F3FB8A71F909F7B1B470FE2E66313DA0A1F9EE5B7C5C046D195",
        exponent: 0,
        aliases: ["uosmo"]
      }, {
        denom: "osmo",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/484532EB74866F3FB8A71F909F7B1B470FE2E66313DA0A1F9EE5B7C5C046D195",
      name: "Osmosis OSMO Token",
      display: "osmo",
      symbol: "OSMO",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "osmosistestnet",
          base_denom: "uosmo",
          channel_id: "channel-6668"
        },
        chain: {
          channel_id: "channel-490",
          path: "transfer/channel-490/uosmo"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "osmosistestnet",
          base_denom: "uosmo"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/osmosis/images/osmo.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/57097251ED81A232CE3C9D899E7C8096D6D87EF84BA203E12E424AA4C9B57A64",
        exponent: 0,
        aliases: ["uusdc"]
      }, {
        denom: "usdc",
        exponent: 6
      }],
      type_asset: "ics20",
      base: "ibc/57097251ED81A232CE3C9D899E7C8096D6D87EF84BA203E12E424AA4C9B57A64",
      name: "Noble USDC Token",
      display: "usdc",
      symbol: "USDC",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "nobletestnet",
          base_denom: "uusdc",
          channel_id: "channel-147"
        },
        chain: {
          channel_id: "channel-489",
          path: "transfer/channel-489/uusdc"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "nobletestnet",
          base_denom: "uusdc"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }
    },
    {
      denom_units: [{
        denom: "ibc/05314A48723E06A1B1B666066B6BEC89F3708E8854DF2E5E9193387AA9653036",
        exponent: 0,
        aliases: ["inj"]
      }, {
        denom: "INJ",
        exponent: 18
      }],
      type_asset: "ics20",
      base: "ibc/05314A48723E06A1B1B666066B6BEC89F3708E8854DF2E5E9193387AA9653036",
      name: "Injective INJ token",
      display: "INJ",
      symbol: "INJ",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "injectivetestnet",
          base_denom: "inj",
          channel_id: "channel-489"
        },
        chain: {
          channel_id: "channel-487",
          path: "transfer/channel-487/inj"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "injectivetestnet",
          base_denom: "inj"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/injective/images/inj.svg"
      }
    }
  ]
};
var assets_default279 = info729;

// node_modules/chain-registry/esm/testnet/xiontestnet/chain.js
var info730 = {
  $schema: "../../chain.schema.json",
  chain_name: "xiontestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "Xion Testnet",
  chain_id: "xion-testnet-1",
  bech32_prefix: "xion",
  daemon_name: "xiond",
  node_home: "$HOME/.xiond",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uxion",
      fixed_min_gas_price: 0,
      low_gas_price: 0,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uxion"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.47.10",
    cosmwasm_enabled: true,
    cosmwasm_version: "0.45.1"
  },
  apis: {
    rpc: [{
      address: "https://testnet-burnt-rpc.lavenderfive.com",
      provider: "Lavender.Five Nodes \u{1F41D}"
    }, {
      address: "https://xion-testnet-rpc.polkachu.com",
      provider: "polkachu"
    }],
    rest: [{
      address: "https://testnet-burnt-api.lavenderfive.com",
      provider: "Lavender.Five Nodes \u{1F41D}"
    }, {
      address: "https://xion-testnet-api.polkachu.com",
      provider: "polkachu"
    }],
    grpc: [{
      address: "https://testnet-burnt-grpc.lavenderfive.com",
      provider: "Lavender.Five Nodes \u{1F41D}"
    }, {
      address: "xion-testnet-grpc.polkachu.com:22390",
      provider: "polkachu"
    }]
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/xion/images/burnt.png"
  },
  keywords: [
    "xion",
    "burnt",
    "testnet"
  ],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/xion/images/burnt.png"
  }]
};
var chain_default280 = info730;

// node_modules/chain-registry/esm/testnet/xiontestnet/ibc.js
var info731 = [
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "axelartestnet",
      client_id: "07-tendermint-970",
      connection_id: "connection-752"
    },
    chain_2: {
      chain_name: "xiontestnet",
      client_id: "07-tendermint-127",
      connection_id: "connection-64"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-521",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-225057",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../ibc_data.schema.json",
    chain_1: {
      chain_name: "injectivetestnet",
      client_id: "07-tendermint-239",
      connection_id: "connection-220"
    },
    chain_2: {
      chain_name: "xiontestnet",
      client_id: "07-tendermint-119",
      connection_id: "connection-55"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-489",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-487",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live",
        preferred: true
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "nobletestnet",
      client_id: "07-tendermint-224",
      connection_id: "connection-176"
    },
    chain_2: {
      chain_name: "xiontestnet",
      client_id: "07-tendermint-120",
      connection_id: "connection-56"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-147",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-489",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  },
  {
    $schema: "../../ibc_data.schema.json",
    chain_1: {
      chain_name: "osmosistestnet",
      client_id: "07-tendermint-3125",
      connection_id: "connection-2826"
    },
    chain_2: {
      chain_name: "xiontestnet",
      client_id: "07-tendermint-121",
      connection_id: "connection-57"
    },
    channels: [{
      chain_1: {
        channel_id: "channel-6668",
        port_id: "transfer"
      },
      chain_2: {
        channel_id: "channel-490",
        port_id: "transfer"
      },
      ordering: "unordered",
      version: "ics20-1",
      tags: {
        status: "live"
      }
    }]
  }
];
var ibc_default174 = info731;

// node_modules/chain-registry/esm/testnet/xiontestnet/index.js
var assets279 = assets_default279;
var chain280 = chain_default280;
var ibc174 = ibc_default174;

// node_modules/chain-registry/esm/testnet/zetachaintestnet/assets.js
var info732 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "zetachaintestnet",
  assets: [{
    description: "The native token of ZetaChain",
    denom_units: [{
      denom: "azeta",
      exponent: 0
    }, {
      denom: "tzeta",
      exponent: 18
    }],
    base: "azeta",
    name: "ZetaChain Testnet",
    display: "tzeta",
    symbol: "tZETA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/zetachaintestnet/images/zetachaintestnet.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/zetachaintestnet/images/zetachaintestnet.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/zetachaintestnet/images/zetachaintestnet.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/zetachaintestnet/images/zetachaintestnet.svg"
    }]
  }]
};
var assets_default280 = info732;

// node_modules/chain-registry/esm/testnet/zetachaintestnet/chain.js
var info733 = {
  $schema: "../../chain.schema.json",
  chain_name: "zetachaintestnet",
  status: "live",
  network_type: "testnet",
  pretty_name: "ZetaChain Testnet",
  chain_id: "athens_7001-1",
  bech32_prefix: "zeta",
  daemon_name: "zetacored",
  node_home: "$HOME/.zetacored",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 60,
  fees: {
    fee_tokens: [{
      denom: "azeta",
      low_gas_price: 2e10,
      average_gas_price: 25e9,
      high_gas_price: 4e10
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "azeta"
    }]
  },
  codebase: {
    cosmos_sdk_version: "0.46"
  },
  apis: {
    rpc: [{
      address: "https://zetachain-athens.blockpi.network/rpc/v1/public",
      provider: "BlockPI"
    }, {
      address: "https://zetachain-testnet-archive.allthatnode.com:26657",
      provider: "All That Node"
    }],
    rest: [{
      address: "https://zetachain-athens.blockpi.network/lcd/v1/public",
      provider: "BlockPI"
    }, {
      address: "https://zetachain-testnet-archive.allthatnode.com:1317",
      provider: "All That Node"
    }]
  },
  explorers: [{
    kind: "ZetaScan",
    url: "https://athens.explorer.zetachain.com/",
    tx_page: "https://athens.explorer.zetachain.com/cc/tx/${txHash}"
  }, {
    kind: "BlockScout",
    url: "https://zetachain-athens-3.blockscout.com/",
    tx_page: "https://zetachain-athens-3.blockscout.com/tx/${txHash}"
  }]
};
var chain_default281 = info733;

// node_modules/chain-registry/esm/testnet/zetachaintestnet/index.js
var assets280 = assets_default280;
var chain281 = chain_default281;

// node_modules/chain-registry/esm/testnet/assets.js
var assets281 = [
  assets176,
  assets177,
  assets178,
  assets179,
  assets180,
  assets181,
  assets182,
  assets183,
  assets184,
  assets185,
  assets186,
  assets187,
  assets188,
  assets189,
  assets190,
  assets191,
  assets192,
  assets193,
  assets194,
  assets195,
  assets196,
  assets197,
  assets198,
  assets199,
  assets200,
  assets201,
  assets202,
  assets203,
  assets204,
  assets205,
  assets206,
  assets207,
  assets208,
  assets209,
  assets210,
  assets211,
  assets212,
  assets213,
  assets214,
  assets215,
  assets216,
  assets217,
  assets218,
  assets219,
  assets220,
  assets221,
  assets222,
  assets223,
  assets224,
  assets225,
  assets226,
  assets227,
  assets228,
  assets229,
  assets230,
  assets231,
  assets232,
  assets233,
  assets234,
  assets235,
  assets236,
  assets237,
  assets238,
  assets239,
  assets240,
  assets241,
  assets242,
  assets243,
  assets244,
  assets245,
  assets246,
  assets247,
  assets248,
  assets249,
  assets250,
  assets251,
  assets252,
  assets253,
  assets254,
  assets255,
  assets256,
  assets257,
  assets258,
  assets259,
  assets260,
  assets261,
  assets262,
  assets263,
  assets264,
  assets265,
  assets266,
  assets267,
  assets268,
  assets269,
  assets270,
  assets271,
  assets272,
  assets273,
  assets274,
  assets275,
  assets276,
  assets277,
  assets278,
  assets279,
  assets280
];
var assets_default281 = assets281;

// node_modules/chain-registry/esm/testnet/chains.js
var chains2 = [
  chain177,
  chain178,
  chain179,
  chain180,
  chain181,
  chain182,
  chain183,
  chain184,
  chain185,
  chain186,
  chain187,
  chain188,
  chain189,
  chain190,
  chain191,
  chain192,
  chain193,
  chain194,
  chain195,
  chain196,
  chain197,
  chain198,
  chain199,
  chain200,
  chain201,
  chain202,
  chain203,
  chain204,
  chain205,
  chain206,
  chain207,
  chain208,
  chain209,
  chain210,
  chain211,
  chain212,
  chain213,
  chain214,
  chain215,
  chain216,
  chain217,
  chain218,
  chain219,
  chain220,
  chain221,
  chain222,
  chain223,
  chain224,
  chain225,
  chain226,
  chain227,
  chain228,
  chain229,
  chain230,
  chain231,
  chain232,
  chain233,
  chain234,
  chain235,
  chain236,
  chain237,
  chain238,
  chain239,
  chain240,
  chain241,
  chain242,
  chain243,
  chain244,
  chain245,
  chain246,
  chain247,
  chain248,
  chain249,
  chain250,
  chain251,
  chain252,
  chain253,
  chain254,
  chain255,
  chain256,
  chain257,
  chain258,
  chain259,
  chain260,
  chain261,
  chain262,
  chain263,
  chain264,
  chain265,
  chain266,
  chain267,
  chain268,
  chain269,
  chain270,
  chain271,
  chain272,
  chain273,
  chain274,
  chain275,
  chain276,
  chain277,
  chain278,
  chain279,
  chain280,
  chain281
];
var chains_default2 = chains2;

// node_modules/chain-registry/esm/testnet/ibc.js
var ibc175 = [
  ...ibc137,
  ...ibc138,
  ...ibc139,
  ...ibc140,
  ...ibc141,
  ...ibc142,
  ...ibc143,
  ...ibc144,
  ...ibc145,
  ...ibc146,
  ...ibc147,
  ...ibc148,
  ...ibc149,
  ...ibc150,
  ...ibc151,
  ...ibc152,
  ...ibc153,
  ...ibc154,
  ...ibc155,
  ...ibc156,
  ...ibc157,
  ...ibc158,
  ...ibc159,
  ...ibc160,
  ...ibc161,
  ...ibc162,
  ...ibc163,
  ...ibc164,
  ...ibc165,
  ...ibc166,
  ...ibc167,
  ...ibc168,
  ...ibc169,
  ...ibc170,
  ...ibc171,
  ...ibc172,
  ...ibc173,
  ...ibc174
];
var ibc_default175 = ibc175;

// node_modules/chain-registry/esm/devnet/bitcannadevnet2/assets.js
var info734 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "bitcannadevnet2",
  assets: [{
    description: "The BCNA coin is the transactional token within the BitCanna network, serving the legal cannabis industry through its payment network, supply chain and trust network.",
    denom_units: [{
      denom: "ubcna",
      exponent: 0
    }, {
      denom: "bcna",
      exponent: 6
    }],
    base: "ubcna",
    display: "bcna",
    name: "BitCanna",
    symbol: "BCNA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/bitcannadevnet2/images/bcna.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/bitcannadevnet2/images/bcna.svg"
    },
    coingecko_id: "bitcanna",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/bitcannadevnet2/images/bcna.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/bitcannadevnet2/images/bcna.svg"
    }]
  }]
};
var assets_default282 = info734;

// node_modules/chain-registry/esm/devnet/bitcannadevnet2/chain.js
var info735 = {
  $schema: "../../chain.schema.json",
  chain_name: "bitcannadevnet2",
  status: "live",
  network_type: "devnet",
  pretty_name: "BitCanna Devnet-6 SDK v0.46.x",
  chain_id: "bitcanna-dev-6",
  bech32_prefix: "bcna",
  daemon_name: "bcnad",
  node_home: "$HOME/.bcna",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "ubcna",
      fixed_min_gas_price: 1e-3
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://rpc-devnet-6.bitcanna.io/",
      provider: "bitcanna"
    }],
    grpc: [{
      address: "http://devnet-6.bitcanna.io:9090",
      provider: "bitcanna"
    }],
    rest: [{
      address: "https://lcd-devnet-6.bitcanna.io/",
      provider: "bitcanna"
    }]
  },
  explorers: [{
    url: "https://explorer-devnet-6.bitcanna.io",
    tx_page: "https://explorer-devnet-6.bitcanna.io/tx/${txHash}"
  }]
};
var chain_default282 = info735;

// node_modules/chain-registry/esm/devnet/bitcannadevnet2/index.js
var assets282 = assets_default282;
var chain282 = chain_default282;

// node_modules/chain-registry/esm/devnet/celestiatestnet2/assets.js
var info736 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "celestiatestnet2",
  assets: [{
    denom_units: [{
      denom: "utia",
      exponent: 0
    }, {
      denom: "tia",
      exponent: 6
    }],
    base: "utia",
    name: "Celestia",
    display: "tia",
    symbol: "TIA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/celestiatestnet2/images/celestia.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/celestiatestnet2/images/celestia.svg"
    },
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/celestiatestnet2/images/celestia.svg",
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/celestiatestnet2/images/celestia.png"
    }]
  }]
};
var assets_default283 = info736;

// node_modules/chain-registry/esm/devnet/celestiatestnet2/chain.js
var info737 = {
  $schema: "../../chain.schema.json",
  chain_name: "celestiatestnet2",
  chain_id: "arabica-11",
  pretty_name: "Arabica Testnet",
  status: "live",
  network_type: "devnet",
  bech32_prefix: "celestia",
  daemon_name: "celestia-appd",
  node_home: "$HOME/.celestia-app",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "utia",
      fixed_min_gas_price: 0,
      low_gas_price: 0.01,
      average_gas_price: 0.02,
      high_gas_price: 0.1
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://validator-1.celestia-arabica-11.com/",
      provider: "Celestia Labs"
    }],
    rest: [{
      address: "https://api.celestia-arabica-11.com/",
      provider: "Celestia Labs"
    }]
  },
  explorers: [{
    kind: "Ping.Pub",
    url: "https://explorer.celestia-arabica-11.com/arabica-11",
    tx_page: "https://explorer.celestia-arabica-11.com/arabica-11/tx/${txHash}"
  }]
};
var chain_default283 = info737;

// node_modules/chain-registry/esm/devnet/celestiatestnet2/index.js
var assets283 = assets_default283;
var chain283 = chain_default283;

// node_modules/chain-registry/esm/devnet/impacthubdevnet/assets.js
var info738 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "impacthubdevnet",
  assets: [{
    description: "The native token of IXO Chain",
    denom_units: [{
      denom: "uixo",
      exponent: 0
    }, {
      denom: "ixo",
      exponent: 6
    }],
    base: "uixo",
    name: "IXO",
    display: "ixo",
    symbol: "IXO",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/impacthubdevnet/images/ixo.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/impacthubdevnet/images/ixo.svg"
    },
    coingecko_id: "ixo",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/impacthubdevnet/images/ixo.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/impacthubdevnet/images/ixo.svg"
    }]
  }]
};
var assets_default284 = info738;

// node_modules/chain-registry/esm/devnet/impacthubdevnet/chain.js
var info739 = {
  $schema: "../../chain.schema.json",
  chain_name: "impacthubdevnet",
  status: "live",
  network_type: "devnet",
  website: "https://www.ixo.world/",
  pretty_name: "ixo",
  chain_id: "devnet-1",
  bech32_prefix: "ixo",
  daemon_name: "ixod",
  node_home: "$HOME/.ixod",
  key_algos: ["secp256k1", "ed25519"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "uixo",
      fixed_min_gas_price: 0.015,
      low_gas_price: 0.015,
      average_gas_price: 0.025,
      high_gas_price: 0.04
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "uixo"
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://devnet.ixo.earth/rpc/",
      provider: "ixoworld"
    }],
    rest: [{
      address: "https://devnet.ixo.earth/rest/",
      provider: "ixoworld"
    }],
    grpc: []
  },
  explorers: [{
    kind: "ixoworld",
    url: "https://blockscan.devnet.ixo.earth/ixo",
    tx_page: "https://blockscan.devnet.ixo.earth/ixo/transactions/${txHash}",
    account_page: "https://blockscan.devnet.ixo.earth/ixo/accounts/${accountAddress}"
  }]
};
var chain_default284 = info739;

// node_modules/chain-registry/esm/devnet/impacthubdevnet/index.js
var assets284 = assets_default284;
var chain284 = chain_default284;

// node_modules/chain-registry/esm/devnet/kyvedevnet/assets.js
var info740 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "kyvedevnet",
  assets: [{
    description: "The native utility token of the Korellia devnet version of KYVE.",
    denom_units: [{
      denom: "tkyve",
      exponent: 0
    }, {
      denom: "kyve",
      exponent: 6
    }],
    base: "tkyve",
    name: "KYVE",
    display: "kyve",
    symbol: "KYVE",
    traces: [{
      type: "test-mintage",
      counterparty: {
        chain_name: "kyve",
        base_denom: "ukyve"
      },
      provider: "Kyve"
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/kyve/images/kyve-token.svg",
      image_sync: {
        chain_name: "kyve",
        base_denom: "ukyve"
      }
    }]
  }]
};
var assets_default285 = info740;

// node_modules/chain-registry/esm/devnet/kyvedevnet/chain.js
var info741 = {
  $schema: "../../chain.schema.json",
  chain_name: "kyvedevnet",
  chain_id: "korellia-2",
  pretty_name: "KYVE Korellia",
  status: "live",
  network_type: "devnet",
  bech32_prefix: "kyve",
  daemon_name: "chaind",
  node_home: "$HOME/.kyve",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "tkyve",
      fixed_min_gas_price: 0
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://rpc.korellia.kyve.network",
      provider: "kyve"
    }],
    rest: [{
      address: "https://api.korellia.kyve.network",
      provider: "kyve"
    }]
  },
  explorers: [{
    kind: "explorers.guru",
    url: "https://kyve.explorers.guru/",
    tx_page: "https://kyve.explorers.guru/transaction/${txHash}"
  }]
};
var chain_default285 = info741;

// node_modules/chain-registry/esm/devnet/kyvedevnet/index.js
var assets285 = assets_default285;
var chain285 = chain_default285;

// node_modules/chain-registry/esm/devnet/neuradevnet/assets.js
var info742 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "neuradevnet",
  assets: [{
    description: "ANKR: The native EVM, governance, and staking token for Neura, enabling secure transactions, and seamless GPU resourcing within the ecosystem.",
    denom_units: [{
      denom: "atankr",
      exponent: 0
    }, {
      denom: "ankr",
      exponent: 18
    }],
    base: "atankr",
    name: "Neura Devnet",
    display: "ankr",
    symbol: "ANKR",
    traces: [{
      type: "test-mintage",
      counterparty: {
        chain_name: "neura",
        base_denom: "atankr"
      },
      provider: "Neura"
    }],
    images: [{
      image_sync: {
        chain_name: "neura",
        base_denom: "atankr"
      },
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ankr.svg"
    }]
  }]
};
var assets_default286 = info742;

// node_modules/chain-registry/esm/devnet/neuradevnet/chain.js
var info743 = {
  $schema: "../../chain.schema.json",
  chain_name: "neuradevnet",
  chain_id: "neura_268-1",
  bech32_prefix: "neura",
  pretty_name: "Neura Devnet",
  website: "https://www.neuraprotocol.io/",
  description: "Neura is an AI-centric, EVM-compatible Layer 1 blockchain built on the Cosmos SDK. We democratize GPU access and revolutionize AI project funding with IMO\u2019s to advance AI development.",
  status: "live",
  network_type: "devnet",
  node_home: "$HOME/.neurad",
  daemon_name: "neurad",
  key_algos: ["ethsecp256k1"],
  extra_codecs: ["ethermint"],
  slip44: 1,
  fees: {
    fee_tokens: [{
      denom: "atankr"
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "atankr"
    }]
  },
  codebase: {},
  images: [{
    image_sync: {
      chain_name: "neura"
    },
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/neura/images/neura.png"
  }]
};
var chain_default286 = info743;

// node_modules/chain-registry/esm/devnet/neuradevnet/index.js
var assets286 = assets_default286;
var chain286 = chain_default286;

// node_modules/chain-registry/esm/devnet/nibirudevnet/assets.js
var info744 = {
  $schema: "../assetlist.schema.json",
  chain_name: "nibirudevnet",
  assets: [{
    description: "The native token of Nibiru network",
    denom_units: [{
      denom: "unibi",
      exponent: 0
    }, {
      denom: "nibi",
      exponent: 6
    }],
    base: "unibi",
    name: "Nibiru",
    display: "nibi",
    symbol: "NIBI",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
    }]
  }]
};
var assets_default287 = info744;

// node_modules/chain-registry/esm/devnet/nibirudevnet/chain.js
var info745 = {
  $schema: "../chain.schema.json",
  chain_name: "nibirudevnet",
  status: "live",
  network_type: "devnet",
  website: "https://nibiru.fi/",
  pretty_name: "Nibiru",
  chain_id: "nibiru-devnet-1",
  bech32_prefix: "nibi",
  daemon_name: "nibid",
  node_home: "$HOME/.nibid",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "unibi",
      fixed_min_gas_price: 0.025,
      low_gas_price: 0.025,
      average_gas_price: 0.05,
      high_gas_price: 0.1
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "unibi"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "v0.47.7",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.44.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
  },
  description: "A Web3 hub ushering in the next era of money",
  apis: {
    wss: [{
      address: "wss://hm-graphql.devnet-1.nibiru.fi/query",
      provider: "Nibiru Foundation"
    }],
    rpc: [{
      address: "https://rpc.devnet-1.nibiru.fi",
      provider: "Nibiru Foundation"
    }],
    rest: [{
      address: "https://lcd.devnet-1.nibiru.fi",
      provider: "Nibiru Foundation"
    }],
    grpc: [{
      address: "grpc.devnet-1.nibiru.fi:443",
      provider: "Nibiru Foundation"
    }]
  },
  explorers: [{
    kind: "Nibiru Foundation",
    url: "https://explorer.nibiru.fi/nibiru-devnet-1",
    tx_page: "https://explorer.nibiru.fi/nibiru-devnet-1/tx/${txHash}",
    account_page: "https://explorer.nibiru.fi/nibiru-devnet-1/account/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
  }]
};
var chain_default287 = info745;

// node_modules/chain-registry/esm/devnet/nibirudevnet/index.js
var assets287 = assets_default287;
var chain287 = chain_default287;

// node_modules/chain-registry/esm/devnet/nibirudevnet2/assets.js
var info746 = {
  $schema: "../assetlist.schema.json",
  chain_name: "nibirudevnet2",
  assets: [{
    description: "The native token of Nibiru network",
    denom_units: [{
      denom: "unibi",
      exponent: 0
    }, {
      denom: "nibi",
      exponent: 6
    }],
    base: "unibi",
    name: "Nibiru",
    display: "nibi",
    symbol: "NIBI",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
    }]
  }]
};
var assets_default288 = info746;

// node_modules/chain-registry/esm/devnet/nibirudevnet2/chain.js
var info747 = {
  $schema: "../chain.schema.json",
  chain_name: "nibirudevnet2",
  status: "live",
  network_type: "devnet",
  website: "https://nibiru.fi/",
  pretty_name: "Nibiru",
  chain_id: "nibiru-devnet-2",
  bech32_prefix: "nibi",
  daemon_name: "nibid",
  node_home: "$HOME/.nibid",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "unibi",
      fixed_min_gas_price: 0.025,
      low_gas_price: 0.025,
      average_gas_price: 0.05,
      high_gas_price: 0.1
    }]
  },
  staking: {
    staking_tokens: [{
      denom: "unibi"
    }],
    lock_duration: {
      time: "1814400s"
    }
  },
  codebase: {
    cosmos_sdk_version: "v0.47.7",
    cosmwasm_enabled: true,
    cosmwasm_version: "v0.44.0"
  },
  logo_URIs: {
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
  },
  description: "A Web3 hub ushering in the next era of money",
  apis: {
    wss: [{
      address: "wss://hm-graphql.devnet-2.nibiru.fi/query",
      provider: "Nibiru Foundation"
    }],
    rpc: [{
      address: "https://rpc.devnet-2.nibiru.fi",
      provider: "Nibiru Foundation"
    }],
    rest: [{
      address: "https://lcd.devnet-2.nibiru.fi",
      provider: "Nibiru Foundation"
    }],
    grpc: [{
      address: "grpc.devnet-2.nibiru.fi:443",
      provider: "Nibiru Foundation"
    }]
  },
  explorers: [{
    kind: "Nibiru Foundation",
    url: "https://explorer.nibiru.fi/nibiru-devnet-2",
    tx_page: "https://explorer.nibiru.fi/nibiru-devnet-2/tx/${txHash}",
    account_page: "https://explorer.nibiru.fi/nibiru-devnet-2/account/${accountAddress}"
  }],
  images: [{
    png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.png",
    svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/nibiru/images/nibiru.svg"
  }]
};
var chain_default288 = info747;

// node_modules/chain-registry/esm/devnet/nibirudevnet2/index.js
var assets288 = assets_default288;
var chain288 = chain_default288;

// node_modules/chain-registry/esm/devnet/seidevnet3/assets.js
var info748 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "seidevnet3",
  assets: [{
    description: "The native staking and governance token of the Atlantic testnet version of Sei.",
    denom_units: [{
      denom: "usei",
      exponent: 0
    }, {
      denom: "sei",
      exponent: 6
    }],
    base: "usei",
    name: "Sei",
    display: "sei",
    symbol: "SEI",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/seidevnet3/images/sei.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/seidevnet3/images/sei.png"
    }]
  }]
};
var assets_default289 = info748;

// node_modules/chain-registry/esm/devnet/seidevnet3/chain.js
var info749 = {
  $schema: "../../chain.schema.json",
  chain_name: "seidevnet3",
  chain_id: "sei-devnet-3",
  pretty_name: "Sei Devnet 3",
  status: "live",
  network_type: "devnet",
  bech32_prefix: "sei",
  daemon_name: "seid",
  node_home: "$HOME/.sei",
  key_algos: ["secp256k1"],
  slip44: 118,
  fees: {
    fee_tokens: [{
      denom: "usei",
      fixed_min_gas_price: 0
    }]
  },
  codebase: {},
  apis: {
    rpc: [{
      address: "https://rpc.sei-devnet-3.seinetwork.io",
      provider: "Sei Foundation"
    }, {
      address: "https://sei-testnet-2-rpc.brocha.in",
      provider: "Brochain"
    }],
    rest: [{
      address: "https://rest.sei-devnet-3.seinetwork.io",
      provider: "Sei Foundation"
    }, {
      address: "https://sei-testnet-2-rest.brocha.in",
      provider: "Brochain"
    }],
    grpc: [{
      address: "https://grpc.sei-devnet-3.seinetwork.io",
      provider: "Sei Foundation"
    }]
  },
  explorers: [{
    kind: "explorers.guru",
    url: "https://devnet.sei.explorers.guru",
    tx_page: "https://devnet.sei.explorers.guru/transaction/${txHash}"
  }, {
    kind: "Brochain",
    url: "https://testnet-explorer.brocha.in/sei%20atlantic%202",
    tx_page: "https://testnet-explorer.brocha.in/sei%20atlantic%202/tx/${txHash}"
  }]
};
var chain_default289 = info749;

// node_modules/chain-registry/esm/devnet/seidevnet3/index.js
var assets289 = assets_default289;
var chain289 = chain_default289;

// node_modules/chain-registry/esm/devnet/assets.js
var assets290 = [
  assets282,
  assets283,
  assets284,
  assets285,
  assets286,
  assets287,
  assets288,
  assets289
];
var assets_default290 = assets290;

// node_modules/chain-registry/esm/devnet/chains.js
var chains3 = [
  chain282,
  chain283,
  chain284,
  chain285,
  chain286,
  chain287,
  chain288,
  chain289
];
var chains_default3 = chains3;

// node_modules/chain-registry/esm/noncosmos/ethereum/assets.js
var info750 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "ethereum",
  assets: [
    {
      description: "Ethereum (ETH) is a decentralized, open-source blockchain system featuring smart contract functionality. It's the native cryptocurrency of the Ethereum platform, often regarded as the second most popular digital currency after Bitcoin. Ethereum was proposed in late 2013 and development was crowdfunded in 2014, leading to its network going live on 30 July 2015.\n\nETH, as a digital currency, is used for a variety of purposes within the Ethereum ecosystem, including the execution of decentralized smart contracts and as a mode of payment. Unlike Bitcoin, Ethereum was designed to be a platform for applications that can operate without the need for intermediaries, using blockchain technology. This has made Ethereum a leading platform for various applications, including decentralized finance (DeFi), non-fungible tokens (NFTs), and more. Ethereum is constantly evolving, with a significant upgrade termed Ethereum 2.0, which aims to improve its scalability, security, and sustainability.",
      denom_units: [
        {
          denom: "wei",
          exponent: 0
        },
        {
          denom: "gwei",
          exponent: 9
        },
        {
          denom: "eth",
          exponent: 18,
          aliases: ["ether"]
        }
      ],
      type_asset: "evm-base",
      base: "wei",
      name: "Ether",
      display: "eth",
      symbol: "ETH",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.svg"
      },
      coingecko_id: "ethereum",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth-white.svg"
      }]
    },
    {
      description: "Aave is an Open Source and Non-Custodial protocol to earn interest on deposits & borrow assets. It also features access to highly innovative flash loans, which let developers borrow instantly and easily; no collateral needed. With 16 different assets, 5 of which are stablecoins.",
      type_asset: "erc20",
      address: "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
      denom_units: [{
        denom: "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
        exponent: 0,
        aliases: ["aave-wei"]
      }, {
        denom: "aave",
        exponent: 18
      }],
      base: "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
      name: "Aave",
      display: "aave",
      symbol: "AAVE",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/aave.svg"
      },
      coingecko_id: "aave",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/aave.svg"
      }]
    },
    {
      description: "ApeCoin found new expression in web3 through art, gaming, entertainment, and events. APE is a token made to support what\u2019s next, controlled, and built on by the community. It will serve as a decentralized protocol layer for community-led initiatives that drive culture forward into the metaverse.",
      type_asset: "erc20",
      address: "0x4d224452801aced8b2f0aebe155379bb5d594381",
      denom_units: [{
        denom: "0x4d224452801aced8b2f0aebe155379bb5d594381",
        exponent: 0,
        aliases: ["ape-wei"]
      }, {
        denom: "ape",
        exponent: 18
      }],
      base: "0x4d224452801aced8b2f0aebe155379bb5d594381",
      name: "ApeCoin",
      display: "ape",
      symbol: "APE",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ape.svg"
      },
      coingecko_id: "apecoin",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ape.svg"
      }]
    },
    {
      description: "Axie Infinity is a Pok\xE9mon-inspired digital pet universe where anyone can earn tokens through skilled gameplay and contributions to the ecosystem. Players can battle, collect, raise, and build a land-based kingdom for their pets (known as Axies).",
      type_asset: "erc20",
      address: "0xbb0e17ef65f82ab018d8edd776e8dd940327b28b",
      denom_units: [{
        denom: "0xbb0e17ef65f82ab018d8edd776e8dd940327b28b",
        exponent: 0,
        aliases: ["axs-wei"]
      }, {
        denom: "axs",
        exponent: 18
      }],
      base: "0xbb0e17ef65f82ab018d8edd776e8dd940327b28b",
      name: "Axie Infinity Shard",
      display: "axs",
      symbol: "AXS",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/axs.svg"
      },
      coingecko_id: "axie-infinity",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/axs.svg"
      }]
    },
    {
      description: "Multi-Collateral Dai, brings a lot of new and exciting features, such as support for new CDP collateral types and Dai Savings Rate.",
      type_asset: "erc20",
      address: "0x6b175474e89094c44da98b954eedeac495271d0f",
      denom_units: [{
        denom: "0x6b175474e89094c44da98b954eedeac495271d0f",
        exponent: 0,
        aliases: ["dai-wei"]
      }, {
        denom: "dai",
        exponent: 18
      }],
      base: "0x6b175474e89094c44da98b954eedeac495271d0f",
      name: "Dai Stablecoin",
      display: "dai",
      symbol: "DAI",
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "forex",
          base_denom: "USD"
        },
        provider: "MakerDAO"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/dai.svg"
      },
      coingecko_id: "dai",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/dai.svg"
      }]
    },
    {
      description: "sDAI is a liquid representation of DAI deposited in the Dai savings rate contract.",
      type_asset: "erc20",
      address: "0x83F20F44975D03b1b09e64809B757c47f942BEeA",
      denom_units: [{
        denom: "0x83F20F44975D03b1b09e64809B757c47f942BEeA",
        exponent: 0,
        aliases: ["sdai-wei"]
      }, {
        denom: "sdai",
        exponent: 18
      }],
      base: "0x83F20F44975D03b1b09e64809B757c47f942BEeA",
      name: "Savings Dai",
      display: "sdai",
      symbol: "sDAI",
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x6b175474e89094c44da98b954eedeac495271d0f"
        },
        provider: "MakerDAO"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sdai.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sdai.svg"
      },
      coingecko_id: "dai",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sdai.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sdai.svg"
      }]
    },
    {
      description: "Frax is a fractional-algorithmic stablecoin protocol. It aims to provide a highly scalable, decentralized, algorithmic money in place of fixed-supply assets like BTC. Additionally, FXS is the value accrual and governance token of the entire Frax ecosystem.",
      type_asset: "erc20",
      address: "0x853d955acef822db058eb8505911ed77f175b99e",
      denom_units: [{
        denom: "0x853d955acef822db058eb8505911ed77f175b99e",
        exponent: 0,
        aliases: ["frax-wei"]
      }, {
        denom: "frax",
        exponent: 18
      }],
      base: "0x853d955acef822db058eb8505911ed77f175b99e",
      name: "Frax",
      display: "frax",
      symbol: "FRAX",
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "forex",
          base_denom: "USD"
        },
        provider: "Frax Protocol"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frax.svg"
      },
      coingecko_id: "frax",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frax.svg"
      }]
    },
    {
      description: "A blockchain-based middleware, acting as a bridge between cryptocurrency smart contracts, data feeds, APIs and traditional bank account payments.",
      type_asset: "erc20",
      address: "0x514910771af9ca656af840dff83e8264ecf986ca",
      denom_units: [{
        denom: "0x514910771af9ca656af840dff83e8264ecf986ca",
        exponent: 0,
        aliases: ["link-wei"]
      }, {
        denom: "link",
        exponent: 18
      }],
      base: "0x514910771af9ca656af840dff83e8264ecf986ca",
      name: "Chainlink",
      display: "link",
      symbol: "LINK",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/link.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/link.svg"
      },
      coingecko_id: "chainlink",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/link.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/link.svg"
      }]
    },
    {
      description: "Maker is a Decentralized Autonomous Organization that creates and insures the dai stablecoin on the Ethereum blockchain",
      type_asset: "erc20",
      address: "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
      denom_units: [{
        denom: "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
        exponent: 0,
        aliases: ["mkr-wei"]
      }, {
        denom: "mkr",
        exponent: 18
      }],
      base: "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
      name: "Maker",
      display: "mkr",
      symbol: "MKR",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/mkr.svg"
      },
      coingecko_id: "maker",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/mkr.svg"
      }]
    },
    {
      description: "RAI is a non-pegged, ETH-backed stable asset. It is useful as more 'stable' collateral for other DeFi protocols (compared to ETH or BTC) or as a stable asset with an embedded interest rate.",
      type_asset: "erc20",
      address: "0x03ab458634910aad20ef5f1c8ee96f1d6ac54919",
      denom_units: [{
        denom: "0x03ab458634910aad20ef5f1c8ee96f1d6ac54919",
        exponent: 0,
        aliases: ["rai-wei"]
      }, {
        denom: "rai",
        exponent: 18
      }],
      base: "0x03ab458634910aad20ef5f1c8ee96f1d6ac54919",
      name: "Rai Reflex Index",
      display: "rai",
      symbol: "RAI",
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "forex",
          base_denom: "USD"
        },
        provider: "RAI Finance"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/rai.svg"
      },
      coingecko_id: "rai",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/rai.svg"
      }]
    },
    {
      description: "SHIBA INU is a 100% decentralized community experiment with it claims that 1/2 the tokens have been sent to Vitalik and the other half were locked to a Uniswap pool and the keys burned.",
      type_asset: "erc20",
      address: "0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce",
      denom_units: [{
        denom: "0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce",
        exponent: 0,
        aliases: ["shib-wei"]
      }, {
        denom: "shib",
        exponent: 18
      }],
      base: "0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce",
      name: "Shiba Inu",
      display: "shib",
      symbol: "SHIB",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/shib.svg"
      },
      coingecko_id: "shiba-inu",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/shib.svg"
      }]
    },
    {
      description: "stETH is a token that represents staked ether in Lido, combining the value of initial deposit + staking rewards. stETH tokens are pegged 1:1 to the ETH staked with Lido and can be used as one would use ether, allowing users to earn Eth2 staking rewards whilst benefiting from Defi yields.",
      type_asset: "erc20",
      address: "0xae7ab96520de3a18e5e111b5eaab095312d7fe84",
      denom_units: [{
        denom: "0xae7ab96520de3a18e5e111b5eaab095312d7fe84",
        exponent: 0,
        aliases: ["steth-wei"]
      }, {
        denom: "steth",
        exponent: 18
      }],
      base: "0xae7ab96520de3a18e5e111b5eaab095312d7fe84",
      name: "Lido Staked Ether",
      display: "steth",
      symbol: "stETH",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "wei"
        },
        provider: "Lido"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/steth.svg"
      },
      coingecko_id: "staked-ether",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/steth.svg"
      }]
    },
    {
      description: "wstETH is a wrapped version of stETH. As some DeFi protocols require a constant balance mechanism for tokens, wstETH keeps your balance of stETH fixed and uses an underlying share system to reflect your earned staking rewards.",
      type_asset: "erc20",
      address: "0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",
      denom_units: [{
        denom: "0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",
        exponent: 0,
        aliases: ["wsteth-wei"]
      }, {
        denom: "wsteth",
        exponent: 18
      }],
      base: "0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",
      name: "Wrapped Lido Staked Ether",
      display: "wsteth",
      symbol: "wstETH",
      traces: [{
        type: "wrapped",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xae7ab96520de3a18e5e111b5eaab095312d7fe84"
        },
        provider: "Lido"
      }],
      coingecko_id: "wrapped-steth",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wsteth.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wsteth.svg"
      }]
    },
    {
      description: "Frax Ether is a liquid ETH staking derivative designed to uniquely leverage the Frax Finance ecosystem. frxETH acts as a stablecoin loosely pegged to ETH, leveraging Frax's winning playbook on stablecoins and onboarding ETH into the Frax ecosystem.",
      type_asset: "erc20",
      address: "0x5e8422345238f34275888049021821e8e08caa1f",
      denom_units: [{
        denom: "0x5e8422345238f34275888049021821e8e08caa1f",
        exponent: 0,
        aliases: ["frxeth-wei"]
      }, {
        denom: "frxeth",
        exponent: 18
      }],
      base: "0x5e8422345238f34275888049021821e8e08caa1f",
      name: "Frax Ether",
      display: "frxeth",
      symbol: "frxETH",
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "wei"
        },
        provider: "Frax"
      }],
      coingecko_id: "frax-ether",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frxeth.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frxeth.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frxeth.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frxeth.svg"
      }
    },
    {
      description: "sfrxETH is the version of frxETH which accrues staking yield. All profit generated from Frax Ether validators is distributed to sfrxETH holders. By exchanging frxETH for sfrxETH, one becomes eligible for staking yield, which is redeemed upon converting sfrxETH back to frxETH.",
      type_asset: "erc20",
      address: "0xac3e018457b222d93114458476f3e3416abbe38f",
      denom_units: [{
        denom: "0xac3e018457b222d93114458476f3e3416abbe38f",
        exponent: 0,
        aliases: ["sfrxeth-wei"]
      }, {
        denom: "sfrxeth",
        exponent: 18
      }],
      base: "0xac3e018457b222d93114458476f3e3416abbe38f",
      name: "Staked Frax Ether",
      display: "sfrxeth",
      symbol: "sfrxETH",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x5e8422345238f34275888049021821e8e08caa1f"
        },
        provider: "Frax"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sfrxeth.svg"
      },
      coingecko_id: "staked-frax-ether",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sfrxeth.svg"
      }]
    },
    {
      description: "Rocket Pool is a decentralised Ethereum Proof of Stake pool.",
      type_asset: "erc20",
      address: "0xae78736cd615f374d3085123a210448e74fc6393",
      denom_units: [{
        denom: "0xae78736cd615f374d3085123a210448e74fc6393",
        exponent: 0,
        aliases: ["reth-wei"]
      }, {
        denom: "reth",
        exponent: 18
      }],
      base: "0xae78736cd615f374d3085123a210448e74fc6393",
      name: "Rocket Pool Ether",
      display: "reth",
      symbol: "rETH",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "wei"
        },
        provider: "Rocket Pool"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/reth.png"
      },
      coingecko_id: "rocket-pool-eth",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/reth.png"
      }]
    },
    {
      description: "Coinbase Wrapped Staked ETH (\u201CcbETH\u201D) is a utility token and liquid representation of ETH staked through Coinbase. cbETH gives customers the option to sell, transfer, or otherwise use their staked ETH in dapps while it remains locked by the Ethereum protocol.",
      type_asset: "erc20",
      address: "0xbe9895146f7af43049ca1c1ae358b0541ea49704",
      denom_units: [{
        denom: "0xbe9895146f7af43049ca1c1ae358b0541ea49704",
        exponent: 0,
        aliases: ["cbeth-wei"]
      }, {
        denom: "cbeth",
        exponent: 18
      }],
      base: "0xbe9895146f7af43049ca1c1ae358b0541ea49704",
      name: "Coinbase Wrapped Staked ETH",
      display: "cbeth",
      symbol: "cbETH",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "wei"
        },
        provider: "Coinbase"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/cbeth.png"
      },
      coingecko_id: "coinbase-wrapped-staked-eth",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/cbeth.png"
      }]
    },
    {
      description: "UNI token served as governance token for Uniswap protocol with 1 billion UNI have been minted at genesis. 60% of the UNI genesis supply is allocated to Uniswap community members and remaining for team, investors and advisors.",
      type_asset: "erc20",
      address: "0x1f9840a85d5af5bf1d1762f925bdaddc4201f984",
      denom_units: [{
        denom: "0x1f9840a85d5af5bf1d1762f925bdaddc4201f984",
        exponent: 0,
        aliases: ["uni-wei"]
      }, {
        denom: "uni",
        exponent: 18
      }],
      base: "0x1f9840a85d5af5bf1d1762f925bdaddc4201f984",
      name: "Uniswap",
      display: "uni",
      symbol: "UNI",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/uni.svg"
      },
      coingecko_id: "uniswap",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/uni.svg"
      }]
    },
    {
      description: "USDC is a fully collateralized US Dollar stablecoin developed by CENTRE, the open source project with Circle being the first of several forthcoming issuers.",
      type_asset: "erc20",
      address: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
      denom_units: [{
        denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
        exponent: 0,
        aliases: ["uusdc"]
      }, {
        denom: "usdc",
        exponent: 6
      }],
      base: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
      name: "USDC",
      display: "usdc",
      symbol: "USDC",
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "forex",
          base_denom: "USD"
        },
        provider: "Circle"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      coingecko_id: "usd-coin",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    },
    {
      description: "Tether gives you the joint benefits of open blockchain technology and traditional currency by converting your cash into a stable digital currency equivalent.",
      type_asset: "erc20",
      address: "0xdac17f958d2ee523a2206206994597c13d831ec7",
      denom_units: [{
        denom: "0xdac17f958d2ee523a2206206994597c13d831ec7",
        exponent: 0,
        aliases: ["uusdt"]
      }, {
        denom: "usdt",
        exponent: 6
      }],
      base: "0xdac17f958d2ee523a2206206994597c13d831ec7",
      name: "Tether USD",
      display: "usdt",
      symbol: "USDT",
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "forex",
          base_denom: "USD"
        },
        provider: "Tether"
      }],
      coingecko_id: "tether",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }, {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt_logomark.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt_logomark.svg",
        theme: {
          circle: false,
          primary_color_hex: "#50AF95",
          background_color_hex: "#00000000"
        }
      }],
      socials: {
        website: "https://tether.to/",
        twitter: "https://x.com/Tether_to"
      }
    },
    {
      description: "Wrapped Bitcoin (WBTC) is an ERC20 token backed 1:1 with Bitcoin. Completely transparent. 100% verifiable. Community led.",
      type_asset: "erc20",
      address: "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",
      denom_units: [{
        denom: "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",
        exponent: 0,
        aliases: ["wbtc-satoshi"]
      }, {
        denom: "wbtc",
        exponent: 8
      }],
      base: "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",
      name: "Wrapped Bitcoin",
      display: "wbtc",
      symbol: "WBTC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "bitcoin",
          base_denom: "sat"
        },
        provider: "BitGo, Kyber, and Ren"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.svg"
      },
      coingecko_id: "wrapped-bitcoin",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wbtc.svg"
      }]
    },
    {
      description: "wETH is 'wrapped ETH'",
      type_asset: "erc20",
      address: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
      denom_units: [{
        denom: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
        exponent: 0,
        aliases: ["weth-wei"]
      }, {
        denom: "weth",
        exponent: 18
      }],
      base: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
      name: "Wrapped Ether",
      display: "weth",
      symbol: "WETH",
      traces: [{
        type: "wrapped",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "wei"
        },
        provider: "Ethereum"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/weth.svg"
      },
      coingecko_id: "weth",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/weth.svg"
      }]
    },
    {
      description: "Chain is a cloud blockchain protocol that enables organizations to build better financial services from the ground up powered by Sequence and Chain Core.",
      type_asset: "erc20",
      address: "0xa2cd3d43c775978a96bdbf12d733d5a1ed94fb18",
      denom_units: [{
        denom: "0xa2cd3d43c775978a96bdbf12d733d5a1ed94fb18",
        exponent: 0,
        aliases: ["xcn-wei"]
      }, {
        denom: "xcn",
        exponent: 18
      }],
      base: "0xa2cd3d43c775978a96bdbf12d733d5a1ed94fb18",
      name: "Chain",
      display: "xcn",
      symbol: "XCN",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/xcn.svg"
      },
      coingecko_id: "chain-2",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/xcn.svg"
      }]
    },
    {
      description: "Binance USD (BUSD) is a dollar-backed stablecoin issued and custodied by Paxos Trust Company, and regulated by the New York State Department of Financial Services. BUSD is available directly for sale 1:1 with USD on Paxos.com and will be listed for trading on Binance.",
      type_asset: "erc20",
      address: "0x4fabb145d64652a948d72533023f6e7a623c7c53",
      denom_units: [{
        denom: "0x4fabb145d64652a948d72533023f6e7a623c7c53",
        exponent: 0,
        aliases: ["busd-wei"]
      }, {
        denom: "busd",
        exponent: 18
      }],
      base: "0x4fabb145d64652a948d72533023f6e7a623c7c53",
      name: "Binance USD",
      display: "busd",
      symbol: "BUSD",
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "forex",
          base_denom: "USD"
        },
        provider: "Binance"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/busd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/busd.svg"
      },
      coingecko_id: "binance-usd",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/busd.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/busd.svg"
      }]
    },
    {
      description: "Pepe is a community based memecoin with one mission: to make memecoins great again. Made to honor the iconic meme we all know and love, Pepe is here to take reign as the most memeable memecoin in existence, fueled purely by memetic power. Pepe is for the people.",
      type_asset: "erc20",
      address: "0x6982508145454Ce325dDbE47a25d4ec3d2311933",
      denom_units: [{
        denom: "0x6982508145454Ce325dDbE47a25d4ec3d2311933",
        exponent: 0,
        aliases: ["pepe-wei"]
      }, {
        denom: "pepe",
        exponent: 18
      }],
      base: "0x6982508145454Ce325dDbE47a25d4ec3d2311933",
      name: "Pepe",
      display: "pepe",
      symbol: "PEPE",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pepe.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pepe.svg"
      },
      coingecko_id: "pepe",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pepe.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pepe.svg"
      }],
      keywords: ["meme"]
    },
    {
      description: "Maximize ETH yield through leveraged staking across Aave, Compound and Morpho and liquidity provision of ETH liquid staking tokens on Uniswap V3.",
      type_asset: "erc20",
      address: "0xb5b29320d2Dde5BA5BAFA1EbcD270052070483ec",
      denom_units: [{
        denom: "0xb5b29320d2Dde5BA5BAFA1EbcD270052070483ec",
        exponent: 0
      }, {
        denom: "YieldETH",
        exponent: 18
      }],
      base: "0xb5b29320d2Dde5BA5BAFA1EbcD270052070483ec",
      name: "Real Yield ETH",
      display: "YieldETH",
      symbol: "YieldETH",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "wei"
        },
        provider: "Seven Seas & DeFine Logic Labs"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/yieldeth.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/yieldeth.svg"
      },
      coingecko_id: "yieldeth-sommelier",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/yieldeth.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/yieldeth.svg"
      }]
    },
    {
      description: "TBTC replaces centralized intermediaries with a randomly selected group of nodes on the Threshold Network. This group of independent nodes works together to secure your deposited Bitcoin through threshold cryptography. TBTC allows anyone to use Bitcoin in the expanding DeFi and Web3 universe.",
      denom_units: [{
        denom: "0x18084fba666a33d37592fa2633fd49a74dd93a88",
        exponent: 0,
        aliases: []
      }, {
        denom: "tBTC",
        exponent: 18,
        aliases: []
      }],
      type_asset: "erc20",
      address: "0x18084fba666a33d37592fa2633fd49a74dd93a88",
      base: "0x18084fba666a33d37592fa2633fd49a74dd93a88",
      display: "tBTC",
      name: "tBTC v2",
      symbol: "tBTC",
      traces: [{
        type: "wrapped",
        counterparty: {
          chain_name: "bitcoin",
          base_denom: "sat"
        },
        provider: "Threshold Network"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/tbtc.svg"
      },
      coingecko_id: "tbtc",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/tbtc.svg"
      }]
    },
    {
      description: "pSTAKE is a liquid staking protocol unlocking the liquidity of staked assets. Stakers of PoS tokens can stake their assets while maintaining the liquidity of these assets. Users earn staking rewards + receive 1:1 pegged staked representative tokens which can be used to generate additional yield.",
      denom_units: [{
        denom: "0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006",
        exponent: 0,
        aliases: []
      }, {
        denom: "pstake",
        exponent: 18,
        aliases: []
      }],
      type_asset: "erc20",
      address: "0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006",
      base: "0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006",
      display: "pstake",
      name: "pSTAKE Finance",
      symbol: "PSTAKE",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "persistence",
          base_denom: "uxprt"
        },
        provider: "Persistence"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/pstake.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/pstake.svg"
      },
      coingecko_id: "pstake-finance",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/pstake.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/persistence/images/pstake.svg"
      }]
    },
    {
      description: "The OCC token acts as the fuel for the OccamRazer launchpad and it is indirectly used as well on the DAO governance layer.",
      type_asset: "erc20",
      address: "0x2F109021aFe75B949429fe30523Ee7C0D5B27207",
      denom_units: [{
        denom: "0x2F109021aFe75B949429fe30523Ee7C0D5B27207",
        exponent: 0,
        aliases: []
      }, {
        denom: "occ",
        exponent: 18
      }],
      base: "0x2F109021aFe75B949429fe30523Ee7C0D5B27207",
      name: "OccamFi",
      display: "occ",
      symbol: "OCC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/occamfi.png"
      },
      coingecko_id: "occamfi",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/occamfi.png"
      }]
    },
    {
      description: "The PAGE token is used for actions in the PageDAO NFT literary ecosystem and for DAO governance.",
      type_asset: "erc20",
      address: "0x60e683C6514Edd5F758A55b6f393BeBBAfaA8d5e",
      denom_units: [{
        denom: "0x60e683C6514Edd5F758A55b6f393BeBBAfaA8d5e",
        exponent: 0,
        aliases: []
      }, {
        denom: "page",
        exponent: 8
      }],
      base: "0x60e683C6514Edd5F758A55b6f393BeBBAfaA8d5e",
      name: "Page",
      display: "page",
      symbol: "PAGE",
      coingecko_id: "page",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/page.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/page.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/page.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/page.svg"
      }]
    },
    {
      description: "Gelotto blends gaming, DEFI, and fun Dapps in a unique Web3 ecosystem. Join us to become part of the house, earning from all Gelotto products. Our main goal? To bring the masses into Web3 with open, accessible, and enjoyable Dapps.",
      type_asset: "erc20",
      address: "0xd73175f9eb15eee81745d367ae59309Ca2ceb5e2",
      denom_units: [{
        denom: "0xd73175f9eb15eee81745d367ae59309Ca2ceb5e2",
        exponent: 0,
        aliases: []
      }, {
        denom: "glto",
        exponent: 6
      }],
      base: "0xd73175f9eb15eee81745d367ae59309Ca2ceb5e2",
      name: "Gelotto",
      display: "glto",
      symbol: "GLTO",
      traces: [{
        type: "additional-mintage",
        counterparty: {
          chain_name: "juno",
          base_denom: "cw20:juno1j0a9ymgngasfn3l5me8qpd53l5zlm9wurfdk7r65s5mg6tkxal3qpgf5se"
        },
        provider: "Gelotto"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.svg"
      },
      images: [{
        image_sync: {
          chain_name: "juno",
          base_denom: "cw20:juno1j0a9ymgngasfn3l5me8qpd53l5zlm9wurfdk7r65s5mg6tkxal3qpgf5se"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/juno/images/glto.svg"
      }]
    },
    {
      type_asset: "erc20",
      address: "0x78a0A62Fba6Fb21A83FE8a3433d44C73a4017A6f",
      denom_units: [{
        denom: "0x78a0A62Fba6Fb21A83FE8a3433d44C73a4017A6f",
        exponent: 0,
        aliases: []
      }, {
        denom: "ox",
        exponent: 18
      }],
      base: "0x78a0A62Fba6Fb21A83FE8a3433d44C73a4017A6f",
      name: "Open Exchange Token",
      display: "ox",
      symbol: "OX",
      coingecko_id: "open-exchange-token",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ox.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ox.svg"
      }]
    },
    {
      description: "BEAST: Battle, Breed, and Customize unique creatures powered by Ethereum & Cosmos",
      extended_description: "A monster breeding & battling game with a twist. Each game interaction burns $BEAST tokens, adding a strategic depth to breeding, battling, and customization. Dive into a world where every move counts!",
      type_asset: "erc20",
      address: "0xA4426666addBE8c4985377d36683D17FB40c31Be",
      denom_units: [{
        denom: "0xA4426666addBE8c4985377d36683D17FB40c31Be",
        exponent: 0,
        aliases: []
      }, {
        denom: "beast",
        exponent: 6
      }],
      base: "0xA4426666addBE8c4985377d36683D17FB40c31Be",
      name: "Gelotto BEAST",
      display: "beast",
      symbol: "BEAST",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/beast.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/beast.png"
      }]
    },
    {
      description: "PUNDIX token is the native token that functions within the Pundi X ecosystem, including PundiX Chain and XPOS.",
      extended_description: "PUNDIX token is the native token that functions within the Pundi X ecosystem, including PundiX Chain and XPOS. PUNDIX has several core use cases, including:\n- Payment for goods and services from merchants through XPOS\n- Gas Fee on PundiX\xA0Chain\n- Listing tokens in the XPOS\n- Merchant payments for loyalty programs and ads",
      type_asset: "erc20",
      address: "0x0FD10b9899882a6f2fcb5c371E17e70FdEe00C38",
      denom_units: [{
        denom: "0x0FD10b9899882a6f2fcb5c371E17e70FdEe00C38",
        exponent: 0
      }, {
        denom: "PUNDIX",
        exponent: 18
      }],
      base: "0x0FD10b9899882a6f2fcb5c371E17e70FdEe00C38",
      name: "Pundi X Token",
      display: "PUNDIX",
      symbol: "PUNDIX",
      coingecko_id: "pundi-x-2",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/pundi-x-token-logo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/pundi-x-token-logo.svg"
      }],
      socials: {
        website: "https://pundix.com",
        twitter: "https://x.com/PundiXLabs"
      }
    },
    {
      description: "Staked FRAX (sFRAX) is an ERC4626 staking vault that distributes part of the Frax Protocol yield weekly to stakers denominated in FRAX stablecoins.",
      type_asset: "erc20",
      address: "0xa663b02cf0a4b149d2ad41910cb81e23e1c41c32",
      denom_units: [{
        denom: "0xa663b02cf0a4b149d2ad41910cb81e23e1c41c32",
        exponent: 0,
        aliases: ["sfrax-wei"]
      }, {
        denom: "sfrax",
        exponent: 18
      }],
      base: "0xa663b02cf0a4b149d2ad41910cb81e23e1c41c32",
      name: "Staked FRAX",
      display: "sfrax",
      symbol: "sFRAX",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x853d955acef822db058eb8505911ed77f175b99e"
        },
        provider: "Frax"
      }],
      coingecko_id: "staked-frax",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sfrax.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sfrax.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sfrax.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/sfrax.svg"
      }
    },
    {
      description: "FXS is the value accrual and governance token of the entire Frax ecosystem. Frax is a fractional-algorithmic stablecoin protocol. It aims to provide a highly scalable, decentralized, algorithmic money in place of fixed-supply assets like BTC.",
      type_asset: "erc20",
      address: "0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0",
      denom_units: [{
        denom: "0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0",
        exponent: 0,
        aliases: ["fxs-wei"]
      }, {
        denom: "fxs",
        exponent: 18
      }],
      base: "0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0",
      name: "Frax Share",
      display: "fxs",
      symbol: "FXS",
      coingecko_id: "frax-share",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/fxs.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/fxs.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/fxs.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/fxs.svg"
      }
    },
    {
      description: "PAX Gold (PAXG) tokens each represent one fine troy ounce of an LBMA-certified, London Good Delivery physical gold bar, secured in Brink\u2019s vaults.",
      type_asset: "erc20",
      address: "0x45804880De22913dAFE09f4980848ECE6EcbAf78",
      denom_units: [{
        denom: "0x45804880De22913dAFE09f4980848ECE6EcbAf78",
        exponent: 0,
        aliases: ["paxg-wei"]
      }, {
        denom: "paxg",
        exponent: 18
      }],
      base: "0x45804880De22913dAFE09f4980848ECE6EcbAf78",
      name: "Paxos Gold",
      display: "paxg",
      symbol: "PAXG",
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "comex",
          base_denom: "XAU"
        },
        provider: "Paxos"
      }],
      coingecko_id: "pax-gold",
      socials: {
        website: "https://www.paxos.com/paxgold/",
        twitter: "https://twitter.com/paxosglobal"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/paxg.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/paxg.svg"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/paxg.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/paxg.svg"
      }
    },
    {
      description: "CRV is the governance token for Curve Finance.",
      type_asset: "erc20",
      address: "0xd533a949740bb3306d119cc777fa900ba034cd52",
      denom_units: [{
        denom: "0xd533a949740bb3306d119cc777fa900ba034cd52",
        exponent: 0,
        aliases: ["crv-wei"]
      }, {
        denom: "crv",
        exponent: 18
      }],
      base: "0xd533a949740bb3306d119cc777fa900ba034cd52",
      name: "Curve DAO",
      display: "crv",
      symbol: "CRV",
      coingecko_id: "curve-dao-token",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/crv.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/crv.png"
      }
    },
    {
      description: "A collateralized-debt-position (CDP) stablecoin by Curve DAO.",
      type_asset: "erc20",
      address: "0xf939e0a03fb07f59a73314e73794be0e57ac1b4e",
      denom_units: [{
        denom: "0xf939e0a03fb07f59a73314e73794be0e57ac1b4e",
        exponent: 0,
        aliases: ["crvusd-wei"]
      }, {
        denom: "crvusd",
        exponent: 18
      }],
      base: "0xf939e0a03fb07f59a73314e73794be0e57ac1b4e",
      name: "crvUSD",
      display: "crvusd",
      symbol: "crvUSD",
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "forex",
          base_denom: "USD"
        },
        provider: "Curve Finance"
      }],
      coingecko_id: "crvusd",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/crvusd.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/crvusd.png"
      }
    },
    {
      description: "pxETH is built on top of the Pirex platform and forms the foundation of the Dinero protocol.",
      type_asset: "erc20",
      address: "0x04c154b66cb340f3ae24111cc767e0184ed00cc6",
      denom_units: [{
        denom: "0x04c154b66cb340f3ae24111cc767e0184ed00cc6",
        exponent: 0,
        aliases: ["pxeth-wei"]
      }, {
        denom: "pxeth",
        exponent: 18
      }],
      base: "0x04c154b66cb340f3ae24111cc767e0184ed00cc6",
      name: "Dinero Staked ETH",
      display: "pxeth",
      symbol: "pxETH",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "wei"
        },
        provider: "Dinero"
      }],
      coingecko_id: "dinero-staked-eth",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pxeth.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/pxeth.png"
      }
    },
    {
      description: "eETH is a natively restaked liquid staking token on Ethereum.",
      type_asset: "erc20",
      address: "0x35fa164735182de50811e8e2e824cfb9b6118ac2",
      denom_units: [{
        denom: "0x35fa164735182de50811e8e2e824cfb9b6118ac2",
        exponent: 0,
        aliases: ["eeth-wei"]
      }, {
        denom: "eeth",
        exponent: 18
      }],
      base: "0x35fa164735182de50811e8e2e824cfb9b6118ac2",
      name: "ether.fi Staked ETH",
      display: "eeth",
      symbol: "eETH",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "wei"
        },
        provider: "EtherFi"
      }],
      coingecko_id: "ether-fi-staked-eth",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eeth.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eeth.png"
      }
    },
    {
      description: "The native governance token of Ethena.",
      type_asset: "erc20",
      address: "0x57e114b691db790c35207b2e685d4a43181e6061",
      denom_units: [{
        denom: "0x57e114b691db790c35207b2e685d4a43181e6061",
        exponent: 0,
        aliases: ["ena-wei"]
      }, {
        denom: "ena",
        exponent: 18
      }],
      base: "0x57e114b691db790c35207b2e685d4a43181e6061",
      name: "Ethena",
      display: "ena",
      symbol: "ENA",
      coingecko_id: "ethena",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ena.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ena.png"
      }
    },
    {
      description: "Ethena USDe is a synthetic dollar protocol built on Ethereum.",
      type_asset: "erc20",
      address: "0x4c9edd5852cd905f086c759e8383e09bff1e68b3",
      denom_units: [{
        denom: "0x4c9edd5852cd905f086c759e8383e09bff1e68b3",
        exponent: 0,
        aliases: ["usde-wei"]
      }, {
        denom: "usde",
        exponent: 18
      }],
      base: "0x4c9edd5852cd905f086c759e8383e09bff1e68b3",
      name: "Ethena USDe",
      display: "usde",
      symbol: "USDe",
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "forex",
          base_denom: "USD"
        },
        provider: "Ethena"
      }],
      coingecko_id: "ethena-usde",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usde.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usde.png"
      }
    },
    {
      description: "A Liquid Restaking Token (LRT) and Strategy Manager for EigenLayer.",
      type_asset: "erc20",
      address: "0xbf5495efe5db9ce00f80364c8b423567e58d2110",
      denom_units: [{
        denom: "0xbf5495efe5db9ce00f80364c8b423567e58d2110",
        exponent: 0,
        aliases: ["ezeth-wei"]
      }, {
        denom: "ezeth",
        exponent: 18
      }],
      base: "0xbf5495efe5db9ce00f80364c8b423567e58d2110",
      name: "Renzo Restaked ETH",
      display: "ezeth",
      symbol: "ezETH",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "wei"
        },
        provider: "Renzo"
      }],
      coingecko_id: "renzo-restaked-eth",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ezeth.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ezeth.png"
      }
    },
    {
      description: "Ankr is a Web3 decentralized infrastructure provider that helps developers, dapps, and stakers easily interact with multiple blockchains. It allows you to create DApps using API and RPC, staking on Ankr Earn, and use customized blockchain solutions for businesses.",
      type_asset: "erc20",
      address: "0x8290333ceF9e6D528dD5618Fb97a76f268f3EDD4",
      denom_units: [{
        denom: "0x8290333ceF9e6D528dD5618Fb97a76f268f3EDD4",
        exponent: 0,
        aliases: ["ankr-wei"]
      }, {
        denom: "ankr",
        exponent: 18
      }],
      base: "0x8290333ceF9e6D528dD5618Fb97a76f268f3EDD4",
      name: "Ankr Network",
      display: "ankr",
      symbol: "ANKR",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/ankr.svg"
      }],
      coingecko_id: "ankr",
      socials: {
        website: "https://www.ankr.com",
        twitter: "https://x.com/ankr"
      }
    },
    {
      description: "YUM is the Cacao Swap token, powering decentralised rails.",
      type_asset: "erc20",
      address: "0xcE682c89C63d2850Cb2ca898E44D6c7c30d897a6",
      denom_units: [{
        denom: "0xcE682c89C63d2850Cb2ca898E44D6c7c30d897a6",
        exponent: 0,
        aliases: ["yum-wei"]
      }, {
        denom: "yum",
        exponent: 18
      }],
      base: "0xcE682c89C63d2850Cb2ca898E44D6c7c30d897a6",
      name: "Yum",
      display: "yum",
      symbol: "YUM",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/yum.png"
      }],
      socials: {
        website: "https://cacaoswap.app",
        twitter: "https://x.com/CacaoSwap"
      }
    }
  ]
};
var assets_default291 = info750;

// node_modules/chain-registry/esm/noncosmos/ethereum/ibc.js
var info751 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "composable",
    client_id: "08-wasm-159",
    connection_id: "connection-70"
  },
  chain_2: {
    chain_name: "ethereum",
    client_id: "07-tendermint-11",
    connection_id: "connection-10"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-52",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-2",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default176 = info751;

// node_modules/chain-registry/esm/noncosmos/ethereum/index.js
var assets291 = assets_default291;
var ibc176 = ibc_default176;

// node_modules/chain-registry/esm/noncosmos/picasso/assets.js
var info752 = {
  $schema: "../assetlist.schema.json",
  chain_name: "picasso",
  assets: [
    {
      description: "The native staking and governance token of Picasso Kusama.",
      denom_units: [{
        denom: "ppica",
        exponent: 0
      }, {
        denom: "pica",
        exponent: 12
      }],
      type_asset: "substrate",
      base: "ppica",
      name: "Pica",
      display: "pica",
      symbol: "PICA",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/composable/images/pica.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/composable/images/pica.svg"
      }]
    },
    {
      denom_units: [{
        denom: "4",
        exponent: 0
      }, {
        denom: "ksm",
        exponent: 12
      }],
      type_asset: "substrate",
      base: "4",
      name: "Kusama",
      display: "ksm",
      symbol: "KSM",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "kusama",
          base_denom: "Planck"
        },
        provider: "Kusama Parachain"
      }],
      images: [{
        image_sync: {
          chain_name: "kusama",
          base_denom: "Planck"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/kusama/images/ksm.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/kusama/images/ksm.svg"
      }
    },
    {
      denom_units: [{
        denom: "79228162514264337593543950342",
        exponent: 0
      }, {
        denom: "dot",
        exponent: 10
      }],
      type_asset: "substrate",
      base: "79228162514264337593543950342",
      name: "Polkadot",
      display: "dot",
      symbol: "DOT",
      traces: [{
        type: "ibc",
        counterparty: {
          chain_name: "composablepolkadot",
          base_denom: "79228162514264337593543950342",
          channel_id: "channel-15"
        },
        chain: {
          channel_id: "channel-15",
          path: "transfer/channel-15/79228162514264337593543950342"
        }
      }],
      images: [{
        image_sync: {
          chain_name: "composablepolkadot",
          base_denom: "79228162514264337593543950342"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.png"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.svg"
      }
    },
    {
      denom_units: [{
        denom: "130",
        exponent: 0
      }, {
        denom: "usdt",
        exponent: 6
      }],
      type_asset: "substrate",
      base: "130",
      name: "Statemine",
      display: "usdt",
      symbol: "USDT",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "statemine",
          base_denom: "130"
        },
        provider: "Kusama Parachain"
      }],
      images: [{
        image_sync: {
          chain_name: "statemine",
          base_denom: "130"
        }
      }]
    },
    {
      denom_units: [{
        denom: "2125",
        exponent: 0
      }, {
        denom: "TNKR",
        exponent: 12
      }],
      base: "2125",
      name: "Tinkernet",
      display: "TNKR",
      symbol: "TNKR",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "tinkernet",
          base_denom: "Planck"
        },
        provider: "Tinkernet Parachain"
      }],
      images: [{
        image_sync: {
          chain_name: "tinkernet",
          base_denom: "Planck"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/tinkernet/images/tnkr.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/tinkernet/images/tnkr.svg"
      }
    }
  ]
};
var assets_default292 = info752;

// node_modules/chain-registry/esm/noncosmos/picasso/ibc.js
var info753 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "composable",
    client_id: "08-wasm-5",
    connection_id: "connection-5"
  },
  chain_2: {
    chain_name: "picasso",
    client_id: "07-tendermint-32",
    connection_id: "connection-26"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-2",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-17",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}, {
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "composablepolkadot",
    client_id: "10-grandpa-28",
    connection_id: "connection-23"
  },
  chain_2: {
    chain_name: "picasso",
    client_id: "10-grandpa-28",
    connection_id: "connection-23"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-15",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-15",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default177 = info753;

// node_modules/chain-registry/esm/noncosmos/picasso/index.js
var assets292 = assets_default292;
var ibc177 = ibc_default177;

// node_modules/chain-registry/esm/noncosmos/solana/assets.js
var info754 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "solana",
  assets: [
    {
      description: "Solana (SOL) is the native asset of the Solana blockchain.",
      denom_units: [{
        denom: "Lamport",
        exponent: 0
      }, {
        denom: "SOL",
        exponent: 9
      }],
      type_asset: "svm-base",
      base: "Lamport",
      name: "Solana",
      display: "SOL",
      symbol: "SOL",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/sol.svg"
      },
      coingecko_id: "solana",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/sol.svg"
      }]
    },
    {
      type_asset: "erc20",
      address: "So11111111111111111111111111111111111111112",
      denom_units: [{
        denom: "So11111111111111111111111111111111111111112",
        exponent: 0
      }, {
        denom: "wsol",
        exponent: 9
      }],
      base: "So11111111111111111111111111111111111111112",
      name: "Wrapped SOL",
      display: "wsol",
      symbol: "WSOL",
      traces: [{
        type: "wrapped",
        counterparty: {
          chain_name: "solana",
          base_denom: "Lamport"
        },
        provider: "Solana"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/sol.svg"
      },
      coingecko_id: "wrapped-solana",
      images: [{
        image_sync: {
          chain_name: "solana",
          base_denom: "Lamport"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/sol.svg"
      }]
    },
    {
      description: "The Official Bonk Inu token",
      type_asset: "erc20",
      address: "DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263",
      denom_units: [{
        denom: "DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263",
        exponent: 0
      }, {
        denom: "bonk",
        exponent: 5
      }],
      base: "DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263",
      name: "Bonk",
      display: "bonk",
      symbol: "BONK",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/bonk.png"
      },
      coingecko_id: "bonk",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/bonk.png"
      }]
    },
    {
      description: "Pyth is a protocol that allows market participants to publish pricing information on-chain for others to use. The protocol is an interaction between three parties:\n-Publishers submit pricing information to Pyth's oracle program. Pyth has multiple data publishers for every product to improve the accuracy and robustness of the system.\n-Pyth's oracle program combines publishers' data to produce a single aggregate price and confidence interval.\nConsumers read the price information produced by the oracle program.\n\nPyth's oracle program runs simultaneously on both Solana mainnet and Pythnet. Each instance of the program is responsible for its own set of price feeds. Solana Price Feeds are available for use by Solana protocols. In this case, since the oracle program itself runs on Solana, the resulting prices are immediately available to consumers without requiring any additional work. Pythnet Price Feeds are available on 12+ blockchains. The prices constructed on Pythnet are transferred cross-chain to reach consumers on these blockchains.\n\nIn both cases, the critical component of the system is the oracle program that combines the data from each individual publisher. This program maintains a number of different Solana accounts that list the products on Pyth and their current price data. Publishers publish their price and confidence by interacting with the oracle program on every slot. The program stores this information in its accounts. The first price update in a slot additionally triggers price aggregation, which combines the price data from the previous slot into a single aggregate price and confidence interval. This aggregate price is written to the Solana account where it is readable by other on-chain programs and available for transmission to other blockchains.",
      type_asset: "erc20",
      address: "HZ1JovNiVvGrGNiiYvEozEVgZ58xaU3RKwX8eACQBCt3",
      denom_units: [{
        denom: "HZ1JovNiVvGrGNiiYvEozEVgZ58xaU3RKwX8eACQBCt3",
        exponent: 0
      }, {
        denom: "pyth",
        exponent: 6
      }],
      base: "HZ1JovNiVvGrGNiiYvEozEVgZ58xaU3RKwX8eACQBCt3",
      name: "Pyth Network",
      display: "pyth",
      symbol: "PYTH",
      coingecko_id: "pyth-network",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/pyth.svg"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/pyth.svg"
      }
    },
    {
      description: "USDC is a fully collateralized US Dollar stablecoin developed by CENTRE, the open source project with Circle being the first of several forthcoming issuers.",
      type_asset: "erc20",
      address: "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",
      denom_units: [{
        denom: "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",
        exponent: 0
      }, {
        denom: "usdc",
        exponent: 6
      }],
      base: "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",
      name: "USD Coin",
      display: "usdc",
      symbol: "USDC",
      coingecko_id: "usd-coin",
      traces: [{
        type: "additional-mintage",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
        },
        provider: "Circle"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    },
    {
      description: "BSKT tracks the top assets across the crypto ecosystem",
      type_asset: "erc20",
      address: "6gnCPhXtLnUD76HjQuSYPENLSZdG8RvDB1pTLM5aLSJA",
      denom_units: [{
        denom: "6gnCPhXtLnUD76HjQuSYPENLSZdG8RvDB1pTLM5aLSJA",
        exponent: 0
      }, {
        denom: "bskt",
        exponent: 5
      }],
      base: "6gnCPhXtLnUD76HjQuSYPENLSZdG8RvDB1pTLM5aLSJA",
      name: "Basket",
      display: "bskt",
      symbol: "BSKT",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/bskt.png"
      },
      coingecko_id: "basket",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/bskt.png"
      }],
      socials: {
        website: "https://www.bskt.fi/",
        twitter: "https://twitter.com/bsktfi"
      }
    },
    {
      description: "W is the native token powering the Wormhole interoperability platform.",
      extended_description: "Wormhole token (W) serves as the governance token of the Wormhole protocol, empowering token holders to steer the protocol's direction through on-chain governance via a dedicated decentralized autonomous organization (DAO).\n\nWormhole was founded by Jump Crypto, the building arm of Jump Trading Group. Initially launched in 2021, the protocol first debuted as a token bridge, allowing the transfer of tokens between blockchains, most notably between Solana and Ethereum. Wormhole later evolved, with Wormhole V2, to take on a more general approach, turning into an interoperability layer on which chains and decentralized applications could easily build on.\n\nWormhole V2 is a general messaging protocol, enabling different blockchains to communicate with one another. This technology could be used for a variety of use cases, including transfer of tokens between chains, enabling cross-chain governance for protocols that operated across chains as well as transfers of NFTs across chains, which could be utilized for multi-chain games. Wormhole V2 also saw the protocol expand its services to include Osmosis.\n\nTo date, the protocol has processed over $40 billion worth of value transfer across the blockchains supported, and over 1 billion messages sent. It supports over 30 blockchains, including most of the leading networks, and has a thriving ecosystem of over 200 applications built using Wormhole's technology.\n\nIn November 2023, Jump and Wormhole announced their intention to split ways. Following the separation, Wormhole announced that it raised $225 million, valuing the company at $2.5 billion. Investors include Brevan Howard, Coinbase Ventures, Multicoin Capital, Jump Crypto and more.",
      type_asset: "erc20",
      address: "85VBFQZC9TZkfaptBWjvUw7YbZjy52A6mjtPGjstQAmQ",
      denom_units: [{
        denom: "85VBFQZC9TZkfaptBWjvUw7YbZjy52A6mjtPGjstQAmQ",
        exponent: 0
      }, {
        denom: "w",
        exponent: 6
      }],
      base: "85VBFQZC9TZkfaptBWjvUw7YbZjy52A6mjtPGjstQAmQ",
      name: "Wormhole Token",
      display: "w",
      symbol: "W",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/w.png"
      },
      coingecko_id: "wormhole",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/w.png"
      }],
      socials: {
        website: "https://wormhole.com/",
        twitter: "https://twitter.com/wormhole"
      }
    },
    {
      description: "mSOL represents staked SOL in the Marinade stake pool.",
      extended_description: "mSOL is a liquid staking token that you receive when you stake SOL on the Marinade protocol. These mSOL tokens represent your staked SOL tokens in Marinade's stake pool.",
      type_asset: "erc20",
      address: "mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So",
      denom_units: [{
        denom: "mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So",
        exponent: 0
      }, {
        denom: "msol",
        exponent: 9
      }],
      base: "mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So",
      name: "Marinade Staked SOL",
      display: "msol",
      symbol: "mSOL",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "solana",
          base_denom: "Lamport"
        },
        provider: "Marinade"
      }],
      coingecko_id: "msol",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/msol.png"
      }],
      socials: {
        website: "https://marinade.finance/",
        twitter: "https://twitter.com/MarinadeFinance"
      }
    },
    {
      description: "A representative token for staked SOL, derived through the process of liquid staking SOL using Jito.",
      extended_description: "The Jito stake pool enables users to stake their Solana tokens in exchange for JitoSOL, allowing them to simultaneously earn from staking rewards and MEV rewards.",
      type_asset: "erc20",
      address: "J1toso1uCk3RLmjorhTtrVwY9HJ7X8V9yYac6Y7kGCPn",
      denom_units: [{
        denom: "J1toso1uCk3RLmjorhTtrVwY9HJ7X8V9yYac6Y7kGCPn",
        exponent: 0
      }, {
        denom: "jitosol",
        exponent: 9
      }],
      base: "J1toso1uCk3RLmjorhTtrVwY9HJ7X8V9yYac6Y7kGCPn",
      name: "Jito Staked SOL",
      display: "jitosol",
      symbol: "jitoSOL",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "solana",
          base_denom: "Lamport"
        },
        provider: "Jito"
      }],
      coingecko_id: "jito-staked-sol",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/jitosol.png"
      }],
      socials: {
        website: "https://jito.network/",
        twitter: "https://twitter.com/jito_foundation"
      }
    },
    {
      description: "A representative token for staked SOL, derived through the process of liquid staking SOL using the BlazeStake protocol.",
      extended_description: "BlazeStake is a non-custodial Solana stake pool protocol that allows users to stake their SOL tokens and receive bSOL tokens in return.",
      type_asset: "erc20",
      address: "bSo13r4TkiE4KumL71LsHTPpL2euBYLFx6h9HP3piy1",
      denom_units: [{
        denom: "bSo13r4TkiE4KumL71LsHTPpL2euBYLFx6h9HP3piy1",
        exponent: 0
      }, {
        denom: "bsol",
        exponent: 9
      }],
      base: "bSo13r4TkiE4KumL71LsHTPpL2euBYLFx6h9HP3piy1",
      name: "BlazeStake Staked SOL",
      display: "bsol",
      symbol: "bSOL",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "solana",
          base_denom: "Lamport"
        },
        provider: "BlazeStake"
      }],
      coingecko_id: "blazestake-staked-sol",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/bsol.png"
      }],
      socials: {
        website: "https://stake.solblaze.org/",
        twitter: "https://twitter.com/solblaze_org"
      }
    },
    {
      description: "A representative token for staked SOL, derived through the process of liquid staking SOL using the MarginFi protocol.",
      type_asset: "erc20",
      address: "LSTxxxnJzKDFSLr4dUkPcmCf5VyryEqzPLz5j4bpxFp",
      denom_units: [{
        denom: "LSTxxxnJzKDFSLr4dUkPcmCf5VyryEqzPLz5j4bpxFp",
        exponent: 0
      }, {
        denom: "lst",
        exponent: 9
      }],
      base: "LSTxxxnJzKDFSLr4dUkPcmCf5VyryEqzPLz5j4bpxFp",
      name: "Liquid Staking Token",
      display: "lst",
      symbol: "LST",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "solana",
          base_denom: "Lamport"
        },
        provider: "MarginFi"
      }],
      coingecko_id: "liquid-staking-token",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/lst.png"
      }],
      socials: {
        website: "https://www.marginfi.com/",
        twitter: "https://twitter.com/marginfi"
      }
    },
    {
      description: "A representative token for staked SOL, derived through the process of liquid staking SOL using the Edgevana protocol.",
      extended_description: "edgeSOL represents ownership of staked SOL that's delegated to the top validators running on Edgevana.",
      type_asset: "erc20",
      address: "edge86g9cVz87xcpKpy3J77vbp4wYd9idEV562CCntt",
      denom_units: [{
        denom: "edge86g9cVz87xcpKpy3J77vbp4wYd9idEV562CCntt",
        exponent: 0
      }, {
        denom: "edgesol",
        exponent: 9
      }],
      base: "edge86g9cVz87xcpKpy3J77vbp4wYd9idEV562CCntt",
      name: "Edgevana Staked SOL",
      display: "edgesol",
      symbol: "edgeSOL",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "solana",
          base_denom: "Lamport"
        },
        provider: "Edgevana"
      }],
      coingecko_id: "edgevana-staked-sol",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/edgesol.png"
      }],
      socials: {
        website: "https://edgevana.com/",
        twitter: "https://twitter.com/edgevana"
      }
    },
    {
      description: "A liquid staked token that represents SOL staked to Helius's validator.",
      extended_description: "hSOL is a liquid representiation of staked SOL tokens to Helius, minted via Sanctum.",
      type_asset: "erc20",
      address: "he1iusmfkpAdwvxLNGV8Y1iSbj4rUy6yMhEA3fotn9A",
      denom_units: [{
        denom: "he1iusmfkpAdwvxLNGV8Y1iSbj4rUy6yMhEA3fotn9A",
        exponent: 0
      }, {
        denom: "hsol",
        exponent: 9
      }],
      base: "he1iusmfkpAdwvxLNGV8Y1iSbj4rUy6yMhEA3fotn9A",
      name: "Helius Staked SOL",
      display: "hsol",
      symbol: "hSOL",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "solana",
          base_denom: "Lamport"
        },
        provider: "Helius"
      }],
      coingecko_id: "helius-staked-sol",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/hsol.png"
      }],
      socials: {
        website: "https://helius.dev/",
        twitter: "https://twitter.com/heliuslabs"
      }
    },
    {
      description: "A liquid staked token that represents SOL staked to Jupiter's validator.",
      extended_description: "JupSOL is a liquid staking token that represents SOL staked to the Jupiter validator, via Sanctum.",
      type_asset: "erc20",
      address: "jupSoLaHXQiZZTSfEWMTRRgpnyFm8f6sZdosWBjx93v",
      denom_units: [{
        denom: "jupSoLaHXQiZZTSfEWMTRRgpnyFm8f6sZdosWBjx93v",
        exponent: 0
      }, {
        denom: "jupsol",
        exponent: 9
      }],
      base: "jupSoLaHXQiZZTSfEWMTRRgpnyFm8f6sZdosWBjx93v",
      name: "Jupiter Staked SOL",
      display: "jupsol",
      symbol: "jupSOL",
      traces: [{
        type: "liquid-stake",
        counterparty: {
          chain_name: "solana",
          base_denom: "Lamport"
        },
        provider: "Jupiter"
      }],
      coingecko_id: "jupiter-staked-sol",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/jupsol.png"
      }],
      socials: {
        website: "https://jup.ag/",
        twitter: "https://twitter.com/JupiterExchange"
      }
    },
    {
      description: "dogwifhat is a meme coin that operates on Solana.",
      type_asset: "erc20",
      address: "EKpQGSJtjMFqKZ9KQanSqYXRcF8fBopzLHYxdM65zcjm",
      denom_units: [{
        denom: "EKpQGSJtjMFqKZ9KQanSqYXRcF8fBopzLHYxdM65zcjm",
        exponent: 0
      }, {
        denom: "wif",
        exponent: 6
      }],
      base: "EKpQGSJtjMFqKZ9KQanSqYXRcF8fBopzLHYxdM65zcjm",
      name: "dogwifhat",
      display: "wif",
      symbol: "WIF",
      coingecko_id: "dogwifcoin",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/wif.png"
      }],
      socials: {
        website: "https://dogwifcoin.org/",
        twitter: "https://twitter.com/dogwifcoin"
      }
    },
    {
      description: "Tether, issued natively on Solana.",
      extended_description: "Tether USD (Native Solana), USDT is a native asset to Solana issued by Tether.",
      type_asset: "erc20",
      address: "Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB",
      denom_units: [{
        denom: "Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB",
        exponent: 0
      }, {
        denom: "usdt",
        exponent: 6
      }],
      base: "Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB",
      name: "Tether",
      display: "usdt",
      symbol: "USDT",
      traces: [{
        type: "additional-mintage",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7"
        },
        provider: "Tether"
      }],
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xdac17f958d2ee523a2206206994597c13d831ec7"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.png",
        theme: {
          circle: true,
          primary_color_hex: "#009393",
          background_color_hex: "#009393"
        }
      }],
      coingecko_id: "tether",
      socials: {
        website: "https://Tether.to/",
        twitter: "https://twitter.com/tether_to"
      }
    },
    {
      address: "ATeTQcUkWGs7AZ15mCiFUWCW9EUL7KpDZEHCN1Y8pump",
      base: "ATeTQcUkWGs7AZ15mCiFUWCW9EUL7KpDZEHCN1Y8pump",
      description: "Whinecoin is an experimental memecoin by the Sommelier Finance team.",
      extended_description: "Whinecoin is an experimental memecoin by the Sommelier Finance team. Funds in the dev wallet are reserved for airdrops and liquidity for Solana and Cosmos pools. There is no team allocation.",
      name: "WHINEcoin",
      display: "whine",
      symbol: "WHINE",
      type_asset: "erc20",
      denom_units: [{
        denom: "ATeTQcUkWGs7AZ15mCiFUWCW9EUL7KpDZEHCN1Y8pump",
        exponent: 0
      }, {
        denom: "whine",
        exponent: 6
      }],
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/solana/images/whine.png",
        theme: {
          primary_color_hex: "#FFFFFF",
          background_color_hex: "#FFFFFF",
          circle: false
        }
      }],
      socials: {
        website: "https://whinecoin.com/",
        twitter: "https://twitter.com/whinecoin"
      }
    }
  ]
};
var assets_default293 = info754;

// node_modules/chain-registry/esm/noncosmos/solana/ibc.js
var info755 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "composable",
    client_id: "08-wasm-215",
    connection_id: "connection-3"
  },
  chain_2: {
    chain_name: "solana",
    client_id: "07-tendermint-1",
    connection_id: "connection-108"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-71",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-1",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default178 = info755;

// node_modules/chain-registry/esm/noncosmos/solana/index.js
var assets293 = assets_default293;
var ibc178 = ibc_default178;

// node_modules/chain-registry/esm/noncosmos/composablepolkadot/assets.js
var info756 = {
  $schema: "../assetlist.schema.json",
  chain_name: "composablepolkadot",
  assets: [{
    denom_units: [{
      denom: "79228162514264337593543950342",
      exponent: 0
    }, {
      denom: "dot",
      exponent: 10
    }],
    type_asset: "substrate",
    base: "79228162514264337593543950342",
    name: "Polkadot",
    display: "dot",
    symbol: "DOT",
    traces: [{
      type: "bridge",
      counterparty: {
        chain_name: "polkadot",
        base_denom: "Planck"
      },
      provider: "Polkadot Relay"
    }],
    images: [{
      image_sync: {
        chain_name: "polkadot",
        base_denom: "Planck"
      },
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.svg",
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.png"
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.svg"
    }
  }]
};
var assets_default294 = info756;

// node_modules/chain-registry/esm/noncosmos/composablepolkadot/ibc.js
var info757 = [{
  $schema: "../ibc_data.schema.json",
  chain_1: {
    chain_name: "composablepolkadot",
    client_id: "10-grandpa-28",
    connection_id: "connection-23"
  },
  chain_2: {
    chain_name: "picasso",
    client_id: "10-grandpa-28",
    connection_id: "connection-23"
  },
  channels: [{
    chain_1: {
      channel_id: "channel-15",
      port_id: "transfer"
    },
    chain_2: {
      channel_id: "channel-15",
      port_id: "transfer"
    },
    ordering: "unordered",
    version: "ics20-1",
    tags: {
      status: "live",
      preferred: true
    }
  }]
}];
var ibc_default179 = info757;

// node_modules/chain-registry/esm/noncosmos/composablepolkadot/index.js
var assets294 = assets_default294;
var ibc179 = ibc_default179;

// node_modules/chain-registry/esm/noncosmos/0l/assets.js
var info758 = {
  $schema: "../assetlist.schema.json",
  chain_name: "0l",
  assets: [{
    description: "The native token of 0L Network",
    extended_description: "Libra Coin is a fork from Facebook's Diem (Libra) blockchain that was announced in 2019. Libra Coin operates on its own high-performance Layer 1 blockchain, known as the 0L Network. In October 2021, Libra Coin began mining.\n\n Like Bitcoin, there were no pre-mined coins or dedicated token allocation to any parties; all coins were minted through a mining process. Unlike Bitcoin, which undergoes continuous issuance, Libra Coin has a fixed supply. By December 2023, all the Libra Coin had been issued, establishing a capped supply and making the coin permanently deflationary.\n\n Fiercely independent, the project has a long-term view because it is unburdened by venture capital funding, labs entities, a foundation, and the influence of other blockchain ecosystems. Carpe diem.",
    denom_units: [{
      denom: "microlibra",
      exponent: 0
    }, {
      denom: "libra",
      exponent: 6
    }],
    type_asset: "unknown",
    base: "microlibra",
    name: "Libra Coin",
    display: "libra",
    symbol: "LIBRA",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/0l/images/libra.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/0l/images/libra.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/0l/images/libra.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/0l/images/libra.svg"
    }],
    coingecko_id: "libra-3",
    socials: {
      website: "https://0l.network/",
      twitter: "https://twitter.com/0LNetwork"
    }
  }]
};
var assets_default295 = info758;

// node_modules/chain-registry/esm/noncosmos/0l/index.js
var assets295 = assets_default295;

// node_modules/chain-registry/esm/noncosmos/aptos/assets.js
var info759 = {
  $schema: "../assetlist.schema.json",
  chain_name: "aptos",
  assets: [{
    description: "Aptos token (APT) is the Aptos blockchain native token used for paying network and transaction fees.",
    denom_units: [{
      denom: "0x1::aptos_coin::AptosCoin",
      exponent: 0,
      aliases: ["Octa"]
    }, {
      denom: "APT",
      exponent: 8
    }],
    type_asset: "unknown",
    base: "0x1::aptos_coin::AptosCoin",
    name: "Aptos Coin",
    display: "APT",
    symbol: "APT",
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/aptos/images/aptos.svg"
    },
    coingecko_id: "aptos",
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/aptos/images/aptos.svg"
    }, {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/aptos/images/apt-dm.svg",
      theme: {
        dark_mode: true
      }
    }]
  }]
};
var assets_default296 = info759;

// node_modules/chain-registry/esm/noncosmos/aptos/index.js
var assets296 = assets_default296;

// node_modules/chain-registry/esm/noncosmos/arbitrum/assets.js
var info760 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "arbitrum",
  assets: [
    {
      description: "The governance token of Arbitrum",
      extended_description: "Arbitrum is a Layer 2 scaling solution for Ethereum, enhancing transaction speed and reducing costs. Built to support smart contracts and decentralized applications (dApps), Arbitrum aims to improve scalability while maintaining compatibility with Ethereum's ecosystem.",
      type_asset: "erc20",
      address: "0x912CE59144191C1204E64559FE8253a0e49E6548",
      denom_units: [{
        denom: "0x912CE59144191C1204E64559FE8253a0e49E6548",
        exponent: 0,
        aliases: ["arb-wei"]
      }, {
        denom: "arb",
        exponent: 18
      }],
      base: "0x912CE59144191C1204E64559FE8253a0e49E6548",
      name: "Arbitrum",
      display: "arb",
      symbol: "ARB",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/arbitrum/images/arb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/arbitrum/images/arb.svg"
      },
      coingecko_id: "arbitrum",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/arbitrum/images/arb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/arbitrum/images/arb.svg"
      }]
    },
    {
      type_asset: "evm-base",
      denom_units: [{
        denom: "wei",
        exponent: 0
      }, {
        denom: "eth",
        exponent: 18
      }],
      base: "wei",
      display: "eth",
      name: "Ether",
      symbol: "ETH",
      traces: [{
        type: "additional-mintage",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "wei"
        },
        provider: "Arbitrum"
      }]
    },
    {
      type_asset: "erc20",
      denom_units: [{
        denom: "0xab19bdaeb37242fa0f30486195f45b9cf5361b78",
        exponent: 0
      }],
      address: "0xab19bdaeb37242fa0f30486195f45b9cf5361b78",
      base: "0xab19bdaeb37242fa0f30486195f45b9cf5361b78",
      display: "0xab19bdaeb37242fa0f30486195f45b9cf5361b78",
      name: "cGLP",
      symbol: "cGLP"
    }
  ]
};
var assets_default297 = info760;

// node_modules/chain-registry/esm/noncosmos/arbitrum/index.js
var assets297 = assets_default297;

// node_modules/chain-registry/esm/noncosmos/avalanche/assets.js
var info761 = {
  $schema: "../assetlist.schema.json",
  chain_name: "avalanche",
  assets: [
    {
      description: "AVAX is the native token of Avalanche. It is a hard-capped, scarce asset that is used to pay for fees, secure the platform through staking, and provide a basic unit of account between the multiple subnets created on Avalanche.",
      denom_units: [{
        denom: "wei",
        exponent: 0
      }, {
        denom: "avax",
        exponent: 18
      }],
      type_asset: "evm-base",
      base: "wei",
      name: "Avalanche",
      display: "avax",
      symbol: "AVAX",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/avax.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/avax.svg"
      },
      coingecko_id: "avalanche-2",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/avax.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/avax.svg"
      }]
    },
    {
      description: "The wrapped ERC-20 representation of AVAX, the native token of Avalanche.",
      type_asset: "erc20",
      address: "0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7",
      denom_units: [{
        denom: "0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7",
        exponent: 0,
        aliases: ["wavax-wei"]
      }, {
        denom: "wavax",
        exponent: 18
      }],
      base: "0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7",
      name: "Wrapped AVAX",
      display: "wavax",
      symbol: "WAVAX",
      traces: [{
        type: "wrapped",
        counterparty: {
          chain_name: "avalanche",
          base_denom: "wei"
        },
        provider: "Avalanche"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/wavax.svg"
      },
      coingecko_id: "wrapped-avax",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/wavax.svg"
      }]
    },
    {
      description: "USDC is a fully collateralized US Dollar stablecoin developed by CENTRE, the open source project with Circle being the first of several forthcoming issuers.",
      type_asset: "erc20",
      address: "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E",
      denom_units: [{
        denom: "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E",
        exponent: 0,
        aliases: ["uusdc"]
      }, {
        denom: "usdc",
        exponent: 6
      }],
      base: "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E",
      name: "USD Coin",
      display: "usdc",
      symbol: "USDC",
      traces: [{
        type: "additional-mintage",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
        },
        provider: "Circle"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      coingecko_id: "usd-coin",
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    },
    {
      description: "Multi-Collateral Dai, brings a lot of new and exciting features, such as support for new CDP collateral types and Dai Savings Rate.",
      type_asset: "erc20",
      address: "0xc5fa5669e326da8b2c35540257cd48811f40a36b",
      denom_units: [{
        denom: "0xc5fa5669e326da8b2c35540257cd48811f40a36b",
        exponent: 0,
        aliases: ["dai-wei"]
      }, {
        denom: "axldai",
        exponent: 18
      }],
      base: "0xc5fa5669e326da8b2c35540257cd48811f40a36b",
      name: "Axelar Wrapped DAI",
      display: "axldai",
      symbol: "axlDAI",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "axelar",
          base_denom: "dai-wei"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/dai.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/dai.svg"
      }]
    },
    {
      description: "Frax is a fractional-algorithmic stablecoin protocol. It aims to provide a highly scalable, decentralized, algorithmic money in place of fixed-supply assets like BTC. Additionally, FXS is the value accrual and governance token of the entire Frax ecosystem.",
      type_asset: "erc20",
      address: "0x4914886dbb8aad7a7456d471eaab10b06d42348d",
      denom_units: [{
        denom: "0x4914886dbb8aad7a7456d471eaab10b06d42348d",
        exponent: 0,
        aliases: ["frax-wei"]
      }, {
        denom: "axlfrax",
        exponent: 18
      }],
      base: "0x4914886dbb8aad7a7456d471eaab10b06d42348d",
      name: "Axelar Wrapped Frax",
      display: "axlfrax",
      symbol: "axlFRAX",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "axelar",
          base_denom: "frax-wei"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frax.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "frax-wei"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frax.svg"
      }]
    },
    {
      description: "USDC is a fully collateralized US Dollar stablecoin developed by CENTRE, the open source project with Circle being the first of several forthcoming issuers.",
      type_asset: "erc20",
      address: "0xfab550568C688d5d8a52c7d794cb93edc26ec0ec",
      denom_units: [{
        denom: "0xfab550568C688d5d8a52c7d794cb93edc26ec0ec",
        exponent: 0,
        aliases: ["uusdc"]
      }, {
        denom: "axlusdc",
        exponent: 6
      }],
      base: "0xfab550568C688d5d8a52c7d794cb93edc26ec0ec",
      name: "Axelar Wrapped USDC",
      display: "axlusdc",
      symbol: "axlUSDC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "axelar",
          base_denom: "uusdc"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    },
    {
      description: "Tether gives you the joint benefits of open blockchain technology and traditional currency by converting your cash into a stable digital currency equivalent.",
      type_asset: "erc20",
      address: "0xf976ba91b6bb3468c91e4f02e68b37bc64a57e66",
      denom_units: [{
        denom: "0xf976ba91b6bb3468c91e4f02e68b37bc64a57e66",
        exponent: 0,
        aliases: ["uusdt"]
      }, {
        denom: "axlusdt",
        exponent: 6
      }],
      base: "0xf976ba91b6bb3468c91e4f02e68b37bc64a57e66",
      name: "Axelar Wrapped USDT",
      display: "axlusdt",
      symbol: "axlUSDT",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "axelar",
          base_denom: "uusdt"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      }]
    }
  ]
};
var assets_default298 = info761;

// node_modules/chain-registry/esm/noncosmos/avalanche/index.js
var assets298 = assets_default298;

// node_modules/chain-registry/esm/noncosmos/binancesmartchain/assets.js
var info762 = {
  $schema: "../assetlist.schema.json",
  chain_name: "binancesmartchain",
  assets: [
    {
      description: "BNB powers the BNB Chain ecosystem and is the native coin of the BNB Beacon Chain and BNB Smart Chain.",
      denom_units: [{
        denom: "wei",
        exponent: 0
      }, {
        denom: "bnb",
        exponent: 18
      }],
      type_asset: "evm-base",
      base: "wei",
      name: "Binance Coin",
      display: "bnb",
      symbol: "BNB",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/bnb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/bnb.svg"
      },
      coingecko_id: "binancecoin",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/bnb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/bnb.svg"
      }]
    },
    {
      description: "Wrapped BNB. As the native coin of Binance Chain, BNB has multiple use cases: fueling transactions on the Chain, paying for transaction fees on Binance Exchange, making in-store payments, and many more.",
      type_asset: "erc20",
      address: "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",
      denom_units: [{
        denom: "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",
        exponent: 0
      }, {
        denom: "wbnb",
        exponent: 18
      }],
      base: "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",
      name: "Wrapped BNB",
      display: "wbnb",
      symbol: "WBNB",
      traces: [{
        type: "wrapped",
        counterparty: {
          chain_name: "binancesmartchain",
          base_denom: "wei"
        },
        chain: {
          contract: "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
        },
        provider: "Binance"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/wbnb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/wbnb.svg"
      },
      coingecko_id: "wbnb",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/wbnb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/wbnb.svg"
      }]
    },
    {
      description: "BUSD is a 1:1 USD-backed stablecoin approved by NYDFS and issued by Paxos on Ethereum. Binance provides Binance-Peg BUSD on other chains by locking an equivalent amount of assets on Ethereum. Note that Binance-Peg BUSD is provided by Binance, which is not issued by Paxos nor regulated by the NYDFS.",
      denom_units: [{
        denom: "0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56",
        exponent: 0
      }, {
        denom: "busd",
        exponent: 18
      }],
      type_asset: "erc20",
      address: "0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56",
      base: "0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56",
      name: "Binance-Peg BUSD Token",
      display: "busd",
      symbol: "BUSD",
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
        },
        provider: "Binance"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/busd.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/busd.png"
      }]
    },
    {
      description: "USD Coin (known by its ticker USDC) is a stablecoin that is pegged to the U.S. dollar on a 1:1 basis.",
      denom_units: [{
        denom: "0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d",
        exponent: 0
      }, {
        denom: "usdc",
        exponent: 18
      }],
      type_asset: "erc20",
      address: "0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d",
      base: "0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d",
      name: "Binance-Peg USD Coin",
      display: "usdc",
      symbol: "USDC",
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x4fabb145d64652a948d72533023f6e7a623c7c53"
        },
        provider: "Binance"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    },
    {
      description: "PURSE Token",
      denom_units: [{
        denom: "0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C",
        exponent: 0
      }, {
        denom: "PURSE",
        exponent: 18
      }],
      type_asset: "erc20",
      address: "0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C",
      base: "0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C",
      name: "PURSE Token",
      display: "PURSE",
      symbol: "PURSE",
      coingecko_id: "pundi-x-purse",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/purse-token-logo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/purse-token-logo.svg"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/purse-token-logo.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/pundix/images/purse-token-logo.svg"
      }]
    },
    {
      description: "The SRCX token of Source Protocol.",
      denom_units: [{
        denom: "0x454b90716a9435e7161a9aea5cf00e0acbe565ae",
        exponent: 0
      }, {
        denom: "srcx",
        exponent: 9
      }],
      type_asset: "erc20",
      address: "0x454b90716a9435e7161a9aea5cf00e0acbe565ae",
      base: "0x454b90716a9435e7161a9aea5cf00e0acbe565ae",
      name: "Source Token",
      display: "srcx",
      symbol: "SRCX",
      coingecko_id: "source-protocol",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/srcx.png"
      },
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/srcx.png"
      }]
    }
  ]
};
var assets_default299 = info762;

// node_modules/chain-registry/esm/noncosmos/binancesmartchain/index.js
var assets299 = assets_default299;

// node_modules/chain-registry/esm/noncosmos/bitcoin/assets.js
var info763 = {
  $schema: "../assetlist.schema.json",
  chain_name: "bitcoin",
  assets: [{
    description: "Bitcoin",
    denom_units: [{
      denom: "sat",
      exponent: 0
    }, {
      denom: "btc",
      exponent: 8
    }],
    type_asset: "bitcoin-like",
    base: "sat",
    name: "Bitcoin",
    display: "btc",
    symbol: "BTC",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/bitcoin/images/btc.png"
    },
    coingecko_id: "bitcoin",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/bitcoin/images/btc.png"
    }]
  }]
};
var assets_default300 = info763;

// node_modules/chain-registry/esm/noncosmos/bitcoin/index.js
var assets300 = assets_default300;

// node_modules/chain-registry/esm/noncosmos/comex/assets.js
var info764 = {
  $schema: "../assetlist.schema.json",
  chain_name: "comex",
  assets: [{
    type_asset: "unknown",
    denom_units: [{
      denom: "XAU",
      exponent: 0
    }],
    base: "XAU",
    display: "XAU",
    name: "Gold",
    symbol: "XAU"
  }]
};
var assets_default301 = info764;

// node_modules/chain-registry/esm/noncosmos/comex/index.js
var assets301 = assets_default301;

// node_modules/chain-registry/esm/noncosmos/dogecoin/assets.js
var info765 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "dogecoin",
  assets: [{
    description: "The native token of Dogecoin.",
    extended_description: "Dogecoin (DOGE) is a cryptocurrency created as a playful homage, known for its friendly community, Shiba Inu meme origins, and accessible, fast transactions.",
    denom_units: [{
      denom: "shibe",
      exponent: 0
    }, {
      denom: "doge",
      exponent: 8
    }],
    type_asset: "bitcoin-like",
    base: "shibe",
    name: "Dogecoin",
    display: "doge",
    symbol: "DOGE",
    coingecko_id: "dogecoin",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/dogecoin/images/doge.png"
    }]
  }]
};
var assets_default302 = info765;

// node_modules/chain-registry/esm/noncosmos/dogecoin/index.js
var assets302 = assets_default302;

// node_modules/chain-registry/esm/noncosmos/fantom/assets.js
var info766 = {
  $schema: "../assetlist.schema.json",
  chain_name: "fantom",
  assets: [{
    description: "Fantom's native utility token \u2014 FTM \u2014 powers the entire Fantom blockchain ecosystem. FTM tokens are used for staking, governance, payments, and fees on the network.",
    denom_units: [{
      denom: "wei",
      exponent: 0
    }, {
      denom: "ftm",
      exponent: 18
    }],
    type_asset: "evm-base",
    base: "wei",
    name: "Fantom",
    display: "ftm",
    symbol: "FTM",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.svg"
    },
    coingecko_id: "fantom",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.svg"
    }]
  }, {
    description: "ERC20 wrapped version of FTM",
    type_asset: "erc20",
    address: "0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83",
    denom_units: [{
      denom: "0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83",
      exponent: 0
    }, {
      denom: "wftm",
      exponent: 18
    }],
    base: "0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83",
    name: "Wrapped Fantom",
    display: "wftm",
    symbol: "WFTM",
    traces: [{
      type: "wrapped",
      counterparty: {
        chain_name: "fantom",
        base_denom: "wei"
      },
      chain: {
        contract: "0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83"
      },
      provider: "Fantom"
    }],
    images: [{
      image_sync: {
        chain_name: "fantom",
        base_denom: "wei"
      },
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.svg"
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.svg"
    }
  }]
};
var assets_default303 = info766;

// node_modules/chain-registry/esm/noncosmos/fantom/index.js
var assets303 = assets_default303;

// node_modules/chain-registry/esm/noncosmos/filecoin/assets.js
var info767 = {
  $schema: "../assetlist.schema.json",
  chain_name: "filecoin",
  assets: [{
    description: "Filecoin is a decentralized storage network designed to turn cloud storage into an algorithmic market. The network facilitates open markets for storing and retrieving data, where users pay to store their files on storage miners. Filecoin is built on top of the InterPlanetary File System (IPFS), a peer-to-peer storage network. Filecoin aims to store data in a decentralized manner, unlike traditional cloud storage providers.\n\nParticipants in the Filecoin network are incentivized to act honestly and store as much data as possible because they earn the Filecoin cryptocurrency (FIL) in exchange for their storage services. This setup ensures the integrity and accessibility of data stored. Filecoin's model allows for a variety of storage options, including long-term archival storage and more rapid retrieval services, making it a versatile solution for decentralized data storage. The project, developed by Protocol Labs, also focuses on ensuring that data is stored reliably and efficiently.",
    denom_units: [{
      denom: "attoFIL",
      exponent: 0,
      aliases: ["fil-wei"]
    }, {
      denom: "fil",
      exponent: 18
    }],
    type_asset: "evm-base",
    base: "attoFIL",
    name: "Filecoin",
    display: "fil",
    symbol: "FIL",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/filecoin/images/fil.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/filecoin/images/fil.svg"
    },
    coingecko_id: "filecoin",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/filecoin/images/fil.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/filecoin/images/fil.svg"
    }]
  }, {
    description: "Wrapped Filecoin, ERC20 Wrapper over Filecoin",
    address: "0x60E1773636CF5E4A227d9AC24F20fEca034ee25A",
    denom_units: [{
      denom: "0x60E1773636CF5E4A227d9AC24F20fEca034ee25A",
      exponent: 0,
      aliases: ["wfil-wei"]
    }, {
      denom: "wfil",
      exponent: 18
    }],
    type_asset: "erc20",
    base: "0x60E1773636CF5E4A227d9AC24F20fEca034ee25A",
    name: "Wrapped FIL",
    display: "wfil",
    symbol: "WFIL",
    traces: [{
      type: "wrapped",
      counterparty: {
        chain_name: "filecoin",
        base_denom: "attoFIL"
      },
      provider: "Filecoin"
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/filecoin/images/wfil.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/filecoin/images/wfil.svg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/filecoin/images/wfil.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/filecoin/images/wfil.svg"
    }]
  }]
};
var assets_default304 = info767;

// node_modules/chain-registry/esm/noncosmos/filecoin/index.js
var assets304 = assets_default304;

// node_modules/chain-registry/esm/noncosmos/forex/assets.js
var info768 = {
  $schema: "../assetlist.schema.json",
  chain_name: "forex",
  assets: [{
    type_asset: "unknown",
    denom_units: [{
      denom: "USD",
      exponent: 0
    }],
    base: "USD",
    display: "USD",
    name: "United States Dollar",
    symbol: "USD"
  }]
};
var assets_default305 = info768;

// node_modules/chain-registry/esm/noncosmos/forex/index.js
var assets305 = assets_default305;

// node_modules/chain-registry/esm/noncosmos/kusama/assets.js
var info769 = {
  $schema: "../assetlist.schema.json",
  chain_name: "kusama",
  assets: [{
    description: "The native fee, governance, staking, and bonding token of the Polkadot platform.",
    denom_units: [
      {
        denom: "Planck",
        exponent: 0
      },
      {
        denom: "Point",
        exponent: 3
      },
      {
        denom: "uKSM",
        exponent: 3,
        aliases: ["MicroKSM"]
      },
      {
        denom: "uKSM",
        exponent: 3,
        aliases: ["MilliKSM"]
      },
      {
        denom: "KSM",
        exponent: 12
      }
    ],
    type_asset: "substrate",
    base: "Planck",
    name: "Kusama",
    display: "KSM",
    symbol: "KSM",
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/kusama/images/ksm.svg"
    },
    coingecko_id: "kusama",
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/kusama/images/ksm.svg"
    }]
  }]
};
var assets_default306 = info769;

// node_modules/chain-registry/esm/noncosmos/kusama/index.js
var assets306 = assets_default306;

// node_modules/chain-registry/esm/noncosmos/moonbeam/assets.js
var info770 = {
  $schema: "../assetlist.schema.json",
  chain_name: "moonbeam",
  assets: [
    {
      description: "Glimmer (GLMR) is the utility token of the Moonbeam Network, Moonbeam\u2019s primary deployment on the Polkadot network that serves as a developer-friendly parachain.",
      denom_units: [{
        denom: "Wei",
        exponent: 0,
        aliases: ["wei"]
      }, {
        denom: "GLMR",
        exponent: 18,
        aliases: ["glmr"]
      }],
      type_asset: "substrate",
      base: "Wei",
      name: "Glimmer",
      display: "GLMR",
      symbol: "GLMR",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.svg"
      },
      coingecko_id: "moonbeam",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.svg"
      }]
    },
    {
      description: "An ERC-20 representation of GLMR, the native token of Moonbeam.",
      type_asset: "erc20",
      address: "0xacc15dc74880c9944775448304b263d191c6077f",
      denom_units: [{
        denom: "0xacc15dc74880c9944775448304b263d191c6077f",
        exponent: 0,
        aliases: ["wglmr-wei"]
      }, {
        denom: "wglmr",
        exponent: 18
      }],
      base: "0xacc15dc74880c9944775448304b263d191c6077f",
      name: "Wrapped Moonbeam",
      display: "wglmr",
      symbol: "WGLMR",
      traces: [{
        type: "wrapped",
        counterparty: {
          chain_name: "moonbeam",
          base_denom: "Wei"
        },
        provider: "Moonbeam"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.svg"
      },
      coingecko_id: "wrapped-moonbeam",
      images: [{
        image_sync: {
          chain_name: "moonbeam",
          base_denom: "Wei"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.svg",
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.png"
      }]
    },
    {
      description: "Polkadot is a blockchain network designed to support various interconnected, application-specific sub-chains. Each chain built within Polkadot uses Parity Technologies' Substrate modular framework, which allows developers to select specific components that suit their application-specific chain best.",
      type_asset: "erc20",
      address: "0xffffffff1fcacbd218edc0eba20fc2308c778080",
      denom_units: [{
        denom: "0xffffffff1fcacbd218edc0eba20fc2308c778080",
        exponent: 0,
        aliases: ["dot-planck"]
      }, {
        denom: "xcdot",
        exponent: 10
      }],
      base: "0xffffffff1fcacbd218edc0eba20fc2308c778080",
      name: "Wrapped Polkadot",
      display: "xcdot",
      symbol: "xcDOT",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "polkadot",
          base_denom: "Planck"
        },
        provider: "Polkadot Parachain"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.svg"
      },
      images: [{
        image_sync: {
          chain_name: "polkadot",
          base_denom: "Planck"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.svg"
      }]
    },
    {
      description: "Multi-Collateral Dai, brings a lot of new and exciting features, such as support for new CDP collateral types and Dai Savings Rate.",
      type_asset: "erc20",
      address: "0x14df360966a1c4582d2b18edbdae432ea0a27575",
      denom_units: [{
        denom: "0x14df360966a1c4582d2b18edbdae432ea0a27575",
        exponent: 0,
        aliases: ["dai-wei"]
      }, {
        denom: "axldai",
        exponent: 18
      }],
      base: "0x14df360966a1c4582d2b18edbdae432ea0a27575",
      name: "Axelar Wrapped Dai Stablecoin",
      display: "axldai",
      symbol: "axlDAI",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "axelar",
          base_denom: "dai-wei"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/dai.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/dai.svg"
      }]
    },
    {
      description: "Frax is a fractional-algorithmic stablecoin protocol. It aims to provide a highly scalable, decentralized, algorithmic money in place of fixed-supply assets like BTC. Additionally, FXS is the value accrual and governance token of the entire Frax ecosystem.",
      type_asset: "erc20",
      address: "0x61C82805453a989E99B544DFB7031902e9bac448",
      denom_units: [{
        denom: "0x61C82805453a989E99B544DFB7031902e9bac448",
        exponent: 0,
        aliases: ["frax-wei"]
      }, {
        denom: "axlfrax",
        exponent: 18
      }],
      base: "0x61C82805453a989E99B544DFB7031902e9bac448",
      name: "Axelar Wrapped Frax",
      display: "axlfrax",
      symbol: "axlFRAX",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "axelar",
          base_denom: "frax-wei"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frax.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "frax-wei"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frax.svg"
      }]
    },
    {
      description: "USDC is a fully collateralized US Dollar stablecoin developed by CENTRE, the open source project with Circle being the first of several forthcoming issuers.",
      type_asset: "erc20",
      address: "0xca01a1d0993565291051daff390892518acfad3a",
      denom_units: [{
        denom: "0xca01a1d0993565291051daff390892518acfad3a",
        exponent: 0,
        aliases: ["uusdc"]
      }, {
        denom: "axlusdc",
        exponent: 6
      }],
      base: "0xca01a1d0993565291051daff390892518acfad3a",
      name: "Axelar Wrapped USD Coin",
      display: "axlusdc",
      symbol: "axlUSDC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "axelar",
          base_denom: "uusdc"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    },
    {
      description: "Tether gives you the joint benefits of open blockchain technology and traditional currency by converting your cash into a stable digital currency equivalent.",
      type_asset: "erc20",
      address: "0xdfd74af792bc6d45d1803f425ce62dd16f8ae038",
      denom_units: [{
        denom: "0xdfd74af792bc6d45d1803f425ce62dd16f8ae038",
        exponent: 0,
        aliases: ["uusdt"]
      }, {
        denom: "axlusdt",
        exponent: 6
      }],
      base: "0xdfd74af792bc6d45d1803f425ce62dd16f8ae038",
      name: "Axelar Wrapped Tether USD",
      display: "axlusdt",
      symbol: "axlUSDT",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "axelar",
          base_denom: "uusdt"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      }]
    }
  ]
};
var assets_default307 = info770;

// node_modules/chain-registry/esm/noncosmos/moonbeam/index.js
var assets307 = assets_default307;

// node_modules/chain-registry/esm/noncosmos/neo/assets.js
var info771 = {
  $schema: "../assetlist.schema.json",
  chain_name: "neo",
  assets: [{
    type_asset: "erc20",
    denom_units: [{
      denom: "0x48c40d4666f93408be1bef038b6722404d9a4c2a",
      exponent: 0
    }],
    address: "0x48c40d4666f93408be1bef038b6722404d9a4c2a",
    base: "0x48c40d4666f93408be1bef038b6722404d9a4c2a",
    display: "0x48c40d4666f93408be1bef038b6722404d9a4c2a",
    name: "NeoBurger",
    symbol: "bNEO"
  }]
};
var assets_default308 = info771;

// node_modules/chain-registry/esm/noncosmos/neo/index.js
var assets308 = assets_default308;

// node_modules/chain-registry/esm/noncosmos/optimism/assets.js
var info772 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "optimism",
  assets: [{
    description: "The governance token of Optimism",
    type_asset: "erc20",
    address: "0x4200000000000000000000000000000000000042",
    denom_units: [{
      denom: "0x4200000000000000000000000000000000000042",
      exponent: 0
    }, {
      denom: "op",
      exponent: 18
    }],
    base: "0x4200000000000000000000000000000000000042",
    name: "Optimism",
    display: "op",
    symbol: "OP",
    coingecko_id: "optimism",
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/optimism/images/op.svg",
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/optimism/images/op.png"
    }]
  }, {
    type_asset: "evm-base",
    denom_units: [{
      denom: "wei",
      exponent: 0
    }, {
      denom: "eth",
      exponent: 18
    }],
    base: "wei",
    display: "eth",
    name: "Ether",
    symbol: "ETH",
    traces: [{
      type: "additional-mintage",
      counterparty: {
        chain_name: "ethereum",
        base_denom: "wei"
      },
      provider: "Optimism"
    }]
  }]
};
var assets_default309 = info772;

// node_modules/chain-registry/esm/noncosmos/optimism/index.js
var assets309 = assets_default309;

// node_modules/chain-registry/esm/noncosmos/penumbra/assets.js
var info773 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "penumbra",
  assets: [{
    description: "The native token of Penumbra.",
    extended_description: "A fully private, cross-chain proof-of-stake network and decentralized exchange for the Cosmos and beyond.",
    denom_units: [{
      denom: "upenumbra",
      exponent: 0
    }, {
      denom: "penumbra",
      exponent: 6
    }],
    type_asset: "unknown",
    base: "upenumbra",
    display: "penumbra",
    symbol: "UM",
    name: "Penumbra",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/penumbra/images/um.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/penumbra/images/um.svg",
      theme: {
        circle: true
      }
    }],
    socials: {
      website: "https://penumbra.zone/",
      twitter: "https://twitter.com/penumbrazone"
    }
  }]
};
var assets_default310 = info773;

// node_modules/chain-registry/esm/noncosmos/penumbra/index.js
var assets310 = assets_default310;

// node_modules/chain-registry/esm/noncosmos/polkadot/assets.js
var info774 = {
  $schema: "../assetlist.schema.json",
  chain_name: "polkadot",
  assets: [{
    description: "The native fee, governance, staking, and bonding token of the Polkadot platform.",
    denom_units: [
      {
        denom: "Planck",
        exponent: 0,
        aliases: ["planck"]
      },
      {
        denom: "uDOT",
        exponent: 4,
        aliases: [
          "udot",
          "microdot",
          "Microdot"
        ]
      },
      {
        denom: "mDOT",
        exponent: 7,
        aliases: ["millidot", "Millidot"]
      },
      {
        denom: "DOT",
        exponent: 10,
        aliases: [
          "dot",
          "New DOT",
          "new dot"
        ]
      },
      {
        denom: "DOT (old)",
        exponent: 12
      },
      {
        denom: "MDOT",
        exponent: 16,
        aliases: ["million", "Million"]
      }
    ],
    type_asset: "substrate",
    base: "Planck",
    name: "Polkadot",
    display: "DOT",
    symbol: "DOT",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.svg"
    },
    coingecko_id: "polkadot",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.svg"
    }]
  }]
};
var assets_default311 = info774;

// node_modules/chain-registry/esm/noncosmos/polkadot/index.js
var assets311 = assets_default311;

// node_modules/chain-registry/esm/noncosmos/polygon/assets.js
var info775 = {
  $schema: "../assetlist.schema.json",
  chain_name: "polygon",
  assets: [
    {
      description: "Polygon (formerly Matic) Network brings massive scale to Ethereum using an adapted version of Plasma with PoS based side chains. Polygon is a well-structured, easy-to-use platform for Ethereum scaling and infrastructure development.",
      denom_units: [{
        denom: "wei",
        exponent: 0
      }, {
        denom: "matic",
        exponent: 18,
        aliases: ["polygon"]
      }],
      type_asset: "evm-base",
      base: "wei",
      name: "Matic",
      display: "matic",
      symbol: "MATIC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/matic-purple.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/matic-purple.svg"
      },
      coingecko_id: "matic-network",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/matic-purple.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/matic-purple.svg"
      }]
    },
    {
      description: "Polygon combines the best of Ethereum and sovereign blockchains into a full-fledged multi-chain system.",
      type_asset: "erc20",
      address: "0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270",
      denom_units: [{
        denom: "0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270",
        exponent: 0,
        aliases: ["wmatic-wei"]
      }, {
        denom: "wmatic",
        exponent: 18,
        aliases: ["polygon"]
      }],
      base: "0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270",
      name: "Wrapped Matic",
      display: "wmatic",
      symbol: "WMATIC",
      traces: [{
        type: "wrapped",
        counterparty: {
          chain_name: "polygon",
          base_denom: "wei"
        },
        provider: "Polygon"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/wmatic.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/wmatic.svg"
      },
      coingecko_id: "wmatic",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/wmatic.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/wmatic.svg"
      }]
    },
    {
      description: "USDC is a fully collateralized US Dollar stablecoin developed by CENTRE, the open source project with Circle being the first of several forthcoming issuers.",
      type_asset: "erc20",
      address: "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174",
      denom_units: [{
        denom: "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174",
        exponent: 0,
        aliases: ["uusdc"]
      }, {
        denom: "usdc",
        exponent: 6
      }],
      base: "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174",
      name: "USD Coin",
      display: "usdc",
      symbol: "USDC",
      traces: [{
        type: "additional-mintage",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
        },
        provider: "Circle"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      coingecko_id: "usd-coin",
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    },
    {
      description: "Multi-Collateral Dai, brings a lot of new and exciting features, such as support for new CDP collateral types and Dai Savings Rate.",
      type_asset: "erc20",
      address: "0xddc9e2891fa11a4cc5c223145e8d14b44f3077c9",
      denom_units: [{
        denom: "0xddc9e2891fa11a4cc5c223145e8d14b44f3077c9",
        exponent: 0,
        aliases: ["dai-wei"]
      }, {
        denom: "axldai",
        exponent: 18
      }],
      base: "0xddc9e2891fa11a4cc5c223145e8d14b44f3077c9",
      name: "Axelar Wrapped Dai Stablecoin",
      display: "axldai",
      symbol: "axlDAI",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "axelar",
          base_denom: "dai-wei"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/dai.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/dai.svg"
      }]
    },
    {
      description: "Frax is a fractional-algorithmic stablecoin protocol. It aims to provide a highly scalable, decentralized, algorithmic money in place of fixed-supply assets like BTC. Additionally, FXS is the value accrual and governance token of the entire Frax ecosystem.",
      type_asset: "erc20",
      address: "0x53adc464b488be8c5d7269b9abbce8ba74195c3a",
      denom_units: [{
        denom: "0x53adc464b488be8c5d7269b9abbce8ba74195c3a",
        exponent: 0,
        aliases: ["frax-wei"]
      }, {
        denom: "axlfrax",
        exponent: 18
      }],
      base: "0x53adc464b488be8c5d7269b9abbce8ba74195c3a",
      name: "Axelar Wrapped Frax",
      display: "axlfrax",
      symbol: "axlFRAX",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "axelar",
          base_denom: "frax-wei"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frax.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelar",
          base_denom: "frax-wei"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/frax.svg"
      }]
    },
    {
      description: "USDC is a fully collateralized US Dollar stablecoin developed by CENTRE, the open source project with Circle being the first of several forthcoming issuers.",
      type_asset: "erc20",
      address: "0x750e4c4984a9e0f12978ea6742bc1c5d248f40ed",
      denom_units: [{
        denom: "0x750e4c4984a9e0f12978ea6742bc1c5d248f40ed",
        exponent: 0,
        aliases: ["uusdc"]
      }, {
        denom: "axlusdc",
        exponent: 6
      }],
      base: "0x750e4c4984a9e0f12978ea6742bc1c5d248f40ed",
      name: "Axelar Wrapped USD Coin",
      display: "axlusdc",
      symbol: "axlUSDC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "axelar",
          base_denom: "uusdc"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    },
    {
      description: "Tether gives you the joint benefits of open blockchain technology and traditional currency by converting your cash into a stable digital currency equivalent.",
      type_asset: "erc20",
      address: "0xceed2671d8634e3ee65000edbbee66139b132fbf",
      denom_units: [{
        denom: "0xceed2671d8634e3ee65000edbbee66139b132fbf",
        exponent: 0,
        aliases: ["uusdt"]
      }, {
        denom: "axlusdt",
        exponent: 6
      }],
      base: "0xceed2671d8634e3ee65000edbbee66139b132fbf",
      name: "Axelar Wrapped Tether USD",
      display: "axlusdt",
      symbol: "axlUSDT",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "axelar",
          base_denom: "uusdt"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      },
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdt.svg"
      }]
    },
    {
      description: "The PAGE token is used for actions in the PageDAO NFT literary ecosystem and for DAO governance.",
      type_asset: "erc20",
      address: "0x9ceE70895726B0ea14E6019C961dAf32222a7C2f",
      denom_units: [{
        denom: "0x9ceE70895726B0ea14E6019C961dAf32222a7C2f",
        exponent: 0,
        aliases: []
      }, {
        denom: "page",
        exponent: 8
      }],
      base: "0x9ceE70895726B0ea14E6019C961dAf32222a7C2f",
      name: "Page",
      display: "page",
      symbol: "PAGE",
      traces: [{
        type: "additional-mintage",
        counterparty: {
          chain_name: "ethereum",
          base_denom: "0x60e683C6514Edd5F758A55b6f393BeBBAfaA8d5e"
        },
        provider: "PageDAO"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/page.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/page.svg"
      },
      images: [{
        image_sync: {
          chain_name: "ethereum",
          base_denom: "0x60e683C6514Edd5F758A55b6f393BeBBAfaA8d5e"
        },
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/page.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/page.svg"
      }]
    }
  ]
};
var assets_default312 = info775;

// node_modules/chain-registry/esm/noncosmos/polygon/index.js
var assets312 = assets_default312;

// node_modules/chain-registry/esm/noncosmos/statemine/assets.js
var info776 = {
  $schema: "../assetlist.schema.json",
  chain_name: "statemine",
  assets: [{
    denom_units: [{
      denom: "130",
      exponent: 0
    }, {
      denom: "usdt",
      exponent: 6
    }],
    type_asset: "substrate",
    base: "130",
    name: "Statemine",
    display: "usdt",
    symbol: "USDT",
    coingecko_id: "tether"
  }]
};
var assets_default313 = info776;

// node_modules/chain-registry/esm/noncosmos/statemine/index.js
var assets313 = assets_default313;

// node_modules/chain-registry/esm/noncosmos/stellar/assets.js
var info777 = {
  $schema: "../assetlist.schema.json",
  chain_name: "stellar",
  assets: [{
    description: "Native token of Stellar network",
    extended_description: "The Stellar network is an open-sourced, public blockchain powered by the Stellar Consensus protocol (SCP), a proof-of-agreement (PoA) consensus mechanism. Thanks to PoA, the Stellar network is faster, cheaper, and far more energy-efficient than many other blockchains.\n\nIts core design makes it easy to create and issue digital assets that enable rapid payments at low-cost around the world. The Stellar network allows you to create your own currency or token within the network and distribute it digitally on a large scale. On the Stellar blockchain, you can create, send, and trade digital representations of almost any form of value such as \u2013 US dollars, Argentine pesos, gold, and real estate. Then, the network acts as a bridge that connects financial systems and makes global interoperability a reality.",
    denom_units: [{
      denom: "stroop",
      exponent: 0
    }, {
      denom: "lumen",
      exponent: 7
    }],
    type_asset: "evm-base",
    base: "stroop",
    name: "Lumen",
    display: "lumen",
    symbol: "XLM",
    coingecko_id: "stellar",
    socials: {
      website: "https://stellar.org/",
      twitter: "https://twitter.com/StellarOrg"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/stellar/images/xlm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/stellar/images/xlm.svg"
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/stellar/images/xlm.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/stellar/images/xlm.svg"
    }
  }]
};
var assets_default314 = info777;

// node_modules/chain-registry/esm/noncosmos/stellar/index.js
var assets314 = assets_default314;

// node_modules/chain-registry/esm/noncosmos/sui/assets.js
var info778 = {
  $schema: "../assetlist.schema.json",
  chain_name: "sui",
  assets: [{
    description: "Sui\u2019s native asset is called SUI.",
    denom_units: [{
      denom: "0x2::sui::SUI",
      exponent: 0,
      aliases: ["MIST"]
    }, {
      denom: "SUI",
      exponent: 9
    }],
    type_asset: "unknown",
    base: "0x2::sui::SUI",
    name: "Sui",
    display: "SUI",
    symbol: "SUI",
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/sui/images/sui.svg"
    },
    coingecko_id: "sui",
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/sui/images/sui.svg"
    }]
  }]
};
var assets_default315 = info778;

// node_modules/chain-registry/esm/noncosmos/sui/index.js
var assets315 = assets_default315;

// node_modules/chain-registry/esm/noncosmos/tinkernet/assets.js
var info779 = {
  $schema: "../assetlist.schema.json",
  chain_name: "tinkernet",
  assets: [{
    description: "The native fee, governance and staking token of the Tinkernet Parachain.",
    extended_description: "Tinkernet is a Kusama parachain and the sister-chain of the InvArch Network on Polkadot. Tinkernet is an experimental proving ground where omnichain account & DAO governance protocols are deployed and tested before deploying on the InvArch Network. Protocols on Tinkernet realize features such as multichain multisig accounts & DAO Staking. Unlike a testnet, Tinkernet features real value.",
    socials: {
      website: "https://tinker.network",
      twitter: "https://twitter.com/TinkerParachain"
    },
    denom_units: [{
      denom: "Planck",
      exponent: 0
    }, {
      denom: "TNKR",
      exponent: 12
    }],
    base: "Planck",
    name: "Tinkernet",
    display: "TNKR",
    symbol: "TNKR",
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/tinkernet/images/tnkr.svg"
    },
    coingecko_id: "tinkernet",
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/tinkernet/images/tnkr.svg"
    }]
  }]
};
var assets_default316 = info779;

// node_modules/chain-registry/esm/noncosmos/tinkernet/index.js
var assets316 = assets_default316;

// node_modules/chain-registry/esm/noncosmos/xrpl/assets.js
var info780 = {
  $schema: "../assetlist.schema.json",
  chain_name: "xrpl",
  assets: [{
    description: "Native token of Ripple XRP Ledger",
    extended_description: "The XRP Ledger: The Blockchain Built for Business\n\nThe XRP Ledger (XRPL) is a decentralized, public blockchain led by a global community of businesses and developers looking to solve problems and create value.\n\nProven reliable over more than a decade of error-free functioning, the XRPL offers streamlined development, low transaction costs, high performance, and sustainability. So you can build with confidence\u2013and move your most critical projects forward.",
    denom_units: [{
      denom: "drop",
      exponent: 0
    }, {
      denom: "xrp",
      exponent: 6
    }],
    type_asset: "unknown",
    base: "drop",
    name: "Ripple",
    display: "xrp",
    symbol: "XRP",
    coingecko_id: "ripple",
    socials: {
      website: "https://xrpl.org/",
      twitter: "https://twitter.com/Ripple"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/xrpl/images/xrp.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/xrpl/images/xrp.svg"
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/xrpl/images/xrp.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/xrpl/images/xrp.svg"
    }
  }]
};
var assets_default317 = info780;

// node_modules/chain-registry/esm/noncosmos/xrpl/index.js
var assets317 = assets_default317;

// node_modules/chain-registry/esm/noncosmos/zilliqa/assets.js
var info781 = {
  $schema: "../assetlist.schema.json",
  chain_name: "zilliqa",
  assets: [{
    type_asset: "evm-base",
    denom_units: [{
      denom: "wei",
      exponent: 0
    }],
    base: "wei",
    display: "wei",
    name: "Ether",
    symbol: "ETH"
  }]
};
var assets_default318 = info781;

// node_modules/chain-registry/esm/noncosmos/zilliqa/index.js
var assets318 = assets_default318;

// node_modules/chain-registry/esm/noncosmos/berachain/assets.js
var info782 = {
  $schema: "../assetlist.schema.json",
  chain_name: "berachain",
  assets: [{
    description: "The native staking token of Berachain.",
    denom_units: [{
      denom: "wei",
      exponent: 0
    }, {
      denom: "bera",
      exponent: 18
    }],
    base: "wei",
    display: "bera",
    name: "Berachain",
    symbol: "BERA",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/berachain/images/bera.png",
      theme: {
        circle: true
      }
    }],
    coingecko_id: "berachain-bera"
  }]
};
var assets_default319 = info782;

// node_modules/chain-registry/esm/noncosmos/berachain/index.js
var assets319 = assets_default319;

// node_modules/chain-registry/esm/noncosmos/hall/assets.js
var info783 = {
  $schema: "../assetlist.schema.json",
  chain_name: "hall",
  assets: [{
    description: "The native token of Coinhall",
    denom_units: [{
      denom: "uhall",
      exponent: 0
    }, {
      denom: "hall",
      exponent: 6
    }],
    base: "uhall",
    display: "hall",
    name: "Hall",
    symbol: "HALL",
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/hall/images/hall.svg",
      theme: {
        circle: false
      }
    }],
    socials: {
      website: "https://coinhall.org/",
      twitter: "https://twitter.com/coinhall_org"
    }
  }]
};
var assets_default320 = info783;

// node_modules/chain-registry/esm/noncosmos/hall/index.js
var assets320 = assets_default320;

// node_modules/chain-registry/esm/noncosmos/initia/assets.js
var info784 = {
  $schema: "../assetlist.schema.json",
  chain_name: "initia",
  assets: [{
    description: "The native token of Initia",
    denom_units: [{
      denom: "uinit",
      exponent: 0
    }, {
      denom: "INIT",
      exponent: 6
    }],
    base: "uinit",
    display: "INIT",
    name: "Initia",
    symbol: "INIT",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/initia/images/init.png",
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/initia/images/init.svg",
      theme: {
        circle: true
      }
    }],
    socials: {
      website: "https://initia.xyz/",
      twitter: "https://twitter.com/initiaFDN"
    }
  }]
};
var assets_default321 = info784;

// node_modules/chain-registry/esm/noncosmos/initia/index.js
var assets321 = assets_default321;

// node_modules/chain-registry/esm/noncosmos/mantrachain/assets.js
var info785 = {
  $schema: "../assetlist.schema.json",
  chain_name: "mantrachain",
  assets: [{
    description: "The native token of MANTRA",
    extended_description: "The first RWA Layer 1 Blockchain, capable of adherence and enforcement of real world regulatory requirements.",
    denom_units: [{
      denom: "uom",
      exponent: 0
    }, {
      denom: "om",
      exponent: 6
    }],
    type_asset: "sdk.coin",
    base: "uom",
    name: "MANTRA Chain",
    display: "om",
    symbol: "OM",
    keywords: [
      "mantra",
      "staking",
      "delegating",
      "governance",
      "regulation",
      "defi"
    ],
    images: [
      {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mantrachain/images/OM-Prim-Col.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mantrachain/images/OM-Prim-Col.svg",
        theme: {
          circle: true
        }
      },
      {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mantrachain/images/OM-Darkmatt.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mantrachain/images/OM-Darkmatt.svg",
        theme: {
          dark_mode: true,
          circle: true
        }
      },
      {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mantrachain/images/OM-WHT.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/mantrachain/images/OM-WHT.svg",
        theme: {
          dark_mode: false,
          circle: true
        }
      }
    ],
    socials: {
      website: "https://www.mantrachain.io/",
      twitter: "https://x.com/MANTRA_Chain"
    }
  }]
};
var assets_default322 = info785;

// node_modules/chain-registry/esm/noncosmos/mantrachain/index.js
var assets322 = assets_default322;

// node_modules/chain-registry/esm/noncosmos/movement/assets.js
var info786 = {
  $schema: "../assetlist.schema.json",
  chain_name: "movement",
  assets: [{
    description: "The native token of Movement",
    denom_units: [{
      denom: "umove",
      exponent: 0
    }, {
      denom: "move",
      exponent: 6
    }],
    base: "umove",
    display: "move",
    name: "Movement",
    symbol: "MOVE",
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/movement/images/move.svg",
      theme: {
        circle: true
      }
    }],
    socials: {
      website: "https://movementlabs.xyz/",
      twitter: "https://x.com/movementlabsxyz"
    }
  }]
};
var assets_default323 = info786;

// node_modules/chain-registry/esm/noncosmos/movement/index.js
var assets323 = assets_default323;

// node_modules/chain-registry/esm/noncosmos/namada/assets.js
var info787 = {
  $schema: "../assetlist.schema.json",
  chain_name: "namada",
  assets: [{
    description: "The native token of Namada",
    denom_units: [{
      denom: "unam",
      exponent: 0
    }, {
      denom: "nam",
      exponent: 6
    }],
    base: "unam",
    display: "nam",
    name: "Namada",
    symbol: "NAM",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/namada/images/nam.png",
      theme: {
        circle: true
      }
    }],
    socials: {
      website: "https://namada.net/",
      twitter: "https://twitter.com/namada"
    }
  }]
};
var assets_default324 = info787;

// node_modules/chain-registry/esm/noncosmos/namada/index.js
var assets324 = assets_default324;

// node_modules/chain-registry/esm/noncosmos/prysm/assets.js
var info788 = {
  $schema: "../assetlist.schema.json",
  chain_name: "prysm",
  assets: [{
    description: "The native token of Prysm",
    denom_units: [{
      denom: "uprysm",
      exponent: 0
    }, {
      denom: "prysm",
      exponent: 6
    }],
    base: "uprysm",
    display: "prysm",
    name: "Prysm",
    symbol: "PRYSM",
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/prysm/images/prysm.png",
      theme: {
        circle: true
      }
    }],
    socials: {
      website: "https://www.prysm.network/",
      twitter: "https://twitter.com/PrysmNetwork"
    }
  }]
};
var assets_default325 = info788;

// node_modules/chain-registry/esm/noncosmos/prysm/index.js
var assets325 = assets_default325;

// node_modules/chain-registry/esm/noncosmos/avalanchetestnet/assets.js
var info789 = {
  $schema: "../assetlist.schema.json",
  chain_name: "avalanchetestnet",
  assets: [
    {
      description: "AVAX is the native token of Avalanche. It is a hard-capped, scarce asset that is used to pay for fees, secure the platform through staking, and provide a basic unit of account between the multiple subnets created on Avalanche.",
      denom_units: [{
        denom: "wei",
        exponent: 0
      }, {
        denom: "avax",
        exponent: 18
      }],
      base: "wei",
      name: "Avalanche",
      display: "avax",
      symbol: "AVAX",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/avax.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/avax.svg"
      },
      coingecko_id: "avalanche-2",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/avax.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/avax.svg"
      }]
    },
    {
      description: "The wrapped ERC-20 representation of AVAX, the native token of Avalanche.",
      type_asset: "erc20",
      address: "0xd00ae08403B9bbb9124bB305C09058E32C39A48c",
      denom_units: [{
        denom: "0xd00ae08403B9bbb9124bB305C09058E32C39A48c",
        exponent: 0,
        aliases: ["wavax-wei"]
      }, {
        denom: "wavax",
        exponent: 18
      }],
      base: "0xd00ae08403B9bbb9124bB305C09058E32C39A48c",
      name: "Wrapped AVAX",
      display: "wavax",
      symbol: "WAVAX",
      traces: [{
        type: "wrapped",
        counterparty: {
          chain_name: "avalanchetestnet",
          base_denom: "wei"
        },
        provider: "Avalanche"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/wavax.svg"
      },
      coingecko_id: "wrapped-avax",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/avalanche/images/wavax.svg"
      }]
    },
    {
      description: "USDC is a fully collateralized US Dollar stablecoin developed by CENTRE, the open source project with Circle being the first of several forthcoming issuers.",
      type_asset: "erc20",
      address: "0x57F1c63497AEe0bE305B8852b354CEc793da43bB",
      denom_units: [{
        denom: "0x57F1c63497AEe0bE305B8852b354CEc793da43bB",
        exponent: 0,
        aliases: ["uausdc"]
      }, {
        denom: "axlusdc",
        exponent: 6
      }],
      base: "0x57F1c63497AEe0bE305B8852b354CEc793da43bB",
      name: "Axelar Wrapped USDC",
      display: "axlusdc",
      symbol: "axlUSDC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "axelartestnet",
          base_denom: "uausdc"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelartestnet",
          base_denom: "uausdc"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    },
    {
      description: "USDC is a fully collateralized US Dollar stablecoin developed by CENTRE, the open source project with Circle being the first of several forthcoming issuers.",
      type_asset: "erc20",
      address: "0x5425890298aed601595a70ab815c96711a31bc65",
      denom_units: [{
        denom: "0x5425890298aed601595a70ab815c96711a31bc65",
        exponent: 0,
        aliases: ["uusdc"]
      }, {
        denom: "usdc",
        exponent: 6
      }],
      base: "0x5425890298aed601595a70ab815c96711a31bc65",
      name: "USD Coin",
      display: "usdc",
      symbol: "USDC",
      traces: [{
        type: "test-mintage",
        counterparty: {
          chain_name: "avalanche",
          base_denom: "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
        },
        provider: "Circle"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        image_sync: {
          chain_name: "avalanche",
          base_denom: "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    }
  ]
};
var assets_default326 = info789;

// node_modules/chain-registry/esm/noncosmos/avalanchetestnet/index.js
var assets326 = assets_default326;

// node_modules/chain-registry/esm/noncosmos/binancesmartchaintestnet/assets.js
var info790 = {
  $schema: "../assetlist.schema.json",
  chain_name: "binancesmartchaintestnet",
  assets: [
    {
      description: "BNB powers the BNB Chain ecosystem and is the native coin of the BNB Beacon Chain and BNB Smart Chain.",
      denom_units: [{
        denom: "wei",
        exponent: 0
      }, {
        denom: "bnb",
        exponent: 18
      }],
      base: "wei",
      name: "Binance Coin",
      display: "bnb",
      symbol: "BNB",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/bnb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/bnb.svg"
      },
      coingecko_id: "binancecoin",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/bnb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/bnb.svg"
      }]
    },
    {
      description: "Wrapped BNB. As the native coin of Binance Chain, BNB has multiple use cases: fueling transactions on the Chain, paying for transaction fees on Binance Exchange, making in-store payments, and many more.",
      denom_units: [{
        denom: "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd",
        exponent: 0
      }, {
        denom: "wbnb",
        exponent: 18
      }],
      type_asset: "erc20",
      address: "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd",
      base: "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd",
      name: "Wrapped BNB",
      display: "wbnb",
      symbol: "WBNB",
      traces: [{
        type: "wrapped",
        counterparty: {
          chain_name: "binancesmartchaintestnet",
          base_denom: "wei"
        },
        chain: {
          contract: "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
        },
        provider: "Binance"
      }],
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/wbnb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/wbnb.svg"
      },
      coingecko_id: "wbnb",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/wbnb.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/binancesmartchain/images/wbnb.svg"
      }]
    },
    {
      description: "USDC is a fully collateralized US Dollar stablecoin developed by CENTRE, the open source project with Circle being the first of several forthcoming issuers.",
      type_asset: "erc20",
      address: "0xc2fA98faB811B785b81c64Ac875b31CC9E40F9D2",
      denom_units: [{
        denom: "0xc2fA98faB811B785b81c64Ac875b31CC9E40F9D2",
        exponent: 0,
        aliases: ["uausdc"]
      }, {
        denom: "axlusdc",
        exponent: 6
      }],
      base: "0xc2fA98faB811B785b81c64Ac875b31CC9E40F9D2",
      name: "Axelar Wrapped USDC",
      display: "axlusdc",
      symbol: "axlUSDC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "axelartestnet",
          base_denom: "uausdc"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelartestnet",
          base_denom: "uausdc"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    }
  ]
};
var assets_default327 = info790;

// node_modules/chain-registry/esm/noncosmos/binancesmartchaintestnet/index.js
var assets327 = assets_default327;

// node_modules/chain-registry/esm/noncosmos/ethereumtestnet/assets.js
var info791 = {
  $schema: "../assetlist.schema.json",
  chain_name: "ethereumtestnet",
  assets: [
    {
      description: "Ether is the native fee token of the Ethereum network.",
      denom_units: [
        {
          denom: "wei",
          exponent: 0
        },
        {
          denom: "gwei",
          exponent: 9
        },
        {
          denom: "eth",
          exponent: 18,
          aliases: ["ether"]
        }
      ],
      base: "wei",
      name: "Ether",
      display: "eth",
      symbol: "ETH",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth.svg"
      },
      coingecko_id: "ethereum",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/eth.svg"
      }]
    },
    {
      description: "wETH is 'wrapped ETH'",
      type_asset: "erc20",
      address: "0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6",
      denom_units: [{
        denom: "0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6",
        exponent: 0,
        aliases: ["weth-wei"]
      }, {
        denom: "weth",
        exponent: 18
      }],
      base: "0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6",
      name: "Wrapped Ether",
      display: "weth",
      symbol: "WETH",
      traces: [{
        type: "wrapped",
        counterparty: {
          chain_name: "ethereumtestnet",
          base_denom: "wei"
        },
        provider: "Ethereum"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/weth.svg"
      },
      coingecko_id: "weth",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/weth.svg"
      }]
    },
    {
      description: "USDC is a fully collateralized US Dollar stablecoin developed by CENTRE, the open source project with Circle being the first of several forthcoming issuers.",
      type_asset: "erc20",
      address: "0x254d06f33bDc5b8ee05b2ea472107E300226659A",
      denom_units: [{
        denom: "0x254d06f33bDc5b8ee05b2ea472107E300226659A",
        exponent: 0,
        aliases: ["uausdc"]
      }, {
        denom: "ausdc",
        exponent: 6
      }],
      base: "0x254d06f33bDc5b8ee05b2ea472107E300226659A",
      name: "USD Coin",
      display: "ausdc",
      symbol: "aUSDC",
      traces: [{
        type: "synthetic",
        counterparty: {
          chain_name: "forex",
          base_denom: "USD"
        },
        provider: "Circle"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      coingecko_id: "usd-coin",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    }
  ]
};
var assets_default328 = info791;

// node_modules/chain-registry/esm/noncosmos/ethereumtestnet/index.js
var assets328 = assets_default328;

// node_modules/chain-registry/esm/noncosmos/fantomtestnet/assets.js
var info792 = {
  $schema: "../assetlist.schema.json",
  chain_name: "fantomtestnet",
  assets: [{
    description: "Fantom's native utility token \u2014 FTM \u2014 powers the entire Fantom blockchain ecosystem. FTM tokens are used for staking, governance, payments, and fees on the network.",
    denom_units: [{
      denom: "wei",
      exponent: 0
    }, {
      denom: "ftm",
      exponent: 18
    }],
    base: "wei",
    name: "Fantom",
    display: "ftm",
    symbol: "FTM",
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.png"
    },
    images: [{
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.png"
    }]
  }, {
    description: "ERC20 wrapped version of FTM",
    type_asset: "erc20",
    address: "0x812666209b90344Ec8e528375298ab9045c2Bd08",
    denom_units: [{
      denom: "0x812666209b90344Ec8e528375298ab9045c2Bd08",
      exponent: 0
    }, {
      denom: "wftm",
      exponent: 18
    }],
    base: "0x812666209b90344Ec8e528375298ab9045c2Bd08",
    name: "Wrapped Fantom",
    display: "wftm",
    symbol: "WFTM",
    traces: [{
      type: "wrapped",
      counterparty: {
        chain_name: "fantomtestnet",
        base_denom: "wei"
      },
      chain: {
        contract: "0x812666209b90344Ec8e528375298ab9045c2Bd08"
      },
      provider: "Fantom"
    }],
    images: [{
      image_sync: {
        chain_name: "fantomtestnet",
        base_denom: "wei"
      },
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.png"
    }],
    logo_URIs: {
      png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/fantom/images/ftm.png"
    }
  }]
};
var assets_default329 = info792;

// node_modules/chain-registry/esm/noncosmos/fantomtestnet/index.js
var assets329 = assets_default329;

// node_modules/chain-registry/esm/noncosmos/moonbeamtestnet/assets.js
var info793 = {
  $schema: "../assetlist.schema.json",
  chain_name: "moonbeamtestnet",
  assets: [
    {
      description: "Glimmer (GLMR) is the utility token of the Moonbeam Network, Moonbeam\u2019s primary deployment on the Polkadot network that serves as a developer-friendly parachain.",
      denom_units: [{
        denom: "Wei",
        exponent: 0,
        aliases: ["wei"]
      }, {
        denom: "GLMR",
        exponent: 18,
        aliases: ["glmr"]
      }],
      base: "Wei",
      name: "Glimmer",
      display: "GLMR",
      symbol: "GLMR",
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.svg"
      },
      coingecko_id: "moonbeam",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.svg"
      }]
    },
    {
      description: "An ERC-20 representation of GLMR, the native token of Moonbeam.",
      type_asset: "erc20",
      address: "0x1436aE0dF0A8663F18c0Ec51d7e2E46591730715",
      denom_units: [{
        denom: "0x1436aE0dF0A8663F18c0Ec51d7e2E46591730715",
        exponent: 0,
        aliases: ["wglmr-wei"]
      }, {
        denom: "wglmr",
        exponent: 18
      }],
      base: "0x1436aE0dF0A8663F18c0Ec51d7e2E46591730715",
      name: "Wrapped Moonbeam",
      display: "wglmr",
      symbol: "WGLMR",
      traces: [{
        type: "wrapped",
        counterparty: {
          chain_name: "moonbeamtestnet",
          base_denom: "Wei"
        },
        provider: "Moonbeam"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.svg"
      },
      coingecko_id: "wrapped-moonbeam",
      images: [{
        image_sync: {
          chain_name: "moonbeamtestnet",
          base_denom: "Wei"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/moonbeam/images/glmr.svg"
      }]
    },
    {
      description: "USDC is a fully collateralized US Dollar stablecoin developed by CENTRE, the open source project with Circle being the first of several forthcoming issuers.",
      type_asset: "erc20",
      address: "0xD1633F7Fb3d716643125d6415d4177bC36b7186b",
      denom_units: [{
        denom: "0xD1633F7Fb3d716643125d6415d4177bC36b7186b",
        exponent: 0,
        aliases: ["uausdc"]
      }, {
        denom: "axlusdc",
        exponent: 6
      }],
      base: "0xD1633F7Fb3d716643125d6415d4177bC36b7186b",
      name: "Axelar Wrapped USD Coin",
      display: "axlusdc",
      symbol: "axlUSDC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "axelartestnet",
          base_denom: "uausdc"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelartestnet",
          base_denom: "uausdc"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    }
  ]
};
var assets_default330 = info793;

// node_modules/chain-registry/esm/noncosmos/moonbeamtestnet/index.js
var assets330 = assets_default330;

// node_modules/chain-registry/esm/noncosmos/polkadottestnet/assets.js
var info794 = {
  $schema: "../assetlist.schema.json",
  chain_name: "polkadottestnet",
  assets: [{
    description: "The native fee, governance, staking, and bonding token of the Polkadot platform.",
    denom_units: [
      {
        denom: "Planck",
        exponent: 0,
        aliases: ["planck"]
      },
      {
        denom: "uDOT",
        exponent: 4,
        aliases: [
          "udot",
          "microdot",
          "Microdot"
        ]
      },
      {
        denom: "mDOT",
        exponent: 7,
        aliases: ["millidot", "Millidot"]
      },
      {
        denom: "DOT",
        exponent: 10,
        aliases: [
          "dot",
          "New DOT",
          "new dot"
        ]
      },
      {
        denom: "DOT (old)",
        exponent: 12
      },
      {
        denom: "MDOT",
        exponent: 16,
        aliases: ["million", "Million"]
      }
    ],
    base: "Planck",
    name: "Polkadot",
    display: "DOT",
    symbol: "DOT",
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.svg"
    },
    coingecko_id: "polkadot",
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polkadot/images/dot.svg"
    }]
  }]
};
var assets_default331 = info794;

// node_modules/chain-registry/esm/noncosmos/polkadottestnet/index.js
var assets331 = assets_default331;

// node_modules/chain-registry/esm/noncosmos/polygontestnet/assets.js
var info795 = {
  $schema: "../assetlist.schema.json",
  chain_name: "polygontestnet",
  assets: [
    {
      description: "Polygon (formerly Matic) Network brings massive scale to Ethereum using an adapted version of Plasma with PoS based side chains. Polygon is a well-structured, easy-to-use platform for Ethereum scaling and infrastructure development.",
      denom_units: [{
        denom: "wei",
        exponent: 0
      }, {
        denom: "matic",
        exponent: 18,
        aliases: ["polygon"]
      }],
      base: "wei",
      name: "Matic",
      display: "matic",
      symbol: "MATIC",
      logo_URIs: {
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/matic.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/matic.svg"
      },
      coingecko_id: "matic-network",
      images: [{
        png: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/matic.png",
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/matic.svg"
      }]
    },
    {
      description: "Polygon combines the best of Ethereum and sovereign blockchains into a full-fledged multi-chain system.",
      type_asset: "erc20",
      address: "0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889",
      denom_units: [{
        denom: "0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889",
        exponent: 0,
        aliases: ["wmatic-wei"]
      }, {
        denom: "wmatic",
        exponent: 18,
        aliases: ["polygon"]
      }],
      base: "0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889",
      name: "Wrapped Matic",
      display: "wmatic",
      symbol: "WMATIC",
      traces: [{
        type: "wrapped",
        counterparty: {
          chain_name: "polygontestnet",
          base_denom: "wei"
        },
        provider: "Polygon"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/wmatic.svg"
      },
      coingecko_id: "wmatic",
      images: [{
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/polygon/images/wmatic.svg"
      }]
    },
    {
      description: "USDC is a fully collateralized US Dollar stablecoin developed by CENTRE, the open source project with Circle being the first of several forthcoming issuers.",
      type_asset: "erc20",
      address: "0x2c852e740B62308c46DD29B982FBb650D063Bd07",
      denom_units: [{
        denom: "0x2c852e740B62308c46DD29B982FBb650D063Bd07",
        exponent: 0,
        aliases: ["uausdc"]
      }, {
        denom: "axlusdc",
        exponent: 6
      }],
      base: "0x2c852e740B62308c46DD29B982FBb650D063Bd07",
      name: "Axelar Wrapped USD Coin",
      display: "axlusdc",
      symbol: "axlUSDC",
      traces: [{
        type: "bridge",
        counterparty: {
          chain_name: "axelartestnet",
          base_denom: "uausdc"
        },
        provider: "Axelar"
      }],
      logo_URIs: {
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      },
      images: [{
        image_sync: {
          chain_name: "axelartestnet",
          base_denom: "uausdc"
        },
        svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"
      }]
    }
  ]
};
var assets_default332 = info795;

// node_modules/chain-registry/esm/noncosmos/polygontestnet/index.js
var assets332 = assets_default332;

// node_modules/chain-registry/esm/noncosmos/ojotestnet/assets.js
var info796 = {
  $schema: "../../assetlist.schema.json",
  chain_name: "ojotestnet",
  assets: [{
    description: "The native token of Ojo Network",
    denom_units: [{
      denom: "uojo",
      exponent: 0
    }, {
      denom: "ojo",
      exponent: 6
    }],
    base: "uojo",
    name: "ojo",
    display: "ojo",
    symbol: "OJO",
    logo_URIs: {
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/ojotestnet/images/ojo.svg"
    },
    images: [{
      svg: "https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/ojotestnet/images/ojo.svg"
    }]
  }]
};
var assets_default333 = info796;

// node_modules/chain-registry/esm/noncosmos/ojotestnet/index.js
var assets333 = assets_default333;

// node_modules/chain-registry/esm/noncosmos/assets.js
var assets334 = [
  assets291,
  assets292,
  assets293,
  assets294,
  assets295,
  assets296,
  assets297,
  assets298,
  assets299,
  assets300,
  assets301,
  assets302,
  assets303,
  assets304,
  assets305,
  assets306,
  assets307,
  assets308,
  assets309,
  assets310,
  assets311,
  assets312,
  assets313,
  assets314,
  assets315,
  assets316,
  assets317,
  assets318,
  assets319,
  assets320,
  assets321,
  assets322,
  assets323,
  assets324,
  assets325,
  assets326,
  assets327,
  assets328,
  assets329,
  assets330,
  assets331,
  assets332,
  assets333
];
var assets_default334 = assets334;

// node_modules/chain-registry/esm/noncosmos/ibc.js
var ibc180 = [
  ...ibc176,
  ...ibc177,
  ...ibc178,
  ...ibc179
];
var ibc_default180 = ibc180;

// node_modules/chain-registry/esm/assets.js
var assets335 = [
  ...assets_default175,
  ...assets_default281,
  ...assets_default290,
  ...assets_default334
];
var assets_default335 = assets335;

// node_modules/chain-registry/esm/chains.js
var chains4 = [
  ...chains_default,
  ...chains_default2,
  ...chains_default3
];
var chains_default4 = chains4;

// node_modules/chain-registry/esm/ibc.js
var ibc181 = [
  ...ibc_default136,
  ...ibc_default175,
  ...ibc_default180
];
